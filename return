[1mdiff --git a/node_modules/.bin/acorn b/node_modules/.bin/acorn[m
[1mnew file mode 100644[m
[1mindex 0000000..679bd16[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/acorn[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../acorn/bin/acorn" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../acorn/bin/acorn" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/acorn.cmd b/node_modules/.bin/acorn.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..a9324df[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/acorn.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\acorn\bin\acorn" %*[m
[1mdiff --git a/node_modules/.bin/acorn.ps1 b/node_modules/.bin/acorn.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..6f6dcdd[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/acorn.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/ts-node b/node_modules/.bin/ts-node[m
[1mnew file mode 100644[m
[1mindex 0000000..f3d4fab[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../ts-node/dist/bin.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../ts-node/dist/bin.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/ts-node-cwd b/node_modules/.bin/ts-node-cwd[m
[1mnew file mode 100644[m
[1mindex 0000000..ae68e85[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-cwd[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../ts-node/dist/bin-cwd.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../ts-node/dist/bin-cwd.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/ts-node-cwd.cmd b/node_modules/.bin/ts-node-cwd.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..50c1bbc[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-cwd.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\ts-node\dist\bin-cwd.js" %*[m
[1mdiff --git a/node_modules/.bin/ts-node-cwd.ps1 b/node_modules/.bin/ts-node-cwd.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..b12acfa[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-cwd.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin-cwd.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin-cwd.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../ts-node/dist/bin-cwd.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../ts-node/dist/bin-cwd.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/ts-node-esm b/node_modules/.bin/ts-node-esm[m
[1mnew file mode 100644[m
[1mindex 0000000..19ea759[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-esm[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../ts-node/dist/bin-esm.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../ts-node/dist/bin-esm.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/ts-node-esm.cmd b/node_modules/.bin/ts-node-esm.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..ba439a0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-esm.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\ts-node\dist\bin-esm.js" %*[m
[1mdiff --git a/node_modules/.bin/ts-node-esm.ps1 b/node_modules/.bin/ts-node-esm.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..d9806c0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-esm.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin-esm.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin-esm.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../ts-node/dist/bin-esm.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../ts-node/dist/bin-esm.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/ts-node-script b/node_modules/.bin/ts-node-script[m
[1mnew file mode 100644[m
[1mindex 0000000..14c2f67[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-script[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../ts-node/dist/bin-script.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../ts-node/dist/bin-script.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/ts-node-script.cmd b/node_modules/.bin/ts-node-script.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..146251b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-script.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\ts-node\dist\bin-script.js" %*[m
[1mdiff --git a/node_modules/.bin/ts-node-script.ps1 b/node_modules/.bin/ts-node-script.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..3061e81[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-script.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin-script.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin-script.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../ts-node/dist/bin-script.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../ts-node/dist/bin-script.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/ts-node-transpile-only b/node_modules/.bin/ts-node-transpile-only[m
[1mnew file mode 100644[m
[1mindex 0000000..d3d4c0c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-transpile-only[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../ts-node/dist/bin-transpile.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../ts-node/dist/bin-transpile.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/ts-node-transpile-only.cmd b/node_modules/.bin/ts-node-transpile-only.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..60b2af3[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-transpile-only.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\ts-node\dist\bin-transpile.js" %*[m
[1mdiff --git a/node_modules/.bin/ts-node-transpile-only.ps1 b/node_modules/.bin/ts-node-transpile-only.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..9503db4[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node-transpile-only.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin-transpile.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin-transpile.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../ts-node/dist/bin-transpile.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../ts-node/dist/bin-transpile.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/ts-node.cmd b/node_modules/.bin/ts-node.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..a2a9c92[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\ts-node\dist\bin.js" %*[m
[1mdiff --git a/node_modules/.bin/ts-node.ps1 b/node_modules/.bin/ts-node.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..90517a4[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-node.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../ts-node/dist/bin.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../ts-node/dist/bin.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/ts-script b/node_modules/.bin/ts-script[m
[1mnew file mode 100644[m
[1mindex 0000000..8f65f36[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-script[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../ts-node/dist/bin-script-deprecated.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../ts-node/dist/bin-script-deprecated.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/ts-script.cmd b/node_modules/.bin/ts-script.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..e3b0e81[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-script.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\ts-node\dist\bin-script-deprecated.js" %*[m
[1mdiff --git a/node_modules/.bin/ts-script.ps1 b/node_modules/.bin/ts-script.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..1b348af[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/ts-script.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin-script-deprecated.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin-script-deprecated.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../ts-node/dist/bin-script-deprecated.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../ts-node/dist/bin-script-deprecated.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/tsc b/node_modules/.bin/tsc[m
[1mnew file mode 100644[m
[1mindex 0000000..c4864b9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/tsc[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../typescript/bin/tsc" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../typescript/bin/tsc" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/tsc.cmd b/node_modules/.bin/tsc.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..40bf128[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/tsc.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\typescript\bin\tsc" %*[m
[1mdiff --git a/node_modules/.bin/tsc.ps1 b/node_modules/.bin/tsc.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..112413b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/tsc.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../typescript/bin/tsc" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../typescript/bin/tsc" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../typescript/bin/tsc" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../typescript/bin/tsc" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/tsserver b/node_modules/.bin/tsserver[m
[1mnew file mode 100644[m
[1mindex 0000000..6c19ce3[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/tsserver[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../typescript/bin/tsserver" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../typescript/bin/tsserver" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/node_modules/.bin/tsserver.cmd b/node_modules/.bin/tsserver.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..57f851f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/tsserver.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\typescript\bin\tsserver" %*[m
[1mdiff --git a/node_modules/.bin/tsserver.ps1 b/node_modules/.bin/tsserver.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..249f417[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/tsserver.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../typescript/bin/tsserver" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../typescript/bin/tsserver" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../typescript/bin/tsserver" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../typescript/bin/tsserver" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.package-lock.json b/node_modules/.package-lock.json[m
[1mnew file mode 100644[m
[1mindex 0000000..ff1eb62[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.package-lock.json[m
[36m@@ -0,0 +1,208 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "typescript",[m
[32m+[m[32m  "version": "1.0.0",[m
[32m+[m[32m  "lockfileVersion": 3,[m
[32m+[m[32m  "requires": true,[m
[32m+[m[32m  "packages": {[m
[32m+[m[32m    "node_modules/@cspotcode/source-map-support": {[m
[32m+[m[32m      "version": "0.8.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@jridgewell/trace-mapping": "0.3.9"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=12"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@jridgewell/resolve-uri": {[m
[32m+[m[32m      "version": "3.1.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=6.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@jridgewell/sourcemap-codec": {[m
[32m+[m[32m      "version": "1.5.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@jridgewell/trace-mapping": {[m
[32m+[m[32m      "version": "0.3.9",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz",[m
[32m+[m[32m      "integrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@jridgewell/resolve-uri": "^3.0.3",[m
[32m+[m[32m        "@jridgewell/sourcemap-codec": "^1.4.10"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tsconfig/node10": {[m
[32m+[m[32m      "version": "1.0.11",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.11.tgz",[m
[32m+[m[32m      "integrity": "sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tsconfig/node12": {[m
[32m+[m[32m      "version": "1.0.11",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz",[m
[32m+[m[32m      "integrity": "sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tsconfig/node14": {[m
[32m+[m[32m      "version": "1.0.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@tsconfig/node16": {[m
[32m+[m[32m      "version": "1.0.4",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.4.tgz",[m
[32m+[m[32m      "integrity": "sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@types/node": {[m
[32m+[m[32m      "version": "22.5.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@types/node/-/node-22.5.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-DkFrJOe+rfdHTqqMg0bSNlGlQ85hSoh2TPzZyhHsXnMtligRWpxUySiyw8FY14ITt24HVCiQPWxS3KO/QlGmWg==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "peer": true,[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "undici-types": "~6.19.2"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/acorn": {[m
[32m+[m[32m      "version": "8.12.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.12.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-tcpGyI9zbizT9JbV6oYE477V6mTlXvvi0T0G3SNIYE2apm/G5huBa1+K89VGeovbg+jycCrfhl3ADxErOuO6Jg==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "bin": {[m
[32m+[m[32m        "acorn": "bin/acorn"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=0.4.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/acorn-walk": {[m
[32m+[m[32m      "version": "8.3.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-MxXdReSRhGO7VlFe1bRG/oI7/mdLV9B9JJT0N8vZOhF7gFRR5l3M8W9G8JxmKV+JC5mGqJ0QvqfSOLsCPa4nUw==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "acorn": "^8.11.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=0.4.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/arg": {[m
[32m+[m[32m      "version": "4.1.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/create-require": {[m
[32m+[m[32m      "version": "1.1.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/diff": {[m
[32m+[m[32m      "version": "4.0.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",[m
[32m+[m[32m      "license": "BSD-3-Clause",[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=0.3.1"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/make-error": {[m
[32m+[m[32m      "version": "1.3.6",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",[m
[32m+[m[32m      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",[m
[32m+[m[32m      "license": "ISC"[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/ts-node": {[m
[32m+[m[32m      "version": "10.9.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.9.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@cspotcode/source-map-support": "^0.8.0",[m
[32m+[m[32m        "@tsconfig/node10": "^1.0.7",[m
[32m+[m[32m        "@tsconfig/node12": "^1.0.7",[m
[32m+[m[32m        "@tsconfig/node14": "^1.0.0",[m
[32m+[m[32m        "@tsconfig/node16": "^1.0.2",[m
[32m+[m[32m        "acorn": "^8.4.1",[m
[32m+[m[32m        "acorn-walk": "^8.1.1",[m
[32m+[m[32m        "arg": "^4.1.0",[m
[32m+[m[32m        "create-require": "^1.1.0",[m
[32m+[m[32m        "diff": "^4.0.1",[m
[32m+[m[32m        "make-error": "^1.1.1",[m
[32m+[m[32m        "v8-compile-cache-lib": "^3.0.1",[m
[32m+[m[32m        "yn": "3.1.1"[m
[32m+[m[32m      },[m
[32m+[m[32m      "bin": {[m
[32m+[m[32m        "ts-node": "dist/bin.js",[m
[32m+[m[32m        "ts-node-cwd": "dist/bin-cwd.js",[m
[32m+[m[32m        "ts-node-esm": "dist/bin-esm.js",[m
[32m+[m[32m        "ts-node-script": "dist/bin-script.js",[m
[32m+[m[32m        "ts-node-transpile-only": "dist/bin-transpile.js",[m
[32m+[m[32m        "ts-script": "dist/bin-script-deprecated.js"[m
[32m+[m[32m      },[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "@swc/core": ">=1.2.50",[m
[32m+[m[32m        "@swc/wasm": ">=1.2.50",[m
[32m+[m[32m        "@types/node": "*",[m
[32m+[m[32m        "typescript": ">=2.7"[m
[32m+[m[32m      },[m
[32m+[m[32m      "peerDependenciesMeta": {[m
[32m+[m[32m        "@swc/core": {[m
[32m+[m[32m          "optional": true[m
[32m+[m[32m        },[m
[32m+[m[32m        "@swc/wasm": {[m
[32m+[m[32m          "optional": true[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/typescript": {[m
[32m+[m[32m      "version": "4.9.3",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/typescript/-/typescript-4.9.3.tgz",[m
[32m+[m[32m      "integrity": "sha512-CIfGzTelbKNEnLpLdGFgdyKhG23CKdKgQPOBc+OUNrkJ2vr+KSzsSV5kq5iWhEQbok+quxgGzrAtGWCyU7tHnA==",[m
[32m+[m[32m      "license": "Apache-2.0",[m
[32m+[m[32m      "bin": {[m
[32m+[m[32m        "tsc": "bin/tsc",[m
[32m+[m[32m        "tsserver": "bin/tsserver"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=4.2.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/undici-types": {[m
[32m+[m[32m      "version": "6.19.8",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.19.8.tgz",[m
[32m+[m[32m      "integrity": "sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "peer": true[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/v8-compile-cache-lib": {[m
[32m+[m[32m      "version": "3.0.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/v8-compile-cache-lib/-/v8-compile-cache-lib-3.0.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/yn": {[m
[32m+[m[32m      "version": "3.1.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=6"[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@cspotcode/source-map-support/LICENSE.md b/node_modules/@cspotcode/source-map-support/LICENSE.md[m
[1mnew file mode 100644[m
[1mindex 0000000..6247ca9[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@cspotcode/source-map-support/LICENSE.md[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mThe MIT License (MIT)[m
[32m+[m
[32m+[m[32mCopyright (c) 2014 Evan Wallace[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE.[m
[1mdiff --git a/node_modules/@cspotcode/source-map-support/README.md b/node_modules/@cspotcode/source-map-support/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..f739070[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@cspotcode/source-map-support/README.md[m
[36m@@ -0,0 +1,289 @@[m
[32m+[m[32m# Source Map Support[m
[32m+[m
[32m+[m[32m[![NPM version](https://img.shields.io/npm/v/@cspotcode/source-map-support.svg?style=flat)](https://npmjs.org/package/@cspotcode/source-map-support)[m
[32m+[m[32m[![NPM downloads](https://img.shields.io/npm/dm/@cspotcode/source-map-support.svg?style=flat)](https://npmjs.org/package/@cspotcode/source-map-support)[m
[32m+[m[32m[![Build status](https://img.shields.io/github/workflow/status/cspotcode/node-source-map-support/Continuous%20Integration)](https://github.com/cspotcode/node-source-map-support/actions?query=workflow%3A%22Continuous+Integration%22)[m
[32m+[m
[32m+[m[32mThis module provides source map support for stack traces in node via the [V8 stack trace API](https://github.com/v8/v8/wiki/Stack-Trace-API). It uses the [source-map](https://github.com/mozilla/source-map) module to replace the paths and line numbers of source-mapped files with their original paths and line numbers. The output mimics node's stack trace format with the goal of making every compile-to-JS language more of a first-class citizen. Source maps are completely general (not specific to any one language) so you can use source maps with multiple compile-to-JS languages in the same node process.[m
[32m+[m
[32m+[m[32m## Installation and Usage[m
[32m+[m
[32m+[m[32m#### Node support[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32m$ npm install @cspotcode/source-map-support[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mSource maps can be generated using libraries such as [source-map-index-generator](https://github.com/twolfson/source-map-index-generator). Once you have a valid source map, place a source mapping comment somewhere in the file (usually done automatically or with an option by your transpiler):[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32m//# sourceMappingURL=path/to/source.map[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mIf multiple sourceMappingURL comments exist in one file, the last sourceMappingURL comment will be[m
[32m+[m[32mrespected (e.g. if a file mentions the comment in code, or went through multiple transpilers).[m
[32m+[m[32mThe path should either be absolute or relative to the compiled file.[m
[32m+[m
[32m+[m[32mFrom here you have two options.[m
[32m+[m
[32m+[m[32m##### CLI Usage[m
[32m+[m
[32m+[m[32m```bash[m
[32m+[m[32mnode -r @cspotcode/source-map-support/register compiled.js[m
[32m+[m[32m# Or to enable hookRequire[m
[32m+[m[32mnode -r @cspotcode/source-map-support/register-hook-require compiled.js[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m##### Programmatic Usage[m
[32m+[m
[32m+[m[32mPut the following line at the top of the compiled file.[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mrequire('@cspotcode/source-map-support').install();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mIt is also possible to install the source map support directly by[m
[32m+[m[32mrequiring the `register` module which can be handy with ES6:[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mimport '@cspotcode/source-map-support/register'[m
[32m+[m
[32m+[m[32m// Instead of:[m
[32m+[m[32mimport sourceMapSupport from '@cspotcode/source-map-support'[m
[32m+[m[32msourceMapSupport.install()[m
[32m+[m[32m```[m
[32m+[m[32mNote: if you're using babel-register, it includes source-map-support already.[m
[32m+[m
[32m+[m[32mIt is also very useful with Mocha:[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32m$ mocha --require @cspotcode/source-map-support/register tests/[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### Browser support[m
[32m+[m
[32m+[m[32mThis library also works in Chrome. While the DevTools console already supports source maps, the V8 engine doesn't and `Error.prototype.stack` will be incorrect without this library. Everything will just work if you deploy your source files using [browserify](http://browserify.org/). Just make sure to pass the `--debug` flag to the browserify command so your source maps are included in the bundled code.[m
[32m+[m
[32m+[m[32mThis library also works if you use another build process or just include the source files directly. In this case, include the file `browser-source-map-support.js` in your page and call `sourceMapSupport.install()`. It contains the whole library already bundled for the browser using browserify.[m
[32m+[m
[32m+[m[32m```html[m
[32m+[m[32m<script src="browser-source-map-support.js"></script>[m
[32m+[m[32m<script>sourceMapSupport.install();</script>[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mThis library also works if you use AMD (Asynchronous Module Definition), which is used in tools like [RequireJS](http://requirejs.org/). Just list `browser-source-map-support` as a dependency:[m
[32m+[m
[32m+[m[32m```html[m
[32m+[m[32m<script>[m
[32m+[m[32m  define(['browser-source-map-support'], function(sourceMapSupport) {[m
[32m+[m[32m    sourceMapSupport.install();[m
[32m+[m[32m  });[m
[32m+[m[32m</script>[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Options[m
[32m+[m
[32m+[m[32mThis module installs two things: a change to the `stack` property on `Error` objects and a handler for uncaught exceptions that mimics node's default exception handler (the handler can be seen in the demos below). You may want to disable the handler if you have your own uncaught exception handler. This can be done by passing an argument to the installer:[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mrequire('@cspotcode/source-map-support').install({[m
[32m+[m[32m  handleUncaughtExceptions: false[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mThis module loads source maps from the filesystem by default. You can provide alternate loading behavior through a callback as shown below. For example, [Meteor](https://github.com/meteor) keeps all source maps cached in memory to avoid disk access.[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mrequire('@cspotcode/source-map-support').install({[m
[32m+[m[32m  retrieveSourceMap: function(source) {[m
[32m+[m[32m    if (source === 'compiled.js') {[m
[32m+[m[32m      return {[m
[32m+[m[32m        url: 'original.js',[m
[32m+[m[32m        map: fs.readFileSync('compiled.js.map', 'utf8')[m
[32m+[m[32m      };[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mThe module will by default assume a browser environment if XMLHttpRequest and window are defined. If either of these do not exist it will instead assume a node environment.[m
[32m+[m[32mIn some rare cases, e.g. when running a browser emulation and where both variables are also set, you can explictly specify the environment to be either 'browser' or 'node'.[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mrequire('@cspotcode/source-map-support').install({[m
[32m+[m[32m  environment: 'node'[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mTo support files with inline source maps, the `hookRequire` options can be specified, which will monitor all source files for inline source maps.[m
[32m+[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mrequire('@cspotcode/source-map-support').install({[m
[32m+[m[32m  hookRequire: true[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mThis monkey patches the `require` module loading chain, so is not enabled by default and is not recommended for any sort of production usage.[m
[32m+[m
[32m+[m[32m## Demos[m
[32m+[m
[32m+[m[32m#### Basic Demo[m
[32m+[m
[32m+[m[32moriginal.js:[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mthrow new Error('test'); // This is the original code[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mcompiled.js:[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mrequire('@cspotcode/source-map-support').install();[m
[32m+[m
[32m+[m[32mthrow new Error('test'); // This is the compiled code[m
[32m+[m[32m// The next line defines the sourceMapping.[m
[32m+[m[32m//# sourceMappingURL=compiled.js.map[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mcompiled.js.map:[m
[32m+[m
[32m+[m[32m```json[m
[32m+[m[32m{[m
[32m+[m[32m  "version": 3,[m
[32m+[m[32m  "file": "compiled.js",[m
[32m+[m[32m  "sources": ["original.js"],[m
[32m+[m[32m  "names": [],[m
[32m+[m[32m  "mappings": ";;AAAA,MAAM,IAAI"[m
[32m+[m[32m}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mRun compiled.js using node (notice how the stack trace uses original.js instead of compiled.js):[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32m$ node compiled.js[m
[32m+[m
[32m+[m[32moriginal.js:1[m
[32m+[m[32mthrow new Error('test'); // This is the original code[m
[32m+[m[32m      ^[m
[32m+[m[32mError: test[m
[32m+[m[32m    at Object.<anonymous> (original.js:1:7)[m
[32m+[m[32m    at Module._compile (module.js:456:26)[m
[32m+[m[32m    at Object.Module._extensions..js (module.js:474:10)[m
[32m+[m[32m    at Module.load (module.js:356:32)[m
[32m+[m[32m    at Function.Module._load (module.js:312:12)[m
[32m+[m[32m    at Function.Module.runMain (module.js:497:10)[m
[32m+[m[32m    at startup (node.js:119:16)[m
[32m+[m[32m    at node.js:901:3[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### TypeScript Demo[m
[32m+[m
[32m+[m[32mdemo.ts:[m
[32m+[m
[32m+[m[32m```typescript[m
[32m+[m[32mdeclare function require(name: string);[m
[32m+[m[32mrequire('@cspotcode/source-map-support').install();[m
[32m+[m[32mclass Foo {[m
[32m+[m[32m  constructor() { this.bar(); }[m
[32m+[m[32m  bar() { throw new Error('this is a demo'); }[m
[32m+[m[32m}[m
[32m+[m[32mnew Foo();[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mCompile and run the file using the TypeScript compiler from the terminal:[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32m$ npm install source-map-support typescript[m
[32m+[m[32m$ node_modules/typescript/bin/tsc -sourcemap demo.ts[m
[32m+[m[32m$ node demo.js[m
[32m+[m
[32m+[m[32mdemo.ts:5[m
[32m+[m[32m  bar() { throw new Error('this is a demo'); }[m
[32m+[m[32m                ^[m
[32m+[m[32mError: this is a demo[m
[32m+[m[32m    at Foo.bar (demo.ts:5:17)[m
[32m+[m[32m    at new Foo (demo.ts:4:24)[m
[32m+[m[32m    at Object.<anonymous> (demo.ts:7:1)[m
[32m+[m[32m    at Module._compile (module.js:456:26)[m
[32m+[m[32m    at Object.Module._extensions..js (module.js:474:10)[m
[32m+[m[32m    at Module.load (module.js:356:32)[m
[32m+[m[32m    at Function.Module._load (module.js:312:12)[m
[32m+[m[32m    at Function.Module.runMain (module.js:497:10)[m
[32m+[m[32m    at startup (node.js:119:16)[m
[32m+[m[32m    at node.js:901:3[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mThere is also the option to use `-r source-map-support/register` with typescript, without the need add the `require('@cspotcode/source-map-support').install()` in the code base:[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32m$ npm install source-map-support typescript[m
[32m+[m[32m$ node_modules/typescript/bin/tsc  -sourcemap demo.ts[m
[32m+[m[32m$ node -r source-map-support/register demo.js[m
[32m+[m
[32m+[m[32mdemo.ts:5[m
[32m+[m[32m  bar() { throw new Error('this is a demo'); }[m
[32m+[m[32m                ^[m
[32m+[m[32mError: this is a demo[m
[32m+[m[32m    at Foo.bar (demo.ts:5:17)[m
[32m+[m[32m    at new Foo (demo.ts:4:24)[m
[32m+[m[32m    at Object.<anonymous> (demo.ts:7:1)[m
[32m+[m[32m    at Module._compile (module.js:456:26)[m
[32m+[m[32m    at Object.Module._extensions..js (module.js:474:10)[m
[32m+[m[32m    at Module.load (module.js:356:32)[m
[32m+[m[32m    at Function.Module._load (module.js:312:12)[m
[32m+[m[32m    at Function.Module.runMain (module.js:497:10)[m
[32m+[m[32m    at startup (node.js:119:16)[m
[32m+[m[32m    at node.js:901:3[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m#### CoffeeScript Demo[m
[32m+[m
[32m+[m[32mdemo.coffee:[m
[32m+[m
[32m+[m[32m```coffee[m
[32m+[m[32mrequire('@cspotcode/source-map-support').install()[m
[32m+[m[32mfoo = ->[m
[32m+[m[32m  bar = -> throw new Error 'this is a demo'[m
[32m+[m[32m  bar()[m
[32m+[m[32mfoo()[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mCompile and run the file using the CoffeeScript compiler from the terminal:[m
[32m+[m
[32m+[m[32m```sh[m
[32m+[m[32m$ npm install @cspotcode/source-map-support coffeescript[m
[32m+[m[32m$ node_modules/.bin/coffee --map --compile demo.coffee[m
[32m+[m[32m$ node demo.js[m
[32m+[m
[32m+[m[32mdemo.coffee:3[m
[32m+[m[32m  bar = -> throw new Error 'this is a demo'[m
[32m+[m[32m                     ^[m
[32m+[m[32mError: this is a demo[m
[32m+[m[32m    at bar (demo.coffee:3:22)[m
[32m+[m[32m    at foo (demo.coffee:4:3)[m
[32m+[m[32m    at Object.<anonymous> (demo.coffee:5:1)[m
[32m+[m[32m    at Object.<anonymous> (demo.coffee:1:1)[m
[32m+[m[32m    at Module._compile (module.js:456:26)[m
[32m+[m[32m    at Object.Module._extensions..js (module.js:474:10)[m
[32m+[m[32m    at Module.load (module.js:356:32)[m
[32m+[m[32m    at Function.Module._load (module.js:312:12)[m
[32m+[m[32m    at Function.Module.runMain (module.js:497:10)[m
[32m+[m[32m    at startup (node.js:119:16)[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Tests[m
[32m+[m
[32m+[m[32mThis repo contains both automated tests for node and manual tests for the browser. The automated tests can be run using mocha (type `mocha` in the root directory). To run the manual tests:[m
[32m+[m
[32m+[m[32m* Build the tests using `build.js`[m
[32m+[m[32m* Launch the HTTP server (`npm run serve-tests`) and visit[m
[32m+[m[32m  * http://127.0.0.1:1336/amd-test[m
[32m+[m[32m  * http://127.0.0.1:1336/browser-test[m
[32m+[m[32m  * http://127.0.0.1:1336/browserify-test - **Currently not working** due to a bug with browserify (see [pull request #66](https://github.com/evanw/node-source-map-support/pull/66) for details).[m
[32m+[m[32m* For `header-test`, run `server.js` inside that directory and visit http://127.0.0.1:1337/[m
[32m+[m
[32m+[m[32m## License[m
[32m+[m
[32m+[m[32mThis code is available under the [MIT license](http://opensource.org/licenses/MIT).[m
[1mdiff --git a/node_modules/@cspotcode/source-map-support/browser-source-map-support.js b/node_modules/@cspotcode/source-map-support/browser-source-map-support.js[m
[1mnew file mode 100644[m
[1mindex 0000000..782da50[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@cspotcode/source-map-support/browser-source-map-support.js[m
[36m@@ -0,0 +1,114 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Support for source maps in V8 stack traces[m
[32m+[m[32m * https://github.com/evanw/node-source-map-support[m
[32m+[m[32m */[m
[32m+[m[32m/*[m
[32m+[m[32m The buffer module from node.js, for the browser.[m
[32m+[m
[32m+[m[32m @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>[m
[32m+[m[32m license  MIT[m
[32m+[m[32m*/[m
[32m+[m[32m(this.define||function(R,U){this.sourceMapSupport=U()})("browser-source-map-support",function(R){(function e(C,J,A){function p(f,c){if(!J[f]){if(!C[f]){var l="function"==typeof require&&require;if(!c&&l)return l(f,!0);if(t)return t(f,!0);throw Error("Cannot find module '"+f+"'");}l=J[f]={exports:{}};C[f][0].call(l.exports,function(q){var r=C[f][1][q];return p(r?r:q)},l,l.exports,e,C,J,A)}return J[f].exports}for(var t="function"==typeof require&&require,m=0;m<A.length;m++)p(A[m]);return p})({1:[function(C,[m
[32m+[m[32mJ,A){R=C("./source-map-support")},{"./source-map-support":21}],2:[function(C,J,A){(function(e){function p(m){m=m.charCodeAt(0);if(43===m)return 62;if(47===m)return 63;if(48>m)return-1;if(58>m)return m-48+52;if(91>m)return m-65;if(123>m)return m-97+26}var t="undefined"!==typeof Uint8Array?Uint8Array:Array;e.toByteArray=function(m){function f(d){q[k++]=d}if(0<m.length%4)throw Error("Invalid string. Length must be a multiple of 4");var c=m.length;var l="="===m.charAt(c-2)?2:"="===m.charAt(c-1)?1:0;var q=[m
[32m+[m[32mnew t(3*m.length/4-l);var r=0<l?m.length-4:m.length;var k=0;for(c=0;c<r;c+=4){var u=p(m.charAt(c))<<18|p(m.charAt(c+1))<<12|p(m.charAt(c+2))<<6|p(m.charAt(c+3));f((u&16711680)>>16);f((u&65280)>>8);f(u&255)}2===l?(u=p(m.charAt(c))<<2|p(m.charAt(c+1))>>4,f(u&255)):1===l&&(u=p(m.charAt(c))<<10|p(m.charAt(c+1))<<4|p(m.charAt(c+2))>>2,f(u>>8&255),f(u&255));return q};e.fromByteArray=function(m){var f=m.length%3,c="",l;var q=0;for(l=m.length-f;q<l;q+=3){var r=(m[q]<<16)+(m[q+1]<<8)+m[q+2];r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(r>>[m
[32m+[m[32m18&63)+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(r>>12&63)+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(r>>6&63)+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(r&63);c+=r}switch(f){case 1:r=m[m.length-1];c+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(r>>2);c+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(r<<4&63);c+="==";break;case 2:r=(m[m.length-2]<<8)+[m
[32m+[m[32mm[m.length-1],c+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(r>>10),c+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(r>>4&63),c+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(r<<2&63),c+="="}return c}})("undefined"===typeof A?this.base64js={}:A)},{}],3:[function(C,J,A){},{}],4:[function(C,J,A){(function(e){var p=Object.prototype.toString,t="function"===typeof e.alloc&&"function"===typeof e.allocUnsafe&&"function"===[m
[32m+[m[32mtypeof e.from;J.exports=function(m,f,c){if("number"===typeof m)throw new TypeError('"value" argument must not be a number');if("ArrayBuffer"===p.call(m).slice(8,-1)){f>>>=0;var l=m.byteLength-f;if(0>l)throw new RangeError("'offset' is out of bounds");if(void 0===c)c=l;else if(c>>>=0,c>l)throw new RangeError("'length' is out of bounds");return t?e.from(m.slice(f,f+c)):new e(new Uint8Array(m.slice(f,f+c)))}if("string"===typeof m){c=f;if("string"!==typeof c||""===c)c="utf8";if(!e.isEncoding(c))throw new TypeError('"encoding" must be a valid string encoding');[m
[32m+[m[32mreturn t?e.from(m,c):new e(m,c)}return t?e.from(m):new e(m)}}).call(this,C("buffer").Buffer)},{buffer:5}],5:[function(C,J,A){function e(a,b,h){if(!(this instanceof e))return new e(a,b,h);var w=typeof a;if("number"===w)var y=0<a?a>>>0:0;else if("string"===w){if("base64"===b)for(a=(a.trim?a.trim():a.replace(/^\s+|\s+$/g,"")).replace(L,"");0!==a.length%4;)a+="=";y=e.byteLength(a,b)}else if("object"===w&&null!==a)"Buffer"===a.type&&z(a.data)&&(a=a.data),y=0<+a.length?Math.floor(+a.length):0;else throw new TypeError("must start with number, buffer, array or string");[m
[32m+[m[32mif(this.length>G)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+G.toString(16)+" bytes");if(e.TYPED_ARRAY_SUPPORT)var I=e._augment(new Uint8Array(y));else I=this,I.length=y,I._isBuffer=!0;if(e.TYPED_ARRAY_SUPPORT&&"number"===typeof a.byteLength)I._set(a);else{var K=a;if(z(K)||e.isBuffer(K)||K&&"object"===typeof K&&"number"===typeof K.length)if(e.isBuffer(a))for(b=0;b<y;b++)I[b]=a.readUInt8(b);else for(b=0;b<y;b++)I[b]=(a[b]%256+256)%256;else if("string"===w)I.write(a,[m
[32m+[m[32m0,b);else if("number"===w&&!e.TYPED_ARRAY_SUPPORT&&!h)for(b=0;b<y;b++)I[b]=0}return I}function p(a,b,h){var w="";for(h=Math.min(a.length,h);b<h;b++)w+=String.fromCharCode(a[b]);return w}function t(a,b,h){if(0!==a%1||0>a)throw new RangeError("offset is not uint");if(a+b>h)throw new RangeError("Trying to access beyond buffer length");}function m(a,b,h,w,y,I){if(!e.isBuffer(a))throw new TypeError("buffer must be a Buffer instance");if(b>y||b<I)throw new TypeError("value is out of bounds");if(h+w>a.length)throw new TypeError("index out of range");[m
[32m+[m[32m}function f(a,b,h,w){0>b&&(b=65535+b+1);for(var y=0,I=Math.min(a.length-h,2);y<I;y++)a[h+y]=(b&255<<8*(w?y:1-y))>>>8*(w?y:1-y)}function c(a,b,h,w){0>b&&(b=4294967295+b+1);for(var y=0,I=Math.min(a.length-h,4);y<I;y++)a[h+y]=b>>>8*(w?y:3-y)&255}function l(a,b,h,w,y,I){if(b>y||b<I)throw new TypeError("value is out of bounds");if(h+w>a.length)throw new TypeError("index out of range");}function q(a,b,h,w,y){y||l(a,b,h,4,3.4028234663852886E38,-3.4028234663852886E38);v.write(a,b,h,w,23,4);return h+4}function r(a,[m
[32m+[m[32mb,h,w,y){y||l(a,b,h,8,1.7976931348623157E308,-1.7976931348623157E308);v.write(a,b,h,w,52,8);return h+8}function k(a){for(var b=[],h=0;h<a.length;h++){var w=a.charCodeAt(h);if(127>=w)b.push(w);else{var y=h;55296<=w&&57343>=w&&h++;w=encodeURIComponent(a.slice(y,h+1)).substr(1).split("%");for(y=0;y<w.length;y++)b.push(parseInt(w[y],16))}}return b}function u(a){for(var b=[],h=0;h<a.length;h++)b.push(a.charCodeAt(h)&255);return b}function d(a,b,h,w,y){y&&(w-=w%y);for(y=0;y<w&&!(y+h>=b.length||y>=a.length);y++)b[y+[m
[32m+[m[32mh]=a[y];return y}function g(a){try{return decodeURIComponent(a)}catch(b){return String.fromCharCode(65533)}}var n=C("base64-js"),v=C("ieee754"),z=C("is-array");A.Buffer=e;A.SlowBuffer=e;A.INSPECT_MAX_BYTES=50;e.poolSize=8192;var G=1073741823;e.TYPED_ARRAY_SUPPORT=function(){try{var a=new ArrayBuffer(0),b=new Uint8Array(a);b.foo=function(){return 42};return 42===b.foo()&&"function"===typeof b.subarray&&0===(new Uint8Array(1)).subarray(1,1).byteLength}catch(h){return!1}}();e.isBuffer=function(a){return!(null==[m
[32m+[m[32ma||!a._isBuffer)};e.compare=function(a,b){if(!e.isBuffer(a)||!e.isBuffer(b))throw new TypeError("Arguments must be Buffers");for(var h=a.length,w=b.length,y=0,I=Math.min(h,w);y<I&&a[y]===b[y];y++);y!==I&&(h=a[y],w=b[y]);return h<w?-1:w<h?1:0};e.isEncoding=function(a){switch(String(a).toLowerCase()){case "hex":case "utf8":case "utf-8":case "ascii":case "binary":case "base64":case "raw":case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":return!0;default:return!1}};e.concat=function(a,b){if(!z(a))throw new TypeError("Usage: Buffer.concat(list[, length])");[m
[32m+[m[32mif(0===a.length)return new e(0);if(1===a.length)return a[0];var h;if(void 0===b)for(h=b=0;h<a.length;h++)b+=a[h].length;var w=new e(b),y=0;for(h=0;h<a.length;h++){var I=a[h];I.copy(w,y);y+=I.length}return w};e.byteLength=function(a,b){a+="";switch(b||"utf8"){case "ascii":case "binary":case "raw":var h=a.length;break;case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":h=2*a.length;break;case "hex":h=a.length>>>1;break;case "utf8":case "utf-8":h=k(a).length;break;case "base64":h=n.toByteArray(a).length;[m
[32m+[m[32mbreak;default:h=a.length}return h};e.prototype.length=void 0;e.prototype.parent=void 0;e.prototype.toString=function(a,b,h){var w=!1;b>>>=0;h=void 0===h||Infinity===h?this.length:h>>>0;a||(a="utf8");0>b&&(b=0);h>this.length&&(h=this.length);if(h<=b)return"";for(;;)switch(a){case "hex":a=b;b=h;h=this.length;if(!a||0>a)a=0;if(!b||0>b||b>h)b=h;w="";for(h=a;h<b;h++)a=w,w=this[h],w=16>w?"0"+w.toString(16):w.toString(16),w=a+w;return w;case "utf8":case "utf-8":w=a="";for(h=Math.min(this.length,h);b<h;b++)127>=[m
[32m+[m[32mthis[b]?(a+=g(w)+String.fromCharCode(this[b]),w=""):w+="%"+this[b].toString(16);return a+g(w);case "ascii":return p(this,b,h);case "binary":return p(this,b,h);case "base64":return b=0===b&&h===this.length?n.fromByteArray(this):n.fromByteArray(this.slice(b,h)),b;case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":b=this.slice(b,h);h="";for(a=0;a<b.length;a+=2)h+=String.fromCharCode(b[a]+256*b[a+1]);return h;default:if(w)throw new TypeError("Unknown encoding: "+a);a=(a+"").toLowerCase();w=!0}};[m
[32m+[m[32me.prototype.equals=function(a){if(!e.isBuffer(a))throw new TypeError("Argument must be a Buffer");return 0===e.compare(this,a)};e.prototype.inspect=function(){var a="",b=A.INSPECT_MAX_BYTES;0<this.length&&(a=this.toString("hex",0,b).match(/.{2}/g).join(" "),this.length>b&&(a+=" ... "));return"<Buffer "+a+">"};e.prototype.compare=function(a){if(!e.isBuffer(a))throw new TypeError("Argument must be a Buffer");return e.compare(this,a)};e.prototype.get=function(a){console.log(".get() is deprecated. Access using array indexes instead.");[m
[32m+[m[32mreturn this.readUInt8(a)};e.prototype.set=function(a,b){console.log(".set() is deprecated. Access using array indexes instead.");return this.writeUInt8(a,b)};e.prototype.write=function(a,b,h,w){if(isFinite(b))isFinite(h)||(w=h,h=void 0);else{var y=w;w=b;b=h;h=y}b=Number(b)||0;y=this.length-b;h?(h=Number(h),h>y&&(h=y)):h=y;w=String(w||"utf8").toLowerCase();switch(w){case "hex":b=Number(b)||0;w=this.length-b;h?(h=Number(h),h>w&&(h=w)):h=w;w=a.length;if(0!==w%2)throw Error("Invalid hex string");h>w/[m
[32m+[m[32m2&&(h=w/2);for(w=0;w<h;w++){y=parseInt(a.substr(2*w,2),16);if(isNaN(y))throw Error("Invalid hex string");this[b+w]=y}a=w;break;case "utf8":case "utf-8":a=d(k(a),this,b,h);break;case "ascii":a=d(u(a),this,b,h);break;case "binary":a=d(u(a),this,b,h);break;case "base64":a=d(n.toByteArray(a),this,b,h);break;case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":y=[];for(var I=0;I<a.length;I++){var K=a.charCodeAt(I);w=K>>8;K%=256;y.push(K);y.push(w)}a=d(y,this,b,h,2);break;default:throw new TypeError("Unknown encoding: "+[m
[32m+[m[32mw);}return a};e.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};e.prototype.slice=function(a,b){var h=this.length;a=~~a;b=void 0===b?h:~~b;0>a?(a+=h,0>a&&(a=0)):a>h&&(a=h);0>b?(b+=h,0>b&&(b=0)):b>h&&(b=h);b<a&&(b=a);if(e.TYPED_ARRAY_SUPPORT)return e._augment(this.subarray(a,b));h=b-a;for(var w=new e(h,void 0,!0),y=0;y<h;y++)w[y]=this[y+a];return w};e.prototype.readUInt8=function(a,b){b||t(a,1,this.length);return this[a]};e.prototype.readUInt16LE=[m
[32m+[m[32mfunction(a,b){b||t(a,2,this.length);return this[a]|this[a+1]<<8};e.prototype.readUInt16BE=function(a,b){b||t(a,2,this.length);return this[a]<<8|this[a+1]};e.prototype.readUInt32LE=function(a,b){b||t(a,4,this.length);return(this[a]|this[a+1]<<8|this[a+2]<<16)+16777216*this[a+3]};e.prototype.readUInt32BE=function(a,b){b||t(a,4,this.length);return 16777216*this[a]+(this[a+1]<<16|this[a+2]<<8|this[a+3])};e.prototype.readInt8=function(a,b){b||t(a,1,this.length);return this[a]&128?-1*(255-this[a]+1):this[a]};[m
[32m+[m[32me.prototype.readInt16LE=function(a,b){b||t(a,2,this.length);var h=this[a]|this[a+1]<<8;return h&32768?h|4294901760:h};e.prototype.readInt16BE=function(a,b){b||t(a,2,this.length);var h=this[a+1]|this[a]<<8;return h&32768?h|4294901760:h};e.prototype.readInt32LE=function(a,b){b||t(a,4,this.length);return this[a]|this[a+1]<<8|this[a+2]<<16|this[a+3]<<24};e.prototype.readInt32BE=function(a,b){b||t(a,4,this.length);return this[a]<<24|this[a+1]<<16|this[a+2]<<8|this[a+3]};e.prototype.readFloatLE=function(a,[m
[32m+[m[32mb){b||t(a,4,this.length);return v.read(this,a,!0,23,4)};e.prototype.readFloatBE=function(a,b){b||t(a,4,this.length);return v.read(this,a,!1,23,4)};e.prototype.readDoubleLE=function(a,b){b||t(a,8,this.length);return v.read(this,a,!0,52,8)};e.prototype.readDoubleBE=function(a,b){b||t(a,8,this.length);return v.read(this,a,!1,52,8)};e.prototype.writeUInt8=function(a,b,h){a=+a;b>>>=0;h||m(this,a,b,1,255,0);e.TYPED_ARRAY_SUPPORT||(a=Math.floor(a));this[b]=a;return b+1};e.prototype.writeUInt16LE=function(a,[m
[32m+[m[32mb,h){a=+a;b>>>=0;h||m(this,a,b,2,65535,0);e.TYPED_ARRAY_SUPPORT?(this[b]=a,this[b+1]=a>>>8):f(this,a,b,!0);return b+2};e.prototype.writeUInt16BE=function(a,b,h){a=+a;b>>>=0;h||m(this,a,b,2,65535,0);e.TYPED_ARRAY_SUPPORT?(this[b]=a>>>8,this[b+1]=a):f(this,a,b,!1);return b+2};e.prototype.writeUInt32LE=function(a,b,h){a=+a;b>>>=0;h||m(this,a,b,4,4294967295,0);e.TYPED_ARRAY_SUPPORT?(this[b+3]=a>>>24,this[b+2]=a>>>16,this[b+1]=a>>>8,this[b]=a):c(this,a,b,!0);return b+4};e.prototype.writeUInt32BE=function(a,[m
[32m+[m[32mb,h){a=+a;b>>>=0;h||m(this,a,b,4,4294967295,0);e.TYPED_ARRAY_SUPPORT?(this[b]=a>>>24,this[b+1]=a>>>16,this[b+2]=a>>>8,this[b+3]=a):c(this,a,b,!1);return b+4};e.prototype.writeInt8=function(a,b,h){a=+a;b>>>=0;h||m(this,a,b,1,127,-128);e.TYPED_ARRAY_SUPPORT||(a=Math.floor(a));0>a&&(a=255+a+1);this[b]=a;return b+1};e.prototype.writeInt16LE=function(a,b,h){a=+a;b>>>=0;h||m(this,a,b,2,32767,-32768);e.TYPED_ARRAY_SUPPORT?(this[b]=a,this[b+1]=a>>>8):f(this,a,b,!0);return b+2};e.prototype.writeInt16BE=function(a,[m
[32m+[m[32mb,h){a=+a;b>>>=0;h||m(this,a,b,2,32767,-32768);e.TYPED_ARRAY_SUPPORT?(this[b]=a>>>8,this[b+1]=a):f(this,a,b,!1);return b+2};e.prototype.writeInt32LE=function(a,b,h){a=+a;b>>>=0;h||m(this,a,b,4,2147483647,-2147483648);e.TYPED_ARRAY_SUPPORT?(this[b]=a,this[b+1]=a>>>8,this[b+2]=a>>>16,this[b+3]=a>>>24):c(this,a,b,!0);return b+4};e.prototype.writeInt32BE=function(a,b,h){a=+a;b>>>=0;h||m(this,a,b,4,2147483647,-2147483648);0>a&&(a=4294967295+a+1);e.TYPED_ARRAY_SUPPORT?(this[b]=a>>>24,this[b+1]=a>>>16,this[b+[m
[32m+[m[32m2]=a>>>8,this[b+3]=a):c(this,a,b,!1);return b+4};e.prototype.writeFloatLE=function(a,b,h){return q(this,a,b,!0,h)};e.prototype.writeFloatBE=function(a,b,h){return q(this,a,b,!1,h)};e.prototype.writeDoubleLE=function(a,b,h){return r(this,a,b,!0,h)};e.prototype.writeDoubleBE=function(a,b,h){return r(this,a,b,!1,h)};e.prototype.copy=function(a,b,h,w){h||(h=0);w||0===w||(w=this.length);b||(b=0);if(w!==h&&0!==a.length&&0!==this.length){if(w<h)throw new TypeError("sourceEnd < sourceStart");if(0>b||b>=a.length)throw new TypeError("targetStart out of bounds");[m
[32m+[m[32mif(0>h||h>=this.length)throw new TypeError("sourceStart out of bounds");if(0>w||w>this.length)throw new TypeError("sourceEnd out of bounds");w>this.length&&(w=this.length);a.length-b<w-h&&(w=a.length-b+h);w-=h;if(1E3>w||!e.TYPED_ARRAY_SUPPORT)for(var y=0;y<w;y++)a[y+b]=this[y+h];else a._set(this.subarray(h,h+w),b)}};e.prototype.fill=function(a,b,h){a||(a=0);b||(b=0);h||(h=this.length);if(h<b)throw new TypeError("end < start");if(h!==b&&0!==this.length){if(0>b||b>=this.length)throw new TypeError("start out of bounds");[m
[32m+[m[32mif(0>h||h>this.length)throw new TypeError("end out of bounds");if("number"===typeof a)for(;b<h;b++)this[b]=a;else{a=k(a.toString());for(var w=a.length;b<h;b++)this[b]=a[b%w]}return this}};e.prototype.toArrayBuffer=function(){if("undefined"!==typeof Uint8Array){if(e.TYPED_ARRAY_SUPPORT)return(new e(this)).buffer;for(var a=new Uint8Array(this.length),b=0,h=a.length;b<h;b+=1)a[b]=this[b];return a.buffer}throw new TypeError("Buffer.toArrayBuffer not supported in this browser");};var D=e.prototype;e._augment=[m
[32m+[m[32mfunction(a){a.constructor=e;a._isBuffer=!0;a._get=a.get;a._set=a.set;a.get=D.get;a.set=D.set;a.write=D.write;a.toString=D.toString;a.toLocaleString=D.toString;a.toJSON=D.toJSON;a.equals=D.equals;a.compare=D.compare;a.copy=D.copy;a.slice=D.slice;a.readUInt8=D.readUInt8;a.readUInt16LE=D.readUInt16LE;a.readUInt16BE=D.readUInt16BE;a.readUInt32LE=D.readUInt32LE;a.readUInt32BE=D.readUInt32BE;a.readInt8=D.readInt8;a.readInt16LE=D.readInt16LE;a.readInt16BE=D.readInt16BE;a.readInt32LE=D.readInt32LE;a.readInt32BE=[m
[32m+[m[32mD.readInt32BE;a.readFloatLE=D.readFloatLE;a.readFloatBE=D.readFloatBE;a.readDoubleLE=D.readDoubleLE;a.readDoubleBE=D.readDoubleBE;a.writeUInt8=D.writeUInt8;a.writeUInt16LE=D.writeUInt16LE;a.writeUInt16BE=D.writeUInt16BE;a.writeUInt32LE=D.writeUInt32LE;a.writeUInt32BE=D.writeUInt32BE;a.writeInt8=D.writeInt8;a.writeInt16LE=D.writeInt16LE;a.writeInt16BE=D.writeInt16BE;a.writeInt32LE=D.writeInt32LE;a.writeInt32BE=D.writeInt32BE;a.writeFloatLE=D.writeFloatLE;a.writeFloatBE=D.writeFloatBE;a.writeDoubleLE=[m
[32m+[m[32mD.writeDoubleLE;a.writeDoubleBE=D.writeDoubleBE;a.fill=D.fill;a.inspect=D.inspect;a.toArrayBuffer=D.toArrayBuffer;return a};var L=/[^+\/0-9A-z]/g},{"base64-js":2,ieee754:6,"is-array":7}],6:[function(C,J,A){A.read=function(e,p,t,m,f){var c=8*f-m-1;var l=(1<<c)-1,q=l>>1,r=-7;f=t?f-1:0;var k=t?-1:1,u=e[p+f];f+=k;t=u&(1<<-r)-1;u>>=-r;for(r+=c;0<r;t=256*t+e[p+f],f+=k,r-=8);c=t&(1<<-r)-1;t>>=-r;for(r+=m;0<r;c=256*c+e[p+f],f+=k,r-=8);if(0===t)t=1-q;else{if(t===l)return c?NaN:Infinity*(u?-1:1);c+=Math.pow(2,[m
[32m+[m[32mm);t-=q}return(u?-1:1)*c*Math.pow(2,t-m)};A.write=function(e,p,t,m,f,c){var l,q=8*c-f-1,r=(1<<q)-1,k=r>>1,u=23===f?Math.pow(2,-24)-Math.pow(2,-77):0;c=m?0:c-1;var d=m?1:-1,g=0>p||0===p&&0>1/p?1:0;p=Math.abs(p);isNaN(p)||Infinity===p?(p=isNaN(p)?1:0,m=r):(m=Math.floor(Math.log(p)/Math.LN2),1>p*(l=Math.pow(2,-m))&&(m--,l*=2),p=1<=m+k?p+u/l:p+u*Math.pow(2,1-k),2<=p*l&&(m++,l/=2),m+k>=r?(p=0,m=r):1<=m+k?(p=(p*l-1)*Math.pow(2,f),m+=k):(p=p*Math.pow(2,k-1)*Math.pow(2,f),m=0));for(;8<=f;e[t+c]=p&255,c+=[m
[32m+[m[32md,p/=256,f-=8);m=m<<f|p;for(q+=f;0<q;e[t+c]=m&255,c+=d,m/=256,q-=8);e[t+c-d]|=128*g}},{}],7:[function(C,J,A){var e=Object.prototype.toString;J.exports=Array.isArray||function(p){return!!p&&"[object Array]"==e.call(p)}},{}],8:[function(C,J,A){(function(e){function p(c,l){for(var q=0,r=c.length-1;0<=r;r--){var k=c[r];"."===k?c.splice(r,1):".."===k?(c.splice(r,1),q++):q&&(c.splice(r,1),q--)}if(l)for(;q--;q)c.unshift("..");return c}function t(c,l){if(c.filter)return c.filter(l);for(var q=[],r=0;r<c.length;r++)l(c[r],[m
[32m+[m[32mr,c)&&q.push(c[r]);return q}var m=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;A.resolve=function(){for(var c="",l=!1,q=arguments.length-1;-1<=q&&!l;q--){var r=0<=q?arguments[q]:e.cwd();if("string"!==typeof r)throw new TypeError("Arguments to path.resolve must be strings");r&&(c=r+"/"+c,l="/"===r.charAt(0))}c=p(t(c.split("/"),function(k){return!!k}),!l).join("/");return(l?"/":"")+c||"."};A.normalize=function(c){var l=A.isAbsolute(c),q="/"===f(c,-1);(c=p(t(c.split("/"),function(r){return!!r}),[m
[32m+[m[32m!l).join("/"))||l||(c=".");c&&q&&(c+="/");return(l?"/":"")+c};A.isAbsolute=function(c){return"/"===c.charAt(0)};A.join=function(){var c=Array.prototype.slice.call(arguments,0);return A.normalize(t(c,function(l,q){if("string"!==typeof l)throw new TypeError("Arguments to path.join must be strings");return l}).join("/"))};A.relative=function(c,l){function q(n){for(var v=0;v<n.length&&""===n[v];v++);for(var z=n.length-1;0<=z&&""===n[z];z--);return v>z?[]:n.slice(v,z-v+1)}c=A.resolve(c).substr(1);l=A.resolve(l).substr(1);[m
[32m+[m[32mfor(var r=q(c.split("/")),k=q(l.split("/")),u=Math.min(r.length,k.length),d=u,g=0;g<u;g++)if(r[g]!==k[g]){d=g;break}u=[];for(g=d;g<r.length;g++)u.push("..");u=u.concat(k.slice(d));return u.join("/")};A.sep="/";A.delimiter=":";A.dirname=function(c){var l=m.exec(c).slice(1);c=l[0];l=l[1];if(!c&&!l)return".";l&&(l=l.substr(0,l.length-1));return c+l};A.basename=function(c,l){var q=m.exec(c).slice(1)[2];l&&q.substr(-1*l.length)===l&&(q=q.substr(0,q.length-l.length));return q};A.extname=function(c){return m.exec(c).slice(1)[3]};[m
[32m+[m[32mvar f="b"==="ab".substr(-1)?function(c,l,q){return c.substr(l,q)}:function(c,l,q){0>l&&(l=c.length+l);return c.substr(l,q)}}).call(this,C("g5I+bs"))},{"g5I+bs":9}],9:[function(C,J,A){function e(){}C=J.exports={};C.nextTick=function(){if("undefined"!==typeof window&&window.setImmediate)return function(t){return window.setImmediate(t)};if("undefined"!==typeof window&&window.postMessage&&window.addEventListener){var p=[];window.addEventListener("message",function(t){var m=t.source;m!==window&&null!==[m
[32m+[m[32mm||"process-tick"!==t.data||(t.stopPropagation(),0<p.length&&p.shift()())},!0);return function(t){p.push(t);window.postMessage("process-tick","*")}}return function(t){setTimeout(t,0)}}();C.title="browser";C.browser=!0;C.env={};C.argv=[];C.on=e;C.addListener=e;C.once=e;C.off=e;C.removeListener=e;C.removeAllListeners=e;C.emit=e;C.binding=function(p){throw Error("process.binding is not supported");};C.cwd=function(){return"/"};C.chdir=function(p){throw Error("process.chdir is not supported");}},{}],[m
[32m+[m[32m10:[function(C,J,A){function e(){this._array=[];this._set=m?new Map:Object.create(null)}var p=C("./util"),t=Object.prototype.hasOwnProperty,m="undefined"!==typeof Map;e.fromArray=function(f,c){for(var l=new e,q=0,r=f.length;q<r;q++)l.add(f[q],c);return l};e.prototype.size=function(){return m?this._set.size:Object.getOwnPropertyNames(this._set).length};e.prototype.add=function(f,c){var l=m?f:p.toSetString(f),q=m?this.has(f):t.call(this._set,l),r=this._array.length;q&&!c||this._array.push(f);q||(m?[m
[32m+[m[32mthis._set.set(f,r):this._set[l]=r)};e.prototype.has=function(f){if(m)return this._set.has(f);f=p.toSetString(f);return t.call(this._set,f)};e.prototype.indexOf=function(f){if(m){var c=this._set.get(f);if(0<=c)return c}else if(c=p.toSetString(f),t.call(this._set,c))return this._set[c];throw Error('"'+f+'" is not in the set.');};e.prototype.at=function(f){if(0<=f&&f<this._array.length)return this._array[f];throw Error("No element indexed by "+f);};e.prototype.toArray=function(){return this._array.slice()};[m
[32m+[m[32mA.ArraySet=e},{"./util":19}],11:[function(C,J,A){var e=C("./base64");A.encode=function(p){var t="",m=0>p?(-p<<1)+1:p<<1;do p=m&31,m>>>=5,0<m&&(p|=32),t+=e.encode(p);while(0<m);return t};A.decode=function(p,t,m){var f=p.length,c=0,l=0;do{if(t>=f)throw Error("Expected more digits in base 64 VLQ value.");var q=e.decode(p.charCodeAt(t++));if(-1===q)throw Error("Invalid base64 digit: "+p.charAt(t-1));var r=!!(q&32);q&=31;c+=q<<l;l+=5}while(r);p=c>>1;m.value=1===(c&1)?-p:p;m.rest=t}},{"./base64":12}],12:[function(C,[m
[32m+[m[32mJ,A){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");A.encode=function(p){if(0<=p&&p<e.length)return e[p];throw new TypeError("Must be between 0 and 63: "+p);};A.decode=function(p){return 65<=p&&90>=p?p-65:97<=p&&122>=p?p-97+26:48<=p&&57>=p?p-48+52:43==p?62:47==p?63:-1}},{}],13:[function(C,J,A){function e(p,t,m,f,c,l){var q=Math.floor((t-p)/2)+p,r=c(m,f[q],!0);return 0===r?q:0<r?1<t-q?e(q,t,m,f,c,l):l==A.LEAST_UPPER_BOUND?t<f.length?t:-1:q:1<q-p?e(p,q,m,f,c,l):l==[m
[32m+[m[32mA.LEAST_UPPER_BOUND?q:0>p?-1:p}A.GREATEST_LOWER_BOUND=1;A.LEAST_UPPER_BOUND=2;A.search=function(p,t,m,f){if(0===t.length)return-1;p=e(-1,t.length,p,t,m,f||A.GREATEST_LOWER_BOUND);if(0>p)return-1;for(;0<=p-1&&0===m(t[p],t[p-1],!0);)--p;return p}},{}],14:[function(C,J,A){function e(){this._array=[];this._sorted=!0;this._last={generatedLine:-1,generatedColumn:0}}var p=C("./util");e.prototype.unsortedForEach=function(t,m){this._array.forEach(t,m)};e.prototype.add=function(t){var m=this._last,f=m.generatedLine,[m
[32m+[m[32mc=t.generatedLine,l=m.generatedColumn,q=t.generatedColumn;c>f||c==f&&q>=l||0>=p.compareByGeneratedPositionsInflated(m,t)?this._last=t:this._sorted=!1;this._array.push(t)};e.prototype.toArray=function(){this._sorted||(this._array.sort(p.compareByGeneratedPositionsInflated),this._sorted=!0);return this._array};A.MappingList=e},{"./util":19}],15:[function(C,J,A){function e(t,m,f){var c=t[m];t[m]=t[f];t[f]=c}function p(t,m,f,c){if(f<c){var l=f-1;e(t,Math.round(f+Math.random()*(c-f)),c);for(var q=t[c],[m
[32m+[m[32mr=f;r<c;r++)0>=m(t[r],q)&&(l+=1,e(t,l,r));e(t,l+1,r);l+=1;p(t,m,f,l-1);p(t,m,l+1,c)}}A.quickSort=function(t,m){p(t,m,0,t.length-1)}},{}],16:[function(C,J,A){function e(k,u){var d=k;"string"===typeof k&&(d=f.parseSourceMapInput(k));return null!=d.sections?new m(d,u):new p(d,u)}function p(k,u){var d=k;"string"===typeof k&&(d=f.parseSourceMapInput(k));var g=f.getArg(d,"version"),n=f.getArg(d,"sources"),v=f.getArg(d,"names",[]),z=f.getArg(d,"sourceRoot",null),G=f.getArg(d,"sourcesContent",null),D=f.getArg(d,[m
[32m+[m[32m"mappings");d=f.getArg(d,"file",null);if(g!=this._version)throw Error("Unsupported version: "+g);z&&(z=f.normalize(z));n=n.map(String).map(f.normalize).map(function(L){return z&&f.isAbsolute(z)&&f.isAbsolute(L)?f.relative(z,L):L});this._names=l.fromArray(v.map(String),!0);this._sources=l.fromArray(n,!0);this.sourceRoot=z;this.sourcesContent=G;this._mappings=D;this._sourceMapURL=u;this.file=d}function t(){this.generatedColumn=this.generatedLine=0;this.name=this.originalColumn=this.originalLine=this.source=[m
[32m+[m[32mnull}function m(k,u){var d=k;"string"===typeof k&&(d=f.parseSourceMapInput(k));var g=f.getArg(d,"version");d=f.getArg(d,"sections");if(g!=this._version)throw Error("Unsupported version: "+g);this._sources=new l;this._names=new l;var n={line:-1,column:0};this._sections=d.map(function(v){if(v.url)throw Error("Support for url field in sections not implemented.");var z=f.getArg(v,"offset"),G=f.getArg(z,"line"),D=f.getArg(z,"column");if(G<n.line||G===n.line&&D<n.column)throw Error("Section offsets must be ordered and non-overlapping.");[m
[32m+[m[32mn=z;return{generatedOffset:{generatedLine:G+1,generatedColumn:D+1},consumer:new e(f.getArg(v,"map"),u)}})}var f=C("./util"),c=C("./binary-search"),l=C("./array-set").ArraySet,q=C("./base64-vlq"),r=C("./quick-sort").quickSort;e.fromSourceMap=function(k){return p.fromSourceMap(k)};e.prototype._version=3;e.prototype.__generatedMappings=null;Object.defineProperty(e.prototype,"_generatedMappings",{configurable:!0,enumerable:!0,get:function(){this.__generatedMappings||this._parseMappings(this._mappings,[m
[32m+[m[32mthis.sourceRoot);return this.__generatedMappings}});e.prototype.__originalMappings=null;Object.defineProperty(e.prototype,"_originalMappings",{configurable:!0,enumerable:!0,get:function(){this.__originalMappings||this._parseMappings(this._mappings,this.sourceRoot);return this.__originalMappings}});e.prototype._charIsMappingSeparator=function(k,u){var d=k.charAt(u);return";"===d||","===d};e.prototype._parseMappings=function(k,u){throw Error("Subclasses must implement _parseMappings");};e.GENERATED_ORDER=[m
[32m+[m[32m1;e.ORIGINAL_ORDER=2;e.GREATEST_LOWER_BOUND=1;e.LEAST_UPPER_BOUND=2;e.prototype.eachMapping=function(k,u,d){u=u||null;switch(d||e.GENERATED_ORDER){case e.GENERATED_ORDER:d=this._generatedMappings;break;case e.ORIGINAL_ORDER:d=this._originalMappings;break;default:throw Error("Unknown order of iteration.");}var g=this.sourceRoot;d.map(function(n){var v=null===n.source?null:this._sources.at(n.source);v=f.computeSourceURL(g,v,this._sourceMapURL);return{source:v,generatedLine:n.generatedLine,generatedColumn:n.generatedColumn,[m
[32m+[m[32moriginalLine:n.originalLine,originalColumn:n.originalColumn,name:null===n.name?null:this._names.at(n.name)}},this).forEach(k,u)};e.prototype.allGeneratedPositionsFor=function(k){var u=f.getArg(k,"line"),d={source:f.getArg(k,"source"),originalLine:u,originalColumn:f.getArg(k,"column",0)};null!=this.sourceRoot&&(d.source=f.relative(this.sourceRoot,d.source));if(!this._sources.has(d.source))return[];d.source=this._sources.indexOf(d.source);var g=[];d=this._findMapping(d,this._originalMappings,"originalLine",[m
[32m+[m[32m"originalColumn",f.compareByOriginalPositions,c.LEAST_UPPER_BOUND);if(0<=d){var n=this._originalMappings[d];if(void 0===k.column)for(u=n.originalLine;n&&n.originalLine===u;)g.push({line:f.getArg(n,"generatedLine",null),column:f.getArg(n,"generatedColumn",null),lastColumn:f.getArg(n,"lastGeneratedColumn",null)}),n=this._originalMappings[++d];else for(k=n.originalColumn;n&&n.originalLine===u&&n.originalColumn==k;)g.push({line:f.getArg(n,"generatedLine",null),column:f.getArg(n,"generatedColumn",null),[m
[32m+[m[32mlastColumn:f.getArg(n,"lastGeneratedColumn",null)}),n=this._originalMappings[++d]}return g};A.SourceMapConsumer=e;p.prototype=Object.create(e.prototype);p.prototype.consumer=e;p.fromSourceMap=function(k,u){var d=Object.create(p.prototype),g=d._names=l.fromArray(k._names.toArray(),!0),n=d._sources=l.fromArray(k._sources.toArray(),!0);d.sourceRoot=k._sourceRoot;d.sourcesContent=k._generateSourcesContent(d._sources.toArray(),d.sourceRoot);d.file=k._file;d._sourceMapURL=u;for(var v=k._mappings.toArray().slice(),[m
[32m+[m[32mz=d.__generatedMappings=[],G=d.__originalMappings=[],D=0,L=v.length;D<L;D++){var a=v[D],b=new t;b.generatedLine=a.generatedLine;b.generatedColumn=a.generatedColumn;a.source&&(b.source=n.indexOf(a.source),b.originalLine=a.originalLine,b.originalColumn=a.originalColumn,a.name&&(b.name=g.indexOf(a.name)),G.push(b));z.push(b)}r(d.__originalMappings,f.compareByOriginalPositions);return d};p.prototype._version=3;Object.defineProperty(p.prototype,"sources",{get:function(){return this._sources.toArray().map(function(k){return f.computeSourceURL(this.sourceRoot,[m
[32m+[m[32mk,this._sourceMapURL)},this)}});p.prototype._parseMappings=function(k,u){for(var d=1,g=0,n=0,v=0,z=0,G=0,D=k.length,L=0,a={},b={},h=[],w=[],y,I,K,N,P;L<D;)if(";"===k.charAt(L))d++,L++,g=0;else if(","===k.charAt(L))L++;else{y=new t;y.generatedLine=d;for(N=L;N<D&&!this._charIsMappingSeparator(k,N);N++);I=k.slice(L,N);if(K=a[I])L+=I.length;else{for(K=[];L<N;)q.decode(k,L,b),P=b.value,L=b.rest,K.push(P);if(2===K.length)throw Error("Found a source, but no line and column");if(3===K.length)throw Error("Found a source and line, but no column");[m
[32m+[m[32ma[I]=K}y.generatedColumn=g+K[0];g=y.generatedColumn;1<K.length&&(y.source=z+K[1],z+=K[1],y.originalLine=n+K[2],n=y.originalLine,y.originalLine+=1,y.originalColumn=v+K[3],v=y.originalColumn,4<K.length&&(y.name=G+K[4],G+=K[4]));w.push(y);"number"===typeof y.originalLine&&h.push(y)}r(w,f.compareByGeneratedPositionsDeflated);this.__generatedMappings=w;r(h,f.compareByOriginalPositions);this.__originalMappings=h};p.prototype._findMapping=function(k,u,d,g,n,v){if(0>=k[d])throw new TypeError("Line must be greater than or equal to 1, got "+[m
[32m+[m[32mk[d]);if(0>k[g])throw new TypeError("Column must be greater than or equal to 0, got "+k[g]);return c.search(k,u,n,v)};p.prototype.computeColumnSpans=function(){for(var k=0;k<this._generatedMappings.length;++k){var u=this._generatedMappings[k];if(k+1<this._generatedMappings.length){var d=this._generatedMappings[k+1];if(u.generatedLine===d.generatedLine){u.lastGeneratedColumn=d.generatedColumn-1;continue}}u.lastGeneratedColumn=Infinity}};p.prototype.originalPositionFor=function(k){var u={generatedLine:f.getArg(k,[m
[32m+[m[32m"line"),generatedColumn:f.getArg(k,"column")};k=this._findMapping(u,this._generatedMappings,"generatedLine","generatedColumn",f.compareByGeneratedPositionsDeflated,f.getArg(k,"bias",e.GREATEST_LOWER_BOUND));if(0<=k&&(k=this._generatedMappings[k],k.generatedLine===u.generatedLine)){u=f.getArg(k,"source",null);null!==u&&(u=this._sources.at(u),u=f.computeSourceURL(this.sourceRoot,u,this._sourceMapURL));var d=f.getArg(k,"name",null);null!==d&&(d=this._names.at(d));return{source:u,line:f.getArg(k,"originalLine",[m
[32m+[m[32mnull),column:f.getArg(k,"originalColumn",null),name:d}}return{source:null,line:null,column:null,name:null}};p.prototype.hasContentsOfAllSources=function(){return this.sourcesContent?this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some(function(k){return null==k}):!1};p.prototype.sourceContentFor=function(k,u){if(!this.sourcesContent)return null;var d=k;null!=this.sourceRoot&&(d=f.relative(this.sourceRoot,d));if(this._sources.has(d))return this.sourcesContent[this._sources.indexOf(d)];[m
[32m+[m[32mvar g=this.sources,n;for(n=0;n<g.length;++n)if(g[n]==k)return this.sourcesContent[n];var v;if(null!=this.sourceRoot&&(v=f.urlParse(this.sourceRoot))){g=d.replace(/^file:\/\//,"");if("file"==v.scheme&&this._sources.has(g))return this.sourcesContent[this._sources.indexOf(g)];if((!v.path||"/"==v.path)&&this._sources.has("/"+d))return this.sourcesContent[this._sources.indexOf("/"+d)]}if(u)return null;throw Error('"'+d+'" is not in the SourceMap.');};p.prototype.generatedPositionFor=function(k){var u=[m
[32m+[m[32mf.getArg(k,"source");null!=this.sourceRoot&&(u=f.relative(this.sourceRoot,u));if(!this._sources.has(u))return{line:null,column:null,lastColumn:null};u=this._sources.indexOf(u);u={source:u,originalLine:f.getArg(k,"line"),originalColumn:f.getArg(k,"column")};k=this._findMapping(u,this._originalMappings,"originalLine","originalColumn",f.compareByOriginalPositions,f.getArg(k,"bias",e.GREATEST_LOWER_BOUND));return 0<=k&&(k=this._originalMappings[k],k.source===u.source)?{line:f.getArg(k,"generatedLine",[m
[32m+[m[32mnull),column:f.getArg(k,"generatedColumn",null),lastColumn:f.getArg(k,"lastGeneratedColumn",null)}:{line:null,column:null,lastColumn:null}};A.BasicSourceMapConsumer=p;m.prototype=Object.create(e.prototype);m.prototype.constructor=e;m.prototype._version=3;Object.defineProperty(m.prototype,"sources",{get:function(){for(var k=[],u=0;u<this._sections.length;u++)for(var d=0;d<this._sections[u].consumer.sources.length;d++)k.push(this._sections[u].consumer.sources[d]);return k}});m.prototype.originalPositionFor=[m
[32m+[m[32mfunction(k){var u={generatedLine:f.getArg(k,"line"),generatedColumn:f.getArg(k,"column")},d=c.search(u,this._sections,function(g,n){var v=g.generatedLine-n.generatedOffset.generatedLine;return v?v:g.generatedColumn-n.generatedOffset.generatedColumn});return(d=this._sections[d])?d.consumer.originalPositionFor({line:u.generatedLine-(d.generatedOffset.generatedLine-1),column:u.generatedColumn-(d.generatedOffset.generatedLine===u.generatedLine?d.generatedOffset.generatedColumn-1:0),bias:k.bias}):{source:null,[m
[32m+[m[32mline:null,column:null,name:null}};m.prototype.hasContentsOfAllSources=function(){return this._sections.every(function(k){return k.consumer.hasContentsOfAllSources()})};m.prototype.sourceContentFor=function(k,u){for(var d=0;d<this._sections.length;d++){var g=this._sections[d].consumer.sourceContentFor(k,!0);if(g)return g}if(u)return null;throw Error('"'+k+'" is not in the SourceMap.');};m.prototype.generatedPositionFor=function(k){for(var u=0;u<this._sections.length;u++){var d=this._sections[u];if(-1!==[m
[32m+[m[32md.consumer.sources.indexOf(f.getArg(k,"source"))){var g=d.consumer.generatedPositionFor(k);if(g)return{line:g.line+(d.generatedOffset.generatedLine-1),column:g.column+(d.generatedOffset.generatedLine===g.line?d.generatedOffset.generatedColumn-1:0)}}}return{line:null,column:null}};m.prototype._parseMappings=function(k,u){this.__generatedMappings=[];this.__originalMappings=[];for(var d=0;d<this._sections.length;d++)for(var g=this._sections[d],n=g.consumer._generatedMappings,v=0;v<n.length;v++){var z=[m
[32m+[m[32mn[v],G=g.consumer._sources.at(z.source);G=f.computeSourceURL(g.consumer.sourceRoot,G,this._sourceMapURL);this._sources.add(G);G=this._sources.indexOf(G);var D=null;z.name&&(D=g.consumer._names.at(z.name),this._names.add(D),D=this._names.indexOf(D));z={source:G,generatedLine:z.generatedLine+(g.generatedOffset.generatedLine-1),generatedColumn:z.generatedColumn+(g.generatedOffset.generatedLine===z.generatedLine?g.generatedOffset.generatedColumn-1:0),originalLine:z.originalLine,originalColumn:z.originalColumn,[m
[32m+[m[32mname:D};this.__generatedMappings.push(z);"number"===typeof z.originalLine&&this.__originalMappings.push(z)}r(this.__generatedMappings,f.compareByGeneratedPositionsDeflated);r(this.__originalMappings,f.compareByOriginalPositions)};A.IndexedSourceMapConsumer=m},{"./array-set":10,"./base64-vlq":11,"./binary-search":13,"./quick-sort":15,"./util":19}],17:[function(C,J,A){function e(c){c||(c={});this._file=t.getArg(c,"file",null);this._sourceRoot=t.getArg(c,"sourceRoot",null);this._skipValidation=t.getArg(c,[m
[32m+[m[32m"skipValidation",!1);this._sources=new m;this._names=new m;this._mappings=new f;this._sourcesContents=null}var p=C("./base64-vlq"),t=C("./util"),m=C("./array-set").ArraySet,f=C("./mapping-list").MappingList;e.prototype._version=3;e.fromSourceMap=function(c){var l=c.sourceRoot,q=new e({file:c.file,sourceRoot:l});c.eachMapping(function(r){var k={generated:{line:r.generatedLine,column:r.generatedColumn}};null!=r.source&&(k.source=r.source,null!=l&&(k.source=t.relative(l,k.source)),k.original={line:r.originalLine,[m
[32m+[m[32mcolumn:r.originalColumn},null!=r.name&&(k.name=r.name));q.addMapping(k)});c.sources.forEach(function(r){var k=r;null!==l&&(k=t.relative(l,r));q._sources.has(k)||q._sources.add(k);k=c.sourceContentFor(r);null!=k&&q.setSourceContent(r,k)});return q};e.prototype.addMapping=function(c){var l=t.getArg(c,"generated"),q=t.getArg(c,"original",null),r=t.getArg(c,"source",null);c=t.getArg(c,"name",null);this._skipValidation||this._validateMapping(l,q,r,c);null!=r&&(r=String(r),this._sources.has(r)||this._sources.add(r));[m
[32m+[m[32mnull!=c&&(c=String(c),this._names.has(c)||this._names.add(c));this._mappings.add({generatedLine:l.line,generatedColumn:l.column,originalLine:null!=q&&q.line,originalColumn:null!=q&&q.column,source:r,name:c})};e.prototype.setSourceContent=function(c,l){var q=c;null!=this._sourceRoot&&(q=t.relative(this._sourceRoot,q));null!=l?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[t.toSetString(q)]=l):this._sourcesContents&&(delete this._sourcesContents[t.toSetString(q)],[m
[32m+[m[32m0===Object.keys(this._sourcesContents).length&&(this._sourcesContents=null))};e.prototype.applySourceMap=function(c,l,q){var r=l;if(null==l){if(null==c.file)throw Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');r=c.file}var k=this._sourceRoot;null!=k&&(r=t.relative(k,r));var u=new m,d=new m;this._mappings.unsortedForEach(function(g){if(g.source===r&&null!=g.originalLine){var n=c.originalPositionFor({line:g.originalLine,[m
[32m+[m[32mcolumn:g.originalColumn});null!=n.source&&(g.source=n.source,null!=q&&(g.source=t.join(q,g.source)),null!=k&&(g.source=t.relative(k,g.source)),g.originalLine=n.line,g.originalColumn=n.column,null!=n.name&&(g.name=n.name))}n=g.source;null==n||u.has(n)||u.add(n);g=g.name;null==g||d.has(g)||d.add(g)},this);this._sources=u;this._names=d;c.sources.forEach(function(g){var n=c.sourceContentFor(g);null!=n&&(null!=q&&(g=t.join(q,g)),null!=k&&(g=t.relative(k,g)),this.setSourceContent(g,n))},this)};e.prototype._validateMapping=[m
[32m+[m[32mfunction(c,l,q,r){if(l&&"number"!==typeof l.line&&"number"!==typeof l.column)throw Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");if(!(c&&"line"in c&&"column"in c&&0<c.line&&0<=c.column&&!l&&!q&&!r||c&&"line"in c&&"column"in c&&l&&"line"in l&&"column"in l&&0<c.line&&0<=c.column&&0<l.line&&0<=l.column&&[m
[32m+[m[32mq))throw Error("Invalid mapping: "+JSON.stringify({generated:c,source:q,original:l,name:r}));};e.prototype._serializeMappings=function(){for(var c=0,l=1,q=0,r=0,k=0,u=0,d="",g,n,v,z=this._mappings.toArray(),G=0,D=z.length;G<D;G++){n=z[G];g="";if(n.generatedLine!==l)for(c=0;n.generatedLine!==l;)g+=";",l++;else if(0<G){if(!t.compareByGeneratedPositionsInflated(n,z[G-1]))continue;g+=","}g+=p.encode(n.generatedColumn-c);c=n.generatedColumn;null!=n.source&&(v=this._sources.indexOf(n.source),g+=p.encode(v-[m
[32m+[m[32mu),u=v,g+=p.encode(n.originalLine-1-r),r=n.originalLine-1,g+=p.encode(n.originalColumn-q),q=n.originalColumn,null!=n.name&&(n=this._names.indexOf(n.name),g+=p.encode(n-k),k=n));d+=g}return d};e.prototype._generateSourcesContent=function(c,l){return c.map(function(q){if(!this._sourcesContents)return null;null!=l&&(q=t.relative(l,q));q=t.toSetString(q);return Object.prototype.hasOwnProperty.call(this._sourcesContents,q)?this._sourcesContents[q]:null},this)};e.prototype.toJSON=function(){var c={version:this._version,[m
[32m+[m[32msources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};null!=this._file&&(c.file=this._file);null!=this._sourceRoot&&(c.sourceRoot=this._sourceRoot);this._sourcesContents&&(c.sourcesContent=this._generateSourcesContent(c.sources,c.sourceRoot));return c};e.prototype.toString=function(){return JSON.stringify(this.toJSON())};A.SourceMapGenerator=e},{"./array-set":10,"./base64-vlq":11,"./mapping-list":14,"./util":19}],18:[function(C,J,A){function e(f,c,l,q,r){this.children=[m
[32m+[m[32m[];this.sourceContents={};this.line=null==f?null:f;this.column=null==c?null:c;this.source=null==l?null:l;this.name=null==r?null:r;this.$$$isSourceNode$$$=!0;null!=q&&this.add(q)}var p=C("./source-map-generator").SourceMapGenerator,t=C("./util"),m=/(\r?\n)/;e.fromStringWithSourceMap=function(f,c,l){function q(z,G){if(null===z||void 0===z.source)r.add(G);else{var D=l?t.join(l,z.source):z.source;r.add(new e(z.originalLine,z.originalColumn,D,G,z.name))}}var r=new e,k=f.split(m),u=0,d=function(){var z=[m
[32m+[m[32mu<k.length?k[u++]:void 0,G=(u<k.length?k[u++]:void 0)||"";return z+G},g=1,n=0,v=null;c.eachMapping(function(z){if(null!==v)if(g<z.generatedLine)q(v,d()),g++,n=0;else{var G=k[u]||"",D=G.substr(0,z.generatedColumn-n);k[u]=G.substr(z.generatedColumn-n);n=z.generatedColumn;q(v,D);v=z;return}for(;g<z.generatedLine;)r.add(d()),g++;n<z.generatedColumn&&(G=k[u]||"",r.add(G.substr(0,z.generatedColumn)),k[u]=G.substr(z.generatedColumn),n=z.generatedColumn);v=z},this);u<k.length&&(v&&q(v,d()),r.add(k.splice(u).join("")));[m
[32m+[m[32mc.sources.forEach(function(z){var G=c.sourceContentFor(z);null!=G&&(null!=l&&(z=t.join(l,z)),r.setSourceContent(z,G))});return r};e.prototype.add=function(f){if(Array.isArray(f))f.forEach(function(c){this.add(c)},this);else if(f.$$$isSourceNode$$$||"string"===typeof f)f&&this.children.push(f);else throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+f);return this};e.prototype.prepend=function(f){if(Array.isArray(f))for(var c=f.length-1;0<=c;c--)this.prepend(f[c]);[m
[32m+[m[32melse if(f.$$$isSourceNode$$$||"string"===typeof f)this.children.unshift(f);else throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+f);return this};e.prototype.walk=function(f){for(var c,l=0,q=this.children.length;l<q;l++)c=this.children[l],c.$$$isSourceNode$$$?c.walk(f):""!==c&&f(c,{source:this.source,line:this.line,column:this.column,name:this.name})};e.prototype.join=function(f){var c,l=this.children.length;if(0<l){var q=[];for(c=0;c<l-1;c++)q.push(this.children[c]),[m
[32m+[m[32mq.push(f);q.push(this.children[c]);this.children=q}return this};e.prototype.replaceRight=function(f,c){var l=this.children[this.children.length-1];l.$$$isSourceNode$$$?l.replaceRight(f,c):"string"===typeof l?this.children[this.children.length-1]=l.replace(f,c):this.children.push("".replace(f,c));return this};e.prototype.setSourceContent=function(f,c){this.sourceContents[t.toSetString(f)]=c};e.prototype.walkSourceContents=function(f){for(var c=0,l=this.children.length;c<l;c++)this.children[c].$$$isSourceNode$$$&&[m
[32m+[m[32mthis.children[c].walkSourceContents(f);var q=Object.keys(this.sourceContents);c=0;for(l=q.length;c<l;c++)f(t.fromSetString(q[c]),this.sourceContents[q[c]])};e.prototype.toString=function(){var f="";this.walk(function(c){f+=c});return f};e.prototype.toStringWithSourceMap=function(f){var c="",l=1,q=0,r=new p(f),k=!1,u=null,d=null,g=null,n=null;this.walk(function(v,z){c+=v;null!==z.source&&null!==z.line&&null!==z.column?(u===z.source&&d===z.line&&g===z.column&&n===z.name||r.addMapping({source:z.source,[m
[32m+[m[32moriginal:{line:z.line,column:z.column},generated:{line:l,column:q},name:z.name}),u=z.source,d=z.line,g=z.column,n=z.name,k=!0):k&&(r.addMapping({generated:{line:l,column:q}}),u=null,k=!1);for(var G=0,D=v.length;G<D;G++)10===v.charCodeAt(G)?(l++,q=0,G+1===D?(u=null,k=!1):k&&r.addMapping({source:z.source,original:{line:z.line,column:z.column},generated:{line:l,column:q},name:z.name})):q++});this.walkSourceContents(function(v,z){r.setSourceContent(v,z)});return{code:c,map:r}};A.SourceNode=e},{"./source-map-generator":17,[m
[32m+[m[32m"./util":19}],19:[function(C,J,A){function e(d){return(d=d.match(k))?{scheme:d[1],auth:d[2],host:d[3],port:d[4],path:d[5]}:null}function p(d){var g="";d.scheme&&(g+=d.scheme+":");g+="//";d.auth&&(g+=d.auth+"@");d.host&&(g+=d.host);d.port&&(g+=":"+d.port);d.path&&(g+=d.path);return g}function t(d){var g=d,n=e(d);if(n){if(!n.path)return d;g=n.path}d=A.isAbsolute(g);g=g.split(/\/+/);for(var v,z=0,G=g.length-1;0<=G;G--)v=g[G],"."===v?g.splice(G,1):".."===v?z++:0<z&&(""===v?(g.splice(G+1,z),z=0):(g.splice(G,[m
[32m+[m[32m2),z--));g=g.join("/");""===g&&(g=d?"/":".");return n?(n.path=g,p(n)):g}function m(d,g){""===d&&(d=".");""===g&&(g=".");var n=e(g),v=e(d);v&&(d=v.path||"/");if(n&&!n.scheme)return v&&(n.scheme=v.scheme),p(n);if(n||g.match(u))return g;if(v&&!v.host&&!v.path)return v.host=g,p(v);n="/"===g.charAt(0)?g:t(d.replace(/\/+$/,"")+"/"+g);return v?(v.path=n,p(v)):n}function f(d){return d}function c(d){return q(d)?"$"+d:d}function l(d){return q(d)?d.slice(1):d}function q(d){if(!d)return!1;var g=d.length;if(9>[m
[32m+[m[32mg||95!==d.charCodeAt(g-1)||95!==d.charCodeAt(g-2)||111!==d.charCodeAt(g-3)||116!==d.charCodeAt(g-4)||111!==d.charCodeAt(g-5)||114!==d.charCodeAt(g-6)||112!==d.charCodeAt(g-7)||95!==d.charCodeAt(g-8)||95!==d.charCodeAt(g-9))return!1;for(g-=10;0<=g;g--)if(36!==d.charCodeAt(g))return!1;return!0}function r(d,g){return d===g?0:null===d?1:null===g?-1:d>g?1:-1}A.getArg=function(d,g,n){if(g in d)return d[g];if(3===arguments.length)return n;throw Error('"'+g+'" is a required argument.');};var k=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/,[m
[32m+[m[32mu=/^data:.+,.+$/;A.urlParse=e;A.urlGenerate=p;A.normalize=t;A.join=m;A.isAbsolute=function(d){return"/"===d.charAt(0)||k.test(d)};A.relative=function(d,g){""===d&&(d=".");d=d.replace(/\/$/,"");for(var n=0;0!==g.indexOf(d+"/");){var v=d.lastIndexOf("/");if(0>v)return g;d=d.slice(0,v);if(d.match(/^([^\/]+:\/)?\/*$/))return g;++n}return Array(n+1).join("../")+g.substr(d.length+1)};C=!("__proto__"in Object.create(null));A.toSetString=C?f:c;A.fromSetString=C?f:l;A.compareByOriginalPositions=function(d,[m
[32m+[m[32mg,n){var v=r(d.source,g.source);if(0!==v)return v;v=d.originalLine-g.originalLine;if(0!==v)return v;v=d.originalColumn-g.originalColumn;if(0!==v||n)return v;v=d.generatedColumn-g.generatedColumn;if(0!==v)return v;v=d.generatedLine-g.generatedLine;return 0!==v?v:r(d.name,g.name)};A.compareByGeneratedPositionsDeflated=function(d,g,n){var v=d.generatedLine-g.generatedLine;if(0!==v)return v;v=d.generatedColumn-g.generatedColumn;if(0!==v||n)return v;v=r(d.source,g.source);if(0!==v)return v;v=d.originalLine-[m
[32m+[m[32mg.originalLine;if(0!==v)return v;v=d.originalColumn-g.originalColumn;return 0!==v?v:r(d.name,g.name)};A.compareByGeneratedPositionsInflated=function(d,g){var n=d.generatedLine-g.generatedLine;if(0!==n)return n;n=d.generatedColumn-g.generatedColumn;if(0!==n)return n;n=r(d.source,g.source);if(0!==n)return n;n=d.originalLine-g.originalLine;if(0!==n)return n;n=d.originalColumn-g.originalColumn;return 0!==n?n:r(d.name,g.name)};A.parseSourceMapInput=function(d){return JSON.parse(d.replace(/^\)]}'[^\n]*\n/,[m
[32m+[m[32m""))};A.computeSourceURL=function(d,g,n){g=g||"";d&&("/"!==d[d.length-1]&&"/"!==g[0]&&(d+="/"),g=d+g);if(n){d=e(n);if(!d)throw Error("sourceMapURL could not be parsed");d.path&&(n=d.path.lastIndexOf("/"),0<=n&&(d.path=d.path.substring(0,n+1)));g=m(p(d),g)}return t(g)}},{}],20:[function(C,J,A){A.SourceMapGenerator=C("./lib/source-map-generator").SourceMapGenerator;A.SourceMapConsumer=C("./lib/source-map-consumer").SourceMapConsumer;A.SourceNode=C("./lib/source-node").SourceNode},{"./lib/source-map-consumer":16,[m
[32m+[m[32m"./lib/source-map-generator":17,"./lib/source-node":18}],21:[function(C,J,A){(function(e){function p(){return"browser"===a?!0:"node"===a?!1:"undefined"!==typeof window&&"function"===typeof XMLHttpRequest&&!(window.require&&window.module&&window.process&&"renderer"===window.process.type)}function t(x){return function(B){for(var F=0;F<x.length;F++){var E=x[F](B);if(E)return E}return null}}function m(x,B){if(!x)return B;var F=n.dirname(x),E=/^\w+:\/\/[^\/]*/.exec(F);E=E?E[0]:"";var H=F.slice(E.length);[m
[32m+[m[32mreturn E&&/^\/\w:/.test(H)?(E+="/",E+n.resolve(F.slice(E.length),B).replace(/\\/g,"/")):E+n.resolve(F.slice(E.length),B)}function f(x){var B=h[x.source];if(!B){var F=N(x.source);F?(B=h[x.source]={url:F.url,map:new g(F.map)},B.map.sourcesContent&&B.map.sources.forEach(function(E,H){var M=B.map.sourcesContent[H];if(M){var S=m(B.url,E);b[S]=M}})):B=h[x.source]={url:null,map:null}}return B&&B.map&&"function"===typeof B.map.originalPositionFor&&(F=B.map.originalPositionFor(x),null!==F.source)?(F.source=[m
[32m+[m[32mm(B.url,F.source),F):x}function c(x){var B=/^eval at ([^(]+) \((.+):(\d+):(\d+)\)$/.exec(x);return B?(x=f({source:B[2],line:+B[3],column:B[4]-1}),"eval at "+B[1]+" ("+x.source+":"+x.line+":"+(x.column+1)+")"):(B=/^eval at ([^(]+) \((.+)\)$/.exec(x))?"eval at "+B[1]+" ("+c(B[2])+")":x}function l(){var x="";if(this.isNative())x="native";else{var B=this.getScriptNameOrSourceURL();!B&&this.isEval()&&(x=this.getEvalOrigin(),x+=", ");x=B?x+B:x+"<anonymous>";B=this.getLineNumber();null!=B&&(x+=":"+B,(B=[m
[32m+[m[32mthis.getColumnNumber())&&(x+=":"+B))}B="";var F=this.getFunctionName(),E=!0,H=this.isConstructor();if(this.isToplevel()||H)H?B+="new "+(F||"<anonymous>"):F?B+=F:(B+=x,E=!1);else{H=this.getTypeName();"[object Object]"===H&&(H="null");var M=this.getMethodName();F?(H&&0!=F.indexOf(H)&&(B+=H+"."),B+=F,M&&F.indexOf("."+M)!=F.length-M.length-1&&(B+=" [as "+M+"]")):B+=H+"."+(M||"<anonymous>")}E&&(B+=" ("+x+")");return B}function q(x){var B={};Object.getOwnPropertyNames(Object.getPrototypeOf(x)).forEach(function(F){B[F]=[m
[32m+[m[32m/^(?:is|get)/.test(F)?function(){return x[F].call(x)}:x[F]});B.toString=l;return B}function r(x,B){void 0===B&&(B={nextPosition:null,curPosition:null});if(x.isNative())return B.curPosition=null,x;var F=x.getFileName()||x.getScriptNameOrSourceURL();if(F){var E=x.getLineNumber(),H=x.getColumnNumber()-1,M=/^v(10\.1[6-9]|10\.[2-9][0-9]|10\.[0-9]{3,}|1[2-9]\d*|[2-9]\d|\d{3,}|11\.11)/,S=M.test;var V="object"===typeof e&&null!==e?e.version:"";M=S.call(M,V)?0:62;1===E&&H>M&&!p()&&!x.isEval()&&(H-=M);var O=[m
[32m+[m[32mf({source:F,line:E,column:H});B.curPosition=O;x=q(x);var T=x.getFunctionName;x.getFunctionName=function(){return null==B.nextPosition?T():B.nextPosition.name||T()};x.getFileName=function(){return O.source};x.getLineNumber=function(){return O.line};x.getColumnNumber=function(){return O.column+1};x.getScriptNameOrSourceURL=function(){return O.source};return x}var Q=x.isEval()&&x.getEvalOrigin();Q&&(Q=c(Q),x=q(x),x.getEvalOrigin=function(){return Q});return x}function k(x,B){L&&(b={},h={});for(var F=[m
[32m+[m[32m(x.name||"Error")+": "+(x.message||""),E={nextPosition:null,curPosition:null},H=[],M=B.length-1;0<=M;M--)H.push("\n    at "+r(B[M],E)),E.nextPosition=E.curPosition;E.curPosition=E.nextPosition=null;return F+H.reverse().join("")}function u(x){var B=/\n    at [^(]+ \((.*):(\d+):(\d+)\)/.exec(x.stack);if(B){x=B[1];var F=+B[2];B=+B[3];var E=b[x];if(!E&&v&&v.existsSync(x))try{E=v.readFileSync(x,"utf8")}catch(H){E=""}if(E&&(E=E.split(/(?:\r\n|\r|\n)/)[F-1]))return x+":"+F+"\n"+E+"\n"+Array(B).join(" ")+[m
[32m+[m[32m"^"}return null}function d(){var x=e.emit;e.emit=function(B){if("uncaughtException"===B){var F=arguments[1]&&arguments[1].stack,E=0<this.listeners(B).length;if(F&&!E){F=arguments[1];E=u(F);var H="object"===typeof e&&null!==e?e.stderr:void 0;H&&H._handle&&H._handle.setBlocking&&H._handle.setBlocking(!0);E&&(console.error(),console.error(E));console.error(F.stack);"object"===typeof e&&null!==e&&"function"===typeof e.exit&&e.exit(1);return}}return x.apply(this,arguments)}}var g=C("source-map").SourceMapConsumer,[m
[32m+[m[32mn=C("path");try{var v=C("fs");v.existsSync&&v.readFileSync||(v=null)}catch(x){}var z=C("buffer-from"),G=!1,D=!1,L=!1,a="auto",b={},h={},w=/^data:application\/json[^,]+base64,/,y=[],I=[],K=t(y);y.push(function(x){x=x.trim();/^file:/.test(x)&&(x=x.replace(/file:\/\/\/(\w:)?/,function(E,H){return H?"":"/"}));if(x in b)return b[x];var B="";try{if(v)v.existsSync(x)&&(B=v.readFileSync(x,"utf8"));else{var F=new XMLHttpRequest;F.open("GET",x,!1);F.send(null);4===F.readyState&&200===F.status&&(B=F.responseText)}}catch(E){}return b[x]=[m
[32m+[m[32mB});var N=t(I);I.push(function(x){a:{if(p())try{var B=new XMLHttpRequest;B.open("GET",x,!1);B.send(null);var F=B.getResponseHeader("SourceMap")||B.getResponseHeader("X-SourceMap");if(F){var E=F;break a}}catch(M){}E=K(x);B=/(?:\/\/[@#][\s]*sourceMappingURL=([^\s'"]+)[\s]*$)|(?:\/\*[@#][\s]*sourceMappingURL=([^\s*'"]+)[\s]*(?:\*\/)[\s]*$)/mg;for(var H;F=B.exec(E);)H=F;E=H?H[1]:null}if(!E)return null;w.test(E)?(H=E.slice(E.indexOf(",")+1),H=z(H,"base64").toString(),E=x):(E=m(x,E),H=K(E));return H?{url:E,[m
[32m+[m[32mmap:H}:null});var P=y.slice(0),W=I.slice(0);A.wrapCallSite=r;A.getErrorSource=u;A.mapSourcePosition=f;A.retrieveSourceMap=N;A.install=function(x){x=x||{};if(x.environment&&(a=x.environment,-1===["node","browser","auto"].indexOf(a)))throw Error("environment "+a+" was unknown. Available options are {auto, browser, node}");x.retrieveFile&&(x.overrideRetrieveFile&&(y.length=0),y.unshift(x.retrieveFile));x.retrieveSourceMap&&(x.overrideRetrieveSourceMap&&(I.length=0),I.unshift(x.retrieveSourceMap));if(x.hookRequire&&[m
[32m+[m[32m!p()){var B=J.require("module"),F=B.prototype._compile;F.__sourceMapSupport||(B.prototype._compile=function(E,H){b[H]=E;h[H]=void 0;return F.call(this,E,H)},B.prototype._compile.__sourceMapSupport=!0)}L||(L="emptyCacheBetweenOperations"in x?x.emptyCacheBetweenOperations:!1);G||(G=!0,Error.prepareStackTrace=k);if(!D){x="handleUncaughtExceptions"in x?x.handleUncaughtExceptions:!0;try{!1===J.require("worker_threads").isMainThread&&(x=!1)}catch(E){}x&&"object"===typeof e&&null!==e&&"function"===typeof e.on&&[m
[32m+[m[32m(D=!0,d())}};A.resetRetrieveHandlers=function(){y.length=0;I.length=0;y=P.slice(0);I=W.slice(0);N=t(I);K=t(y)}}).call(this,C("g5I+bs"))},{"buffer-from":4,fs:3,"g5I+bs":9,path:8,"source-map":20}]},{},[1]);return R});[m
[1mdiff --git a/node_modules/@cspotcode/source-map-support/package.json b/node_modules/@cspotcode/source-map-support/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..a3ef65c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@cspotcode/source-map-support/package.json[m
[36m@@ -0,0 +1,50 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "@cspotcode/source-map-support",[m
[32m+[m[32m  "description": "Fixes stack traces for files with source maps",[m
[32m+[m[32m  "version": "0.8.1",[m
[32m+[m[32m  "main": "./source-map-support.js",[m
[32m+[m[32m  "types": "./source-map-support.d.ts",[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "build": "node build.js",[m
[32m+[m[32m    "serve-tests": "http-server -p 1336",[m
[32m+[m[32m    "test": "mocha"[m
[32m+[m[32m  },[m
[32m+[m[32m  "files": [[m
[32m+[m[32m    "/register.d.ts",[m
[32m+[m[32m    "/register.js",[m
[32m+[m[32m    "/register-hook-require.d.ts",[m
[32m+[m[32m    "/register-hook-require.js",[m
[32m+[m[32m    "/source-map-support.d.ts",[m
[32m+[m[32m    "/source-map-support.js",[m
[32m+[m[32m    "/browser-source-map-support.js"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "dependencies": {[m
[32m+[m[32m    "@jridgewell/trace-mapping": "0.3.9"[m
[32m+[m[32m  },[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "@types/lodash": "^4.14.182",[m
[32m+[m[32m    "browserify": "^4.2.3",[m
[32m+[m[32m    "coffeescript": "^1.12.7",[m
[32m+[m[32m    "http-server": "^0.11.1",[m
[32m+[m[32m    "lodash": "^4.17.21",[m
[32m+[m[32m    "mocha": "^3.5.3",[m
[32m+[m[32m    "semver": "^7.3.7",[m
[32m+[m[32m    "source-map": "0.6.1",[m
[32m+[m[32m    "webpack": "^1.15.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "https://github.com/cspotcode/node-source-map-support"[m
[32m+[m[32m  },[m
[32m+[m[32m  "bugs": {[m
[32m+[m[32m    "url": "https://github.com/cspotcode/node-source-map-support/issues"[m
[32m+[m[32m  },[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "engines": {[m
[32m+[m[32m    "node": ">=12"[m
[32m+[m[32m  },[m
[32m+[m[32m  "volta": {[m
[32m+[m[32m    "node": "16.11.0",[m
[32m+[m[32m    "npm": "7.24.2"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@cspotcode/source-map-support/register-hook-require.d.ts b/node_modules/@cspotcode/source-map-support/register-hook-require.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..a787e69[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@cspotcode/source-map-support/register-hook-require.d.ts[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m// tslint:disable:no-useless-files[m
[32m+[m
[32m+[m[32m// For following usage:[m
[32m+[m[32m//    import '@cspotcode/source-map-support/register-hook-require'[m
[32m+[m[32m// Instead of:[m
[32m+[m[32m//    import sourceMapSupport from '@cspotcode/source-map-support'[m
[32m+[m[32m//    sourceMapSupport.install({hookRequire: true})[m
[1mdiff --git a/node_modules/@cspotcode/source-map-support/register-hook-require.js b/node_modules/@cspotcode/source-map-support/register-hook-require.js[m
[1mnew file mode 100644[m
[1mindex 0000000..6bc12ab[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@cspotcode/source-map-support/register-hook-require.js[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mrequire('./').install({[m
[32m+[m[32m    hookRequire: true[m
[32m+[m[32m});[m
[1mdiff --git a/node_modules/@cspotcode/source-map-support/register.d.ts b/node_modules/@cspotcode/source-map-support/register.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..063cd7c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@cspotcode/source-map-support/register.d.ts[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m// tslint:disable:no-useless-files[m
[32m+[m
[32m+[m[32m// For following usage:[m
[32m+[m[32m//    import '@cspotcode/source-map-support/register'[m
[32m+[m[32m// Instead of:[m
[32m+[m[32m//    import sourceMapSupport from '@cspotcode/source-map-support'[m
[32m+[m[32m//    sourceMapSupport.install()[m
[1mdiff --git a/node_modules/@cspotcode/source-map-support/register.js b/node_modules/@cspotcode/source-map-support/register.js[m
[1mnew file mode 100644[m
[1mindex 0000000..4f68e67[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@cspotcode/source-map-support/register.js[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mrequire('./').install();[m
[1mdiff --git a/node_modules/@cspotcode/source-map-support/source-map-support.d.ts b/node_modules/@cspotcode/source-map-support/source-map-support.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..d8cb9d8[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@cspotcode/source-map-support/source-map-support.d.ts[m
[36m@@ -0,0 +1,76 @@[m
[32m+[m[32m// Type definitions for source-map-support 0.5[m
[32m+[m[32m// Project: https://github.com/evanw/node-source-map-support[m
[32m+[m[32m// Definitions by: Bart van der Schoor <https://github.com/Bartvds>[m
[32m+[m[32m//                 Jason Cheatham <https://github.com/jason0x43>[m
[32m+[m[32m//                 Alcedo Nathaniel De Guzman Jr <https://github.com/natealcedo>[m
[32m+[m[32m//                 Griffin Yourick <https://github.com/tough-griff>[m
[32m+[m[32m// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped[m
[32m+[m
[32m+[m[32mexport interface RawSourceMap {[m
[32m+[m[32m    version: 3;[m
[32m+[m[32m    sources: string[];[m
[32m+[m[32m    names: string[];[m
[32m+[m[32m    sourceRoot?: string;[m
[32m+[m[32m    sourcesContent?: string[];[m
[32m+[m[32m    mappings: string;[m
[32m+[m[32m    file: string;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Output of retrieveSourceMap().[m
[32m+[m[32m * From source-map-support:[m
[32m+[m[32m *   The map field may be either a string or the parsed JSON object (i.e.,[m
[32m+[m[32m *   it must be a valid argument to the SourceMapConsumer constructor).[m
[32m+[m[32m */[m
[32m+[m[32mexport interface UrlAndMap {[m
[32m+[m[32m    url: string;[m
[32m+[m[32m    map: string | RawSourceMap;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Options to install().[m
[32m+[m[32m */[m
[32m+[m[32mexport interface Options {[m
[32m+[m[32m    handleUncaughtExceptions?: boolean | undefined;[m
[32m+[m[32m    hookRequire?: boolean | undefined;[m
[32m+[m[32m    emptyCacheBetweenOperations?: boolean | undefined;[m
[32m+[m[32m    environment?: 'auto' | 'browser' | 'node' | undefined;[m
[32m+[m[32m    overrideRetrieveFile?: boolean | undefined;[m
[32m+[m[32m    overrideRetrieveSourceMap?: boolean | undefined;[m
[32m+[m[32m    retrieveFile?(path: string): string;[m
[32m+[m[32m    retrieveSourceMap?(source: string): UrlAndMap | null;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Set false to disable redirection of require / import `source-map-support` to `@cspotcode/source-map-support`[m
[32m+[m[32m     */[m
[32m+[m[32m    redirectConflictingLibrary?: boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Callback will be called every time we redirect due to `redirectConflictingLibrary`[m
[32m+[m[32m     * This allows consumers to log helpful warnings if they choose.[m
[32m+[m[32m     * @param parent NodeJS.Module which made the require() or require.resolve() call[m
[32m+[m[32m     * @param options options object internally passed to node's `_resolveFilename` hook[m
[32m+[m[32m     */[m
[32m+[m[32m    onConflictingLibraryRedirect?: (request: string, parent: any, isMain: boolean, options: any, redirectedRequest: string) => void;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport interface Position {[m
[32m+[m[32m    source: string;[m
[32m+[m[32m    line: number;[m
[32m+[m[32m    column: number;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport function wrapCallSite(frame: any /* StackFrame */): any /* StackFrame */;[m
[32m+[m[32mexport function getErrorSource(error: Error): string | null;[m
[32m+[m[32mexport function mapSourcePosition(position: Position): Position;[m
[32m+[m[32mexport function retrieveSourceMap(source: string): UrlAndMap | null;[m
[32m+[m[32mexport function resetRetrieveHandlers(): void;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Install SourceMap support.[m
[32m+[m[32m * @param options Can be used to e.g. disable uncaughtException handler.[m
[32m+[m[32m */[m
[32m+[m[32mexport function install(options?: Options): void;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Uninstall SourceMap support.[m
[32m+[m[32m */[m
[32m+[m[32mexport function uninstall(): void;[m
[1mdiff --git a/node_modules/@cspotcode/source-map-support/source-map-support.js b/node_modules/@cspotcode/source-map-support/source-map-support.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ad830b6[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@cspotcode/source-map-support/source-map-support.js[m
[36m@@ -0,0 +1,938 @@[m
[32m+[m[32mconst { TraceMap, originalPositionFor, AnyMap } = require('@jridgewell/trace-mapping');[m
[32m+[m[32mvar path = require('path');[m
[32m+[m[32mconst { fileURLToPath, pathToFileURL } = require('url');[m
[32m+[m[32mvar util = require('util');[m
[32m+[m
[32m+[m[32mvar fs;[m
[32m+[m[32mtry {[m
[32m+[m[32m  fs = require('fs');[m
[32m+[m[32m  if (!fs.existsSync || !fs.readFileSync) {[m
[32m+[m[32m    // fs doesn't have all methods we need[m
[32m+[m[32m    fs = null;[m
[32m+[m[32m  }[m
[32m+[m[32m} catch (err) {[m
[32m+[m[32m  /* nop */[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Requires a module which is protected against bundler minification.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {NodeModule} mod[m
[32m+[m[32m * @param {string} request[m
[32m+[m[32m */[m
[32m+[m[32mfunction dynamicRequire(mod, request) {[m
[32m+[m[32m  return mod.require(request);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @typedef {{[m
[32m+[m[32m *   enabled: boolean;[m
[32m+[m[32m *   originalValue: any;[m
[32m+[m[32m *   installedValue: any;[m
[32m+[m[32m * }} HookState[m
[32m+[m[32m * Used for installing and uninstalling hooks[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m// Increment this if the format of sharedData changes in a breaking way.[m
[32m+[m[32mvar sharedDataVersion = 1;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @template T[m
[32m+[m[32m * @param {T} defaults[m
[32m+[m[32m * @returns {T}[m
[32m+[m[32m */[m
[32m+[m[32mfunction initializeSharedData(defaults) {[m
[32m+[m[32m  var sharedDataKey = 'source-map-support/sharedData';[m
[32m+[m[32m  if (typeof Symbol !== 'undefined') {[m
[32m+[m[32m    sharedDataKey = Symbol.for(sharedDataKey);[m
[32m+[m[32m  }[m
[32m+[m[32m  var sharedData = this[sharedDataKey];[m
[32m+[m[32m  if (!sharedData) {[m
[32m+[m[32m    sharedData = { version: sharedDataVersion };[m
[32m+[m[32m    if (Object.defineProperty) {[m
[32m+[m[32m      Object.defineProperty(this, sharedDataKey, { value: sharedData });[m
[32m+[m[32m    } else {[m
[32m+[m[32m      this[sharedDataKey] = sharedData;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  if (sharedDataVersion !== sharedData.version) {[m
[32m+[m[32m    throw new Error("Multiple incompatible instances of source-map-support were loaded");[m
[32m+[m[32m  }[m
[32m+[m[32m  for (var key in defaults) {[m
[32m+[m[32m    if (!(key in sharedData)) {[m
[32m+[m[32m      sharedData[key] = defaults[key];[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return sharedData;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// If multiple instances of source-map-support are loaded into the same[m
[32m+[m[32m// context, they shouldn't overwrite each other.  By storing handlers, caches,[m
[32m+[m[32m// and other state on a shared object, different instances of[m
[32m+[m[32m// source-map-support can work together in a limited way. This does require[m
[32m+[m[32m// that future versions of source-map-support continue to support the fields on[m
[32m+[m[32m// this object. If this internal contract ever needs to be broken, increment[m
[32m+[m[32m// sharedDataVersion. (This version number is not the same as any of the[m
[32m+[m[32m// package's version numbers, which should reflect the *external* API of[m
[32m+[m[32m// source-map-support.)[m
[32m+[m[32mvar sharedData = initializeSharedData({[m
[32m+[m
[32m+[m[32m  // Only install once if called multiple times[m
[32m+[m[32m  // Remember how the environment looked before installation so we can restore if able[m
[32m+[m[32m  /** @type {HookState} */[m
[32m+[m[32m  errorPrepareStackTraceHook: undefined,[m
[32m+[m[32m  /** @type {HookState} */[m
[32m+[m[32m  processEmitHook: undefined,[m
[32m+[m[32m  /** @type {HookState} */[m
[32m+[m[32m  moduleResolveFilenameHook: undefined,[m
[32m+[m
[32m+[m[32m  /** @type {Array<(request: string, parent: any, isMain: boolean, options: any, redirectedRequest: string) => void>} */[m
[32m+[m[32m  onConflictingLibraryRedirectArr: [],[m
[32m+[m
[32m+[m[32m  // If true, the caches are reset before a stack trace formatting operation[m
[32m+[m[32m  emptyCacheBetweenOperations: false,[m
[32m+[m
[32m+[m[32m  // Maps a file path to a string containing the file contents[m
[32m+[m[32m  fileContentsCache: Object.create(null),[m
[32m+[m
[32m+[m[32m  // Maps a file path to a source map for that file[m
[32m+[m[32m  /** @type {Record<string, {url: string, map: TraceMap}} */[m
[32m+[m[32m  sourceMapCache: Object.create(null),[m
[32m+[m
[32m+[m[32m  // Priority list of retrieve handlers[m
[32m+[m[32m  retrieveFileHandlers: [],[m
[32m+[m[32m  retrieveMapHandlers: [],[m
[32m+[m
[32m+[m[32m  // Priority list of internally-implemented handlers.[m
[32m+[m[32m  // When resetting state, we must keep these.[m
[32m+[m[32m  internalRetrieveFileHandlers: [],[m
[32m+[m[32m  internalRetrieveMapHandlers: [],[m
[32m+[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m// Supports {browser, node, auto}[m
[32m+[m[32mvar environment = "auto";[m
[32m+[m
[32m+[m[32m// Regex for detecting source maps[m
[32m+[m[32mvar reSourceMap = /^data:application\/json[^,]+base64,/;[m
[32m+[m
[32m+[m[32mfunction isInBrowser() {[m
[32m+[m[32m  if (environment === "browser")[m
[32m+[m[32m    return true;[m
[32m+[m[32m  if (environment === "node")[m
[32m+[m[32m    return false;[m
[32m+[m[32m  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === "renderer"));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction hasGlobalProcessEventEmitter() {[m
[32m+[m[32m  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction tryFileURLToPath(v) {[m
[32m+[m[32m  if(isFileUrl(v)) {[m
[32m+[m[32m    return fileURLToPath(v);[m
[32m+[m[32m  }[m
[32m+[m[32m  return v;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// TODO un-copy these from resolve-uri; see if they can be exported from that lib[m
[32m+[m[32mfunction isFileUrl(input) {[m
[32m+[m[32m  return input.startsWith('file:');[m
[32m+[m[32m}[m
[32m+[m[32mfunction isAbsoluteUrl(input) {[m
[32m+[m[32m  return schemeRegex.test(input);[m
[32m+[m[32m}[m
[32m+[m[32m// Matches the scheme of a URL, eg "http://"[m
[32m+[m[32mconst schemeRegex = /^[\w+.-]+:\/\//;[m
[32m+[m[32mfunction isSchemeRelativeUrl(input) {[m
[32m+[m[32m  return input.startsWith('//');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// #region Caches[m
[32m+[m[32m/** @param {string} pathOrFileUrl */[m
[32m+[m[32mfunction getCacheKey(pathOrFileUrl) {[m
[32m+[m[32m  if(pathOrFileUrl.startsWith('node:')) return pathOrFileUrl;[m
[32m+[m[32m  if(isFileUrl(pathOrFileUrl)) {[m
[32m+[m[32m    // Must normalize spaces to %20, stuff like that[m
[32m+[m[32m    return new URL(pathOrFileUrl).toString();[m
[32m+[m[32m  } else {[m
[32m+[m[32m    try {[m
[32m+[m[32m      return pathToFileURL(pathOrFileUrl).toString();[m
[32m+[m[32m    } catch {[m
[32m+[m[32m      return pathOrFileUrl;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32mfunction getFileContentsCache(key) {[m
[32m+[m[32m  return sharedData.fileContentsCache[getCacheKey(key)];[m
[32m+[m[32m}[m
[32m+[m[32mfunction hasFileContentsCacheFromKey(key) {[m
[32m+[m[32m  return Object.prototype.hasOwnProperty.call(sharedData.fileContentsCache, key);[m
[32m+[m[32m}[m
[32m+[m[32mfunction getFileContentsCacheFromKey(key) {[m
[32m+[m[32m  return sharedData.fileContentsCache[key];[m
[32m+[m[32m}[m
[32m+[m[32mfunction setFileContentsCache(key, value) {[m
[32m+[m[32m  return sharedData.fileContentsCache[getCacheKey(key)] = value;[m
[32m+[m[32m}[m
[32m+[m[32mfunction getSourceMapCache(key) {[m
[32m+[m[32m  return sharedData.sourceMapCache[getCacheKey(key)];[m
[32m+[m[32m}[m
[32m+[m[32mfunction setSourceMapCache(key, value) {[m
[32m+[m[32m  return sharedData.sourceMapCache[getCacheKey(key)] = value;[m
[32m+[m[32m}[m
[32m+[m[32mfunction clearCaches() {[m
[32m+[m[32m  sharedData.fileContentsCache = Object.create(null);[m
[32m+[m[32m  sharedData.sourceMapCache = Object.create(null);[m
[32m+[m[32m}[m
[32m+[m[32m// #endregion Caches[m
[32m+[m
[32m+[m[32mfunction handlerExec(list, internalList) {[m
[32m+[m[32m  return function(arg) {[m
[32m+[m[32m    for (var i = 0; i < list.length; i++) {[m
[32m+[m[32m      var ret = list[i](arg);[m
[32m+[m[32m      if (ret) {[m
[32m+[m[32m        return ret;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    for (var i = 0; i < internalList.length; i++) {[m
[32m+[m[32m      var ret = internalList[i](arg);[m
[32m+[m[32m      if (ret) {[m
[32m+[m[32m        return ret;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar retrieveFile = handlerExec(sharedData.retrieveFileHandlers, sharedData.internalRetrieveFileHandlers);[m
[32m+[m
[32m+[m[32msharedData.internalRetrieveFileHandlers.push(function(path) {[m
[32m+[m[32m  // Trim the path to make sure there is no extra whitespace.[m
[32m+[m[32m  path = path.trim();[m
[32m+[m[32m  if (/^file:/.test(path)) {[m
[32m+[m[32m    // existsSync/readFileSync can't handle file protocol, but once stripped, it works[m
[32m+[m[32m    path = path.replace(/file:\/\/\/(\w:)?/, function(protocol, drive) {[m
[32m+[m[32m      return drive ?[m
[32m+[m[32m        '' : // file:///C:/dir/file -> C:/dir/file[m
[32m+[m[32m        '/'; // file:///root-dir/file -> /root-dir/file[m
[32m+[m[32m    });[m
[32m+[m[32m  }[m
[32m+[m[32m  const key = getCacheKey(path);[m
[32m+[m[32m  if(hasFileContentsCacheFromKey(key)) {[m
[32m+[m[32m    return getFileContentsCacheFromKey(key);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  var contents = '';[m
[32m+[m[32m  try {[m
[32m+[m[32m    if (!fs) {[m
[32m+[m[32m      // Use SJAX if we are in the browser[m
[32m+[m[32m      var xhr = new XMLHttpRequest();[m
[32m+[m[32m      xhr.open('GET', path, /** async */ false);[m
[32m+[m[32m      xhr.send(null);[m
[32m+[m[32m      if (xhr.readyState === 4 && xhr.status === 200) {[m
[32m+[m[32m        contents = xhr.responseText;[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if (fs.existsSync(path)) {[m
[32m+[m[32m      // Otherwise, use the filesystem[m
[32m+[m[32m      contents = fs.readFileSync(path, 'utf8');[m
[32m+[m[32m    }[m
[32m+[m[32m  } catch (er) {[m
[32m+[m[32m    /* ignore any errors */[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return setFileContentsCache(path, contents);[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m// Support URLs relative to a directory, but be careful about a protocol prefix[m
[32m+[m[32m// in case we are in the browser (i.e. directories may start with "http://" or "file:///")[m
[32m+[m[32mfunction supportRelativeURL(file, url) {[m
[32m+[m[32m  if(!file) return url;[m
[32m+[m[32m  // given that this happens within error formatting codepath, probably best to[m
[32m+[m[32m  // fallback instead of throwing if anything goes wrong[m
[32m+[m[32m  try {[m
[32m+[m[32m    // if should output a URL[m
[32m+[m[32m    if(isAbsoluteUrl(file) || isSchemeRelativeUrl(file)) {[m
[32m+[m[32m        if(isAbsoluteUrl(url) || isSchemeRelativeUrl(url)) {[m
[32m+[m[32m            return new URL(url, file).toString();[m
[32m+[m[32m        }[m
[32m+[m[32m        if(path.isAbsolute(url)) {[m
[32m+[m[32m            return new URL(pathToFileURL(url), file).toString();[m
[32m+[m[32m        }[m
[32m+[m[32m        // url is relative path or URL[m
[32m+[m[32m        return new URL(url.replace(/\\/g, '/'), file).toString();[m
[32m+[m[32m    }[m
[32m+[m[32m    // if should output a path (unless URL is something like https://)[m
[32m+[m[32m    if(path.isAbsolute(file)) {[m
[32m+[m[32m        if(isFileUrl(url)) {[m
[32m+[m[32m            return fileURLToPath(url);[m
[32m+[m[32m        }[m
[32m+[m[32m        if(isSchemeRelativeUrl(url)) {[m
[32m+[m[32m            return fileURLToPath(new URL(url, 'file://'));[m
[32m+[m[32m        }[m
[32m+[m[32m        if(isAbsoluteUrl(url)) {[m
[32m+[m[32m            // url is a non-file URL[m
[32m+[m[32m            // Go with the URL[m
[32m+[m[32m            return url;[m
[32m+[m[32m        }[m
[32m+[m[32m        if(path.isAbsolute(url)) {[m
[32m+[m[32m            // Normalize at all?  decodeURI or normalize slashes?[m
[32m+[m[32m            return path.normalize(url);[m
[32m+[m[32m        }[m
[32m+[m[32m        // url is relative path or URL[m
[32m+[m[32m        return path.join(file, '..', decodeURI(url));[m
[32m+[m[32m    }[m
[32m+[m[32m    // If we get here, file is relative.[m
[32m+[m[32m    // Shouldn't happen since node identifies modules with absolute paths or URLs.[m
[32m+[m[32m    // But we can take a stab at returning something meaningful anyway.[m
[32m+[m[32m    if(isAbsoluteUrl(url) || isSchemeRelativeUrl(url)) {[m
[32m+[m[32m        return url;[m
[32m+[m[32m    }[m
[32m+[m[32m    return path.join(file, '..', url);[m
[32m+[m[32m  } catch(e) {[m
[32m+[m[32m      return url;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Return pathOrUrl in the same style as matchStyleOf: either a file URL or a native path[m
[32m+[m[32mfunction matchStyleOfPathOrUrl(matchStyleOf, pathOrUrl) {[m
[32m+[m[32m  try {[m
[32m+[m[32m    if(isAbsoluteUrl(matchStyleOf) || isSchemeRelativeUrl(matchStyleOf)) {[m
[32m+[m[32m      if(isAbsoluteUrl(pathOrUrl) || isSchemeRelativeUrl(pathOrUrl)) return pathOrUrl;[m
[32m+[m[32m      if(path.isAbsolute(pathOrUrl)) return pathToFileURL(pathOrUrl).toString();[m
[32m+[m[32m    } else if(path.isAbsolute(matchStyleOf)) {[m
[32m+[m[32m      if(isAbsoluteUrl(pathOrUrl) || isSchemeRelativeUrl(pathOrUrl)) {[m
[32m+[m[32m        return fileURLToPath(new URL(pathOrUrl, 'file://'));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return pathOrUrl;[m
[32m+[m[32m  } catch(e) {[m
[32m+[m[32m    return pathOrUrl;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction retrieveSourceMapURL(source) {[m
[32m+[m[32m  var fileData;[m
[32m+[m
[32m+[m[32m  if (isInBrowser()) {[m
[32m+[m[32m     try {[m
[32m+[m[32m       var xhr = new XMLHttpRequest();[m
[32m+[m[32m       xhr.open('GET', source, false);[m
[32m+[m[32m       xhr.send(null);[m
[32m+[m[32m       fileData = xhr.readyState === 4 ? xhr.responseText : null;[m
[32m+[m
[32m+[m[32m       // Support providing a sourceMappingURL via the SourceMap header[m
[32m+[m[32m       var sourceMapHeader = xhr.getResponseHeader("SourceMap") ||[m
[32m+[m[32m                             xhr.getResponseHeader("X-SourceMap");[m
[32m+[m[32m       if (sourceMapHeader) {[m
[32m+[m[32m         return sourceMapHeader;[m
[32m+[m[32m       }[m
[32m+[m[32m     } catch (e) {[m
[32m+[m[32m     }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Get the URL of the source map[m
[32m+[m[32m  fileData = retrieveFile(tryFileURLToPath(source));[m
[32m+[m[32m  var re = /(?:\/\/[@#][\s]*sourceMappingURL=([^\s'"]+)[\s]*$)|(?:\/\*[@#][\s]*sourceMappingURL=([^\s*'"]+)[\s]*(?:\*\/)[\s]*$)/mg;[m
[32m+[m[32m  // Keep executing the search to find the *last* sourceMappingURL to avoid[m
[32m+[m[32m  // picking up sourceMappingURLs from comments, strings, etc.[m
[32m+[m[32m  var lastMatch, match;[m
[32m+[m[32m  while (match = re.exec(fileData)) lastMatch = match;[m
[32m+[m[32m  if (!lastMatch) return null;[m
[32m+[m[32m  return lastMatch[1];[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m// Can be overridden by the retrieveSourceMap option to install. Takes a[m
[32m+[m[32m// generated source filename; returns a {map, optional url} object, or null if[m
[32m+[m[32m// there is no source map.  The map field may be either a string or the parsed[m
[32m+[m[32m// JSON object (ie, it must be a valid argument to the SourceMapConsumer[m
[32m+[m[32m// constructor).[m
[32m+[m[32m/** @type {(source: string) => import('./source-map-support').UrlAndMap | null} */[m
[32m+[m[32mvar retrieveSourceMap = handlerExec(sharedData.retrieveMapHandlers, sharedData.internalRetrieveMapHandlers);[m
[32m+[m[32msharedData.internalRetrieveMapHandlers.push(function(source) {[m
[32m+[m[32m  var sourceMappingURL = retrieveSourceMapURL(source);[m
[32m+[m[32m  if (!sourceMappingURL) return null;[m
[32m+[m
[32m+[m[32m  // Read the contents of the source map[m
[32m+[m[32m  var sourceMapData;[m
[32m+[m[32m  if (reSourceMap.test(sourceMappingURL)) {[m
[32m+[m[32m    // Support source map URL as a data url[m
[32m+[m[32m    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);[m
[32m+[m[32m    sourceMapData = Buffer.from(rawData, "base64").toString();[m
[32m+[m[32m    sourceMappingURL = source;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    // Support source map URLs relative to the source URL[m
[32m+[m[32m    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);[m
[32m+[m[32m    sourceMapData = retrieveFile(tryFileURLToPath(sourceMappingURL));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (!sourceMapData) {[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return {[m
[32m+[m[32m    url: sourceMappingURL,[m
[32m+[m[32m    map: sourceMapData[m
[32m+[m[32m  };[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mfunction mapSourcePosition(position) {[m
[32m+[m[32m  var sourceMap = getSourceMapCache(position.source);[m
[32m+[m[32m  if (!sourceMap) {[m
[32m+[m[32m    // Call the (overrideable) retrieveSourceMap function to get the source map.[m
[32m+[m[32m    var urlAndMap = retrieveSourceMap(position.source);[m
[32m+[m[32m    if (urlAndMap) {[m
[32m+[m[32m      sourceMap = setSourceMapCache(position.source, {[m
[32m+[m[32m        url: urlAndMap.url,[m
[32m+[m[32m        map: new AnyMap(urlAndMap.map, urlAndMap.url)[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m      // Overwrite trace-mapping's resolutions, because they do not handle[m
[32m+[m[32m      // Windows paths the way we want.[m
[32m+[m[32m      // TODO Remove now that windows path support was added to resolve-uri and thus trace-mapping?[m
[32m+[m[32m      sourceMap.map.resolvedSources = sourceMap.map.sources.map(s => supportRelativeURL(sourceMap.url, s));[m
[32m+[m
[32m+[m[32m      // Load all sources stored inline with the source map into the file cache[m
[32m+[m[32m      // to pretend like they are already loaded. They may not exist on disk.[m
[32m+[m[32m      if (sourceMap.map.sourcesContent) {[m
[32m+[m[32m        sourceMap.map.resolvedSources.forEach(function(resolvedSource, i) {[m
[32m+[m[32m          var contents = sourceMap.map.sourcesContent[i];[m
[32m+[m[32m          if (contents) {[m
[32m+[m[32m            setFileContentsCache(resolvedSource, contents);[m
[32m+[m[32m          }[m
[32m+[m[32m        });[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      sourceMap = setSourceMapCache(position.source, {[m
[32m+[m[32m        url: null,[m
[32m+[m[32m        map: null[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Resolve the source URL relative to the URL of the source map[m
[32m+[m[32m  if (sourceMap && sourceMap.map) {[m
[32m+[m[32m    var originalPosition = originalPositionFor(sourceMap.map, position);[m
[32m+[m
[32m+[m[32m    // Only return the original position if a matching line was found. If no[m
[32m+[m[32m    // matching line is found then we return position instead, which will cause[m
[32m+[m[32m    // the stack trace to print the path and line for the compiled file. It is[m
[32m+[m[32m    // better to give a precise location in the compiled file than a vague[m
[32m+[m[32m    // location in the original file.[m
[32m+[m[32m    if (originalPosition.source !== null) {[m
[32m+[m[32m      // originalPosition.source has *already* been resolved against sourceMap.url[m
[32m+[m[32m      // so is *already* as absolute as possible.[m
[32m+[m[32m      // However, we want to ensure we output in same format as input: URL or native path[m
[32m+[m[32m      originalPosition.source = matchStyleOfPathOrUrl([m
[32m+[m[32m        position.source, originalPosition.source);[m
[32m+[m[32m      return originalPosition;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return position;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Parses code generated by FormatEvalOrigin(), a function inside V8:[m
[32m+[m[32m// https://code.google.com/p/v8/source/browse/trunk/src/messages.js[m
[32m+[m[32mfunction mapEvalOrigin(origin) {[m
[32m+[m[32m  // Most eval() calls are in this format[m
[32m+[m[32m  var match = /^eval at ([^(]+) \((.+):(\d+):(\d+)\)$/.exec(origin);[m
[32m+[m[32m  if (match) {[m
[32m+[m[32m    var position = mapSourcePosition({[m
[32m+[m[32m      source: match[2],[m
[32m+[m[32m      line: +match[3],[m
[32m+[m[32m      column: match[4] - 1[m
[32m+[m[32m    });[m
[32m+[m[32m    return 'eval at ' + match[1] + ' (' + position.source + ':' +[m
[32m+[m[32m      position.line + ':' + (position.column + 1) + ')';[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Parse nested eval() calls using recursion[m
[32m+[m[32m  match = /^eval at ([^(]+) \((.+)\)$/.exec(origin);[m
[32m+[m[32m  if (match) {[m
[32m+[m[32m    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Make sure we still return useful information if we didn't find anything[m
[32m+[m[32m  return origin;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// This is copied almost verbatim from the V8 source code at[m
[32m+[m[32m// https://code.google.com/p/v8/source/browse/trunk/src/messages.js[m
[32m+[m[32m// Update 2022-04-29:[m
[32m+[m[32m//    https://github.com/v8/v8/blob/98f6f100c5ab8e390e51422747c4ef644d5ac6f2/src/builtins/builtins-callsite.cc#L175-L179[m
[32m+[m[32m//    https://github.com/v8/v8/blob/98f6f100c5ab8e390e51422747c4ef644d5ac6f2/src/objects/call-site-info.cc#L795-L804[m
[32m+[m[32m//    https://github.com/v8/v8/blob/98f6f100c5ab8e390e51422747c4ef644d5ac6f2/src/objects/call-site-info.cc#L717-L750[m
[32m+[m[32m// The implementation of wrapCallSite() used to just forward to the actual source[m
[32m+[m[32m// code of CallSite.prototype.toString but unfortunately a new release of V8[m
[32m+[m[32m// did something to the prototype chain and broke the shim. The only fix I[m
[32m+[m[32m// could find was copy/paste.[m
[32m+[m[32mfunction CallSiteToString() {[m
[32m+[m[32m  var fileName;[m
[32m+[m[32m  var fileLocation = "";[m
[32m+[m[32m  if (this.isNative()) {[m
[32m+[m[32m    fileLocation = "native";[m
[32m+[m[32m  } else {[m
[32m+[m[32m    fileName = this.getScriptNameOrSourceURL();[m
[32m+[m[32m    if (!fileName && this.isEval()) {[m
[32m+[m[32m      fileLocation = this.getEvalOrigin();[m
[32m+[m[32m      fileLocation += ", ";  // Expecting source position to follow.[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (fileName) {[m
[32m+[m[32m      fileLocation += fileName;[m
[32m+[m[32m    } else {[m
[32m+[m[32m      // Source code does not originate from a file and is not native, but we[m
[32m+[m[32m      // can still get the source position inside the source string, e.g. in[m
[32m+[m[32m      // an eval string.[m
[32m+[m[32m      fileLocation += "<anonymous>";[m
[32m+[m[32m    }[m
[32m+[m[32m    var lineNumber = this.getLineNumber();[m
[32m+[m[32m    if (lineNumber != null) {[m
[32m+[m[32m      fileLocation += ":" + lineNumber;[m
[32m+[m[32m      var columnNumber = this.getColumnNumber();[m
[32m+[m[32m      if (columnNumber) {[m
[32m+[m[32m        fileLocation += ":" + columnNumber;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  var line = "";[m
[32m+[m[32m  var isAsync = this.isAsync ? this.isAsync() : false;[m
[32m+[m[32m  if(isAsync) {[m
[32m+[m[32m    line += 'async ';[m
[32m+[m[32m    var isPromiseAll = this.isPromiseAll ? this.isPromiseAll() : false;[m
[32m+[m[32m    var isPromiseAny = this.isPromiseAny ? this.isPromiseAny() : false;[m
[32m+[m[32m    if(isPromiseAny || isPromiseAll) {[m
[32m+[m[32m      line += isPromiseAll ? 'Promise.all (index ' : 'Promise.any (index ';[m
[32m+[m[32m      var promiseIndex = this.getPromiseIndex();[m
[32m+[m[32m      line += promiseIndex + ')';[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  var functionName = this.getFunctionName();[m
[32m+[m[32m  var addSuffix = true;[m
[32m+[m[32m  var isConstructor = this.isConstructor();[m
[32m+[m[32m  var isMethodCall = !(this.isToplevel() || isConstructor);[m
[32m+[m[32m  if (isMethodCall) {[m
[32m+[m[32m    var typeName = this.getTypeName();[m
[32m+[m[32m    // Fixes shim to be backward compatable with Node v0 to v4[m
[32m+[m[32m    if (typeName === "[object Object]") {[m
[32m+[m[32m      typeName = "null";[m
[32m+[m[32m    }[m
[32m+[m[32m    var methodName = this.getMethodName();[m
[32m+[m[32m    if (functionName) {[m
[32m+[m[32m      if (typeName && functionName.indexOf(typeName) != 0) {[m
[32m+[m[32m        line += typeName + ".";[m
[32m+[m[32m      }[m
[32m+[m[32m      line += functionName;[m
[32m+[m[32m      if (methodName && functionName.indexOf("." + methodName) != functionName.length - methodName.length - 1) {[m
[32m+[m[32m        line += " [as " + methodName + "]";[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      line += typeName + "." + (methodName || "<anonymous>");[m
[32m+[m[32m    }[m
[32m+[m[32m  } else if (isConstructor) {[m
[32m+[m[32m    line += "new " + (functionName || "<anonymous>");[m
[32m+[m[32m  } else if (functionName) {[m
[32m+[m[32m    line += functionName;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    line += fileLocation;[m
[32m+[m[32m    addSuffix = false;[m
[32m+[m[32m  }[m
[32m+[m[32m  if (addSuffix) {[m
[32m+[m[32m    line += " (" + fileLocation + ")";[m
[32m+[m[32m  }[m
[32m+[m[32m  return line;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction cloneCallSite(frame) {[m
[32m+[m[32m  var object = {};[m
[32m+[m[32m  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {[m
[32m+[m[32m    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];[m
[32m+[m[32m  });[m
[32m+[m[32m  object.toString = CallSiteToString;[m
[32m+[m[32m  return object;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction wrapCallSite(frame, state) {[m
[32m+[m[32m  // provides interface backward compatibility[m
[32m+[m[32m  if (state === undefined) {[m
[32m+[m[32m    state = { nextPosition: null, curPosition: null }[m
[32m+[m[32m  }[m
[32m+[m[32m  if(frame.isNative()) {[m
[32m+[m[32m    state.curPosition = null;[m
[32m+[m[32m    return frame;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Most call sites will return the source file from getFileName(), but code[m
[32m+[m[32m  // passed to eval() ending in "//# sourceURL=..." will return the source file[m
[32m+[m[32m  // from getScriptNameOrSourceURL() instead[m
[32m+[m[32m  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();[m
[32m+[m[32m  if (source) {[m
[32m+[m[32m    // v8 does not expose its internal isWasm, etc methods, so we do this instead.[m
[32m+[m[32m    if(source.startsWith('wasm://')) {[m
[32m+[m[32m      state.curPosition = null;[m
[32m+[m[32m      return frame;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    var line = frame.getLineNumber();[m
[32m+[m[32m    var column = frame.getColumnNumber() - 1;[m
[32m+[m
[32m+[m[32m    // Fix position in Node where some (internal) code is prepended.[m
[32m+[m[32m    // See https://github.com/evanw/node-source-map-support/issues/36[m
[32m+[m[32m    // Header removed in node at ^10.16 || >=11.11.0[m
[32m+[m[32m    // v11 is not an LTS candidate, we can just test the one version with it.[m
[32m+[m[32m    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11[m
[32m+[m[32m    var noHeader = /^v(10\.1[6-9]|10\.[2-9][0-9]|10\.[0-9]{3,}|1[2-9]\d*|[2-9]\d|\d{3,}|11\.11)/;[m
[32m+[m[32m    var headerLength = noHeader.test(process.version) ? 0 : 62;[m
[32m+[m[32m    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {[m
[32m+[m[32m      column -= headerLength;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    var position = mapSourcePosition({[m
[32m+[m[32m      source: source,[m
[32m+[m[32m      line: line,[m
[32m+[m[32m      column: column[m
[32m+[m[32m    });[m
[32m+[m[32m    state.curPosition = position;[m
[32m+[m[32m    frame = cloneCallSite(frame);[m
[32m+[m[32m    var originalFunctionName = frame.getFunctionName;[m
[32m+[m[32m    frame.getFunctionName = function() {[m
[32m+[m[32m      if (state.nextPosition == null) {[m
[32m+[m[32m        return originalFunctionName();[m
[32m+[m[32m      }[m
[32m+[m[32m      return state.nextPosition.name || originalFunctionName();[m
[32m+[m[32m    };[m
[32m+[m[32m    frame.getFileName = function() { return position.source; };[m
[32m+[m[32m    frame.getLineNumber = function() { return position.line; };[m
[32m+[m[32m    frame.getColumnNumber = function() { return position.column + 1; };[m
[32m+[m[32m    frame.getScriptNameOrSourceURL = function() { return position.source; };[m
[32m+[m[32m    return frame;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Code called using eval() needs special handling[m
[32m+[m[32m  var origin = frame.isEval() && frame.getEvalOrigin();[m
[32m+[m[32m  if (origin) {[m
[32m+[m[32m    origin = mapEvalOrigin(origin);[m
[32m+[m[32m    frame = cloneCallSite(frame);[m
[32m+[m[32m    frame.getEvalOrigin = function() { return origin; };[m
[32m+[m[32m    return frame;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // If we get here then we were unable to change the source position[m
[32m+[m[32m  return frame;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar kIsNodeError = undefined;[m
[32m+[m[32mtry {[m
[32m+[m[32m  // Get a deliberate ERR_INVALID_ARG_TYPE[m
[32m+[m[32m  // TODO is there a better way to reliably get an instance of NodeError?[m
[32m+[m[32m  path.resolve(123);[m
[32m+[m[32m} catch(e) {[m
[32m+[m[32m  const symbols = Object.getOwnPropertySymbols(e);[m
[32m+[m[32m  const symbol = symbols.find(function (s) {return s.toString().indexOf('kIsNodeError') >= 0});[m
[32m+[m[32m  if(symbol) kIsNodeError = symbol;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst ErrorPrototypeToString = (err) =>Error.prototype.toString.call(err);[m
[32m+[m
[32m+[m[32m/** @param {HookState} hookState */[m
[32m+[m[32mfunction createPrepareStackTrace(hookState) {[m
[32m+[m[32m  return prepareStackTrace;[m
[32m+[m
[32m+[m[32m  // This function is part of the V8 stack trace API, for more info see:[m
[32m+[m[32m  // https://v8.dev/docs/stack-trace-api[m
[32m+[m[32m  function prepareStackTrace(error, stack) {[m
[32m+[m[32m    if(!hookState.enabled) return hookState.originalValue.apply(this, arguments);[m
[32m+[m
[32m+[m[32m    if (sharedData.emptyCacheBetweenOperations) {[m
[32m+[m[32m      clearCaches();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // node gives its own errors special treatment.  Mimic that behavior[m
[32m+[m[32m    // https://github.com/nodejs/node/blob/3cbaabc4622df1b4009b9d026a1a970bdbae6e89/lib/internal/errors.js#L118-L128[m
[32m+[m[32m    // https://github.com/nodejs/node/pull/39182[m
[32m+[m[32m    var errorString;[m
[32m+[m[32m    if (kIsNodeError) {[m
[32m+[m[32m      if(kIsNodeError in error) {[m
[32m+[m[32m        errorString = `${error.name} [${error.code}]: ${error.message}`;[m
[32m+[m[32m      } else {[m
[32m+[m[32m        errorString = ErrorPrototypeToString(error);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else {[m
[32m+[m[32m      var name = error.name || 'Error';[m
[32m+[m[32m      var message = error.message || '';[m
[32m+[m[32m      errorString = message ? name + ": " + message : name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    var state = { nextPosition: null, curPosition: null };[m
[32m+[m[32m    var processedStack = [];[m
[32m+[m[32m    for (var i = stack.length - 1; i >= 0; i--) {[m
[32m+[m[32m      processedStack.push('\n    at ' + wrapCallSite(stack[i], state));[m
[32m+[m[32m      state.nextPosition = state.curPosition;[m
[32m+[m[32m    }[m
[32m+[m[32m    state.curPosition = state.nextPosition = null;[m
[32m+[m[32m    return errorString + processedStack.reverse().join('');[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Generate position and snippet of original source with pointer[m
[32m+[m[32mfunction getErrorSource(error) {[m
[32m+[m[32m  var match = /\n    at [^(]+ \((.*):(\d+):(\d+)\)/.exec(error.stack);[m
[32m+[m[32m  if (match) {[m
[32m+[m[32m    var source = match[1];[m
[32m+[m[32m    var line = +match[2];[m
[32m+[m[32m    var column = +match[3];[m
[32m+[m
[32m+[m[32m    // Support the inline sourceContents inside the source map[m
[32m+[m[32m    var contents = getFileContentsCache(source);[m
[32m+[m
[32m+[m[32m    const sourceAsPath = tryFileURLToPath(source);[m
[32m+[m
[32m+[m[32m    // Support files on disk[m
[32m+[m[32m    if (!contents && fs && fs.existsSync(sourceAsPath)) {[m
[32m+[m[32m      try {[m
[32m+[m[32m        contents = fs.readFileSync(sourceAsPath, 'utf8');[m
[32m+[m[32m      } catch (er) {[m
[32m+[m[32m        contents = '';[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Format the line from the original source code like node does[m
[32m+[m[32m    if (contents) {[m
[32m+[m[32m      var code = contents.split(/(?:\r\n|\r|\n)/)[line - 1];[m
[32m+[m[32m      if (code) {[m
[32m+[m[32m        return source + ':' + line + '\n' + code + '\n' +[m
[32m+[m[32m          new Array(column).join(' ') + '^';[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return null;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction printFatalErrorUponExit (error) {[m
[32m+[m[32m  var source = getErrorSource(error);[m
[32m+[m
[32m+[m[32m  // Ensure error is printed synchronously and not truncated[m
[32m+[m[32m  if (process.stderr._handle && process.stderr._handle.setBlocking) {[m
[32m+[m[32m    process.stderr._handle.setBlocking(true);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (source) {[m
[32m+[m[32m    console.error(source);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Matches node's behavior for colorized output[m
[32m+[m[32m  console.error([m
[32m+[m[32m    util.inspect(error, {[m
[32m+[m[32m      customInspect: false,[m
[32m+[m[32m      colors: process.stderr.isTTY[m
[32m+[m[32m    })[m
[32m+[m[32m  );[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction shimEmitUncaughtException () {[m
[32m+[m[32m  const originalValue = process.emit;[m
[32m+[m[32m  var hook = sharedData.processEmitHook = {[m
[32m+[m[32m    enabled: true,[m
[32m+[m[32m    originalValue,[m
[32m+[m[32m    installedValue: undefined[m
[32m+[m[32m  };[m
[32m+[m[32m  var isTerminatingDueToFatalException = false;[m
[32m+[m[32m  var fatalException;[m
[32m+[m
[32m+[m[32m  process.emit = sharedData.processEmitHook.installedValue = function (type) {[m
[32m+[m[32m    const hadListeners = originalValue.apply(this, arguments);[m
[32m+[m[32m    if(hook.enabled) {[m
[32m+[m[32m      if (type === 'uncaughtException' && !hadListeners) {[m
[32m+[m[32m        isTerminatingDueToFatalException = true;[m
[32m+[m[32m        fatalException = arguments[1];[m
[32m+[m[32m        process.exit(1);[m
[32m+[m[32m      }[m
[32m+[m[32m      if (type === 'exit' && isTerminatingDueToFatalException) {[m
[32m+[m[32m        printFatalErrorUponExit(fatalException);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return hadListeners;[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvar originalRetrieveFileHandlers = sharedData.retrieveFileHandlers.slice(0);[m
[32m+[m[32mvar originalRetrieveMapHandlers = sharedData.retrieveMapHandlers.slice(0);[m
[32m+[m
[32m+[m[32mexports.wrapCallSite = wrapCallSite;[m
[32m+[m[32mexports.getErrorSource = getErrorSource;[m
[32m+[m[32mexports.mapSourcePosition = mapSourcePosition;[m
[32m+[m[32mexports.retrieveSourceMap = retrieveSourceMap;[m
[32m+[m
[32m+[m[32mexports.install = function(options) {[m
[32m+[m[32m  options = options || {};[m
[32m+[m
[32m+[m[32m  if (options.environment) {[m
[32m+[m[32m    environment = options.environment;[m
[32m+[m[32m    if (["node", "browser", "auto"].indexOf(environment) === -1) {[m
[32m+[m[32m      throw new Error("environment " + environment + " was unknown. Available options are {auto, browser, node}")[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Use dynamicRequire to avoid including in browser bundles[m
[32m+[m[32m  var Module = dynamicRequire(module, 'module');[m
[32m+[m
[32m+[m[32m  // Redirect subsequent imports of "source-map-support"[m
[32m+[m[32m  // to this package[m
[32m+[m[32m  const {redirectConflictingLibrary = true, onConflictingLibraryRedirect} = options;[m
[32m+[m[32m  if(redirectConflictingLibrary) {[m
[32m+[m[32m    if (!sharedData.moduleResolveFilenameHook) {[m
[32m+[m[32m      const originalValue = Module._resolveFilename;[m
[32m+[m[32m      const moduleResolveFilenameHook = sharedData.moduleResolveFilenameHook = {[m
[32m+[m[32m        enabled: true,[m
[32m+[m[32m        originalValue,[m
[32m+[m[32m        installedValue: undefined,[m
[32m+[m[32m      }[m
[32m+[m[32m      Module._resolveFilename = sharedData.moduleResolveFilenameHook.installedValue = function (request, parent, isMain, options) {[m
[32m+[m[32m        if (moduleResolveFilenameHook.enabled) {[m
[32m+[m[32m          // Match all source-map-support entrypoints: source-map-support, source-map-support/register[m
[32m+[m[32m          let requestRedirect;[m
[32m+[m[32m          if (request === 'source-map-support') {[m
[32m+[m[32m            requestRedirect = './';[m
[32m+[m[32m          } else if (request === 'source-map-support/register') {[m
[32m+[m[32m            requestRedirect = './register';[m
[32m+[m[32m          }[m
[32m+[m
[32m+[m[32m          if (requestRedirect !== undefined) {[m
[32m+[m[32m              const newRequest = require.resolve(requestRedirect);[m
[32m+[m[32m              for (const cb of sharedData.onConflictingLibraryRedirectArr) {[m
[32m+[m[32m                cb(request, parent, isMain, options, newRequest);[m
[32m+[m[32m              }[m
[32m+[m[32m              request = newRequest;[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        return originalValue.call(this, request, parent, isMain, options);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m[41m [m
[32m+[m[32m    if (onConflictingLibraryRedirect) {[m
[32m+[m[32m      sharedData.onConflictingLibraryRedirectArr.push(onConflictingLibraryRedirect);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Allow sources to be found by methods other than reading the files[m
[32m+[m[32m  // directly from disk.[m
[32m+[m[32m  if (options.retrieveFile) {[m
[32m+[m[32m    if (options.overrideRetrieveFile) {[m
[32m+[m[32m      sharedData.retrieveFileHandlers.length = 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    sharedData.retrieveFileHandlers.unshift(options.retrieveFile);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Allow source maps to be found by methods other than reading the files[m
[32m+[m[32m  // directly from disk.[m
[32m+[m[32m  if (options.retrieveSourceMap) {[m
[32m+[m[32m    if (options.overrideRetrieveSourceMap) {[m
[32m+[m[32m      sharedData.retrieveMapHandlers.length = 0;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    sharedData.retrieveMapHandlers.unshift(options.retrieveSourceMap);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Support runtime transpilers that include inline source maps[m
[32m+[m[32m  if (options.hookRequire && !isInBrowser()) {[m
[32m+[m[32m    var $compile = Module.prototype._compile;[m
[32m+[m
[32m+[m[32m    if (!$compile.__sourceMapSupport) {[m
[32m+[m[32m      Module.prototype._compile = function(content, filename) {[m
[32m+[m[32m        setFileContentsCache(filename, content);[m
[32m+[m[32m        setSourceMapCache(filename, undefined);[m
[32m+[m[32m        return $compile.call(this, content, filename);[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m      Module.prototype._compile.__sourceMapSupport = true;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Configure options[m
[32m+[m[32m  if (!sharedData.emptyCacheBetweenOperations) {[m
[32m+[m[32m    sharedData.emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?[m
[32m+[m[32m      options.emptyCacheBetweenOperations : false;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  // Install the error reformatter[m
[32m+[m[32m  if (!sharedData.errorPrepareStackTraceHook) {[m
[32m+[m[32m    const originalValue = Error.prepareStackTrace;[m
[32m+[m[32m    sharedData.errorPrepareStackTraceHook = {[m
[32m+[m[32m      enabled: true,[m
[32m+[m[32m      originalValue,[m
[32m+[m[32m      installedValue: undefined[m
[32m+[m[32m    };[m
[32m+[m[32m    Error.prepareStackTrace = sharedData.errorPrepareStackTraceHook.installedValue = createPrepareStackTrace(sharedData.errorPrepareStackTraceHook);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (!sharedData.processEmitHook) {[m
[32m+[m[32m    var installHandler = 'handleUncaughtExceptions' in options ?[m
[32m+[m[32m      options.handleUncaughtExceptions : true;[m
[32m+[m
[32m+[m[32m    // Do not override 'uncaughtException' with our own handler in Node.js[m
[32m+[m[32m    // Worker threads. Workers pass the error to the main thread as an event,[m
[32m+[m[32m    // rather than printing something to stderr and exiting.[m
[32m+[m[32m    try {[m
[32m+[m[32m      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.[m
[32m+[m[32m      var worker_threads = dynamicRequire(module, 'worker_threads');[m
[32m+[m[32m      if (worker_threads.isMainThread === false) {[m
[32m+[m[32m        installHandler = false;[m
[32m+[m[32m      }[m
[32m+[m[32m    } catch(e) {}[m
[32m+[m
[32m+[m[32m    // Provide the option to not install the uncaught exception handler. This is[m
[32m+[m[32m    // to support other uncaught exception handlers (in test frameworks, for[m
[32m+[m[32m    // example). If this handler is not installed and there are no other uncaught[m
[32m+[m[32m    // exception handlers, uncaught exceptions will be caught by node's built-in[m
[32m+[m[32m    // exception handler and the process will still be terminated. However, the[m
[32m+[m[32m    // generated JavaScript code will be shown above the stack trace instead of[m
[32m+[m[32m    // the original source code.[m
[32m+[m[32m    if (installHandler && hasGlobalProcessEventEmitter()) {[m
[32m+[m[32m      shimEmitUncaughtException();[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexports.uninstall = function() {[m
[32m+[m[32m  if(sharedData.processEmitHook) {[m
[32m+[m[32m    // Disable behavior[m
[32m+[m[32m    sharedData.processEmitHook.enabled = false;[m
[32m+[m[32m    // If possible, remove our hook function.  May not be possible if subsequent third-party hooks have wrapped around us.[m
[32m+[m[32m    if(process.emit === sharedData.processEmitHook.installedValue) {[m
[32m+[m[32m      process.emit = sharedData.processEmitHook.originalValue;[m
[32m+[m[32m    }[m
[32m+[m[32m    sharedData.processEmitHook = undefined;[m
[32m+[m[32m  }[m
[32m+[m[32m  if(sharedData.errorPrepareStackTraceHook) {[m
[32m+[m[32m    // Disable behavior[m
[32m+[m[32m    sharedData.errorPrepareStackTraceHook.enabled = false;[m
[32m+[m[32m    // If possible or necessary, remove our hook function.[m
[32m+[m[32m    // In vanilla environments, prepareStackTrace is `undefined`.[m
[32m+[m[32m    // We cannot delegate to `undefined` the way we can to a function w/`.apply()`; our only option is to remove the function.[m
[32m+[m[32m    // If we are the *first* hook installed, and another was installed on top of us, we have no choice but to remove both.[m
[32m+[m[32m    if(Error.prepareStackTrace === sharedData.errorPrepareStackTraceHook.installedValue || typeof sharedData.errorPrepareStackTraceHook.originalValue !== 'function') {[m
[32m+[m[32m      Error.prepareStackTrace = sharedData.errorPrepareStackTraceHook.originalValue;[m
[32m+[m[32m    }[m
[32m+[m[32m    sharedData.errorPrepareStackTraceHook = undefined;[m
[32m+[m[32m  }[m
[32m+[m[32m  if (sharedData.moduleResolveFilenameHook) {[m
[32m+[m[32m    // Disable behavior[m
[32m+[m[32m    sharedData.moduleResolveFilenameHook.enabled = false;[m
[32m+[m[32m    // If possible, remove our hook function.  May not be possible if subsequent third-party hooks have wrapped around us.[m
[32m+[m[32m    var Module = dynamicRequire(module, 'module');[m
[32m+[m[32m    if(Module._resolveFilename === sharedData.moduleResolveFilenameHook.installedValue) {[m
[32m+[m[32m      Module._resolveFilename = sharedData.moduleResolveFilenameHook.originalValue;[m
[32m+[m[32m    }[m
[32m+[m[32m    sharedData.moduleResolveFilenameHook = undefined;[m
[32m+[m[32m  }[m
[32m+[m[32m  sharedData.onConflictingLibraryRedirectArr.length = 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexports.resetRetrieveHandlers = function() {[m
[32m+[m[32m  sharedData.retrieveFileHandlers.length = 0;[m
[32m+[m[32m  sharedData.retrieveMapHandlers.length = 0;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@jridgewell/resolve-uri/LICENSE b/node_modules/@jridgewell/resolve-uri/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..0a81b2a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/resolve-uri/LICENSE[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mCopyright 2019 Justin Ridgewell <jridgewell@google.com>[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in[m
[32m+[m[32mall copies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE.[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@jridgewell/resolve-uri/README.md b/node_modules/@jridgewell/resolve-uri/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..2fe70df[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/resolve-uri/README.md[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m# @jridgewell/resolve-uri[m
[32m+[m
[32m+[m[32m> Resolve a URI relative to an optional base URI[m
[32m+[m
[32m+[m[32mResolve any combination of absolute URIs, protocol-realtive URIs, absolute paths, or relative paths.[m
[32m+[m
[32m+[m[32m## Installation[m
[32m+[m
[32m+[m[32m```sh[m
[32m+[m[32mnpm install @jridgewell/resolve-uri[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Usage[m
[32m+[m
[32m+[m[32m```typescript[m
[32m+[m[32mfunction resolve(input: string, base?: string): string;[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mimport resolve from '@jridgewell/resolve-uri';[m
[32m+[m
[32m+[m[32mresolve('foo', 'https://example.com'); // => 'https://example.com/foo'[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m| Input                 | Base                    | Resolution                     | Explanation                                                  |[m
[32m+[m[32m|-----------------------|-------------------------|--------------------------------|--------------------------------------------------------------|[m
[32m+[m[32m| `https://example.com` | _any_                   | `https://example.com/`         | Input is normalized only                                     |[m
[32m+[m[32m| `//example.com`       | `https://base.com/`     | `https://example.com/`         | Input inherits the base's protocol                           |[m
[32m+[m[32m| `//example.com`       | _rest_                  | `//example.com/`               | Input is normalized only                                     |[m
[32m+[m[32m| `/example`            | `https://base.com/`     | `https://base.com/example`     | Input inherits the base's origin                             |[m
[32m+[m[32m| `/example`            | `//base.com/`           | `//base.com/example`           | Input inherits the base's host and remains protocol relative |[m
[32m+[m[32m| `/example`            | _rest_                  | `/example`                     | Input is normalized only                                     |[m
[32m+[m[32m| `example`             | `https://base.com/dir/` | `https://base.com/dir/example` | Input is joined with the base                                |[m
[32m+[m[32m| `example`             | `https://base.com/file` | `https://base.com/example`     | Input is joined with the base without its file               |[m
[32m+[m[32m| `example`             | `//base.com/dir/`       | `//base.com/dir/example`       | Input is joined with the base's last directory               |[m
[32m+[m[32m| `example`             | `//base.com/file`       | `//base.com/example`           | Input is joined with the base without its file               |[m
[32m+[m[32m| `example`             | `/base/dir/`            | `/base/dir/example`            | Input is joined with the base's last directory               |[m
[32m+[m[32m| `example`             | `/base/file`            | `/base/example`                | Input is joined with the base without its file               |[m
[32m+[m[32m| `example`             | `base/dir/`             | `base/dir/example`             | Input is joined with the base's last directory               |[m
[32m+[m[32m| `example`             | `base/file`             | `base/example`                 | Input is joined with the base without its file               |[m
[1mdiff --git a/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.mjs b/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.mjs[m
[1mnew file mode 100644[m
[1mindex 0000000..e958e88[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.mjs[m
[36m@@ -0,0 +1,232 @@[m
[32m+[m[32m// Matches the scheme of a URL, eg "http://"[m
[32m+[m[32mconst schemeRegex = /^[\w+.-]+:\/\//;[m
[32m+[m[32m/**[m
[32m+[m[32m * Matches the parts of a URL:[m
[32m+[m[32m * 1. Scheme, including ":", guaranteed.[m
[32m+[m[32m * 2. User/password, including "@", optional.[m
[32m+[m[32m * 3. Host, guaranteed.[m
[32m+[m[32m * 4. Port, including ":", optional.[m
[32m+[m[32m * 5. Path, including "/", optional.[m
[32m+[m[32m * 6. Query, including "?", optional.[m
[32m+[m[32m * 7. Hash, including "#", optional.[m
[32m+[m[32m */[m
[32m+[m[32mconst urlRegex = /^([\w+.-]+:)\/\/([^@/#?]*@)?([^:/#?]*)(:\d+)?(\/[^#?]*)?(\?[^#]*)?(#.*)?/;[m
[32m+[m[32m/**[m
[32m+[m[32m * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start[m
[32m+[m[32m * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).[m
[32m+[m[32m *[m
[32m+[m[32m * 1. Host, optional.[m
[32m+[m[32m * 2. Path, which may include "/", guaranteed.[m
[32m+[m[32m * 3. Query, including "?", optional.[m
[32m+[m[32m * 4. Hash, including "#", optional.[m
[32m+[m[32m */[m
[32m+[m[32mconst fileRegex = /^file:(?:\/\/((?![a-z]:)[^/#?]*)?)?(\/?[^#?]*)(\?[^#]*)?(#.*)?/i;[m
[32m+[m[32mfunction isAbsoluteUrl(input) {[m
[32m+[m[32m    return schemeRegex.test(input);[m
[32m+[m[32m}[m
[32m+[m[32mfunction isSchemeRelativeUrl(input) {[m
[32m+[m[32m    return input.startsWith('//');[m
[32m+[m[32m}[m
[32m+[m[32mfunction isAbsolutePath(input) {[m
[32m+[m[32m    return input.startsWith('/');[m
[32m+[m[32m}[m
[32m+[m[32mfunction isFileUrl(input) {[m
[32m+[m[32m    return input.startsWith('file:');[m
[32m+[m[32m}[m
[32m+[m[32mfunction isRelative(input) {[m
[32m+[m[32m    return /^[.?#]/.test(input);[m
[32m+[m[32m}[m
[32m+[m[32mfunction parseAbsoluteUrl(input) {[m
[32m+[m[32m    const match = urlRegex.exec(input);[m
[32m+[m[32m    return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/', match[6] || '', match[7] || '');[m
[32m+[m[32m}[m
[32m+[m[32mfunction parseFileUrl(input) {[m
[32m+[m[32m    const match = fileRegex.exec(input);[m
[32m+[m[32m    const path = match[2];[m
[32m+[m[32m    return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path, match[3] || '', match[4] || '');[m
[32m+[m[32m}[m
[32m+[m[32mfunction makeUrl(scheme, user, host, port, path, query, hash) {[m
[32m+[m[32m    return {[m
[32m+[m[32m        scheme,[m
[32m+[m[32m        user,[m
[32m+[m[32m        host,[m
[32m+[m[32m        port,[m
[32m+[m[32m        path,[m
[32m+[m[32m        query,[m
[32m+[m[32m        hash,[m
[32m+[m[32m        type: 7 /* Absolute */,[m
[32m+[m[32m    };[m
[32m+[m[32m}[m
[32m+[m[32mfunction parseUrl(input) {[m
[32m+[m[32m    if (isSchemeRelativeUrl(input)) {[m
[32m+[m[32m        const url = parseAbsoluteUrl('http:' + input);[m
[32m+[m[32m        url.scheme = '';[m
[32m+[m[32m        url.type = 6 /* SchemeRelative */;[m
[32m+[m[32m        return url;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (isAbsolutePath(input)) {[m
[32m+[m[32m        const url = parseAbsoluteUrl('http://foo.com' + input);[m
[32m+[m[32m        url.scheme = '';[m
[32m+[m[32m        url.host = '';[m
[32m+[m[32m        url.type = 5 /* AbsolutePath */;[m
[32m+[m[32m        return url;[m
[32m+[m[32m    }[m
[32m+[m[32m    if (isFileUrl(input))[m
[32m+[m[32m        return parseFileUrl(input);[m
[32m+[m[32m    if (isAbsoluteUrl(input))[m
[32m+[m[32m        return parseAbsoluteUrl(input);[m
[32m+[m[32m    const url = parseAbsoluteUrl('http://foo.com/' + input);[m
[32m+[m[32m    url.scheme = '';[m
[32m+[m[32m    url.host = '';[m
[32m+[m[32m    url.type = input[m
[32m+[m[32m        ? input.startsWith('?')[m
[32m+[m[32m            ? 3 /* Query */[m
[32m+[m[32m            : input.startsWith('#')[m
[32m+[m[32m                ? 2 /* Hash */[m
[32m+[m[32m                : 4 /* RelativePath */[m
[32m+[m[32m        : 1 /* Empty */;[m
[32m+[m[32m    return url;[m
[32m+[m[32m}[m
[32m+[m[32mfunction stripPathFilename(path) {[m
[32m+[m[32m    // If a path ends with a parent directory "..", then it's a relative path with excess parent[m
[32m+[m[32m    // paths. It's not a file, so we can't strip it.[m
[32m+[m[32m    if (path.endsWith('/..'))[m
[32m+[m[32m        return path;[m
[32m+[m[32m    const index = path.lastIndexOf('/');[m
[32m+[m[32m    return path.slice(0, index + 1);[m
[32m+[m[32m}[m
[32m+[m[32mfunction mergePaths(url, base) {[m
[32m+[m[32m    normalizePath(base, base.type);[m
[32m+[m[32m    // If the path is just a "/", then it was an empty path to begin with (remember, we're a relative[m
[32m+[m[32m    // path).[m
[32m+[m[32m    if (url.path === '/') {[m
[32m+[m[32m        url.path = base.path;[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m        // Resolution happens relative to the base path's directory, not the file.[m
[32m+[m[32m        url.path = stripPathFilename(base.path) + url.path;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32m/**[m
[32m+[m[32m * The path can have empty directories "//", unneeded parents "foo/..", or current directory[m
[32m+[m[32m * "foo/.". We need to normalize to a standard representation.[m
[32m+[m[32m */[m
[32m+[m[32mfunction normalizePath(url, type) {[m
[32m+[m[32m    const rel = type <= 4 /* RelativePath */;[m
[32m+[m[32m    const pieces = url.path.split('/');[m
[32m+[m[32m    // We need to preserve the first piece always, so that we output a leading slash. The item at[m
[32m+[m[32m    // pieces[0] is an empty string.[m
[32m+[m[32m    let pointer = 1;[m
[32m+[m[32m    // Positive is the number of real directories we've output, used for popping a parent directory.[m
[32m+[m[32m    // Eg, "foo/bar/.." will have a positive 2, and we can decrement to be left with just "foo".[m
[32m+[m[32m    let positive = 0;[m
[32m+[m[32m    // We need to keep a trailing slash if we encounter an empty directory (eg, splitting "foo/" will[m
[32m+[m[32m    // generate `["foo", ""]` pieces). And, if we pop a parent directory. But once we encounter a[m
[32m+[m[32m    // real directory, we won't need to append, unless the other conditions happen again.[m
[32m+[m[32m    let addTrailingSlash = false;[m
[32m+[m[32m    for (let i = 1; i < pieces.length; i++) {[m
[32m+[m[32m        const piece = pieces[i];[m
[32m+[m[32m        // An empty directory, could be a trailing slash, or just a double "//" in the path.[m
[32m+[m[32m        if (!piece) {[m
[32m+[m[32m            addTrailingSlash = true;[m
[32m+[m[32m            continue;[m
[32m+[m[32m        }[m
[32m+[m[32m        // If we encounter a real directory, then we don't need to append anymore.[m
[32m+[m[32m        addTrailingSlash = false;[m
[32m+[m[32m        // A current directory, which we can always drop.[m
[32m+[m[32m        if (piece === '.')[m
[32m+[m[32m            continue;[m
[32m+[m[32m        // A parent directory, we need to see if there are any real directories we can pop. Else, we[m
[32m+[m[32m        // have an excess of parents, and we'll need to keep the "..".[m
[32m+[m[32m        if (piece === '..') {[m
[32m+[m[32m            if (positive) {[m
[32m+[m[32m                addTrailingSlash = true;[m
[32m+[m[32m                positive--;[m
[32m+[m[32m                pointer--;[m
[32m+[m[32m            }[m
[32m+[m[32m            else if (rel) {[m
[32m+[m[32m                // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute[m
[32m+[m[32m                // URL, protocol relative URL, or an absolute path, we don't need to keep excess.[m
[32m+[m[32m                pieces[pointer++] = piece;[m
[32m+[m[32m            }[m
[32m+[m[32m            continue;[m
[32m+[m[32m        }[m
[32m+[m[32m        // We've encountered a real directory. Move it to the next insertion pointer, which accounts for[m
[32m+[m[32m        // any popped or dropped directories.[m
[32m+[m[32m        pieces[pointer++] = piece;[m
[32m+[m[32m        positive++;[m
[32m+[m[32m    }[m
[32m+[m[32m    let path = '';[m
[32m+[m[32m    for (let i = 1; i < pointer; i++) {[m
[32m+[m[32m        path += '/' + pieces[i];[m
[32m+[m[32m    }[m
[32m+[m[32m    if (!path || (addTrailingSlash && !path.endsWith('/..'))) {[m
[32m+[m[32m        path += '/';[m
[32m+[m[32m    }[m
[32m+[m[32m    url.path = path;[m
[32m+[m[32m}[m
[32m+[m[32m/**[m
[32m+[m[32m * Attempts to resolve `input` URL/path relative to `base`.[m
[32m+[m[32m */[m
[32m+[m[32mfunction resolve(input, base) {[m
[32m+[m[32m    if (!input && !base)[m
[32m+[m[32m        return '';[m
[32m+[m[32m    const url = parseUrl(input);[m
[32m+[m[32m    let inputType = url.type;[m
[32m+[m[32m    if (base && inputType !== 7 /* Absolute */) {[m
[32m+[m[32m        const baseUrl = parseUrl(base);[m
[32m+[m[32m        const baseType = baseUrl.type;[m
[32m+[m[32m        switch (inputType) {[m
[32m+[m[32m            case 1 /* Empty */:[m
[32m+[m[32m                url.hash = baseUrl.hash;[m
[32m+[m[32m            // fall through[m
[32m+[m[32m            case 2 /* Hash */:[m
[32m+[m[32m                url.query = baseUrl.query;[m
[32m+[m[32m            // fall through[m
[32m+[m[32m            case 3 /* Query */:[m
[32m+[m[32m            case 4 /* RelativePath */:[m
[32m+[m[32m                mergePaths(url, baseUrl);[m
[32m+[m[32m            // fall through[m
[32m+[m[32m            case 5 /* AbsolutePath */:[m
[32m+[m[32m                // The host, user, and port are joined, you can't copy one without the others.[m
[32m+[m[32m                url.user = baseUrl.user;[m
[32m+[m[32m                url.host = baseUrl.host;[m
[32m+[m[32m                url.port = baseUrl.port;[m
[32m+[m[32m            // fall through[m
[32m+[m[32m            case 6 /* SchemeRelative */:[m
[32m+[m[32m                // The input doesn't have a schema at least, so we need to copy at least that over.[m
[32m+[m[32m                url.scheme = baseUrl.scheme;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (baseType > inputType)[m
[32m+[m[32m            inputType = baseType;[m
[32m+[m[32m    }[m
[32m+[m[32m    normalizePath(url, inputType);[m
[32m+[m[32m    const queryHash = url.query + url.hash;[m
[32m+[m[32m    switch (inputType) {[m
[32m+[m[32m        // This is impossible, because of the empty checks at the start of the function.[m
[32m+[m[32m        // case UrlType.Empty:[m
[32m+[m[32m        case 2 /* Hash */:[m
[32m+[m[32m        case 3 /* Query */:[m
[32m+[m[32m            return queryHash;[m
[32m+[m[32m        case 4 /* RelativePath */: {[m
[32m+[m[32m            // The first char is always a "/", and we need it to be relative.[m
[32m+[m[32m            const path = url.path.slice(1);[m
[32m+[m[32m            if (!path)[m
[32m+[m[32m                return queryHash || '.';[m
[32m+[m[32m            if (isRelative(base || input) && !isRelative(path)) {[m
[32m+[m[32m                // If base started with a leading ".", or there is no base and input started with a ".",[m
[32m+[m[32m                // then we need to ensure that the relative path starts with a ".". We don't know if[m
[32m+[m[32m                // relative starts with a "..", though, so check before prepending.[m
[32m+[m[32m                return './' + path + queryHash;[m
[32m+[m[32m            }[m
[32m+[m[32m            return path + queryHash;[m
[32m+[m[32m        }[m
[32m+[m[32m        case 5 /* AbsolutePath */:[m
[32m+[m[32m            return url.path + queryHash;[m
[32m+[m[32m        default:[m
[32m+[m[32m            return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport { resolve as default };[m
[32m+[m[32m//# sourceMappingURL=resolve-uri.mjs.map[m
[1mdiff --git a/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.mjs.map b/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.mjs.map[m
[1mnew file mode 100644[m
[1mindex 0000000..1de97d0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.mjs.map[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"version":3,"file":"resolve-uri.mjs","sources":["../src/resolve-uri.ts"],"sourcesContent":["// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nconst enum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n"],"names":[],"mappings":"AAAA;AACA,MAAM,WAAW,GAAG,gBAAgB,CAAC;AAErC;;;;;;;;;;AAUA,MAAM,QAAQ,GAAG,0EAA0E,CAAC;AAE5F;;;;;;;;;AASA,MAAM,SAAS,GAAG,iEAAiE,CAAC;AAuBpF,SAAS,aAAa,CAAC,KAAa;IAClC,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC,CAAC;AAED,SAAS,mBAAmB,CAAC,KAAa;IACxC,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,SAAS,cAAc,CAAC,KAAa;IACnC,OAAO,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAC/B,CAAC;AAED,SAAS,SAAS,CAAC,KAAa;IAC9B,OAAO,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACnC,CAAC;AAED,SAAS,UAAU,CAAC,KAAa;IAC/B,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,CAAC;AAED,SAAS,gBAAgB,CAAC,KAAa;IACrC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC;IACpC,OAAO,OAAO,CACZ,KAAK,CAAC,CAAC,CAAC,EACR,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,KAAK,CAAC,CAAC,CAAC,EACR,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,EACf,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CACf,CAAC;AACJ,CAAC;AAED,SAAS,YAAY,CAAC,KAAa;IACjC,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC;IACrC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACtB,OAAO,OAAO,CACZ,OAAO,EACP,EAAE,EACF,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,EAAE,EACF,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,EACxC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CACf,CAAC;AACJ,CAAC;AAED,SAAS,OAAO,CACd,MAAc,EACd,IAAY,EACZ,IAAY,EACZ,IAAY,EACZ,IAAY,EACZ,KAAa,EACb,IAAY;IAEZ,OAAO;QACL,MAAM;QACN,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,KAAK;QACL,IAAI;QACJ,IAAI;KACL,CAAC;AACJ,CAAC;AAED,SAAS,QAAQ,CAAC,KAAa;IAC7B,IAAI,mBAAmB,CAAC,KAAK,CAAC,EAAE;QAC9B,MAAM,GAAG,GAAG,gBAAgB,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;QAC9C,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,IAAI,0BAA0B;QAClC,OAAO,GAAG,CAAC;KACZ;IAED,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;QACzB,MAAM,GAAG,GAAG,gBAAgB,CAAC,gBAAgB,GAAG,KAAK,CAAC,CAAC;QACvD,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;QACd,GAAG,CAAC,IAAI,wBAAwB;QAChC,OAAO,GAAG,CAAC;KACZ;IAED,IAAI,SAAS,CAAC,KAAK,CAAC;QAAE,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;IAEjD,IAAI,aAAa,CAAC,KAAK,CAAC;QAAE,OAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAEzD,MAAM,GAAG,GAAG,gBAAgB,CAAC,iBAAiB,GAAG,KAAK,CAAC,CAAC;IACxD,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;IAChB,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;IACd,GAAG,CAAC,IAAI,GAAG,KAAK;UACZ,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC;;cAEnB,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC;;;wBAGT;IAClB,OAAO,GAAG,CAAC;AACb,CAAC;AAED,SAAS,iBAAiB,CAAC,IAAY;;;IAGrC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAAE,OAAO,IAAI,CAAC;IACtC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACpC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAClC,CAAC;AAED,SAAS,UAAU,CAAC,GAAQ,EAAE,IAAS;IACrC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;;IAI/B,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE;QACpB,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;KACtB;SAAM;;QAEL,GAAG,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;KACpD;AACH,CAAC;AAED;;;;AAIA,SAAS,aAAa,CAAC,GAAQ,EAAE,IAAa;IAC5C,MAAM,GAAG,GAAG,IAAI,yBAAyB;IACzC,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;;IAInC,IAAI,OAAO,GAAG,CAAC,CAAC;;;IAIhB,IAAI,QAAQ,GAAG,CAAC,CAAC;;;;IAKjB,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAE7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;QAGxB,IAAI,CAAC,KAAK,EAAE;YACV,gBAAgB,GAAG,IAAI,CAAC;YACxB,SAAS;SACV;;QAGD,gBAAgB,GAAG,KAAK,CAAC;;QAGzB,IAAI,KAAK,KAAK,GAAG;YAAE,SAAS;;;QAI5B,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,IAAI,QAAQ,EAAE;gBACZ,gBAAgB,GAAG,IAAI,CAAC;gBACxB,QAAQ,EAAE,CAAC;gBACX,OAAO,EAAE,CAAC;aACX;iBAAM,IAAI,GAAG,EAAE;;;gBAGd,MAAM,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK,CAAC;aAC3B;YACD,SAAS;SACV;;;QAID,MAAM,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK,CAAC;QAC1B,QAAQ,EAAE,CAAC;KACZ;IAED,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;QAChC,IAAI,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;KACzB;IACD,IAAI,CAAC,IAAI,KAAK,gBAAgB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;QACxD,IAAI,IAAI,GAAG,CAAC;KACb;IACD,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;AAClB,CAAC;AAED;;;SAGwB,OAAO,CAAC,KAAa,EAAE,IAAwB;IACrE,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI;QAAE,OAAO,EAAE,CAAC;IAE/B,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC5B,IAAI,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;IAEzB,IAAI,IAAI,IAAI,SAAS,uBAAuB;QAC1C,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC;QAE9B,QAAQ,SAAS;YACf;gBACE,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;;YAG1B;gBACE,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;;YAG5B,mBAAmB;YACnB;gBACE,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;;YAG3B;;gBAEE,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gBACxB,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gBACxB,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;;YAG1B;;gBAEE,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC/B;QACD,IAAI,QAAQ,GAAG,SAAS;YAAE,SAAS,GAAG,QAAQ,CAAC;KAChD;IAED,aAAa,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAE9B,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;IACvC,QAAQ,SAAS;;;QAIf,kBAAkB;QAClB;YACE,OAAO,SAAS,CAAC;QAEnB,2BAA2B;;YAEzB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAE/B,IAAI,CAAC,IAAI;gBAAE,OAAO,SAAS,IAAI,GAAG,CAAC;YAEnC,IAAI,UAAU,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;;;;gBAIlD,OAAO,IAAI,GAAG,IAAI,GAAG,SAAS,CAAC;aAChC;YAED,OAAO,IAAI,GAAG,SAAS,CAAC;SACzB;QAED;YACE,OAAO,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC;QAE9B;YACE,OAAO,GAAG,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC;KACpF;AACH;;;;"}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js b/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a783049[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js[m
[36m@@ -0,0 +1,240 @@[m
[32m+[m[32m(function (global, factory) {[m
[32m+[m[32m    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :[m
[32m+[m[32m    typeof define === 'function' && define.amd ? define(factory) :[m
[32m+[m[32m    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.resolveURI = factory());[m
[32m+[m[32m})(this, (function () { 'use strict';[m
[32m+[m
[32m+[m[32m    // Matches the scheme of a URL, eg "http://"[m
[32m+[m[32m    const schemeRegex = /^[\w+.-]+:\/\//;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Matches the parts of a URL:[m
[32m+[m[32m     * 1. Scheme, including ":", guaranteed.[m
[32m+[m[32m     * 2. User/password, including "@", optional.[m
[32m+[m[32m     * 3. Host, guaranteed.[m
[32m+[m[32m     * 4. Port, including ":", optional.[m
[32m+[m[32m     * 5. Path, including "/", optional.[m
[32m+[m[32m     * 6. Query, including "?", optional.[m
[32m+[m[32m     * 7. Hash, including "#", optional.[m
[32m+[m[32m     */[m
[32m+[m[32m    const urlRegex = /^([\w+.-]+:)\/\/([^@/#?]*@)?([^:/#?]*)(:\d+)?(\/[^#?]*)?(\?[^#]*)?(#.*)?/;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start[m
[32m+[m[32m     * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).[m
[32m+[m[32m     *[m
[32m+[m[32m     * 1. Host, optional.[m
[32m+[m[32m     * 2. Path, which may include "/", guaranteed.[m
[32m+[m[32m     * 3. Query, including "?", optional.[m
[32m+[m[32m     * 4. Hash, including "#", optional.[m
[32m+[m[32m     */[m
[32m+[m[32m    const fileRegex = /^file:(?:\/\/((?![a-z]:)[^/#?]*)?)?(\/?[^#?]*)(\?[^#]*)?(#.*)?/i;[m
[32m+[m[32m    function isAbsoluteUrl(input) {[m
[32m+[m[32m        return schemeRegex.test(input);[m
[32m+[m[32m    }[m
[32m+[m[32m    function isSchemeRelativeUrl(input) {[m
[32m+[m[32m        return input.startsWith('//');[m
[32m+[m[32m    }[m
[32m+[m[32m    function isAbsolutePath(input) {[m
[32m+[m[32m        return input.startsWith('/');[m
[32m+[m[32m    }[m
[32m+[m[32m    function isFileUrl(input) {[m
[32m+[m[32m        return input.startsWith('file:');[m
[32m+[m[32m    }[m
[32m+[m[32m    function isRelative(input) {[m
[32m+[m[32m        return /^[.?#]/.test(input);[m
[32m+[m[32m    }[m
[32m+[m[32m    function parseAbsoluteUrl(input) {[m
[32m+[m[32m        const match = urlRegex.exec(input);[m
[32m+[m[32m        return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/', match[6] || '', match[7] || '');[m
[32m+[m[32m    }[m
[32m+[m[32m    function parseFileUrl(input) {[m
[32m+[m[32m        const match = fileRegex.exec(input);[m
[32m+[m[32m        const path = match[2];[m
[32m+[m[32m        return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path, match[3] || '', match[4] || '');[m
[32m+[m[32m    }[m
[32m+[m[32m    function makeUrl(scheme, user, host, port, path, query, hash) {[m
[32m+[m[32m        return {[m
[32m+[m[32m            scheme,[m
[32m+[m[32m            user,[m
[32m+[m[32m            host,[m
[32m+[m[32m            port,[m
[32m+[m[32m            path,[m
[32m+[m[32m            query,[m
[32m+[m[32m            hash,[m
[32m+[m[32m            type: 7 /* Absolute */,[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    function parseUrl(input) {[m
[32m+[m[32m        if (isSchemeRelativeUrl(input)) {[m
[32m+[m[32m            const url = parseAbsoluteUrl('http:' + input);[m
[32m+[m[32m            url.scheme = '';[m
[32m+[m[32m            url.type = 6 /* SchemeRelative */;[m
[32m+[m[32m            return url;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (isAbsolutePath(input)) {[m
[32m+[m[32m            const url = parseAbsoluteUrl('http://foo.com' + input);[m
[32m+[m[32m            url.scheme = '';[m
[32m+[m[32m            url.host = '';[m
[32m+[m[32m            url.type = 5 /* AbsolutePath */;[m
[32m+[m[32m            return url;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (isFileUrl(input))[m
[32m+[m[32m            return parseFileUrl(input);[m
[32m+[m[32m        if (isAbsoluteUrl(input))[m
[32m+[m[32m            return parseAbsoluteUrl(input);[m
[32m+[m[32m        const url = parseAbsoluteUrl('http://foo.com/' + input);[m
[32m+[m[32m        url.scheme = '';[m
[32m+[m[32m        url.host = '';[m
[32m+[m[32m        url.type = input[m
[32m+[m[32m            ? input.startsWith('?')[m
[32m+[m[32m                ? 3 /* Query */[m
[32m+[m[32m                : input.startsWith('#')[m
[32m+[m[32m                    ? 2 /* Hash */[m
[32m+[m[32m                    : 4 /* RelativePath */[m
[32m+[m[32m            : 1 /* Empty */;[m
[32m+[m[32m        return url;[m
[32m+[m[32m    }[m
[32m+[m[32m    function stripPathFilename(path) {[m
[32m+[m[32m        // If a path ends with a parent directory "..", then it's a relative path with excess parent[m
[32m+[m[32m        // paths. It's not a file, so we can't strip it.[m
[32m+[m[32m        if (path.endsWith('/..'))[m
[32m+[m[32m            return path;[m
[32m+[m[32m        const index = path.lastIndexOf('/');[m
[32m+[m[32m        return path.slice(0, index + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    function mergePaths(url, base) {[m
[32m+[m[32m        normalizePath(base, base.type);[m
[32m+[m[32m        // If the path is just a "/", then it was an empty path to begin with (remember, we're a relative[m
[32m+[m[32m        // path).[m
[32m+[m[32m        if (url.path === '/') {[m
[32m+[m[32m            url.path = base.path;[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m            // Resolution happens relative to the base path's directory, not the file.[m
[32m+[m[32m            url.path = stripPathFilename(base.path) + url.path;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The path can have empty directories "//", unneeded parents "foo/..", or current directory[m
[32m+[m[32m     * "foo/.". We need to normalize to a standard representation.[m
[32m+[m[32m     */[m
[32m+[m[32m    function normalizePath(url, type) {[m
[32m+[m[32m        const rel = type <= 4 /* RelativePath */;[m
[32m+[m[32m        const pieces = url.path.split('/');[m
[32m+[m[32m        // We need to preserve the first piece always, so that we output a leading slash. The item at[m
[32m+[m[32m        // pieces[0] is an empty string.[m
[32m+[m[32m        let pointer = 1;[m
[32m+[m[32m        // Positive is the number of real directories we've output, used for popping a parent directory.[m
[32m+[m[32m        // Eg, "foo/bar/.." will have a positive 2, and we can decrement to be left with just "foo".[m
[32m+[m[32m        let positive = 0;[m
[32m+[m[32m        // We need to keep a trailing slash if we encounter an empty directory (eg, splitting "foo/" will[m
[32m+[m[32m        // generate `["foo", ""]` pieces). And, if we pop a parent directory. But once we encounter a[m
[32m+[m[32m        // real directory, we won't need to append, unless the other conditions happen again.[m
[32m+[m[32m        let addTrailingSlash = false;[m
[32m+[m[32m        for (let i = 1; i < pieces.length; i++) {[m
[32m+[m[32m            const piece = pieces[i];[m
[32m+[m[32m            // An empty directory, could be a trailing slash, or just a double "//" in the path.[m
[32m+[m[32m            if (!piece) {[m
[32m+[m[32m                addTrailingSlash = true;[m
[32m+[m[32m                continue;[m
[32m+[m[32m            }[m
[32m+[m[32m            // If we encounter a real directory, then we don't need to append anymore.[m
[32m+[m[32m            addTrailingSlash = false;[m
[32m+[m[32m            // A current directory, which we can always drop.[m
[32m+[m[32m            if (piece === '.')[m
[32m+[m[32m                continue;[m
[32m+[m[32m            // A parent directory, we need to see if there are any real directories we can pop. Else, we[m
[32m+[m[32m            // have an excess of parents, and we'll need to keep the "..".[m
[32m+[m[32m            if (piece === '..') {[m
[32m+[m[32m                if (positive) {[m
[32m+[m[32m                    addTrailingSlash = true;[m
[32m+[m[32m                    positive--;[m
[32m+[m[32m                    pointer--;[m
[32m+[m[32m                }[m
[32m+[m[32m                else if (rel) {[m
[32m+[m[32m                    // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute[m
[32m+[m[32m                    // URL, protocol relative URL, or an absolute path, we don't need to keep excess.[m
[32m+[m[32m                    pieces[pointer++] = piece;[m
[32m+[m[32m                }[m
[32m+[m[32m                continue;[m
[32m+[m[32m            }[m
[32m+[m[32m            // We've encountered a real directory. Move it to the next insertion pointer, which accounts for[m
[32m+[m[32m            // any popped or dropped directories.[m
[32m+[m[32m            pieces[pointer++] = piece;[m
[32m+[m[32m            positive++;[m
[32m+[m[32m        }[m
[32m+[m[32m        let path = '';[m
[32m+[m[32m        for (let i = 1; i < pointer; i++) {[m
[32m+[m[32m            path += '/' + pieces[i];[m
[32m+[m[32m        }[m
[32m+[m[32m        if (!path || (addTrailingSlash && !path.endsWith('/..'))) {[m
[32m+[m[32m            path += '/';[m
[32m+[m[32m        }[m
[32m+[m[32m        url.path = path;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Attempts to resolve `input` URL/path relative to `base`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolve(input, base) {[m
[32m+[m[32m        if (!input && !base)[m
[32m+[m[32m            return '';[m
[32m+[m[32m        const url = parseUrl(input);[m
[32m+[m[32m        let inputType = url.type;[m
[32m+[m[32m        if (base && inputType !== 7 /* Absolute */) {[m
[32m+[m[32m            const baseUrl = parseUrl(base);[m
[32m+[m[32m            const baseType = baseUrl.type;[m
[32m+[m[32m            switch (inputType) {[m
[32m+[m[32m                case 1 /* Empty */:[m
[32m+[m[32m                    url.hash = baseUrl.hash;[m
[32m+[m[32m                // fall through[m
[32m+[m[32m                case 2 /* Hash */:[m
[32m+[m[32m                    url.query = baseUrl.query;[m
[32m+[m[32m                // fall through[m
[32m+[m[32m                case 3 /* Query */:[m
[32m+[m[32m                case 4 /* RelativePath */:[m
[32m+[m[32m                    mergePaths(url, baseUrl);[m
[32m+[m[32m                // fall through[m
[32m+[m[32m                case 5 /* AbsolutePath */:[m
[32m+[m[32m                    // The host, user, and port are joined, you can't copy one without the others.[m
[32m+[m[32m                    url.user = baseUrl.user;[m
[32m+[m[32m                    url.host = baseUrl.host;[m
[32m+[m[32m                    url.port = baseUrl.port;[m
[32m+[m[32m                // fall through[m
[32m+[m[32m                case 6 /* SchemeRelative */:[m
[32m+[m[32m                    // The input doesn't have a schema at least, so we need to copy at least that over.[m
[32m+[m[32m                    url.scheme = baseUrl.scheme;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (baseType > inputType)[m
[32m+[m[32m                inputType = baseType;[m
[32m+[m[32m        }[m
[32m+[m[32m        normalizePath(url, inputType);[m
[32m+[m[32m        const queryHash = url.query + url.hash;[m
[32m+[m[32m        switch (inputType) {[m
[32m+[m[32m            // This is impossible, because of the empty checks at the start of the function.[m
[32m+[m[32m            // case UrlType.Empty:[m
[32m+[m[32m            case 2 /* Hash */:[m
[32m+[m[32m            case 3 /* Query */:[m
[32m+[m[32m                return queryHash;[m
[32m+[m[32m            case 4 /* RelativePath */: {[m
[32m+[m[32m                // The first char is always a "/", and we need it to be relative.[m
[32m+[m[32m                const path = url.path.slice(1);[m
[32m+[m[32m                if (!path)[m
[32m+[m[32m                    return queryHash || '.';[m
[32m+[m[32m                if (isRelative(base || input) && !isRelative(path)) {[m
[32m+[m[32m                    // If base started with a leading ".", or there is no base and input started with a ".",[m
[32m+[m[32m                    // then we need to ensure that the relative path starts with a ".". We don't know if[m
[32m+[m[32m                    // relative starts with a "..", though, so check before prepending.[m
[32m+[m[32m                    return './' + path + queryHash;[m
[32m+[m[32m                }[m
[32m+[m[32m                return path + queryHash;[m
[32m+[m[32m            }[m
[32m+[m[32m            case 5 /* AbsolutePath */:[m
[32m+[m[32m                return url.path + queryHash;[m
[32m+[m[32m            default:[m
[32m+[m[32m                return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return resolve;[m
[32m+[m
[32m+[m[32m}));[m
[32m+[m[32m//# sourceMappingURL=resolve-uri.umd.js.map[m
[1mdiff --git a/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js.map b/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js.map[m
[1mnew file mode 100644[m
[1mindex 0000000..70a37f2[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js.map[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"version":3,"file":"resolve-uri.umd.js","sources":["../src/resolve-uri.ts"],"sourcesContent":["// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nconst enum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n"],"names":[],"mappings":";;;;;;IAAA;IACA,MAAM,WAAW,GAAG,gBAAgB,CAAC;IAErC;;;;;;;;;;IAUA,MAAM,QAAQ,GAAG,0EAA0E,CAAC;IAE5F;;;;;;;;;IASA,MAAM,SAAS,GAAG,iEAAiE,CAAC;IAuBpF,SAAS,aAAa,CAAC,KAAa;QAClC,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,SAAS,mBAAmB,CAAC,KAAa;QACxC,OAAO,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,SAAS,cAAc,CAAC,KAAa;QACnC,OAAO,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,SAAS,SAAS,CAAC,KAAa;QAC9B,OAAO,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,SAAS,UAAU,CAAC,KAAa;QAC/B,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,SAAS,gBAAgB,CAAC,KAAa;QACrC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC;QACpC,OAAO,OAAO,CACZ,KAAK,CAAC,CAAC,CAAC,EACR,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,KAAK,CAAC,CAAC,CAAC,EACR,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,EACf,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CACf,CAAC;IACJ,CAAC;IAED,SAAS,YAAY,CAAC,KAAa;QACjC,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC;QACrC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,OAAO,OAAO,CACZ,OAAO,EACP,EAAE,EACF,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,EAAE,EACF,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,EACxC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,EACd,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CACf,CAAC;IACJ,CAAC;IAED,SAAS,OAAO,CACd,MAAc,EACd,IAAY,EACZ,IAAY,EACZ,IAAY,EACZ,IAAY,EACZ,KAAa,EACb,IAAY;QAEZ,OAAO;YACL,MAAM;YACN,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,KAAK;YACL,IAAI;YACJ,IAAI;SACL,CAAC;IACJ,CAAC;IAED,SAAS,QAAQ,CAAC,KAAa;QAC7B,IAAI,mBAAmB,CAAC,KAAK,CAAC,EAAE;YAC9B,MAAM,GAAG,GAAG,gBAAgB,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;YAC9C,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;YAChB,GAAG,CAAC,IAAI,0BAA0B;YAClC,OAAO,GAAG,CAAC;SACZ;QAED,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;YACzB,MAAM,GAAG,GAAG,gBAAgB,CAAC,gBAAgB,GAAG,KAAK,CAAC,CAAC;YACvD,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;YAChB,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;YACd,GAAG,CAAC,IAAI,wBAAwB;YAChC,OAAO,GAAG,CAAC;SACZ;QAED,IAAI,SAAS,CAAC,KAAK,CAAC;YAAE,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;QAEjD,IAAI,aAAa,CAAC,KAAK,CAAC;YAAE,OAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEzD,MAAM,GAAG,GAAG,gBAAgB,CAAC,iBAAiB,GAAG,KAAK,CAAC,CAAC;QACxD,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC;QACd,GAAG,CAAC,IAAI,GAAG,KAAK;cACZ,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC;;kBAEnB,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC;;;4BAGT;QAClB,OAAO,GAAG,CAAC;IACb,CAAC;IAED,SAAS,iBAAiB,CAAC,IAAY;;;QAGrC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QACtC,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,SAAS,UAAU,CAAC,GAAQ,EAAE,IAAS;QACrC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;;QAI/B,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE;YACpB,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SACtB;aAAM;;YAEL,GAAG,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;SACpD;IACH,CAAC;IAED;;;;IAIA,SAAS,aAAa,CAAC,GAAQ,EAAE,IAAa;QAC5C,MAAM,GAAG,GAAG,IAAI,yBAAyB;QACzC,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;;QAInC,IAAI,OAAO,GAAG,CAAC,CAAC;;;QAIhB,IAAI,QAAQ,GAAG,CAAC,CAAC;;;;QAKjB,IAAI,gBAAgB,GAAG,KAAK,CAAC;QAE7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;YAGxB,IAAI,CAAC,KAAK,EAAE;gBACV,gBAAgB,GAAG,IAAI,CAAC;gBACxB,SAAS;aACV;;YAGD,gBAAgB,GAAG,KAAK,CAAC;;YAGzB,IAAI,KAAK,KAAK,GAAG;gBAAE,SAAS;;;YAI5B,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,IAAI,QAAQ,EAAE;oBACZ,gBAAgB,GAAG,IAAI,CAAC;oBACxB,QAAQ,EAAE,CAAC;oBACX,OAAO,EAAE,CAAC;iBACX;qBAAM,IAAI,GAAG,EAAE;;;oBAGd,MAAM,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK,CAAC;iBAC3B;gBACD,SAAS;aACV;;;YAID,MAAM,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK,CAAC;YAC1B,QAAQ,EAAE,CAAC;SACZ;QAED,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;YAChC,IAAI,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;SACzB;QACD,IAAI,CAAC,IAAI,KAAK,gBAAgB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;YACxD,IAAI,IAAI,GAAG,CAAC;SACb;QACD,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAED;;;aAGwB,OAAO,CAAC,KAAa,EAAE,IAAwB;QACrE,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI;YAAE,OAAO,EAAE,CAAC;QAE/B,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;QAEzB,IAAI,IAAI,IAAI,SAAS,uBAAuB;YAC1C,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC/B,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC;YAE9B,QAAQ,SAAS;gBACf;oBACE,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;;gBAG1B;oBACE,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;;gBAG5B,mBAAmB;gBACnB;oBACE,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;;gBAG3B;;oBAEE,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;oBACxB,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;oBACxB,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;;gBAG1B;;oBAEE,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;aAC/B;YACD,IAAI,QAAQ,GAAG,SAAS;gBAAE,SAAS,GAAG,QAAQ,CAAC;SAChD;QAED,aAAa,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QAE9B,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;QACvC,QAAQ,SAAS;;;YAIf,kBAAkB;YAClB;gBACE,OAAO,SAAS,CAAC;YAEnB,2BAA2B;;gBAEzB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAE/B,IAAI,CAAC,IAAI;oBAAE,OAAO,SAAS,IAAI,GAAG,CAAC;gBAEnC,IAAI,UAAU,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;;;;oBAIlD,OAAO,IAAI,GAAG,IAAI,GAAG,SAAS,CAAC;iBAChC;gBAED,OAAO,IAAI,GAAG,SAAS,CAAC;aACzB;YAED;gBACE,OAAO,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC;YAE9B;gBACE,OAAO,GAAG,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC;SACpF;IACH;;;;;;;;"}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@jridgewell/resolve-uri/dist/types/resolve-uri.d.ts b/node_modules/@jridgewell/resolve-uri/dist/types/resolve-uri.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..b7f0b3b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/resolve-uri/dist/types/resolve-uri.d.ts[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Attempts to resolve `input` URL/path relative to `base`.[m
[32m+[m[32m */[m
[32m+[m[32mexport default function resolve(input: string, base: string | undefined): string;[m
[1mdiff --git a/node_modules/@jridgewell/resolve-uri/package.json b/node_modules/@jridgewell/resolve-uri/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..02a4c51[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/resolve-uri/package.json[m
[36m@@ -0,0 +1,69 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "@jridgewell/resolve-uri",[m
[32m+[m[32m  "version": "3.1.2",[m
[32m+[m[32m  "description": "Resolve a URI relative to an optional base URI",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "resolve",[m
[32m+[m[32m    "uri",[m
[32m+[m[32m    "url",[m
[32m+[m[32m    "path"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "author": "Justin Ridgewell <justin@ridgewell.name>",[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "repository": "https://github.com/jridgewell/resolve-uri",[m
[32m+[m[32m  "main": "dist/resolve-uri.umd.js",[m
[32m+[m[32m  "module": "dist/resolve-uri.mjs",[m
[32m+[m[32m  "types": "dist/types/resolve-uri.d.ts",[m
[32m+[m[32m  "exports": {[m
[32m+[m[32m    ".": [[m
[32m+[m[32m      {[m
[32m+[m[32m        "types": "./dist/types/resolve-uri.d.ts",[m
[32m+[m[32m        "browser": "./dist/resolve-uri.umd.js",[m
[32m+[m[32m        "require": "./dist/resolve-uri.umd.js",[m
[32m+[m[32m        "import": "./dist/resolve-uri.mjs"[m
[32m+[m[32m      },[m
[32m+[m[32m      "./dist/resolve-uri.umd.js"[m
[32m+[m[32m    ],[m
[32m+[m[32m    "./package.json": "./package.json"[m
[32m+[m[32m  },[m
[32m+[m[32m  "files": [[m
[32m+[m[32m    "dist"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "engines": {[m
[32m+[m[32m    "node": ">=6.0.0"[m
[32m+[m[32m  },[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "prebuild": "rm -rf dist",[m
[32m+[m[32m    "build": "run-s -n build:*",[m
[32m+[m[32m    "build:rollup": "rollup -c rollup.config.js",[m
[32m+[m[32m    "build:ts": "tsc --project tsconfig.build.json",[m
[32m+[m[32m    "lint": "run-s -n lint:*",[m
[32m+[m[32m    "lint:prettier": "npm run test:lint:prettier -- --write",[m
[32m+[m[32m    "lint:ts": "npm run test:lint:ts -- --fix",[m
[32m+[m[32m    "pretest": "run-s build:rollup",[m
[32m+[m[32m    "test": "run-s -n test:lint test:only",[m
[32m+[m[32m    "test:debug": "mocha --inspect-brk",[m
[32m+[m[32m    "test:lint": "run-s -n test:lint:*",[m
[32m+[m[32m    "test:lint:prettier": "prettier --check '{src,test}/**/*.ts'",[m
[32m+[m[32m    "test:lint:ts": "eslint '{src,test}/**/*.ts'",[m
[32m+[m[32m    "test:only": "mocha",[m
[32m+[m[32m    "test:coverage": "c8 mocha",[m
[32m+[m[32m    "test:watch": "mocha --watch",[m
[32m+[m[32m    "prepublishOnly": "npm run preversion",[m
[32m+[m[32m    "preversion": "run-s test build"[m
[32m+[m[32m  },[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "@jridgewell/resolve-uri-latest": "npm:@jridgewell/resolve-uri@*",[m
[32m+[m[32m    "@rollup/plugin-typescript": "8.3.0",[m
[32m+[m[32m    "@typescript-eslint/eslint-plugin": "5.10.0",[m
[32m+[m[32m    "@typescript-eslint/parser": "5.10.0",[m
[32m+[m[32m    "c8": "7.11.0",[m
[32m+[m[32m    "eslint": "8.7.0",[m
[32m+[m[32m    "eslint-config-prettier": "8.3.0",[m
[32m+[m[32m    "mocha": "9.2.0",[m
[32m+[m[32m    "npm-run-all": "4.1.5",[m
[32m+[m[32m    "prettier": "2.5.1",[m
[32m+[m[32m    "rollup": "2.66.0",[m
[32m+[m[32m    "typescript": "4.5.5"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/LICENSE b/node_modules/@jridgewell/sourcemap-codec/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..a331065[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/LICENSE[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mThe MIT License[m
[32m+[m
[32m+[m[32mCopyright (c) 2015 Rich Harris[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in[m
[32m+[m[32mall copies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN[m
[32m+[m[32mTHE SOFTWARE.[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/README.md b/node_modules/@jridgewell/sourcemap-codec/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..b3e0708[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/README.md[m
[36m@@ -0,0 +1,264 @@[m
[32m+[m[32m# @jridgewell/sourcemap-codec[m
[32m+[m
[32m+[m[32mEncode/decode the `mappings` property of a [sourcemap](https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit).[m
[32m+[m
[32m+[m
[32m+[m[32m## Why?[m
[32m+[m
[32m+[m[32mSourcemaps are difficult to generate and manipulate, because the `mappings` property – the part that actually links the generated code back to the original source – is encoded using an obscure method called [Variable-length quantity](https://en.wikipedia.org/wiki/Variable-length_quantity). On top of that, each segment in the mapping contains offsets rather than absolute indices, which means that you can't look at a segment in isolation – you have to understand the whole sourcemap.[m
[32m+[m
[32m+[m[32mThis package makes the process slightly easier.[m
[32m+[m
[32m+[m
[32m+[m[32m## Installation[m
[32m+[m
[32m+[m[32m```bash[m
[32m+[m[32mnpm install @jridgewell/sourcemap-codec[m
[32m+[m[32m```[m
[32m+[m
[32m+[m
[32m+[m[32m## Usage[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mimport { encode, decode } from '@jridgewell/sourcemap-codec';[m
[32m+[m
[32m+[m[32mvar decoded = decode( ';EAEEA,EAAE,EAAC,CAAE;ECQY,UACC' );[m
[32m+[m
[32m+[m[32massert.deepEqual( decoded, [[m
[32m+[m	[32m// the first line (of the generated code) has no mappings,[m
[32m+[m	[32m// as shown by the starting semi-colon (which separates lines)[m
[32m+[m	[32m[],[m
[32m+[m
[32m+[m	[32m// the second line contains four (comma-separated) segments[m
[32m+[m	[32m[[m
[32m+[m		[32m// segments are encoded as you'd expect:[m
[32m+[m		[32m// [ generatedCodeColumn, sourceIndex, sourceCodeLine, sourceCodeColumn, nameIndex ][m
[32m+[m
[32m+[m		[32m// i.e. the first segment begins at column 2, and maps back to the second column[m
[32m+[m		[32m// of the second line (both zero-based) of the 0th source, and uses the 0th[m
[32m+[m		[32m// name in the `map.names` array[m
[32m+[m		[32m[ 2, 0, 2, 2, 0 ],[m
[32m+[m
[32m+[m		[32m// the remaining segments are 4-length rather than 5-length,[m
[32m+[m		[32m// because they don't map a name[m
[32m+[m		[32m[ 4, 0, 2, 4 ],[m
[32m+[m		[32m[ 6, 0, 2, 5 ],[m
[32m+[m		[32m[ 7, 0, 2, 7 ][m
[32m+[m	[32m],[m
[32m+[m
[32m+[m	[32m// the final line contains two segments[m
[32m+[m	[32m[[m
[32m+[m		[32m[ 2, 1, 10, 19 ],[m
[32m+[m		[32m[ 12, 1, 11, 20 ][m
[32m+[m	[32m][m
[32m+[m[32m]);[m
[32m+[m
[32m+[m[32mvar encoded = encode( decoded );[m
[32m+[m[32massert.equal( encoded, ';EAEEA,EAAE,EAAC,CAAE;ECQY,UACC' );[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Benchmarks[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32mnode v20.10.0[m
[32m+[m
[32m+[m[32mamp.js.map - 45120 segments[m
[32m+[m
[32m+[m[32mDecode Memory Usage:[m
[32m+[m[32mlocal code                             5815135 bytes[m
[32m+[m[32m@jridgewell/sourcemap-codec 1.4.15     5868160 bytes[m
[32m+[m[32msourcemap-codec                        5492584 bytes[m
[32m+[m[32msource-map-0.6.1                      13569984 bytes[m
[32m+[m[32msource-map-0.8.0                       6390584 bytes[m
[32m+[m[32mchrome dev tools                       8011136 bytes[m
[32m+[m[32mSmallest memory usage is sourcemap-codec[m
[32m+[m
[32m+[m[32mDecode speed:[m
[32m+[m[32mdecode: local code x 492 ops/sec ±1.22% (90 runs sampled)[m
[32m+[m[32mdecode: @jridgewell/sourcemap-codec 1.4.15 x 499 ops/sec ±1.16% (89 runs sampled)[m
[32m+[m[32mdecode: sourcemap-codec x 376 ops/sec ±1.66% (89 runs sampled)[m
[32m+[m[32mdecode: source-map-0.6.1 x 34.99 ops/sec ±0.94% (48 runs sampled)[m
[32m+[m[32mdecode: source-map-0.8.0 x 351 ops/sec ±0.07% (95 runs sampled)[m
[32m+[m[32mchrome dev tools x 165 ops/sec ±0.91% (86 runs sampled)[m
[32m+[m[32mFastest is decode: @jridgewell/sourcemap-codec 1.4.15[m
[32m+[m
[32m+[m[32mEncode Memory Usage:[m
[32m+[m[32mlocal code                              444248 bytes[m
[32m+[m[32m@jridgewell/sourcemap-codec 1.4.15      623024 bytes[m
[32m+[m[32msourcemap-codec                        8696280 bytes[m
[32m+[m[32msource-map-0.6.1                       8745176 bytes[m
[32m+[m[32msource-map-0.8.0                       8736624 bytes[m
[32m+[m[32mSmallest memory usage is local code[m
[32m+[m
[32m+[m[32mEncode speed:[m
[32m+[m[32mencode: local code x 796 ops/sec ±0.11% (97 runs sampled)[m
[32m+[m[32mencode: @jridgewell/sourcemap-codec 1.4.15 x 795 ops/sec ±0.25% (98 runs sampled)[m
[32m+[m[32mencode: sourcemap-codec x 231 ops/sec ±0.83% (86 runs sampled)[m
[32m+[m[32mencode: source-map-0.6.1 x 166 ops/sec ±0.57% (86 runs sampled)[m
[32m+[m[32mencode: source-map-0.8.0 x 203 ops/sec ±0.45% (88 runs sampled)[m
[32m+[m[32mFastest is encode: local code,encode: @jridgewell/sourcemap-codec 1.4.15[m
[32m+[m
[32m+[m
[32m+[m[32m***[m
[32m+[m
[32m+[m
[32m+[m[32mbabel.min.js.map - 347793 segments[m
[32m+[m
[32m+[m[32mDecode Memory Usage:[m
[32m+[m[32mlocal code                            35424960 bytes[m
[32m+[m[32m@jridgewell/sourcemap-codec 1.4.15    35424696 bytes[m
[32m+[m[32msourcemap-codec                       36033464 bytes[m
[32m+[m[32msource-map-0.6.1                      62253704 bytes[m
[32m+[m[32msource-map-0.8.0                      43843920 bytes[m
[32m+[m[32mchrome dev tools                      45111400 bytes[m
[32m+[m[32mSmallest memory usage is @jridgewell/sourcemap-codec 1.4.15[m
[32m+[m
[32m+[m[32mDecode speed:[m
[32m+[m[32mdecode: local code x 38.18 ops/sec ±5.44% (52 runs sampled)[m
[32m+[m[32mdecode: @jridgewell/sourcemap-codec 1.4.15 x 38.36 ops/sec ±5.02% (52 runs sampled)[m
[32m+[m[32mdecode: sourcemap-codec x 34.05 ops/sec ±4.45% (47 runs sampled)[m
[32m+[m[32mdecode: source-map-0.6.1 x 4.31 ops/sec ±2.76% (15 runs sampled)[m
[32m+[m[32mdecode: source-map-0.8.0 x 55.60 ops/sec ±0.13% (73 runs sampled)[m
[32m+[m[32mchrome dev tools x 16.94 ops/sec ±3.78% (46 runs sampled)[m
[32m+[m[32mFastest is decode: source-map-0.8.0[m
[32m+[m
[32m+[m[32mEncode Memory Usage:[m
[32m+[m[32mlocal code                             2606016 bytes[m
[32m+[m[32m@jridgewell/sourcemap-codec 1.4.15     2626440 bytes[m
[32m+[m[32msourcemap-codec                       21152576 bytes[m
[32m+[m[32msource-map-0.6.1                      25023928 bytes[m
[32m+[m[32msource-map-0.8.0                      25256448 bytes[m
[32m+[m[32mSmallest memory usage is local code[m
[32m+[m
[32m+[m[32mEncode speed:[m
[32m+[m[32mencode: local code x 127 ops/sec ±0.18% (83 runs sampled)[m
[32m+[m[32mencode: @jridgewell/sourcemap-codec 1.4.15 x 128 ops/sec ±0.26% (83 runs sampled)[m
[32m+[m[32mencode: sourcemap-codec x 29.31 ops/sec ±2.55% (53 runs sampled)[m
[32m+[m[32mencode: source-map-0.6.1 x 18.85 ops/sec ±3.19% (36 runs sampled)[m
[32m+[m[32mencode: source-map-0.8.0 x 19.34 ops/sec ±1.97% (36 runs sampled)[m
[32m+[m[32mFastest is encode: @jridgewell/sourcemap-codec 1.4.15[m
[32m+[m
[32m+[m
[32m+[m[32m***[m
[32m+[m
[32m+[m
[32m+[m[32mpreact.js.map - 1992 segments[m
[32m+[m
[32m+[m[32mDecode Memory Usage:[m
[32m+[m[32mlocal code                              261696 bytes[m
[32m+[m[32m@jridgewell/sourcemap-codec 1.4.15      244296 bytes[m
[32m+[m[32msourcemap-codec                         302816 bytes[m
[32m+[m[32msource-map-0.6.1                        939176 bytes[m
[32m+[m[32msource-map-0.8.0                           336 bytes[m
[32m+[m[32mchrome dev tools                        587368 bytes[m
[32m+[m[32mSmallest memory usage is source-map-0.8.0[m
[32m+[m
[32m+[m[32mDecode speed:[m
[32m+[m[32mdecode: local code x 17,782 ops/sec ±0.32% (97 runs sampled)[m
[32m+[m[32mdecode: @jridgewell/sourcemap-codec 1.4.15 x 17,863 ops/sec ±0.40% (100 runs sampled)[m
[32m+[m[32mdecode: sourcemap-codec x 12,453 ops/sec ±0.27% (101 runs sampled)[m
[32m+[m[32mdecode: source-map-0.6.1 x 1,288 ops/sec ±1.05% (96 runs sampled)[m
[32m+[m[32mdecode: source-map-0.8.0 x 9,289 ops/sec ±0.27% (101 runs sampled)[m
[32m+[m[32mchrome dev tools x 4,769 ops/sec ±0.18% (100 runs sampled)[m
[32m+[m[32mFastest is decode: @jridgewell/sourcemap-codec 1.4.15[m
[32m+[m
[32m+[m[32mEncode Memory Usage:[m
[32m+[m[32mlocal code                              262944 bytes[m
[32m+[m[32m@jridgewell/sourcemap-codec 1.4.15       25544 bytes[m
[32m+[m[32msourcemap-codec                         323048 bytes[m
[32m+[m[32msource-map-0.6.1                        507808 bytes[m
[32m+[m[32msource-map-0.8.0                        507480 bytes[m
[32m+[m[32mSmallest memory usage is @jridgewell/sourcemap-codec 1.4.15[m
[32m+[m
[32m+[m[32mEncode speed:[m
[32m+[m[32mencode: local code x 24,207 ops/sec ±0.79% (95 runs sampled)[m
[32m+[m[32mencode: @jridgewell/sourcemap-codec 1.4.15 x 24,288 ops/sec ±0.48% (96 runs sampled)[m
[32m+[m[32mencode: sourcemap-codec x 6,761 ops/sec ±0.21% (100 runs sampled)[m
[32m+[m[32mencode: source-map-0.6.1 x 5,374 ops/sec ±0.17% (99 runs sampled)[m
[32m+[m[32mencode: source-map-0.8.0 x 5,633 ops/sec ±0.32% (99 runs sampled)[m
[32m+[m[32mFastest is encode: @jridgewell/sourcemap-codec 1.4.15,encode: local code[m
[32m+[m
[32m+[m
[32m+[m[32m***[m
[32m+[m
[32m+[m
[32m+[m[32mreact.js.map - 5726 segments[m
[32m+[m
[32m+[m[32mDecode Memory Usage:[m
[32m+[m[32mlocal code                              678816 bytes[m
[32m+[m[32m@jridgewell/sourcemap-codec 1.4.15      678816 bytes[m
[32m+[m[32msourcemap-codec                         816400 bytes[m
[32m+[m[32msource-map-0.6.1                       2288864 bytes[m
[32m+[m[32msource-map-0.8.0                        721360 bytes[m
[32m+[m[32mchrome dev tools                       1012512 bytes[m
[32m+[m[32mSmallest memory usage is local code[m
[32m+[m
[32m+[m[32mDecode speed:[m
[32m+[m[32mdecode: local code x 6,178 ops/sec ±0.19% (98 runs sampled)[m
[32m+[m[32mdecode: @jridgewell/sourcemap-codec 1.4.15 x 6,261 ops/sec ±0.22% (100 runs sampled)[m
[32m+[m[32mdecode: sourcemap-codec x 4,472 ops/sec ±0.90% (99 runs sampled)[m
[32m+[m[32mdecode: source-map-0.6.1 x 449 ops/sec ±0.31% (95 runs sampled)[m
[32m+[m[32mdecode: source-map-0.8.0 x 3,219 ops/sec ±0.13% (100 runs sampled)[m
[32m+[m[32mchrome dev tools x 1,743 ops/sec ±0.20% (99 runs sampled)[m
[32m+[m[32mFastest is decode: @jridgewell/sourcemap-codec 1.4.15[m
[32m+[m
[32m+[m[32mEncode Memory Usage:[m
[32m+[m[32mlocal code                              140960 bytes[m
[32m+[m[32m@jridgewell/sourcemap-codec 1.4.15      159808 bytes[m
[32m+[m[32msourcemap-codec                         969304 bytes[m
[32m+[m[32msource-map-0.6.1                        930520 bytes[m
[32m+[m[32msource-map-0.8.0                        930248 bytes[m
[32m+[m[32mSmallest memory usage is local code[m
[32m+[m
[32m+[m[32mEncode speed:[m
[32m+[m[32mencode: local code x 8,013 ops/sec ±0.19% (100 runs sampled)[m
[32m+[m[32mencode: @jridgewell/sourcemap-codec 1.4.15 x 7,989 ops/sec ±0.20% (101 runs sampled)[m
[32m+[m[32mencode: sourcemap-codec x 2,472 ops/sec ±0.21% (99 runs sampled)[m
[32m+[m[32mencode: source-map-0.6.1 x 2,200 ops/sec ±0.17% (99 runs sampled)[m
[32m+[m[32mencode: source-map-0.8.0 x 2,220 ops/sec ±0.37% (99 runs sampled)[m
[32m+[m[32mFastest is encode: local code[m
[32m+[m
[32m+[m
[32m+[m[32m***[m
[32m+[m
[32m+[m
[32m+[m[32mvscode.map - 2141001 segments[m
[32m+[m
[32m+[m[32mDecode Memory Usage:[m
[32m+[m[32mlocal code                           198955264 bytes[m
[32m+[m[32m@jridgewell/sourcemap-codec 1.4.15   199175352 bytes[m
[32m+[m[32msourcemap-codec                      199102688 bytes[m
[32m+[m[32msource-map-0.6.1                     386323432 bytes[m
[32m+[m[32msource-map-0.8.0                     244116432 bytes[m
[32m+[m[32mchrome dev tools                     293734280 bytes[m
[32m+[m[32mSmallest memory usage is local code[m
[32m+[m
[32m+[m[32mDecode speed:[m
[32m+[m[32mdecode: local code x 3.90 ops/sec ±22.21% (15 runs sampled)[m
[32m+[m[32mdecode: @jridgewell/sourcemap-codec 1.4.15 x 3.95 ops/sec ±23.53% (15 runs sampled)[m
[32m+[m[32mdecode: sourcemap-codec x 3.82 ops/sec ±17.94% (14 runs sampled)[m
[32m+[m[32mdecode: source-map-0.6.1 x 0.61 ops/sec ±7.81% (6 runs sampled)[m
[32m+[m[32mdecode: source-map-0.8.0 x 9.54 ops/sec ±0.28% (28 runs sampled)[m
[32m+[m[32mchrome dev tools x 2.18 ops/sec ±10.58% (10 runs sampled)[m
[32m+[m[32mFastest is decode: source-map-0.8.0[m
[32m+[m
[32m+[m[32mEncode Memory Usage:[m
[32m+[m[32mlocal code                            13509880 bytes[m
[32m+[m[32m@jridgewell/sourcemap-codec 1.4.15    13537648 bytes[m
[32m+[m[32msourcemap-codec                       32540104 bytes[m
[32m+[m[32msource-map-0.6.1                     127531040 bytes[m
[32m+[m[32msource-map-0.8.0                     127535312 bytes[m
[32m+[m[32mSmallest memory usage is local code[m
[32m+[m
[32m+[m[32mEncode speed:[m
[32m+[m[32mencode: local code x 20.10 ops/sec ±0.19% (38 runs sampled)[m
[32m+[m[32mencode: @jridgewell/sourcemap-codec 1.4.15 x 20.26 ops/sec ±0.32% (38 runs sampled)[m
[32m+[m[32mencode: sourcemap-codec x 5.44 ops/sec ±1.64% (18 runs sampled)[m
[32m+[m[32mencode: source-map-0.6.1 x 2.30 ops/sec ±4.79% (10 runs sampled)[m
[32m+[m[32mencode: source-map-0.8.0 x 2.46 ops/sec ±6.53% (10 runs sampled)[m
[32m+[m[32mFastest is encode: @jridgewell/sourcemap-codec 1.4.15[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m# License[m
[32m+[m
[32m+[m[32mMIT[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs b/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs[m
[1mnew file mode 100644[m
[1mindex 0000000..60e17b3[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs[m
[36m@@ -0,0 +1,424 @@[m
[32m+[m[32mconst comma = ','.charCodeAt(0);[m
[32m+[m[32mconst semicolon = ';'.charCodeAt(0);[m
[32m+[m[32mconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';[m
[32m+[m[32mconst intToChar = new Uint8Array(64); // 64 possible chars.[m
[32m+[m[32mconst charToInt = new Uint8Array(128); // z is 122 in ASCII[m
[32m+[m[32mfor (let i = 0; i < chars.length; i++) {[m
[32m+[m[32m    const c = chars.charCodeAt(i);[m
[32m+[m[32m    intToChar[i] = c;[m
[32m+[m[32m    charToInt[c] = i;[m
[32m+[m[32m}[m
[32m+[m[32mfunction decodeInteger(reader, relative) {[m
[32m+[m[32m    let value = 0;[m
[32m+[m[32m    let shift = 0;[m
[32m+[m[32m    let integer = 0;[m
[32m+[m[32m    do {[m
[32m+[m[32m        const c = reader.next();[m
[32m+[m[32m        integer = charToInt[c];[m
[32m+[m[32m        value |= (integer & 31) << shift;[m
[32m+[m[32m        shift += 5;[m
[32m+[m[32m    } while (integer & 32);[m
[32m+[m[32m    const shouldNegate = value & 1;[m
[32m+[m[32m    value >>>= 1;[m
[32m+[m[32m    if (shouldNegate) {[m
[32m+[m[32m        value = -0x80000000 | -value;[m
[32m+[m[32m    }[m
[32m+[m[32m    return relative + value;[m
[32m+[m[32m}[m
[32m+[m[32mfunction encodeInteger(builder, num, relative) {[m
[32m+[m[32m    let delta = num - relative;[m
[32m+[m[32m    delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;[m
[32m+[m[32m    do {[m
[32m+[m[32m        let clamped = delta & 0b011111;[m
[32m+[m[32m        delta >>>= 5;[m
[32m+[m[32m        if (delta > 0)[m
[32m+[m[32m            clamped |= 0b100000;[m
[32m+[m[32m        builder.write(intToChar[clamped]);[m
[32m+[m[32m    } while (delta > 0);[m
[32m+[m[32m    return num;[m
[32m+[m[32m}[m
[32m+[m[32mfunction hasMoreVlq(reader, max) {[m
[32m+[m[32m    if (reader.pos >= max)[m
[32m+[m[32m        return false;[m
[32m+[m[32m    return reader.peek() !== comma;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst bufLength = 1024 * 16;[m
[32m+[m[32m// Provide a fallback for older environments.[m
[32m+[m[32mconst td = typeof TextDecoder !== 'undefined'[m
[32m+[m[32m    ? /* #__PURE__ */ new TextDecoder()[m
[32m+[m[32m    : typeof Buffer !== 'undefined'[m
[32m+[m[32m        ? {[m
[32m+[m[32m            decode(buf) {[m
[32m+[m[32m                const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);[m
[32m+[m[32m                return out.toString();[m
[32m+[m[32m            },[m
[32m+[m[32m        }[m
[32m+[m[32m        : {[m
[32m+[m[32m            decode(buf) {[m
[32m+[m[32m                let out = '';[m
[32m+[m[32m                for (let i = 0; i < buf.length; i++) {[m
[32m+[m[32m                    out += String.fromCharCode(buf[i]);[m
[32m+[m[32m                }[m
[32m+[m[32m                return out;[m
[32m+[m[32m            },[m
[32m+[m[32m        };[m
[32m+[m[32mclass StringWriter {[m
[32m+[m[32m    constructor() {[m
[32m+[m[32m        this.pos = 0;[m
[32m+[m[32m        this.out = '';[m
[32m+[m[32m        this.buffer = new Uint8Array(bufLength);[m
[32m+[m[32m    }[m
[32m+[m[32m    write(v) {[m
[32m+[m[32m        const { buffer } = this;[m
[32m+[m[32m        buffer[this.pos++] = v;[m
[32m+[m[32m        if (this.pos === bufLength) {[m
[32m+[m[32m            this.out += td.decode(buffer);[m
[32m+[m[32m            this.pos = 0;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    flush() {[m
[32m+[m[32m        const { buffer, out, pos } = this;[m
[32m+[m[32m        return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mclass StringReader {[m
[32m+[m[32m    constructor(buffer) {[m
[32m+[m[32m        this.pos = 0;[m
[32m+[m[32m        this.buffer = buffer;[m
[32m+[m[32m    }[m
[32m+[m[32m    next() {[m
[32m+[m[32m        return this.buffer.charCodeAt(this.pos++);[m
[32m+[m[32m    }[m
[32m+[m[32m    peek() {[m
[32m+[m[32m        return this.buffer.charCodeAt(this.pos);[m
[32m+[m[32m    }[m
[32m+[m[32m    indexOf(char) {[m
[32m+[m[32m        const { buffer, pos } = this;[m
[32m+[m[32m        const idx = buffer.indexOf(char, pos);[m
[32m+[m[32m        return idx === -1 ? buffer.length : idx;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst EMPTY = [];[m
[32m+[m[32mfunction decodeOriginalScopes(input) {[m
[32m+[m[32m    const { length } = input;[m
[32m+[m[32m    const reader = new StringReader(input);[m
[32m+[m[32m    const scopes = [];[m
[32m+[m[32m    const stack = [];[m
[32m+[m[32m    let line = 0;[m
[32m+[m[32m    for (; reader.pos < length; reader.pos++) {[m
[32m+[m[32m        line = decodeInteger(reader, line);[m
[32m+[m[32m        const column = decodeInteger(reader, 0);[m
[32m+[m[32m        if (!hasMoreVlq(reader, length)) {[m
[32m+[m[32m            const last = stack.pop();[m
[32m+[m[32m            last[2] = line;[m
[32m+[m[32m            last[3] = column;[m
[32m+[m[32m            continue;[m
[32m+[m[32m        }[m
[32m+[m[32m        const kind = decodeInteger(reader, 0);[m
[32m+[m[32m        const fields = decodeInteger(reader, 0);[m
[32m+[m[32m        const hasName = fields & 0b0001;[m
[32m+[m[32m        const scope = (hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind]);[m
[32m+[m[32m        let vars = EMPTY;[m
[32m+[m[32m        if (hasMoreVlq(reader, length)) {[m
[32m+[m[32m            vars = [];[m
[32m+[m[32m            do {[m
[32m+[m[32m                const varsIndex = decodeInteger(reader, 0);[m
[32m+[m[32m                vars.push(varsIndex);[m
[32m+[m[32m            } while (hasMoreVlq(reader, length));[m
[32m+[m[32m        }[m
[32m+[m[32m        scope.vars = vars;[m
[32m+[m[32m        scopes.push(scope);[m
[32m+[m[32m        stack.push(scope);[m
[32m+[m[32m    }[m
[32m+[m[32m    return scopes;[m
[32m+[m[32m}[m
[32m+[m[32mfunction encodeOriginalScopes(scopes) {[m
[32m+[m[32m    const writer = new StringWriter();[m
[32m+[m[32m    for (let i = 0; i < scopes.length;) {[m
[32m+[m[32m        i = _encodeOriginalScopes(scopes, i, writer, [0]);[m
[32m+[m[32m    }[m
[32m+[m[32m    return writer.flush();[m
[32m+[m[32m}[m
[32m+[m[32mfunction _encodeOriginalScopes(scopes, index, writer, state) {[m
[32m+[m[32m    const scope = scopes[index];[m
[32m+[m[32m    const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;[m
[32m+[m[32m    if (index > 0)[m
[32m+[m[32m        writer.write(comma);[m
[32m+[m[32m    state[0] = encodeInteger(writer, startLine, state[0]);[m
[32m+[m[32m    encodeInteger(writer, startColumn, 0);[m
[32m+[m[32m    encodeInteger(writer, kind, 0);[m
[32m+[m[32m    const fields = scope.length === 6 ? 0b0001 : 0;[m
[32m+[m[32m    encodeInteger(writer, fields, 0);[m
[32m+[m[32m    if (scope.length === 6)[m
[32m+[m[32m        encodeInteger(writer, scope[5], 0);[m
[32m+[m[32m    for (const v of vars) {[m
[32m+[m[32m        encodeInteger(writer, v, 0);[m
[32m+[m[32m    }[m
[32m+[m[32m    for (index++; index < scopes.length;) {[m
[32m+[m[32m        const next = scopes[index];[m
[32m+[m[32m        const { 0: l, 1: c } = next;[m
[32m+[m[32m        if (l > endLine || (l === endLine && c >= endColumn)) {[m
[32m+[m[32m            break;[m
[32m+[m[32m        }[m
[32m+[m[32m        index = _encodeOriginalScopes(scopes, index, writer, state);[m
[32m+[m[32m    }[m
[32m+[m[32m    writer.write(comma);[m
[32m+[m[32m    state[0] = encodeInteger(writer, endLine, state[0]);[m
[32m+[m[32m    encodeInteger(writer, endColumn, 0);[m
[32m+[m[32m    return index;[m
[32m+[m[32m}[m
[32m+[m[32mfunction decodeGeneratedRanges(input) {[m
[32m+[m[32m    const { length } = input;[m
[32m+[m[32m    const reader = new StringReader(input);[m
[32m+[m[32m    const ranges = [];[m
[32m+[m[32m    const stack = [];[m
[32m+[m[32m    let genLine = 0;[m
[32m+[m[32m    let definitionSourcesIndex = 0;[m
[32m+[m[32m    let definitionScopeIndex = 0;[m
[32m+[m[32m    let callsiteSourcesIndex = 0;[m
[32m+[m[32m    let callsiteLine = 0;[m
[32m+[m[32m    let callsiteColumn = 0;[m
[32m+[m[32m    let bindingLine = 0;[m
[32m+[m[32m    let bindingColumn = 0;[m
[32m+[m[32m    do {[m
[32m+[m[32m        const semi = reader.indexOf(';');[m
[32m+[m[32m        let genColumn = 0;[m
[32m+[m[32m        for (; reader.pos < semi; reader.pos++) {[m
[32m+[m[32m            genColumn = decodeInteger(reader, genColumn);[m
[32m+[m[32m            if (!hasMoreVlq(reader, semi)) {[m
[32m+[m[32m                const last = stack.pop();[m
[32m+[m[32m                last[2] = genLine;[m
[32m+[m[32m                last[3] = genColumn;[m
[32m+[m[32m                continue;[m
[32m+[m[32m            }[m
[32m+[m[32m            const fields = decodeInteger(reader, 0);[m
[32m+[m[32m            const hasDefinition = fields & 0b0001;[m
[32m+[m[32m            const hasCallsite = fields & 0b0010;[m
[32m+[m[32m            const hasScope = fields & 0b0100;[m
[32m+[m[32m            let callsite = null;[m
[32m+[m[32m            let bindings = EMPTY;[m
[32m+[m[32m            let range;[m
[32m+[m[32m            if (hasDefinition) {[m
[32m+[m[32m                const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);[m
[32m+[m[32m                definitionScopeIndex = decodeInteger(reader, definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0);[m
[32m+[m[32m                definitionSourcesIndex = defSourcesIndex;[m
[32m+[m[32m                range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex];[m
[32m+[m[32m            }[m
[32m+[m[32m            else {[m
[32m+[m[32m                range = [genLine, genColumn, 0, 0];[m
[32m+[m[32m            }[m
[32m+[m[32m            range.isScope = !!hasScope;[m
[32m+[m[32m            if (hasCallsite) {[m
[32m+[m[32m                const prevCsi = callsiteSourcesIndex;[m
[32m+[m[32m                const prevLine = callsiteLine;[m
[32m+[m[32m                callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);[m
[32m+[m[32m                const sameSource = prevCsi === callsiteSourcesIndex;[m
[32m+[m[32m                callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);[m
[32m+[m[32m                callsiteColumn = decodeInteger(reader, sameSource && prevLine === callsiteLine ? callsiteColumn : 0);[m
[32m+[m[32m                callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];[m
[32m+[m[32m            }[m
[32m+[m[32m            range.callsite = callsite;[m
[32m+[m[32m            if (hasMoreVlq(reader, semi)) {[m
[32m+[m[32m                bindings = [];[m
[32m+[m[32m                do {[m
[32m+[m[32m                    bindingLine = genLine;[m
[32m+[m[32m                    bindingColumn = genColumn;[m
[32m+[m[32m                    const expressionsCount = decodeInteger(reader, 0);[m
[32m+[m[32m                    let expressionRanges;[m
[32m+[m[32m                    if (expressionsCount < -1) {[m
[32m+[m[32m                        expressionRanges = [[decodeInteger(reader, 0)]];[m
[32m+[m[32m                        for (let i = -1; i > expressionsCount; i--) {[m
[32m+[m[32m                            const prevBl = bindingLine;[m
[32m+[m[32m                            bindingLine = decodeInteger(reader, bindingLine);[m
[32m+[m[32m                            bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);[m
[32m+[m[32m                            const expression = decodeInteger(reader, 0);[m
[32m+[m[32m                            expressionRanges.push([expression, bindingLine, bindingColumn]);[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
[32m+[m[32m                    else {[m
[32m+[m[32m                        expressionRanges = [[expressionsCount]];[m
[32m+[m[32m                    }[m
[32m+[m[32m                    bindings.push(expressionRanges);[m
[32m+[m[32m                } while (hasMoreVlq(reader, semi));[m
[32m+[m[32m            }[m
[32m+[m[32m            range.bindings = bindings;[m
[32m+[m[32m            ranges.push(range);[m
[32m+[m[32m            stack.push(range);[m
[32m+[m[32m        }[m
[32m+[m[32m        genLine++;[m
[32m+[m[32m        reader.pos = semi + 1;[m
[32m+[m[32m    } while (reader.pos < length);[m
[32m+[m[32m    return ranges;[m
[32m+[m[32m}[m
[32m+[m[32mfunction encodeGeneratedRanges(ranges) {[m
[32m+[m[32m    if (ranges.length === 0)[m
[32m+[m[32m        return '';[m
[32m+[m[32m    const writer = new StringWriter();[m
[32m+[m[32m    for (let i = 0; i < ranges.length;) {[m
[32m+[m[32m        i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);[m
[32m+[m[32m    }[m
[32m+[m[32m    return writer.flush();[m
[32m+[m[32m}[m
[32m+[m[32mfunction _encodeGeneratedRanges(ranges, index, writer, state) {[m
[32m+[m[32m    const range = ranges[index];[m
[32m+[m[32m    const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, isScope, callsite, bindings, } = range;[m
[32m+[m[32m    if (state[0] < startLine) {[m
[32m+[m[32m        catchupLine(writer, state[0], startLine);[m
[32m+[m[32m        state[0] = startLine;[m
[32m+[m[32m        state[1] = 0;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (index > 0) {[m
[32m+[m[32m        writer.write(comma);[m
[32m+[m[32m    }[m
[32m+[m[32m    state[1] = encodeInteger(writer, range[1], state[1]);[m
[32m+[m[32m    const fields = (range.length === 6 ? 0b0001 : 0) | (callsite ? 0b0010 : 0) | (isScope ? 0b0100 : 0);[m
[32m+[m[32m    encodeInteger(writer, fields, 0);[m
[32m+[m[32m    if (range.length === 6) {[m
[32m+[m[32m        const { 4: sourcesIndex, 5: scopesIndex } = range;[m
[32m+[m[32m        if (sourcesIndex !== state[2]) {[m
[32m+[m[32m            state[3] = 0;[m
[32m+[m[32m        }[m
[32m+[m[32m        state[2] = encodeInteger(writer, sourcesIndex, state[2]);[m
[32m+[m[32m        state[3] = encodeInteger(writer, scopesIndex, state[3]);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (callsite) {[m
[32m+[m[32m        const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite;[m
[32m+[m[32m        if (sourcesIndex !== state[4]) {[m
[32m+[m[32m            state[5] = 0;[m
[32m+[m[32m            state[6] = 0;[m
[32m+[m[32m        }[m
[32m+[m[32m        else if (callLine !== state[5]) {[m
[32m+[m[32m            state[6] = 0;[m
[32m+[m[32m        }[m
[32m+[m[32m        state[4] = encodeInteger(writer, sourcesIndex, state[4]);[m
[32m+[m[32m        state[5] = encodeInteger(writer, callLine, state[5]);[m
[32m+[m[32m        state[6] = encodeInteger(writer, callColumn, state[6]);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (bindings) {[m
[32m+[m[32m        for (const binding of bindings) {[m
[32m+[m[32m            if (binding.length > 1)[m
[32m+[m[32m                encodeInteger(writer, -binding.length, 0);[m
[32m+[m[32m            const expression = binding[0][0];[m
[32m+[m[32m            encodeInteger(writer, expression, 0);[m
[32m+[m[32m            let bindingStartLine = startLine;[m
[32m+[m[32m            let bindingStartColumn = startColumn;[m
[32m+[m[32m            for (let i = 1; i < binding.length; i++) {[m
[32m+[m[32m                const expRange = binding[i];[m
[32m+[m[32m                bindingStartLine = encodeInteger(writer, expRange[1], bindingStartLine);[m
[32m+[m[32m                bindingStartColumn = encodeInteger(writer, expRange[2], bindingStartColumn);[m
[32m+[m[32m                encodeInteger(writer, expRange[0], 0);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    for (index++; index < ranges.length;) {[m
[32m+[m[32m        const next = ranges[index];[m
[32m+[m[32m        const { 0: l, 1: c } = next;[m
[32m+[m[32m        if (l > endLine || (l === endLine && c >= endColumn)) {[m
[32m+[m[32m            break;[m
[32m+[m[32m        }[m
[32m+[m[32m        index = _encodeGeneratedRanges(ranges, index, writer, state);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (state[0] < endLine) {[m
[32m+[m[32m        catchupLine(writer, state[0], endLine);[m
[32m+[m[32m        state[0] = endLine;[m
[32m+[m[32m        state[1] = 0;[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m        writer.write(comma);[m
[32m+[m[32m    }[m
[32m+[m[32m    state[1] = encodeInteger(writer, endColumn, state[1]);[m
[32m+[m[32m    return index;[m
[32m+[m[32m}[m
[32m+[m[32mfunction catchupLine(writer, lastLine, line) {[m
[32m+[m[32m    do {[m
[32m+[m[32m        writer.write(semicolon);[m
[32m+[m[32m    } while (++lastLine < line);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction decode(mappings) {[m
[32m+[m[32m    const { length } = mappings;[m
[32m+[m[32m    const reader = new StringReader(mappings);[m
[32m+[m[32m    const decoded = [];[m
[32m+[m[32m    let genColumn = 0;[m
[32m+[m[32m    let sourcesIndex = 0;[m
[32m+[m[32m    let sourceLine = 0;[m
[32m+[m[32m    let sourceColumn = 0;[m
[32m+[m[32m    let namesIndex = 0;[m
[32m+[m[32m    do {[m
[32m+[m[32m        const semi = reader.indexOf(';');[m
[32m+[m[32m        const line = [];[m
[32m+[m[32m        let sorted = true;[m
[32m+[m[32m        let lastCol = 0;[m
[32m+[m[32m        genColumn = 0;[m
[32m+[m[32m        while (reader.pos < semi) {[m
[32m+[m[32m            let seg;[m
[32m+[m[32m            genColumn = decodeInteger(reader, genColumn);[m
[32m+[m[32m            if (genColumn < lastCol)[m
[32m+[m[32m                sorted = false;[m
[32m+[m[32m            lastCol = genColumn;[m
[32m+[m[32m            if (hasMoreVlq(reader, semi)) {[m
[32m+[m[32m                sourcesIndex = decodeInteger(reader, sourcesIndex);[m
[32m+[m[32m                sourceLine = decodeInteger(reader, sourceLine);[m
[32m+[m[32m                sourceColumn = decodeInteger(reader, sourceColumn);[m
[32m+[m[32m                if (hasMoreVlq(reader, semi)) {[m
[32m+[m[32m                    namesIndex = decodeInteger(reader, namesIndex);[m
[32m+[m[32m                    seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];[m
[32m+[m[32m                }[m
[32m+[m[32m                else {[m
[32m+[m[32m                    seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            else {[m
[32m+[m[32m                seg = [genColumn];[m
[32m+[m[32m            }[m
[32m+[m[32m            line.push(seg);[m
[32m+[m[32m            reader.pos++;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (!sorted)[m
[32m+[m[32m            sort(line);[m
[32m+[m[32m        decoded.push(line);[m
[32m+[m[32m        reader.pos = semi + 1;[m
[32m+[m[32m    } while (reader.pos <= length);[m
[32m+[m[32m    return decoded;[m
[32m+[m[32m}[m
[32m+[m[32mfunction sort(line) {[m
[32m+[m[32m    line.sort(sortComparator);[m
[32m+[m[32m}[m
[32m+[m[32mfunction sortComparator(a, b) {[m
[32m+[m[32m    return a[0] - b[0];[m
[32m+[m[32m}[m
[32m+[m[32mfunction encode(decoded) {[m
[32m+[m[32m    const writer = new StringWriter();[m
[32m+[m[32m    let sourcesIndex = 0;[m
[32m+[m[32m    let sourceLine = 0;[m
[32m+[m[32m    let sourceColumn = 0;[m
[32m+[m[32m    let namesIndex = 0;[m
[32m+[m[32m    for (let i = 0; i < decoded.length; i++) {[m
[32m+[m[32m        const line = decoded[i];[m
[32m+[m[32m        if (i > 0)[m
[32m+[m[32m            writer.write(semicolon);[m
[32m+[m[32m        if (line.length === 0)[m
[32m+[m[32m            continue;[m
[32m+[m[32m        let genColumn = 0;[m
[32m+[m[32m        for (let j = 0; j < line.length; j++) {[m
[32m+[m[32m            const segment = line[j];[m
[32m+[m[32m            if (j > 0)[m
[32m+[m[32m                writer.write(comma);[m
[32m+[m[32m            genColumn = encodeInteger(writer, segment[0], genColumn);[m
[32m+[m[32m            if (segment.length === 1)[m
[32m+[m[32m                continue;[m
[32m+[m[32m            sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);[m
[32m+[m[32m            sourceLine = encodeInteger(writer, segment[2], sourceLine);[m
[32m+[m[32m            sourceColumn = encodeInteger(writer, segment[3], sourceColumn);[m
[32m+[m[32m            if (segment.length === 4)[m
[32m+[m[32m                continue;[m
[32m+[m[32m            namesIndex = encodeInteger(writer, segment[4], namesIndex);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    return writer.flush();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport { decode, decodeGeneratedRanges, decodeOriginalScopes, encode, encodeGeneratedRanges, encodeOriginalScopes };[m
[32m+[m[32m//# sourceMappingURL=sourcemap-codec.mjs.map[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs.map b/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs.map[m
[1mnew file mode 100644[m
[1mindex 0000000..7388228[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs.map[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"version":3,"file":"sourcemap-codec.mjs","sources":["../src/vlq.ts","../src/strings.ts","../src/scopes.ts","../src/sourcemap-codec.ts"],"sourcesContent":["import type { StringReader, StringWriter } from './strings';\n\nexport const comma = ','.charCodeAt(0);\nexport const semicolon = ';'.charCodeAt(0);\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\nexport function decodeInteger(reader: StringReader, relative: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  return relative + value;\n}\n\nexport function encodeInteger(builder: StringWriter, num: number, relative: number): number {\n  let delta = num - relative;\n\n  delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;\n  do {\n    let clamped = delta & 0b011111;\n    delta >>>= 5;\n    if (delta > 0) clamped |= 0b100000;\n    builder.write(intToChar[clamped]);\n  } while (delta > 0);\n\n  return num;\n}\n\nexport function hasMoreVlq(reader: StringReader, max: number) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\n","const bufLength = 1024 * 16;\n\n// Provide a fallback for older environments.\nconst td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array): string {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array): string {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n\nexport class StringWriter {\n  pos = 0;\n  private out = '';\n  private buffer = new Uint8Array(bufLength);\n\n  write(v: number): void {\n    const { buffer } = this;\n    buffer[this.pos++] = v;\n    if (this.pos === bufLength) {\n      this.out += td.decode(buffer);\n      this.pos = 0;\n    }\n  }\n\n  flush(): string {\n    const { buffer, out, pos } = this;\n    return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;\n  }\n}\n\nexport class StringReader {\n  pos = 0;\n  private declare buffer: string;\n\n  constructor(buffer: string) {\n    this.buffer = buffer;\n  }\n\n  next(): number {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n\n  peek(): number {\n    return this.buffer.charCodeAt(this.pos);\n  }\n\n  indexOf(char: string): number {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n}\n","import { StringReader, StringWriter } from './strings';\nimport { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\n\nconst EMPTY: any[] = [];\n\ntype Line = number;\ntype Column = number;\ntype Kind = number;\ntype Name = number;\ntype Var = number;\ntype SourcesIndex = number;\ntype ScopesIndex = number;\n\ntype Mix<A, B, O> = (A & O) | (B & O);\n\nexport type OriginalScope = Mix<\n  [Line, Column, Line, Column, Kind],\n  [Line, Column, Line, Column, Kind, Name],\n  { vars: Var[] }\n>;\n\nexport type GeneratedRange = Mix<\n  [Line, Column, Line, Column],\n  [Line, Column, Line, Column, SourcesIndex, ScopesIndex],\n  {\n    callsite: CallSite | null;\n    bindings: Binding[];\n    isScope: boolean;\n  }\n>;\nexport type CallSite = [SourcesIndex, Line, Column];\ntype Binding = BindingExpressionRange[];\nexport type BindingExpressionRange = [Name] | [Name, Line, Column];\n\nexport function decodeOriginalScopes(input: string): OriginalScope[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const scopes: OriginalScope[] = [];\n  const stack: OriginalScope[] = [];\n  let line = 0;\n\n  for (; reader.pos < length; reader.pos++) {\n    line = decodeInteger(reader, line);\n    const column = decodeInteger(reader, 0);\n\n    if (!hasMoreVlq(reader, length)) {\n      const last = stack.pop()!;\n      last[2] = line;\n      last[3] = column;\n      continue;\n    }\n\n    const kind = decodeInteger(reader, 0);\n    const fields = decodeInteger(reader, 0);\n    const hasName = fields & 0b0001;\n\n    const scope: OriginalScope = (\n      hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind]\n    ) as OriginalScope;\n\n    let vars: Var[] = EMPTY;\n    if (hasMoreVlq(reader, length)) {\n      vars = [];\n      do {\n        const varsIndex = decodeInteger(reader, 0);\n        vars.push(varsIndex);\n      } while (hasMoreVlq(reader, length));\n    }\n    scope.vars = vars;\n\n    scopes.push(scope);\n    stack.push(scope);\n  }\n\n  return scopes;\n}\n\nexport function encodeOriginalScopes(scopes: OriginalScope[]): string {\n  const writer = new StringWriter();\n\n  for (let i = 0; i < scopes.length; ) {\n    i = _encodeOriginalScopes(scopes, i, writer, [0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeOriginalScopes(\n  scopes: OriginalScope[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenColumn\n  ],\n): number {\n  const scope = scopes[index];\n  const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;\n\n  if (index > 0) writer.write(comma);\n\n  state[0] = encodeInteger(writer, startLine, state[0]);\n  encodeInteger(writer, startColumn, 0);\n  encodeInteger(writer, kind, 0);\n\n  const fields = scope.length === 6 ? 0b0001 : 0;\n  encodeInteger(writer, fields, 0);\n  if (scope.length === 6) encodeInteger(writer, scope[5], 0);\n\n  for (const v of vars) {\n    encodeInteger(writer, v, 0);\n  }\n\n  for (index++; index < scopes.length; ) {\n    const next = scopes[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeOriginalScopes(scopes, index, writer, state);\n  }\n\n  writer.write(comma);\n  state[0] = encodeInteger(writer, endLine, state[0]);\n  encodeInteger(writer, endColumn, 0);\n\n  return index;\n}\n\nexport function decodeGeneratedRanges(input: string): GeneratedRange[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const ranges: GeneratedRange[] = [];\n  const stack: GeneratedRange[] = [];\n\n  let genLine = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  let bindingLine = 0;\n  let bindingColumn = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    let genColumn = 0;\n\n    for (; reader.pos < semi; reader.pos++) {\n      genColumn = decodeInteger(reader, genColumn);\n\n      if (!hasMoreVlq(reader, semi)) {\n        const last = stack.pop()!;\n        last[2] = genLine;\n        last[3] = genColumn;\n        continue;\n      }\n\n      const fields = decodeInteger(reader, 0);\n      const hasDefinition = fields & 0b0001;\n      const hasCallsite = fields & 0b0010;\n      const hasScope = fields & 0b0100;\n\n      let callsite: CallSite | null = null;\n      let bindings: Binding[] = EMPTY;\n      let range: GeneratedRange;\n      if (hasDefinition) {\n        const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);\n        definitionScopeIndex = decodeInteger(\n          reader,\n          definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0,\n        );\n\n        definitionSourcesIndex = defSourcesIndex;\n        range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex] as GeneratedRange;\n      } else {\n        range = [genLine, genColumn, 0, 0] as GeneratedRange;\n      }\n\n      range.isScope = !!hasScope;\n\n      if (hasCallsite) {\n        const prevCsi = callsiteSourcesIndex;\n        const prevLine = callsiteLine;\n        callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);\n        const sameSource = prevCsi === callsiteSourcesIndex;\n        callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);\n        callsiteColumn = decodeInteger(\n          reader,\n          sameSource && prevLine === callsiteLine ? callsiteColumn : 0,\n        );\n\n        callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];\n      }\n      range.callsite = callsite;\n\n      if (hasMoreVlq(reader, semi)) {\n        bindings = [];\n        do {\n          bindingLine = genLine;\n          bindingColumn = genColumn;\n          const expressionsCount = decodeInteger(reader, 0);\n          let expressionRanges: BindingExpressionRange[];\n          if (expressionsCount < -1) {\n            expressionRanges = [[decodeInteger(reader, 0)]];\n            for (let i = -1; i > expressionsCount; i--) {\n              const prevBl = bindingLine;\n              bindingLine = decodeInteger(reader, bindingLine);\n              bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);\n              const expression = decodeInteger(reader, 0);\n              expressionRanges.push([expression, bindingLine, bindingColumn]);\n            }\n          } else {\n            expressionRanges = [[expressionsCount]];\n          }\n          bindings.push(expressionRanges);\n        } while (hasMoreVlq(reader, semi));\n      }\n      range.bindings = bindings;\n\n      ranges.push(range);\n      stack.push(range);\n    }\n\n    genLine++;\n    reader.pos = semi + 1;\n  } while (reader.pos < length);\n\n  return ranges;\n}\n\nexport function encodeGeneratedRanges(ranges: GeneratedRange[]): string {\n  if (ranges.length === 0) return '';\n\n  const writer = new StringWriter();\n\n  for (let i = 0; i < ranges.length; ) {\n    i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeGeneratedRanges(\n  ranges: GeneratedRange[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenLine\n    number, // GenColumn\n    number, // DefSourcesIndex\n    number, // DefScopesIndex\n    number, // CallSourcesIndex\n    number, // CallLine\n    number, // CallColumn\n  ],\n): number {\n  const range = ranges[index];\n  const {\n    0: startLine,\n    1: startColumn,\n    2: endLine,\n    3: endColumn,\n    isScope,\n    callsite,\n    bindings,\n  } = range;\n\n  if (state[0] < startLine) {\n    catchupLine(writer, state[0], startLine);\n    state[0] = startLine;\n    state[1] = 0;\n  } else if (index > 0) {\n    writer.write(comma);\n  }\n\n  state[1] = encodeInteger(writer, range[1], state[1]);\n\n  const fields =\n    (range.length === 6 ? 0b0001 : 0) | (callsite ? 0b0010 : 0) | (isScope ? 0b0100 : 0);\n  encodeInteger(writer, fields, 0);\n\n  if (range.length === 6) {\n    const { 4: sourcesIndex, 5: scopesIndex } = range;\n    if (sourcesIndex !== state[2]) {\n      state[3] = 0;\n    }\n    state[2] = encodeInteger(writer, sourcesIndex, state[2]);\n    state[3] = encodeInteger(writer, scopesIndex, state[3]);\n  }\n\n  if (callsite) {\n    const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite!;\n    if (sourcesIndex !== state[4]) {\n      state[5] = 0;\n      state[6] = 0;\n    } else if (callLine !== state[5]) {\n      state[6] = 0;\n    }\n    state[4] = encodeInteger(writer, sourcesIndex, state[4]);\n    state[5] = encodeInteger(writer, callLine, state[5]);\n    state[6] = encodeInteger(writer, callColumn, state[6]);\n  }\n\n  if (bindings) {\n    for (const binding of bindings) {\n      if (binding.length > 1) encodeInteger(writer, -binding.length, 0);\n      const expression = binding[0][0];\n      encodeInteger(writer, expression, 0);\n      let bindingStartLine = startLine;\n      let bindingStartColumn = startColumn;\n      for (let i = 1; i < binding.length; i++) {\n        const expRange = binding[i];\n        bindingStartLine = encodeInteger(writer, expRange[1]!, bindingStartLine);\n        bindingStartColumn = encodeInteger(writer, expRange[2]!, bindingStartColumn);\n        encodeInteger(writer, expRange[0]!, 0);\n      }\n    }\n  }\n\n  for (index++; index < ranges.length; ) {\n    const next = ranges[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeGeneratedRanges(ranges, index, writer, state);\n  }\n\n  if (state[0] < endLine) {\n    catchupLine(writer, state[0], endLine);\n    state[0] = endLine;\n    state[1] = 0;\n  } else {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, endColumn, state[1]);\n\n  return index;\n}\n\nfunction catchupLine(writer: StringWriter, lastLine: number, line: number) {\n  do {\n    writer.write(semicolon);\n  } while (++lastLine < line);\n}\n","import { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\nimport { StringWriter, StringReader } from './strings';\n\nexport {\n  decodeOriginalScopes,\n  encodeOriginalScopes,\n  decodeGeneratedRanges,\n  encodeGeneratedRanges,\n} from './scopes';\nexport type { OriginalScope, GeneratedRange, CallSite, BindingExpressionRange } from './scopes';\n\nexport type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nexport function decode(mappings: string): SourceMapMappings {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded: SourceMapMappings = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n\n    while (reader.pos < semi) {\n      let seg: SourceMapSegment;\n\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n\n      line.push(seg);\n      reader.pos++;\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n\n  return decoded;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const writer = new StringWriter();\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) writer.write(semicolon);\n    if (line.length === 0) continue;\n\n    let genColumn = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      if (j > 0) writer.write(comma);\n\n      genColumn = encodeInteger(writer, segment[0], genColumn);\n\n      if (segment.length === 1) continue;\n      sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);\n      sourceLine = encodeInteger(writer, segment[2], sourceLine);\n      sourceColumn = encodeInteger(writer, segment[3], sourceColumn);\n\n      if (segment.length === 4) continue;\n      namesIndex = encodeInteger(writer, segment[4], namesIndex);\n    }\n  }\n\n  return writer.flush();\n}\n"],"names":[],"mappings":"AAEO,MAAM,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAChC,MAAM,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAE3C,MAAM,KAAK,GAAG,kEAAkE,CAAC;AACjF,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;AACrC,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;AAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrC,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC9B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACjB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CAClB;SAEe,aAAa,CAAC,MAAoB,EAAE,QAAgB;IAClE,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,OAAO,GAAG,CAAC,CAAC;IAEhB,GAAG;QACD,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;QACxB,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACvB,KAAK,IAAI,CAAC,OAAO,GAAG,EAAE,KAAK,KAAK,CAAC;QACjC,KAAK,IAAI,CAAC,CAAC;KACZ,QAAQ,OAAO,GAAG,EAAE,EAAE;IAEvB,MAAM,YAAY,GAAG,KAAK,GAAG,CAAC,CAAC;IAC/B,KAAK,MAAM,CAAC,CAAC;IAEb,IAAI,YAAY,EAAE;QAChB,KAAK,GAAG,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC;KAC9B;IAED,OAAO,QAAQ,GAAG,KAAK,CAAC;AAC1B,CAAC;SAEe,aAAa,CAAC,OAAqB,EAAE,GAAW,EAAE,QAAgB;IAChF,IAAI,KAAK,GAAG,GAAG,GAAG,QAAQ,CAAC;IAE3B,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;IACnD,GAAG;QACD,IAAI,OAAO,GAAG,KAAK,GAAG,QAAQ,CAAC;QAC/B,KAAK,MAAM,CAAC,CAAC;QACb,IAAI,KAAK,GAAG,CAAC;YAAE,OAAO,IAAI,QAAQ,CAAC;QACnC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;KACnC,QAAQ,KAAK,GAAG,CAAC,EAAE;IAEpB,OAAO,GAAG,CAAC;AACb,CAAC;SAEe,UAAU,CAAC,MAAoB,EAAE,GAAW;IAC1D,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG;QAAE,OAAO,KAAK,CAAC;IACpC,OAAO,MAAM,CAAC,IAAI,EAAE,KAAK,KAAK,CAAC;AACjC;;ACtDA,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;AAE5B;AACA,MAAM,EAAE,GACN,OAAO,WAAW,KAAK,WAAW;sBACd,IAAI,WAAW,EAAE;MACjC,OAAO,MAAM,KAAK,WAAW;UAC7B;YACE,MAAM,CAAC,GAAe;gBACpB,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;gBACpE,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;aACvB;SACF;UACD;YACE,MAAM,CAAC,GAAe;gBACpB,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnC,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpC;gBACD,OAAO,GAAG,CAAC;aACZ;SACF,CAAC;MAEK,YAAY;IAAzB;QACE,QAAG,GAAG,CAAC,CAAC;QACA,QAAG,GAAG,EAAE,CAAC;QACT,WAAM,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;KAe5C;IAbC,KAAK,CAAC,CAAS;QACb,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE;YAC1B,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;SACd;KACF;IAED,KAAK;QACH,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QAClC,OAAO,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;KACjE;CACF;MAEY,YAAY;IAIvB,YAAY,MAAc;QAH1B,QAAG,GAAG,CAAC,CAAC;QAIN,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;IAED,IAAI;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;KAC3C;IAED,IAAI;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACzC;IAED,OAAO,CAAC,IAAY;QAClB,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QAC7B,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACtC,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;KACzC;;;AC5DH,MAAM,KAAK,GAAU,EAAE,CAAC;SA+BR,oBAAoB,CAAC,KAAa;IAChD,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;IACzB,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;IACvC,MAAM,MAAM,GAAoB,EAAE,CAAC;IACnC,MAAM,KAAK,GAAoB,EAAE,CAAC;IAClC,IAAI,IAAI,GAAG,CAAC,CAAC;IAEb,OAAO,MAAM,CAAC,GAAG,GAAG,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE;QACxC,IAAI,GAAG,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACnC,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAExC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;YAC/B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;YAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YACf,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;YACjB,SAAS;SACV;QAED,MAAM,IAAI,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACtC,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;QAEhC,MAAM,KAAK,IACT,OAAO,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAC3E,CAAC;QAEnB,IAAI,IAAI,GAAU,KAAK,CAAC;QACxB,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;YAC9B,IAAI,GAAG,EAAE,CAAC;YACV,GAAG;gBACD,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACtB,QAAQ,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;SACtC;QACD,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QAElB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnB;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;SAEe,oBAAoB,CAAC,MAAuB;IAC1D,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;IAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAI;QACnC,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;KACnD;IAED,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;AACxB,CAAC;AAED,SAAS,qBAAqB,CAC5B,MAAuB,EACvB,KAAa,EACb,MAAoB,EACpB,KAEC;IAED,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC5B,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IAExF,IAAI,KAAK,GAAG,CAAC;QAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAEnC,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;IACtC,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAE/B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;IAC/C,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IACjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;QAAE,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE3D,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;QACpB,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAC7B;IAED,KAAK,KAAK,EAAE,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAI;QACrC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,GAAG,OAAO,KAAK,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,SAAS,CAAC,EAAE;YACpD,MAAM;SACP;QACD,KAAK,GAAG,qBAAqB,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KAC7D;IAED,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACpB,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;IAEpC,OAAO,KAAK,CAAC;AACf,CAAC;SAEe,qBAAqB,CAAC,KAAa;IACjD,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;IACzB,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;IACvC,MAAM,MAAM,GAAqB,EAAE,CAAC;IACpC,MAAM,KAAK,GAAqB,EAAE,CAAC;IAEnC,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI,sBAAsB,GAAG,CAAC,CAAC;IAC/B,IAAI,oBAAoB,GAAG,CAAC,CAAC;IAC7B,IAAI,oBAAoB,GAAG,CAAC,CAAC;IAC7B,IAAI,YAAY,GAAG,CAAC,CAAC;IACrB,IAAI,cAAc,GAAG,CAAC,CAAC;IACvB,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,IAAI,aAAa,GAAG,CAAC,CAAC;IAEtB,GAAG;QACD,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,OAAO,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE;YACtC,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAE7C,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;gBAC7B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;gBAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;gBAClB,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;gBACpB,SAAS;aACV;YAED,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACxC,MAAM,aAAa,GAAG,MAAM,GAAG,MAAM,CAAC;YACtC,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC;YACpC,MAAM,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC;YAEjC,IAAI,QAAQ,GAAoB,IAAI,CAAC;YACrC,IAAI,QAAQ,GAAc,KAAK,CAAC;YAChC,IAAI,KAAqB,CAAC;YAC1B,IAAI,aAAa,EAAE;gBACjB,MAAM,eAAe,GAAG,aAAa,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;gBACtE,oBAAoB,GAAG,aAAa,CAClC,MAAM,EACN,sBAAsB,KAAK,eAAe,GAAG,oBAAoB,GAAG,CAAC,CACtE,CAAC;gBAEF,sBAAsB,GAAG,eAAe,CAAC;gBACzC,KAAK,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,oBAAoB,CAAmB,CAAC;aAC7F;iBAAM;gBACL,KAAK,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAmB,CAAC;aACtD;YAED,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC;YAE3B,IAAI,WAAW,EAAE;gBACf,MAAM,OAAO,GAAG,oBAAoB,CAAC;gBACrC,MAAM,QAAQ,GAAG,YAAY,CAAC;gBAC9B,oBAAoB,GAAG,aAAa,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;gBACnE,MAAM,UAAU,GAAG,OAAO,KAAK,oBAAoB,CAAC;gBACpD,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC;gBACpE,cAAc,GAAG,aAAa,CAC5B,MAAM,EACN,UAAU,IAAI,QAAQ,KAAK,YAAY,GAAG,cAAc,GAAG,CAAC,CAC7D,CAAC;gBAEF,QAAQ,GAAG,CAAC,oBAAoB,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;aACjE;YACD,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAE1B,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;gBAC5B,QAAQ,GAAG,EAAE,CAAC;gBACd,GAAG;oBACD,WAAW,GAAG,OAAO,CAAC;oBACtB,aAAa,GAAG,SAAS,CAAC;oBAC1B,MAAM,gBAAgB,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAClD,IAAI,gBAA0C,CAAC;oBAC/C,IAAI,gBAAgB,GAAG,CAAC,CAAC,EAAE;wBACzB,gBAAgB,GAAG,CAAC,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;wBAChD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,EAAE,EAAE;4BAC1C,MAAM,MAAM,GAAG,WAAW,CAAC;4BAC3B,WAAW,GAAG,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;4BACjD,aAAa,GAAG,aAAa,CAAC,MAAM,EAAE,WAAW,KAAK,MAAM,GAAG,aAAa,GAAG,CAAC,CAAC,CAAC;4BAClF,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;4BAC5C,gBAAgB,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC;yBACjE;qBACF;yBAAM;wBACL,gBAAgB,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;qBACzC;oBACD,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACjC,QAAQ,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;aACpC;YACD,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAE1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB;QAED,OAAO,EAAE,CAAC;QACV,MAAM,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;KACvB,QAAQ,MAAM,CAAC,GAAG,GAAG,MAAM,EAAE;IAE9B,OAAO,MAAM,CAAC;AAChB,CAAC;SAEe,qBAAqB,CAAC,MAAwB;IAC5D,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,EAAE,CAAC;IAEnC,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;IAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAI;QACnC,CAAC,GAAG,sBAAsB,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACtE;IAED,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;AACxB,CAAC;AAED,SAAS,sBAAsB,CAC7B,MAAwB,EACxB,KAAa,EACb,MAAoB,EACpB,KAQC;IAED,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC5B,MAAM,EACJ,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,WAAW,EACd,CAAC,EAAE,OAAO,EACV,CAAC,EAAE,SAAS,EACZ,OAAO,EACP,QAAQ,EACR,QAAQ,GACT,GAAG,KAAK,CAAC;IAEV,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,EAAE;QACxB,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;QACzC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;QACrB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACd;SAAM,IAAI,KAAK,GAAG,CAAC,EAAE;QACpB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACrB;IAED,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAErD,MAAM,MAAM,GACV,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,KAAK,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,IAAI,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;IACvF,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IAEjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,MAAM,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC;QAClD,IAAI,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;YAC7B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACd;QACD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACzD;IAED,IAAI,QAAQ,EAAE;QACZ,MAAM,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC,QAAS,CAAC;QACxE,IAAI,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;YAC7B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACb,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACd;aAAM,IAAI,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;YAChC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACd;QACD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACxD;IAED,IAAI,QAAQ,EAAE;QACZ,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;YAC9B,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;gBAAE,aAAa,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClE,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,aAAa,CAAC,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;YACrC,IAAI,gBAAgB,GAAG,SAAS,CAAC;YACjC,IAAI,kBAAkB,GAAG,WAAW,CAAC;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC5B,gBAAgB,GAAG,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAE,EAAE,gBAAgB,CAAC,CAAC;gBACzE,kBAAkB,GAAG,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAE,EAAE,kBAAkB,CAAC,CAAC;gBAC7E,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC;aACxC;SACF;KACF;IAED,KAAK,KAAK,EAAE,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAI;QACrC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,GAAG,OAAO,KAAK,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,SAAS,CAAC,EAAE;YACpD,MAAM;SACP;QACD,KAAK,GAAG,sBAAsB,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KAC9D;IAED,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE;QACtB,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACvC,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;QACnB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACd;SAAM;QACL,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACrB;IACD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAEtD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,WAAW,CAAC,MAAoB,EAAE,QAAgB,EAAE,IAAY;IACvE,GAAG;QACD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;KACzB,QAAQ,EAAE,QAAQ,GAAG,IAAI,EAAE;AAC9B;;SCtUgB,MAAM,CAAC,QAAgB;IACrC,MAAM,EAAE,MAAM,EAAE,GAAG,QAAQ,CAAC;IAC5B,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC1C,MAAM,OAAO,GAAsB,EAAE,CAAC;IACtC,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,YAAY,GAAG,CAAC,CAAC;IACrB,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,IAAI,YAAY,GAAG,CAAC,CAAC;IACrB,IAAI,UAAU,GAAG,CAAC,CAAC;IAEnB,GAAG;QACD,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,IAAI,GAAkB,EAAE,CAAC;QAC/B,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,SAAS,GAAG,CAAC,CAAC;QAEd,OAAO,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE;YACxB,IAAI,GAAqB,CAAC;YAE1B,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAC7C,IAAI,SAAS,GAAG,OAAO;gBAAE,MAAM,GAAG,KAAK,CAAC;YACxC,OAAO,GAAG,SAAS,CAAC;YAEpB,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;gBAC5B,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;gBACnD,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;gBAC/C,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;gBAEnD,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;oBAC5B,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;oBAC/C,GAAG,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;iBACvE;qBAAM;oBACL,GAAG,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;iBAC3D;aACF;iBAAM;gBACL,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;aACnB;YAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACf,MAAM,CAAC,GAAG,EAAE,CAAC;SACd;QAED,IAAI,CAAC,MAAM;YAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnB,MAAM,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;KACvB,QAAQ,MAAM,CAAC,GAAG,IAAI,MAAM,EAAE;IAE/B,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,IAAI,CAAC,IAAwB;IACpC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC5B,CAAC;AAED,SAAS,cAAc,CAAC,CAAmB,EAAE,CAAmB;IAC9D,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;SAIe,MAAM,CAAC,OAAoC;IACzD,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;IAClC,IAAI,YAAY,GAAG,CAAC,CAAC;IACrB,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,IAAI,YAAY,GAAG,CAAC,CAAC;IACrB,IAAI,UAAU,GAAG,CAAC,CAAC;IAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACvC,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,GAAG,CAAC;YAAE,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;YAAE,SAAS;QAEhC,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAE/B,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAEzD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;gBAAE,SAAS;YACnC,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;YAC/D,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;YAC3D,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;YAE/D,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;gBAAE,SAAS;YACnC,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;SAC5D;KACF;IAED,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;AACxB;;;;"}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js b/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js[m
[1mnew file mode 100644[m
[1mindex 0000000..93caf17[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js[m
[36m@@ -0,0 +1,439 @@[m
[32m+[m[32m(function (global, factory) {[m
[32m+[m[32m    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :[m
[32m+[m[32m    typeof define === 'function' && define.amd ? define(['exports'], factory) :[m
[32m+[m[32m    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.sourcemapCodec = {}));[m
[32m+[m[32m})(this, (function (exports) { 'use strict';[m
[32m+[m
[32m+[m[32m    const comma = ','.charCodeAt(0);[m
[32m+[m[32m    const semicolon = ';'.charCodeAt(0);[m
[32m+[m[32m    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';[m
[32m+[m[32m    const intToChar = new Uint8Array(64); // 64 possible chars.[m
[32m+[m[32m    const charToInt = new Uint8Array(128); // z is 122 in ASCII[m
[32m+[m[32m    for (let i = 0; i < chars.length; i++) {[m
[32m+[m[32m        const c = chars.charCodeAt(i);[m
[32m+[m[32m        intToChar[i] = c;[m
[32m+[m[32m        charToInt[c] = i;[m
[32m+[m[32m    }[m
[32m+[m[32m    function decodeInteger(reader, relative) {[m
[32m+[m[32m        let value = 0;[m
[32m+[m[32m        let shift = 0;[m
[32m+[m[32m        let integer = 0;[m
[32m+[m[32m        do {[m
[32m+[m[32m            const c = reader.next();[m
[32m+[m[32m            integer = charToInt[c];[m
[32m+[m[32m            value |= (integer & 31) << shift;[m
[32m+[m[32m            shift += 5;[m
[32m+[m[32m        } while (integer & 32);[m
[32m+[m[32m        const shouldNegate = value & 1;[m
[32m+[m[32m        value >>>= 1;[m
[32m+[m[32m        if (shouldNegate) {[m
[32m+[m[32m            value = -0x80000000 | -value;[m
[32m+[m[32m        }[m
[32m+[m[32m        return relative + value;[m
[32m+[m[32m    }[m
[32m+[m[32m    function encodeInteger(builder, num, relative) {[m
[32m+[m[32m        let delta = num - relative;[m
[32m+[m[32m        delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;[m
[32m+[m[32m        do {[m
[32m+[m[32m            let clamped = delta & 0b011111;[m
[32m+[m[32m            delta >>>= 5;[m
[32m+[m[32m            if (delta > 0)[m
[32m+[m[32m                clamped |= 0b100000;[m
[32m+[m[32m            builder.write(intToChar[clamped]);[m
[32m+[m[32m        } while (delta > 0);[m
[32m+[m[32m        return num;[m
[32m+[m[32m    }[m
[32m+[m[32m    function hasMoreVlq(reader, max) {[m
[32m+[m[32m        if (reader.pos >= max)[m
[32m+[m[32m            return false;[m
[32m+[m[32m        return reader.peek() !== comma;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const bufLength = 1024 * 16;[m
[32m+[m[32m    // Provide a fallback for older environments.[m
[32m+[m[32m    const td = typeof TextDecoder !== 'undefined'[m
[32m+[m[32m        ? /* #__PURE__ */ new TextDecoder()[m
[32m+[m[32m        : typeof Buffer !== 'undefined'[m
[32m+[m[32m            ? {[m
[32m+[m[32m                decode(buf) {[m
[32m+[m[32m                    const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);[m
[32m+[m[32m                    return out.toString();[m
[32m+[m[32m                },[m
[32m+[m[32m            }[m
[32m+[m[32m            : {[m
[32m+[m[32m                decode(buf) {[m
[32m+[m[32m                    let out = '';[m
[32m+[m[32m                    for (let i = 0; i < buf.length; i++) {[m
[32m+[m[32m                        out += String.fromCharCode(buf[i]);[m
[32m+[m[32m                    }[m
[32m+[m[32m                    return out;[m
[32m+[m[32m                },[m
[32m+[m[32m            };[m
[32m+[m[32m    class StringWriter {[m
[32m+[m[32m        constructor() {[m
[32m+[m[32m            this.pos = 0;[m
[32m+[m[32m            this.out = '';[m
[32m+[m[32m            this.buffer = new Uint8Array(bufLength);[m
[32m+[m[32m        }[m
[32m+[m[32m        write(v) {[m
[32m+[m[32m            const { buffer } = this;[m
[32m+[m[32m            buffer[this.pos++] = v;[m
[32m+[m[32m            if (this.pos === bufLength) {[m
[32m+[m[32m                this.out += td.decode(buffer);[m
[32m+[m[32m                this.pos = 0;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        flush() {[m
[32m+[m[32m            const { buffer, out, pos } = this;[m
[32m+[m[32m            return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    class StringReader {[m
[32m+[m[32m        constructor(buffer) {[m
[32m+[m[32m            this.pos = 0;[m
[32m+[m[32m            this.buffer = buffer;[m
[32m+[m[32m        }[m
[32m+[m[32m        next() {[m
[32m+[m[32m            return this.buffer.charCodeAt(this.pos++);[m
[32m+[m[32m        }[m
[32m+[m[32m        peek() {[m
[32m+[m[32m            return this.buffer.charCodeAt(this.pos);[m
[32m+[m[32m        }[m
[32m+[m[32m        indexOf(char) {[m
[32m+[m[32m            const { buffer, pos } = this;[m
[32m+[m[32m            const idx = buffer.indexOf(char, pos);[m
[32m+[m[32m            return idx === -1 ? buffer.length : idx;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const EMPTY = [];[m
[32m+[m[32m    function decodeOriginalScopes(input) {[m
[32m+[m[32m        const { length } = input;[m
[32m+[m[32m        const reader = new StringReader(input);[m
[32m+[m[32m        const scopes = [];[m
[32m+[m[32m        const stack = [];[m
[32m+[m[32m        let line = 0;[m
[32m+[m[32m        for (; reader.pos < length; reader.pos++) {[m
[32m+[m[32m            line = decodeInteger(reader, line);[m
[32m+[m[32m            const column = decodeInteger(reader, 0);[m
[32m+[m[32m            if (!hasMoreVlq(reader, length)) {[m
[32m+[m[32m                const last = stack.pop();[m
[32m+[m[32m                last[2] = line;[m
[32m+[m[32m                last[3] = column;[m
[32m+[m[32m                continue;[m
[32m+[m[32m            }[m
[32m+[m[32m            const kind = decodeInteger(reader, 0);[m
[32m+[m[32m            const fields = decodeInteger(reader, 0);[m
[32m+[m[32m            const hasName = fields & 0b0001;[m
[32m+[m[32m            const scope = (hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind]);[m
[32m+[m[32m            let vars = EMPTY;[m
[32m+[m[32m            if (hasMoreVlq(reader, length)) {[m
[32m+[m[32m                vars = [];[m
[32m+[m[32m                do {[m
[32m+[m[32m                    const varsIndex = decodeInteger(reader, 0);[m
[32m+[m[32m                    vars.push(varsIndex);[m
[32m+[m[32m                } while (hasMoreVlq(reader, length));[m
[32m+[m[32m            }[m
[32m+[m[32m            scope.vars = vars;[m
[32m+[m[32m            scopes.push(scope);[m
[32m+[m[32m            stack.push(scope);[m
[32m+[m[32m        }[m
[32m+[m[32m        return scopes;[m
[32m+[m[32m    }[m
[32m+[m[32m    function encodeOriginalScopes(scopes) {[m
[32m+[m[32m        const writer = new StringWriter();[m
[32m+[m[32m        for (let i = 0; i < scopes.length;) {[m
[32m+[m[32m            i = _encodeOriginalScopes(scopes, i, writer, [0]);[m
[32m+[m[32m        }[m
[32m+[m[32m        return writer.flush();[m
[32m+[m[32m    }[m
[32m+[m[32m    function _encodeOriginalScopes(scopes, index, writer, state) {[m
[32m+[m[32m        const scope = scopes[index];[m
[32m+[m[32m        const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;[m
[32m+[m[32m        if (index > 0)[m
[32m+[m[32m            writer.write(comma);[m
[32m+[m[32m        state[0] = encodeInteger(writer, startLine, state[0]);[m
[32m+[m[32m        encodeInteger(writer, startColumn, 0);[m
[32m+[m[32m        encodeInteger(writer, kind, 0);[m
[32m+[m[32m        const fields = scope.length === 6 ? 0b0001 : 0;[m
[32m+[m[32m        encodeInteger(writer, fields, 0);[m
[32m+[m[32m        if (scope.length === 6)[m
[32m+[m[32m            encodeInteger(writer, scope[5], 0);[m
[32m+[m[32m        for (const v of vars) {[m
[32m+[m[32m            encodeInteger(writer, v, 0);[m
[32m+[m[32m        }[m
[32m+[m[32m        for (index++; index < scopes.length;) {[m
[32m+[m[32m            const next = scopes[index];[m
[32m+[m[32m            const { 0: l, 1: c } = next;[m
[32m+[m[32m            if (l > endLine || (l === endLine && c >= endColumn)) {[m
[32m+[m[32m                break;[m
[32m+[m[32m            }[m
[32m+[m[32m            index = _encodeOriginalScopes(scopes, index, writer, state);[m
[32m+[m[32m        }[m
[32m+[m[32m        writer.write(comma);[m
[32m+[m[32m        state[0] = encodeInteger(writer, endLine, state[0]);[m
[32m+[m[32m        encodeInteger(writer, endColumn, 0);[m
[32m+[m[32m        return index;[m
[32m+[m[32m    }[m
[32m+[m[32m    function decodeGeneratedRanges(input) {[m
[32m+[m[32m        const { length } = input;[m
[32m+[m[32m        const reader = new StringReader(input);[m
[32m+[m[32m        const ranges = [];[m
[32m+[m[32m        const stack = [];[m
[32m+[m[32m        let genLine = 0;[m
[32m+[m[32m        let definitionSourcesIndex = 0;[m
[32m+[m[32m        let definitionScopeIndex = 0;[m
[32m+[m[32m        let callsiteSourcesIndex = 0;[m
[32m+[m[32m        let callsiteLine = 0;[m
[32m+[m[32m        let callsiteColumn = 0;[m
[32m+[m[32m        let bindingLine = 0;[m
[32m+[m[32m        let bindingColumn = 0;[m
[32m+[m[32m        do {[m
[32m+[m[32m            const semi = reader.indexOf(';');[m
[32m+[m[32m            let genColumn = 0;[m
[32m+[m[32m            for (; reader.pos < semi; reader.pos++) {[m
[32m+[m[32m                genColumn = decodeInteger(reader, genColumn);[m
[32m+[m[32m                if (!hasMoreVlq(reader, semi)) {[m
[32m+[m[32m                    const last = stack.pop();[m
[32m+[m[32m                    last[2] = genLine;[m
[32m+[m[32m                    last[3] = genColumn;[m
[32m+[m[32m                    continue;[m
[32m+[m[32m                }[m
[32m+[m[32m                const fields = decodeInteger(reader, 0);[m
[32m+[m[32m                const hasDefinition = fields & 0b0001;[m
[32m+[m[32m                const hasCallsite = fields & 0b0010;[m
[32m+[m[32m                const hasScope = fields & 0b0100;[m
[32m+[m[32m                let callsite = null;[m
[32m+[m[32m                let bindings = EMPTY;[m
[32m+[m[32m                let range;[m
[32m+[m[32m                if (hasDefinition) {[m
[32m+[m[32m                    const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);[m
[32m+[m[32m                    definitionScopeIndex = decodeInteger(reader, definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0);[m
[32m+[m[32m                    definitionSourcesIndex = defSourcesIndex;[m
[32m+[m[32m                    range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex];[m
[32m+[m[32m                }[m
[32m+[m[32m                else {[m
[32m+[m[32m                    range = [genLine, genColumn, 0, 0];[m
[32m+[m[32m                }[m
[32m+[m[32m                range.isScope = !!hasScope;[m
[32m+[m[32m                if (hasCallsite) {[m
[32m+[m[32m                    const prevCsi = callsiteSourcesIndex;[m
[32m+[m[32m                    const prevLine = callsiteLine;[m
[32m+[m[32m                    callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);[m
[32m+[m[32m                    const sameSource = prevCsi === callsiteSourcesIndex;[m
[32m+[m[32m                    callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);[m
[32m+[m[32m                    callsiteColumn = decodeInteger(reader, sameSource && prevLine === callsiteLine ? callsiteColumn : 0);[m
[32m+[m[32m                    callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];[m
[32m+[m[32m                }[m
[32m+[m[32m                range.callsite = callsite;[m
[32m+[m[32m                if (hasMoreVlq(reader, semi)) {[m
[32m+[m[32m                    bindings = [];[m
[32m+[m[32m                    do {[m
[32m+[m[32m                        bindingLine = genLine;[m
[32m+[m[32m                        bindingColumn = genColumn;[m
[32m+[m[32m                        const expressionsCount = decodeInteger(reader, 0);[m
[32m+[m[32m                        let expressionRanges;[m
[32m+[m[32m                        if (expressionsCount < -1) {[m
[32m+[m[32m                            expressionRanges = [[decodeInteger(reader, 0)]];[m
[32m+[m[32m                            for (let i = -1; i > expressionsCount; i--) {[m
[32m+[m[32m                                const prevBl = bindingLine;[m
[32m+[m[32m                                bindingLine = decodeInteger(reader, bindingLine);[m
[32m+[m[32m                                bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);[m
[32m+[m[32m                                const expression = decodeInteger(reader, 0);[m
[32m+[m[32m                                expressionRanges.push([expression, bindingLine, bindingColumn]);[m
[32m+[m[32m                            }[m
[32m+[m[32m                        }[m
[32m+[m[32m                        else {[m
[32m+[m[32m                            expressionRanges = [[expressionsCount]];[m
[32m+[m[32m                        }[m
[32m+[m[32m                        bindings.push(expressionRanges);[m
[32m+[m[32m                    } while (hasMoreVlq(reader, semi));[m
[32m+[m[32m                }[m
[32m+[m[32m                range.bindings = bindings;[m
[32m+[m[32m                ranges.push(range);[m
[32m+[m[32m                stack.push(range);[m
[32m+[m[32m            }[m
[32m+[m[32m            genLine++;[m
[32m+[m[32m            reader.pos = semi + 1;[m
[32m+[m[32m        } while (reader.pos < length);[m
[32m+[m[32m        return ranges;[m
[32m+[m[32m    }[m
[32m+[m[32m    function encodeGeneratedRanges(ranges) {[m
[32m+[m[32m        if (ranges.length === 0)[m
[32m+[m[32m            return '';[m
[32m+[m[32m        const writer = new StringWriter();[m
[32m+[m[32m        for (let i = 0; i < ranges.length;) {[m
[32m+[m[32m            i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);[m
[32m+[m[32m        }[m
[32m+[m[32m        return writer.flush();[m
[32m+[m[32m    }[m
[32m+[m[32m    function _encodeGeneratedRanges(ranges, index, writer, state) {[m
[32m+[m[32m        const range = ranges[index];[m
[32m+[m[32m        const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, isScope, callsite, bindings, } = range;[m
[32m+[m[32m        if (state[0] < startLine) {[m
[32m+[m[32m            catchupLine(writer, state[0], startLine);[m
[32m+[m[32m            state[0] = startLine;[m
[32m+[m[32m            state[1] = 0;[m
[32m+[m[32m        }[m
[32m+[m[32m        else if (index > 0) {[m
[32m+[m[32m            writer.write(comma);[m
[32m+[m[32m        }[m
[32m+[m[32m        state[1] = encodeInteger(writer, range[1], state[1]);[m
[32m+[m[32m        const fields = (range.length === 6 ? 0b0001 : 0) | (callsite ? 0b0010 : 0) | (isScope ? 0b0100 : 0);[m
[32m+[m[32m        encodeInteger(writer, fields, 0);[m
[32m+[m[32m        if (range.length === 6) {[m
[32m+[m[32m            const { 4: sourcesIndex, 5: scopesIndex } = range;[m
[32m+[m[32m            if (sourcesIndex !== state[2]) {[m
[32m+[m[32m                state[3] = 0;[m
[32m+[m[32m            }[m
[32m+[m[32m            state[2] = encodeInteger(writer, sourcesIndex, state[2]);[m
[32m+[m[32m            state[3] = encodeInteger(writer, scopesIndex, state[3]);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (callsite) {[m
[32m+[m[32m            const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite;[m
[32m+[m[32m            if (sourcesIndex !== state[4]) {[m
[32m+[m[32m                state[5] = 0;[m
[32m+[m[32m                state[6] = 0;[m
[32m+[m[32m            }[m
[32m+[m[32m            else if (callLine !== state[5]) {[m
[32m+[m[32m                state[6] = 0;[m
[32m+[m[32m            }[m
[32m+[m[32m            state[4] = encodeInteger(writer, sourcesIndex, state[4]);[m
[32m+[m[32m            state[5] = encodeInteger(writer, callLine, state[5]);[m
[32m+[m[32m            state[6] = encodeInteger(writer, callColumn, state[6]);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (bindings) {[m
[32m+[m[32m            for (const binding of bindings) {[m
[32m+[m[32m                if (binding.length > 1)[m
[32m+[m[32m                    encodeInteger(writer, -binding.length, 0);[m
[32m+[m[32m                const expression = binding[0][0];[m
[32m+[m[32m                encodeInteger(writer, expression, 0);[m
[32m+[m[32m                let bindingStartLine = startLine;[m
[32m+[m[32m                let bindingStartColumn = startColumn;[m
[32m+[m[32m                for (let i = 1; i < binding.length; i++) {[m
[32m+[m[32m                    const expRange = binding[i];[m
[32m+[m[32m                    bindingStartLine = encodeInteger(writer, expRange[1], bindingStartLine);[m
[32m+[m[32m                    bindingStartColumn = encodeInteger(writer, expRange[2], bindingStartColumn);[m
[32m+[m[32m                    encodeInteger(writer, expRange[0], 0);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        for (index++; index < ranges.length;) {[m
[32m+[m[32m            const next = ranges[index];[m
[32m+[m[32m            const { 0: l, 1: c } = next;[m
[32m+[m[32m            if (l > endLine || (l === endLine && c >= endColumn)) {[m
[32m+[m[32m                break;[m
[32m+[m[32m            }[m
[32m+[m[32m            index = _encodeGeneratedRanges(ranges, index, writer, state);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (state[0] < endLine) {[m
[32m+[m[32m            catchupLine(writer, state[0], endLine);[m
[32m+[m[32m            state[0] = endLine;[m
[32m+[m[32m            state[1] = 0;[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m            writer.write(comma);[m
[32m+[m[32m        }[m
[32m+[m[32m        state[1] = encodeInteger(writer, endColumn, state[1]);[m
[32m+[m[32m        return index;[m
[32m+[m[32m    }[m
[32m+[m[32m    function catchupLine(writer, lastLine, line) {[m
[32m+[m[32m        do {[m
[32m+[m[32m            writer.write(semicolon);[m
[32m+[m[32m        } while (++lastLine < line);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function decode(mappings) {[m
[32m+[m[32m        const { length } = mappings;[m
[32m+[m[32m        const reader = new StringReader(mappings);[m
[32m+[m[32m        const decoded = [];[m
[32m+[m[32m        let genColumn = 0;[m
[32m+[m[32m        let sourcesIndex = 0;[m
[32m+[m[32m        let sourceLine = 0;[m
[32m+[m[32m        let sourceColumn = 0;[m
[32m+[m[32m        let namesIndex = 0;[m
[32m+[m[32m        do {[m
[32m+[m[32m            const semi = reader.indexOf(';');[m
[32m+[m[32m            const line = [];[m
[32m+[m[32m            let sorted = true;[m
[32m+[m[32m            let lastCol = 0;[m
[32m+[m[32m            genColumn = 0;[m
[32m+[m[32m            while (reader.pos < semi) {[m
[32m+[m[32m                let seg;[m
[32m+[m[32m                genColumn = decodeInteger(reader, genColumn);[m
[32m+[m[32m                if (genColumn < lastCol)[m
[32m+[m[32m                    sorted = false;[m
[32m+[m[32m                lastCol = genColumn;[m
[32m+[m[32m                if (hasMoreVlq(reader, semi)) {[m
[32m+[m[32m                    sourcesIndex = decodeInteger(reader, sourcesIndex);[m
[32m+[m[32m                    sourceLine = decodeInteger(reader, sourceLine);[m
[32m+[m[32m                    sourceColumn = decodeInteger(reader, sourceColumn);[m
[32m+[m[32m                    if (hasMoreVlq(reader, semi)) {[m
[32m+[m[32m                        namesIndex = decodeInteger(reader, namesIndex);[m
[32m+[m[32m                        seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];[m
[32m+[m[32m                    }[m
[32m+[m[32m                    else {[m
[32m+[m[32m                        seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m                else {[m
[32m+[m[32m                    seg = [genColumn];[m
[32m+[m[32m                }[m
[32m+[m[32m                line.push(seg);[m
[32m+[m[32m                reader.pos++;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (!sorted)[m
[32m+[m[32m                sort(line);[m
[32m+[m[32m            decoded.push(line);[m
[32m+[m[32m            reader.pos = semi + 1;[m
[32m+[m[32m        } while (reader.pos <= length);[m
[32m+[m[32m        return decoded;[m
[32m+[m[32m    }[m
[32m+[m[32m    function sort(line) {[m
[32m+[m[32m        line.sort(sortComparator);[m
[32m+[m[32m    }[m
[32m+[m[32m    function sortComparator(a, b) {[m
[32m+[m[32m        return a[0] - b[0];[m
[32m+[m[32m    }[m
[32m+[m[32m    function encode(decoded) {[m
[32m+[m[32m        const writer = new StringWriter();[m
[32m+[m[32m        let sourcesIndex = 0;[m
[32m+[m[32m        let sourceLine = 0;[m
[32m+[m[32m        let sourceColumn = 0;[m
[32m+[m[32m        let namesIndex = 0;[m
[32m+[m[32m        for (let i = 0; i < decoded.length; i++) {[m
[32m+[m[32m            const line = decoded[i];[m
[32m+[m[32m            if (i > 0)[m
[32m+[m[32m                writer.write(semicolon);[m
[32m+[m[32m            if (line.length === 0)[m
[32m+[m[32m                continue;[m
[32m+[m[32m            let genColumn = 0;[m
[32m+[m[32m            for (let j = 0; j < line.length; j++) {[m
[32m+[m[32m                const segment = line[j];[m
[32m+[m[32m                if (j > 0)[m
[32m+[m[32m                    writer.write(comma);[m
[32m+[m[32m                genColumn = encodeInteger(writer, segment[0], genColumn);[m
[32m+[m[32m                if (segment.length === 1)[m
[32m+[m[32m                    continue;[m
[32m+[m[32m                sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);[m
[32m+[m[32m                sourceLine = encodeInteger(writer, segment[2], sourceLine);[m
[32m+[m[32m                sourceColumn = encodeInteger(writer, segment[3], sourceColumn);[m
[32m+[m[32m                if (segment.length === 4)[m
[32m+[m[32m                    continue;[m
[32m+[m[32m                namesIndex = encodeInteger(writer, segment[4], namesIndex);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return writer.flush();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    exports.decode = decode;[m
[32m+[m[32m    exports.decodeGeneratedRanges = decodeGeneratedRanges;[m
[32m+[m[32m    exports.decodeOriginalScopes = decodeOriginalScopes;[m
[32m+[m[32m    exports.encode = encode;[m
[32m+[m[32m    exports.encodeGeneratedRanges = encodeGeneratedRanges;[m
[32m+[m[32m    exports.encodeOriginalScopes = encodeOriginalScopes;[m
[32m+[m
[32m+[m[32m    Object.defineProperty(exports, '__esModule', { value: true });[m
[32m+[m
[32m+[m[32m}));[m
[32m+[m[32m//# sourceMappingURL=sourcemap-codec.umd.js.map[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js.map b/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js.map[m
[1mnew file mode 100644[m
[1mindex 0000000..65b3674[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js.map[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"version":3,"file":"sourcemap-codec.umd.js","sources":["../src/vlq.ts","../src/strings.ts","../src/scopes.ts","../src/sourcemap-codec.ts"],"sourcesContent":["import type { StringReader, StringWriter } from './strings';\n\nexport const comma = ','.charCodeAt(0);\nexport const semicolon = ';'.charCodeAt(0);\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\nexport function decodeInteger(reader: StringReader, relative: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  return relative + value;\n}\n\nexport function encodeInteger(builder: StringWriter, num: number, relative: number): number {\n  let delta = num - relative;\n\n  delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;\n  do {\n    let clamped = delta & 0b011111;\n    delta >>>= 5;\n    if (delta > 0) clamped |= 0b100000;\n    builder.write(intToChar[clamped]);\n  } while (delta > 0);\n\n  return num;\n}\n\nexport function hasMoreVlq(reader: StringReader, max: number) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\n","const bufLength = 1024 * 16;\n\n// Provide a fallback for older environments.\nconst td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array): string {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array): string {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n\nexport class StringWriter {\n  pos = 0;\n  private out = '';\n  private buffer = new Uint8Array(bufLength);\n\n  write(v: number): void {\n    const { buffer } = this;\n    buffer[this.pos++] = v;\n    if (this.pos === bufLength) {\n      this.out += td.decode(buffer);\n      this.pos = 0;\n    }\n  }\n\n  flush(): string {\n    const { buffer, out, pos } = this;\n    return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;\n  }\n}\n\nexport class StringReader {\n  pos = 0;\n  private declare buffer: string;\n\n  constructor(buffer: string) {\n    this.buffer = buffer;\n  }\n\n  next(): number {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n\n  peek(): number {\n    return this.buffer.charCodeAt(this.pos);\n  }\n\n  indexOf(char: string): number {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n}\n","import { StringReader, StringWriter } from './strings';\nimport { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\n\nconst EMPTY: any[] = [];\n\ntype Line = number;\ntype Column = number;\ntype Kind = number;\ntype Name = number;\ntype Var = number;\ntype SourcesIndex = number;\ntype ScopesIndex = number;\n\ntype Mix<A, B, O> = (A & O) | (B & O);\n\nexport type OriginalScope = Mix<\n  [Line, Column, Line, Column, Kind],\n  [Line, Column, Line, Column, Kind, Name],\n  { vars: Var[] }\n>;\n\nexport type GeneratedRange = Mix<\n  [Line, Column, Line, Column],\n  [Line, Column, Line, Column, SourcesIndex, ScopesIndex],\n  {\n    callsite: CallSite | null;\n    bindings: Binding[];\n    isScope: boolean;\n  }\n>;\nexport type CallSite = [SourcesIndex, Line, Column];\ntype Binding = BindingExpressionRange[];\nexport type BindingExpressionRange = [Name] | [Name, Line, Column];\n\nexport function decodeOriginalScopes(input: string): OriginalScope[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const scopes: OriginalScope[] = [];\n  const stack: OriginalScope[] = [];\n  let line = 0;\n\n  for (; reader.pos < length; reader.pos++) {\n    line = decodeInteger(reader, line);\n    const column = decodeInteger(reader, 0);\n\n    if (!hasMoreVlq(reader, length)) {\n      const last = stack.pop()!;\n      last[2] = line;\n      last[3] = column;\n      continue;\n    }\n\n    const kind = decodeInteger(reader, 0);\n    const fields = decodeInteger(reader, 0);\n    const hasName = fields & 0b0001;\n\n    const scope: OriginalScope = (\n      hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind]\n    ) as OriginalScope;\n\n    let vars: Var[] = EMPTY;\n    if (hasMoreVlq(reader, length)) {\n      vars = [];\n      do {\n        const varsIndex = decodeInteger(reader, 0);\n        vars.push(varsIndex);\n      } while (hasMoreVlq(reader, length));\n    }\n    scope.vars = vars;\n\n    scopes.push(scope);\n    stack.push(scope);\n  }\n\n  return scopes;\n}\n\nexport function encodeOriginalScopes(scopes: OriginalScope[]): string {\n  const writer = new StringWriter();\n\n  for (let i = 0; i < scopes.length; ) {\n    i = _encodeOriginalScopes(scopes, i, writer, [0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeOriginalScopes(\n  scopes: OriginalScope[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenColumn\n  ],\n): number {\n  const scope = scopes[index];\n  const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;\n\n  if (index > 0) writer.write(comma);\n\n  state[0] = encodeInteger(writer, startLine, state[0]);\n  encodeInteger(writer, startColumn, 0);\n  encodeInteger(writer, kind, 0);\n\n  const fields = scope.length === 6 ? 0b0001 : 0;\n  encodeInteger(writer, fields, 0);\n  if (scope.length === 6) encodeInteger(writer, scope[5], 0);\n\n  for (const v of vars) {\n    encodeInteger(writer, v, 0);\n  }\n\n  for (index++; index < scopes.length; ) {\n    const next = scopes[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeOriginalScopes(scopes, index, writer, state);\n  }\n\n  writer.write(comma);\n  state[0] = encodeInteger(writer, endLine, state[0]);\n  encodeInteger(writer, endColumn, 0);\n\n  return index;\n}\n\nexport function decodeGeneratedRanges(input: string): GeneratedRange[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const ranges: GeneratedRange[] = [];\n  const stack: GeneratedRange[] = [];\n\n  let genLine = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  let bindingLine = 0;\n  let bindingColumn = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    let genColumn = 0;\n\n    for (; reader.pos < semi; reader.pos++) {\n      genColumn = decodeInteger(reader, genColumn);\n\n      if (!hasMoreVlq(reader, semi)) {\n        const last = stack.pop()!;\n        last[2] = genLine;\n        last[3] = genColumn;\n        continue;\n      }\n\n      const fields = decodeInteger(reader, 0);\n      const hasDefinition = fields & 0b0001;\n      const hasCallsite = fields & 0b0010;\n      const hasScope = fields & 0b0100;\n\n      let callsite: CallSite | null = null;\n      let bindings: Binding[] = EMPTY;\n      let range: GeneratedRange;\n      if (hasDefinition) {\n        const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);\n        definitionScopeIndex = decodeInteger(\n          reader,\n          definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0,\n        );\n\n        definitionSourcesIndex = defSourcesIndex;\n        range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex] as GeneratedRange;\n      } else {\n        range = [genLine, genColumn, 0, 0] as GeneratedRange;\n      }\n\n      range.isScope = !!hasScope;\n\n      if (hasCallsite) {\n        const prevCsi = callsiteSourcesIndex;\n        const prevLine = callsiteLine;\n        callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);\n        const sameSource = prevCsi === callsiteSourcesIndex;\n        callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);\n        callsiteColumn = decodeInteger(\n          reader,\n          sameSource && prevLine === callsiteLine ? callsiteColumn : 0,\n        );\n\n        callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];\n      }\n      range.callsite = callsite;\n\n      if (hasMoreVlq(reader, semi)) {\n        bindings = [];\n        do {\n          bindingLine = genLine;\n          bindingColumn = genColumn;\n          const expressionsCount = decodeInteger(reader, 0);\n          let expressionRanges: BindingExpressionRange[];\n          if (expressionsCount < -1) {\n            expressionRanges = [[decodeInteger(reader, 0)]];\n            for (let i = -1; i > expressionsCount; i--) {\n              const prevBl = bindingLine;\n              bindingLine = decodeInteger(reader, bindingLine);\n              bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);\n              const expression = decodeInteger(reader, 0);\n              expressionRanges.push([expression, bindingLine, bindingColumn]);\n            }\n          } else {\n            expressionRanges = [[expressionsCount]];\n          }\n          bindings.push(expressionRanges);\n        } while (hasMoreVlq(reader, semi));\n      }\n      range.bindings = bindings;\n\n      ranges.push(range);\n      stack.push(range);\n    }\n\n    genLine++;\n    reader.pos = semi + 1;\n  } while (reader.pos < length);\n\n  return ranges;\n}\n\nexport function encodeGeneratedRanges(ranges: GeneratedRange[]): string {\n  if (ranges.length === 0) return '';\n\n  const writer = new StringWriter();\n\n  for (let i = 0; i < ranges.length; ) {\n    i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeGeneratedRanges(\n  ranges: GeneratedRange[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenLine\n    number, // GenColumn\n    number, // DefSourcesIndex\n    number, // DefScopesIndex\n    number, // CallSourcesIndex\n    number, // CallLine\n    number, // CallColumn\n  ],\n): number {\n  const range = ranges[index];\n  const {\n    0: startLine,\n    1: startColumn,\n    2: endLine,\n    3: endColumn,\n    isScope,\n    callsite,\n    bindings,\n  } = range;\n\n  if (state[0] < startLine) {\n    catchupLine(writer, state[0], startLine);\n    state[0] = startLine;\n    state[1] = 0;\n  } else if (index > 0) {\n    writer.write(comma);\n  }\n\n  state[1] = encodeInteger(writer, range[1], state[1]);\n\n  const fields =\n    (range.length === 6 ? 0b0001 : 0) | (callsite ? 0b0010 : 0) | (isScope ? 0b0100 : 0);\n  encodeInteger(writer, fields, 0);\n\n  if (range.length === 6) {\n    const { 4: sourcesIndex, 5: scopesIndex } = range;\n    if (sourcesIndex !== state[2]) {\n      state[3] = 0;\n    }\n    state[2] = encodeInteger(writer, sourcesIndex, state[2]);\n    state[3] = encodeInteger(writer, scopesIndex, state[3]);\n  }\n\n  if (callsite) {\n    const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite!;\n    if (sourcesIndex !== state[4]) {\n      state[5] = 0;\n      state[6] = 0;\n    } else if (callLine !== state[5]) {\n      state[6] = 0;\n    }\n    state[4] = encodeInteger(writer, sourcesIndex, state[4]);\n    state[5] = encodeInteger(writer, callLine, state[5]);\n    state[6] = encodeInteger(writer, callColumn, state[6]);\n  }\n\n  if (bindings) {\n    for (const binding of bindings) {\n      if (binding.length > 1) encodeInteger(writer, -binding.length, 0);\n      const expression = binding[0][0];\n      encodeInteger(writer, expression, 0);\n      let bindingStartLine = startLine;\n      let bindingStartColumn = startColumn;\n      for (let i = 1; i < binding.length; i++) {\n        const expRange = binding[i];\n        bindingStartLine = encodeInteger(writer, expRange[1]!, bindingStartLine);\n        bindingStartColumn = encodeInteger(writer, expRange[2]!, bindingStartColumn);\n        encodeInteger(writer, expRange[0]!, 0);\n      }\n    }\n  }\n\n  for (index++; index < ranges.length; ) {\n    const next = ranges[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeGeneratedRanges(ranges, index, writer, state);\n  }\n\n  if (state[0] < endLine) {\n    catchupLine(writer, state[0], endLine);\n    state[0] = endLine;\n    state[1] = 0;\n  } else {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, endColumn, state[1]);\n\n  return index;\n}\n\nfunction catchupLine(writer: StringWriter, lastLine: number, line: number) {\n  do {\n    writer.write(semicolon);\n  } while (++lastLine < line);\n}\n","import { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\nimport { StringWriter, StringReader } from './strings';\n\nexport {\n  decodeOriginalScopes,\n  encodeOriginalScopes,\n  decodeGeneratedRanges,\n  encodeGeneratedRanges,\n} from './scopes';\nexport type { OriginalScope, GeneratedRange, CallSite, BindingExpressionRange } from './scopes';\n\nexport type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nexport function decode(mappings: string): SourceMapMappings {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded: SourceMapMappings = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n\n    while (reader.pos < semi) {\n      let seg: SourceMapSegment;\n\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n\n      line.push(seg);\n      reader.pos++;\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n\n  return decoded;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const writer = new StringWriter();\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) writer.write(semicolon);\n    if (line.length === 0) continue;\n\n    let genColumn = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      if (j > 0) writer.write(comma);\n\n      genColumn = encodeInteger(writer, segment[0], genColumn);\n\n      if (segment.length === 1) continue;\n      sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);\n      sourceLine = encodeInteger(writer, segment[2], sourceLine);\n      sourceColumn = encodeInteger(writer, segment[3], sourceColumn);\n\n      if (segment.length === 4) continue;\n      namesIndex = encodeInteger(writer, segment[4], namesIndex);\n    }\n  }\n\n  return writer.flush();\n}\n"],"names":[],"mappings":";;;;;;IAEO,MAAM,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAChC,MAAM,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAE3C,MAAM,KAAK,GAAG,kEAAkE,CAAC;IACjF,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;IACrC,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;IAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KAClB;aAEe,aAAa,CAAC,MAAoB,EAAE,QAAgB;QAClE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,OAAO,GAAG,CAAC,CAAC;QAEhB,GAAG;YACD,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YACxB,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACvB,KAAK,IAAI,CAAC,OAAO,GAAG,EAAE,KAAK,KAAK,CAAC;YACjC,KAAK,IAAI,CAAC,CAAC;SACZ,QAAQ,OAAO,GAAG,EAAE,EAAE;QAEvB,MAAM,YAAY,GAAG,KAAK,GAAG,CAAC,CAAC;QAC/B,KAAK,MAAM,CAAC,CAAC;QAEb,IAAI,YAAY,EAAE;YAChB,KAAK,GAAG,CAAC,UAAU,GAAG,CAAC,KAAK,CAAC;SAC9B;QAED,OAAO,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;aAEe,aAAa,CAAC,OAAqB,EAAE,GAAW,EAAE,QAAgB;QAChF,IAAI,KAAK,GAAG,GAAG,GAAG,QAAQ,CAAC;QAE3B,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;QACnD,GAAG;YACD,IAAI,OAAO,GAAG,KAAK,GAAG,QAAQ,CAAC;YAC/B,KAAK,MAAM,CAAC,CAAC;YACb,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO,IAAI,QAAQ,CAAC;YACnC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;SACnC,QAAQ,KAAK,GAAG,CAAC,EAAE;QAEpB,OAAO,GAAG,CAAC;IACb,CAAC;aAEe,UAAU,CAAC,MAAoB,EAAE,GAAW;QAC1D,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG;YAAE,OAAO,KAAK,CAAC;QACpC,OAAO,MAAM,CAAC,IAAI,EAAE,KAAK,KAAK,CAAC;IACjC;;ICtDA,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;IAE5B;IACA,MAAM,EAAE,GACN,OAAO,WAAW,KAAK,WAAW;0BACd,IAAI,WAAW,EAAE;UACjC,OAAO,MAAM,KAAK,WAAW;cAC7B;gBACE,MAAM,CAAC,GAAe;oBACpB,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;oBACpE,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;iBACvB;aACF;cACD;gBACE,MAAM,CAAC,GAAe;oBACpB,IAAI,GAAG,GAAG,EAAE,CAAC;oBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACnC,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;qBACpC;oBACD,OAAO,GAAG,CAAC;iBACZ;aACF,CAAC;UAEK,YAAY;QAAzB;YACE,QAAG,GAAG,CAAC,CAAC;YACA,QAAG,GAAG,EAAE,CAAC;YACT,WAAM,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;SAe5C;QAbC,KAAK,CAAC,CAAS;YACb,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE;gBAC1B,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC9B,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;aACd;SACF;QAED,KAAK;YACH,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;YAClC,OAAO,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;SACjE;KACF;UAEY,YAAY;QAIvB,YAAY,MAAc;YAH1B,QAAG,GAAG,CAAC,CAAC;YAIN,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAED,IAAI;YACF,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;SAC3C;QAED,IAAI;YACF,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzC;QAED,OAAO,CAAC,IAAY;YAClB,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;YAC7B,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YACtC,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;SACzC;;;IC5DH,MAAM,KAAK,GAAU,EAAE,CAAC;aA+BR,oBAAoB,CAAC,KAAa;QAChD,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QACzB,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,MAAM,GAAoB,EAAE,CAAC;QACnC,MAAM,KAAK,GAAoB,EAAE,CAAC;QAClC,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,OAAO,MAAM,CAAC,GAAG,GAAG,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE;YACxC,IAAI,GAAG,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAExC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;gBAC/B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;gBAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBACf,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;gBACjB,SAAS;aACV;YAED,MAAM,IAAI,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACtC,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACxC,MAAM,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;YAEhC,MAAM,KAAK,IACT,OAAO,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAC3E,CAAC;YAEnB,IAAI,IAAI,GAAU,KAAK,CAAC;YACxB,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;gBAC9B,IAAI,GAAG,EAAE,CAAC;gBACV,GAAG;oBACD,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAC3C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBACtB,QAAQ,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;aACtC;YACD,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;YAElB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnB;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;aAEe,oBAAoB,CAAC,MAAuB;QAC1D,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAI;YACnC,CAAC,GAAG,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;SACnD;QAED,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,SAAS,qBAAqB,CAC5B,MAAuB,EACvB,KAAa,EACb,MAAoB,EACpB,KAEC;QAED,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;QAExF,IAAI,KAAK,GAAG,CAAC;YAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEnC,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;QACtC,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QAE/B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;QAC/C,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3D,KAAK,MAAM,CAAC,IAAI,IAAI,EAAE;YACpB,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B;QAED,KAAK,KAAK,EAAE,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAI;YACrC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YAC3B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,GAAG,OAAO,KAAK,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,SAAS,CAAC,EAAE;gBACpD,MAAM;aACP;YACD,KAAK,GAAG,qBAAqB,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SAC7D;QAED,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpB,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAEpC,OAAO,KAAK,CAAC;IACf,CAAC;aAEe,qBAAqB,CAAC,KAAa;QACjD,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QACzB,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,MAAM,GAAqB,EAAE,CAAC;QACpC,MAAM,KAAK,GAAqB,EAAE,CAAC;QAEnC,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,sBAAsB,GAAG,CAAC,CAAC;QAC/B,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,IAAI,oBAAoB,GAAG,CAAC,CAAC;QAC7B,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,aAAa,GAAG,CAAC,CAAC;QAEtB,GAAG;YACD,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,SAAS,GAAG,CAAC,CAAC;YAElB,OAAO,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE;gBACtC,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBAE7C,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;oBAC7B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;oBAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;oBAClB,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;oBACpB,SAAS;iBACV;gBAED,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACxC,MAAM,aAAa,GAAG,MAAM,GAAG,MAAM,CAAC;gBACtC,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC;gBACpC,MAAM,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAC;gBAEjC,IAAI,QAAQ,GAAoB,IAAI,CAAC;gBACrC,IAAI,QAAQ,GAAc,KAAK,CAAC;gBAChC,IAAI,KAAqB,CAAC;gBAC1B,IAAI,aAAa,EAAE;oBACjB,MAAM,eAAe,GAAG,aAAa,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;oBACtE,oBAAoB,GAAG,aAAa,CAClC,MAAM,EACN,sBAAsB,KAAK,eAAe,GAAG,oBAAoB,GAAG,CAAC,CACtE,CAAC;oBAEF,sBAAsB,GAAG,eAAe,CAAC;oBACzC,KAAK,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,oBAAoB,CAAmB,CAAC;iBAC7F;qBAAM;oBACL,KAAK,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAmB,CAAC;iBACtD;gBAED,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC;gBAE3B,IAAI,WAAW,EAAE;oBACf,MAAM,OAAO,GAAG,oBAAoB,CAAC;oBACrC,MAAM,QAAQ,GAAG,YAAY,CAAC;oBAC9B,oBAAoB,GAAG,aAAa,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;oBACnE,MAAM,UAAU,GAAG,OAAO,KAAK,oBAAoB,CAAC;oBACpD,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,GAAG,YAAY,GAAG,CAAC,CAAC,CAAC;oBACpE,cAAc,GAAG,aAAa,CAC5B,MAAM,EACN,UAAU,IAAI,QAAQ,KAAK,YAAY,GAAG,cAAc,GAAG,CAAC,CAC7D,CAAC;oBAEF,QAAQ,GAAG,CAAC,oBAAoB,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;iBACjE;gBACD,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAE1B,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;oBAC5B,QAAQ,GAAG,EAAE,CAAC;oBACd,GAAG;wBACD,WAAW,GAAG,OAAO,CAAC;wBACtB,aAAa,GAAG,SAAS,CAAC;wBAC1B,MAAM,gBAAgB,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBAClD,IAAI,gBAA0C,CAAC;wBAC/C,IAAI,gBAAgB,GAAG,CAAC,CAAC,EAAE;4BACzB,gBAAgB,GAAG,CAAC,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;4BAChD,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,EAAE,EAAE;gCAC1C,MAAM,MAAM,GAAG,WAAW,CAAC;gCAC3B,WAAW,GAAG,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;gCACjD,aAAa,GAAG,aAAa,CAAC,MAAM,EAAE,WAAW,KAAK,MAAM,GAAG,aAAa,GAAG,CAAC,CAAC,CAAC;gCAClF,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gCAC5C,gBAAgB,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC;6BACjE;yBACF;6BAAM;4BACL,gBAAgB,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;yBACzC;wBACD,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;qBACjC,QAAQ,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;iBACpC;gBACD,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAE1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnB;YAED,OAAO,EAAE,CAAC;YACV,MAAM,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;SACvB,QAAQ,MAAM,CAAC,GAAG,GAAG,MAAM,EAAE;QAE9B,OAAO,MAAM,CAAC;IAChB,CAAC;aAEe,qBAAqB,CAAC,MAAwB;QAC5D,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,EAAE,CAAC;QAEnC,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAI;YACnC,CAAC,GAAG,sBAAsB,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACtE;QAED,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,SAAS,sBAAsB,CAC7B,MAAwB,EACxB,KAAa,EACb,MAAoB,EACpB,KAQC;QAED,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAM,EACJ,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,WAAW,EACd,CAAC,EAAE,OAAO,EACV,CAAC,EAAE,SAAS,EACZ,OAAO,EACP,QAAQ,EACR,QAAQ,GACT,GAAG,KAAK,CAAC;QAEV,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,EAAE;YACxB,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACzC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;YACrB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACd;aAAM,IAAI,KAAK,GAAG,CAAC,EAAE;YACpB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACrB;QAED,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAErD,MAAM,MAAM,GACV,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,CAAC,KAAK,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,IAAI,OAAO,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;QACvF,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAEjC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,MAAM,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC;YAClD,IAAI,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC7B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACd;YACD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACzD;QAED,IAAI,QAAQ,EAAE;YACZ,MAAM,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC,QAAS,CAAC;YACxE,IAAI,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC7B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACb,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACd;iBAAM,IAAI,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;gBAChC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACd;YACD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACxD;QAED,IAAI,QAAQ,EAAE;YACZ,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;gBAC9B,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;oBAAE,aAAa,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAClE,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,aAAa,CAAC,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;gBACrC,IAAI,gBAAgB,GAAG,SAAS,CAAC;gBACjC,IAAI,kBAAkB,GAAG,WAAW,CAAC;gBACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACvC,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC5B,gBAAgB,GAAG,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAE,EAAE,gBAAgB,CAAC,CAAC;oBACzE,kBAAkB,GAAG,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAE,EAAE,kBAAkB,CAAC,CAAC;oBAC7E,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC;iBACxC;aACF;SACF;QAED,KAAK,KAAK,EAAE,EAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAI;YACrC,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YAC3B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,GAAG,OAAO,KAAK,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,SAAS,CAAC,EAAE;gBACpD,MAAM;aACP;YACD,KAAK,GAAG,sBAAsB,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SAC9D;QAED,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE;YACtB,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;YACvC,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;YACnB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACd;aAAM;YACL,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACrB;QACD,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAEtD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS,WAAW,CAAC,MAAoB,EAAE,QAAgB,EAAE,IAAY;QACvE,GAAG;YACD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACzB,QAAQ,EAAE,QAAQ,GAAG,IAAI,EAAE;IAC9B;;aCtUgB,MAAM,CAAC,QAAgB;QACrC,MAAM,EAAE,MAAM,EAAE,GAAG,QAAQ,CAAC;QAC5B,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;QAC1C,MAAM,OAAO,GAAsB,EAAE,CAAC;QACtC,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,GAAG;YACD,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACjC,MAAM,IAAI,GAAkB,EAAE,CAAC;YAC/B,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,SAAS,GAAG,CAAC,CAAC;YAEd,OAAO,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE;gBACxB,IAAI,GAAqB,CAAC;gBAE1B,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBAC7C,IAAI,SAAS,GAAG,OAAO;oBAAE,MAAM,GAAG,KAAK,CAAC;gBACxC,OAAO,GAAG,SAAS,CAAC;gBAEpB,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;oBAC5B,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;oBACnD,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;oBAC/C,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;oBAEnD,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;wBAC5B,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;wBAC/C,GAAG,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;qBACvE;yBAAM;wBACL,GAAG,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;qBAC3D;iBACF;qBAAM;oBACL,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;iBACnB;gBAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,MAAM,CAAC,GAAG,EAAE,CAAC;aACd;YAED,IAAI,CAAC,MAAM;gBAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnB,MAAM,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;SACvB,QAAQ,MAAM,CAAC,GAAG,IAAI,MAAM,EAAE;QAE/B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,SAAS,IAAI,CAAC,IAAwB;QACpC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC5B,CAAC;IAED,SAAS,cAAc,CAAC,CAAmB,EAAE,CAAmB;QAC9D,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;aAIe,MAAM,CAAC,OAAoC;QACzD,MAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;gBAAE,SAAS;YAEhC,IAAI,SAAS,GAAG,CAAC,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,GAAG,CAAC;oBAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAE/B,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;gBAEzD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;oBAAE,SAAS;gBACnC,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;gBAC/D,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;gBAC3D,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;gBAE/D,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC;oBAAE,SAAS;gBACnC,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;aAC5D;SACF;QAED,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB;;;;;;;;;;;;;;;"}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/dist/types/scopes.d.ts b/node_modules/@jridgewell/sourcemap-codec/dist/types/scopes.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..d156fab[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/dist/types/scopes.d.ts[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32mdeclare type Line = number;[m
[32m+[m[32mdeclare type Column = number;[m
[32m+[m[32mdeclare type Kind = number;[m
[32m+[m[32mdeclare type Name = number;[m
[32m+[m[32mdeclare type Var = number;[m
[32m+[m[32mdeclare type SourcesIndex = number;[m
[32m+[m[32mdeclare type ScopesIndex = number;[m
[32m+[m[32mdeclare type Mix<A, B, O> = (A & O) | (B & O);[m
[32m+[m[32mexport declare type OriginalScope = Mix<[[m
[32m+[m[32m    Line,[m
[32m+[m[32m    Column,[m
[32m+[m[32m    Line,[m
[32m+[m[32m    Column,[m
[32m+[m[32m    Kind[m
[32m+[m[32m], [[m
[32m+[m[32m    Line,[m
[32m+[m[32m    Column,[m
[32m+[m[32m    Line,[m
[32m+[m[32m    Column,[m
[32m+[m[32m    Kind,[m
[32m+[m[32m    Name[m
[32m+[m[32m], {[m
[32m+[m[32m    vars: Var[];[m
[32m+[m[32m}>;[m
[32m+[m[32mexport declare type GeneratedRange = Mix<[[m
[32m+[m[32m    Line,[m
[32m+[m[32m    Column,[m
[32m+[m[32m    Line,[m
[32m+[m[32m    Column[m
[32m+[m[32m], [[m
[32m+[m[32m    Line,[m
[32m+[m[32m    Column,[m
[32m+[m[32m    Line,[m
[32m+[m[32m    Column,[m
[32m+[m[32m    SourcesIndex,[m
[32m+[m[32m    ScopesIndex[m
[32m+[m[32m], {[m
[32m+[m[32m    callsite: CallSite | null;[m
[32m+[m[32m    bindings: Binding[];[m
[32m+[m[32m    isScope: boolean;[m
[32m+[m[32m}>;[m
[32m+[m[32mexport declare type CallSite = [SourcesIndex, Line, Column];[m
[32m+[m[32mdeclare type Binding = BindingExpressionRange[];[m
[32m+[m[32mexport declare type BindingExpressionRange = [Name] | [Name, Line, Column];[m
[32m+[m[32mexport declare function decodeOriginalScopes(input: string): OriginalScope[];[m
[32m+[m[32mexport declare function encodeOriginalScopes(scopes: OriginalScope[]): string;[m
[32m+[m[32mexport declare function decodeGeneratedRanges(input: string): GeneratedRange[];[m
[32m+[m[32mexport declare function encodeGeneratedRanges(ranges: GeneratedRange[]): string;[m
[32m+[m[32mexport {};[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/dist/types/sourcemap-codec.d.ts b/node_modules/@jridgewell/sourcemap-codec/dist/types/sourcemap-codec.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..336e658[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/dist/types/sourcemap-codec.d.ts[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mexport { decodeOriginalScopes, encodeOriginalScopes, decodeGeneratedRanges, encodeGeneratedRanges, } from './scopes';[m
[32m+[m[32mexport type { OriginalScope, GeneratedRange, CallSite, BindingExpressionRange } from './scopes';[m
[32m+[m[32mexport declare type SourceMapSegment = [number] | [number, number, number, number] | [number, number, number, number, number];[m
[32m+[m[32mexport declare type SourceMapLine = SourceMapSegment[];[m
[32m+[m[32mexport declare type SourceMapMappings = SourceMapLine[];[m
[32m+[m[32mexport declare function decode(mappings: string): SourceMapMappings;[m
[32m+[m[32mexport declare function encode(decoded: SourceMapMappings): string;[m
[32m+[m[32mexport declare function encode(decoded: Readonly<SourceMapMappings>): string;[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/dist/types/strings.d.ts b/node_modules/@jridgewell/sourcemap-codec/dist/types/strings.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..78bd88e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/dist/types/strings.d.ts[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mexport declare class StringWriter {[m
[32m+[m[32m    pos: number;[m
[32m+[m[32m    private out;[m
[32m+[m[32m    private buffer;[m
[32m+[m[32m    write(v: number): void;[m
[32m+[m[32m    flush(): string;[m
[32m+[m[32m}[m
[32m+[m[32mexport declare class StringReader {[m
[32m+[m[32m    pos: number;[m
[32m+[m[32m    private buffer;[m
[32m+[m[32m    constructor(buffer: string);[m
[32m+[m[32m    next(): number;[m
[32m+[m[32m    peek(): number;[m
[32m+[m[32m    indexOf(char: string): number;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/dist/types/vlq.d.ts b/node_modules/@jridgewell/sourcemap-codec/dist/types/vlq.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..450ee57[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/dist/types/vlq.d.ts[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mimport type { StringReader, StringWriter } from './strings';[m
[32m+[m[32mexport declare const comma: number;[m
[32m+[m[32mexport declare const semicolon: number;[m
[32m+[m[32mexport declare function decodeInteger(reader: StringReader, relative: number): number;[m
[32m+[m[32mexport declare function encodeInteger(builder: StringWriter, num: number, relative: number): number;[m
[32m+[m[32mexport declare function hasMoreVlq(reader: StringReader, max: number): boolean;[m
[1mdiff --git a/node_modules/@jridgewell/sourcemap-codec/package.json b/node_modules/@jridgewell/sourcemap-codec/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..7168efc[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/sourcemap-codec/package.json[m
[36m@@ -0,0 +1,75 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "@jridgewell/sourcemap-codec",[m
[32m+[m[32m  "version": "1.5.0",[m
[32m+[m[32m  "description": "Encode/decode sourcemap mappings",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "sourcemap",[m
[32m+[m[32m    "vlq"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "main": "dist/sourcemap-codec.umd.js",[m
[32m+[m[32m  "module": "dist/sourcemap-codec.mjs",[m
[32m+[m[32m  "types": "dist/types/sourcemap-codec.d.ts",[m
[32m+[m[32m  "files": [[m
[32m+[m[32m    "dist"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "exports": {[m
[32m+[m[32m    ".": [[m
[32m+[m[32m      {[m
[32m+[m[32m        "types": "./dist/types/sourcemap-codec.d.ts",[m
[32m+[m[32m        "browser": "./dist/sourcemap-codec.umd.js",[m
[32m+[m[32m        "require": "./dist/sourcemap-codec.umd.js",[m
[32m+[m[32m        "import": "./dist/sourcemap-codec.mjs"[m
[32m+[m[32m      },[m
[32m+[m[32m      "./dist/sourcemap-codec.umd.js"[m
[32m+[m[32m    ],[m
[32m+[m[32m    "./package.json": "./package.json"[m
[32m+[m[32m  },[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "benchmark": "run-s build:rollup benchmark:*",[m
[32m+[m[32m    "benchmark:install": "cd benchmark && npm install",[m
[32m+[m[32m    "benchmark:only": "node --expose-gc benchmark/index.js",[m
[32m+[m[32m    "build": "run-s -n build:*",[m
[32m+[m[32m    "build:rollup": "rollup -c rollup.config.js",[m
[32m+[m[32m    "build:ts": "tsc --project tsconfig.build.json",[m
[32m+[m[32m    "lint": "run-s -n lint:*",[m
[32m+[m[32m    "lint:prettier": "npm run test:lint:prettier -- --write",[m
[32m+[m[32m    "lint:ts": "npm run test:lint:ts -- --fix",[m
[32m+[m[32m    "prebuild": "rm -rf dist",[m
[32m+[m[32m    "prepublishOnly": "npm run preversion",[m
[32m+[m[32m    "preversion": "run-s test build",[m
[32m+[m[32m    "test": "run-s -n test:lint test:only",[m
[32m+[m[32m    "test:debug": "mocha --inspect-brk",[m
[32m+[m[32m    "test:lint": "run-s -n test:lint:*",[m
[32m+[m[32m    "test:lint:prettier": "prettier --check '{src,test}/**/*.ts'",[m
[32m+[m[32m    "test:lint:ts": "eslint '{src,test}/**/*.ts'",[m
[32m+[m[32m    "test:only": "mocha",[m
[32m+[m[32m    "test:coverage": "c8 mocha",[m
[32m+[m[32m    "test:watch": "mocha --watch"[m
[32m+[m[32m  },[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "git+https://github.com/jridgewell/sourcemap-codec.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "author": "Rich Harris",[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "@rollup/plugin-typescript": "8.3.0",[m
[32m+[m[32m    "@types/mocha": "10.0.6",[m
[32m+[m[32m    "@types/node": "17.0.15",[m
[32m+[m[32m    "@typescript-eslint/eslint-plugin": "5.10.0",[m
[32m+[m[32m    "@typescript-eslint/parser": "5.10.0",[m
[32m+[m[32m    "benchmark": "2.1.4",[m
[32m+[m[32m    "c8": "7.11.2",[m
[32m+[m[32m    "eslint": "8.7.0",[m
[32m+[m[32m    "eslint-config-prettier": "8.3.0",[m
[32m+[m[32m    "mocha": "9.2.0",[m
[32m+[m[32m    "npm-run-all": "4.1.5",[m
[32m+[m[32m    "prettier": "2.5.1",[m
[32m+[m[32m    "rollup": "2.64.0",[m
[32m+[m[32m    "source-map": "0.6.1",[m
[32m+[m[32m    "source-map-js": "1.0.2",[m
[32m+[m[32m    "sourcemap-codec": "1.4.8",[m
[32m+[m[32m    "tsx": "4.7.1",[m
[32m+[m[32m    "typescript": "4.5.4"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/LICENSE b/node_modules/@jridgewell/trace-mapping/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..37bb488[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/LICENSE[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32mCopyright 2022 Justin Ridgewell <justin@ridgewell.name>[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in[m
[32m+[m[32mall copies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE.[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/README.md b/node_modules/@jridgewell/trace-mapping/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..8286cee[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/README.md[m
[36m@@ -0,0 +1,193 @@[m
[32m+[m[32m# @jridgewell/trace-mapping[m
[32m+[m
[32m+[m[32m> Trace the original position through a source map[m
[32m+[m
[32m+[m[32m`trace-mapping` allows you to take the line and column of an output file and trace it to the[m
[32m+[m[32moriginal location in the source file through a source map.[m
[32m+[m
[32m+[m[32mYou may already be familiar with the [`source-map`][source-map] package's `SourceMapConsumer`. This[m
[32m+[m[32mprovides the same `originalPositionFor` and `generatedPositionFor` API, without requiring WASM.[m
[32m+[m
[32m+[m[32m## Installation[m
[32m+[m
[32m+[m[32m```sh[m
[32m+[m[32mnpm install @jridgewell/trace-mapping[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Usage[m
[32m+[m
[32m+[m[32m```typescript[m
[32m+[m[32mimport { TraceMap, originalPositionFor, generatedPositionFor } from '@jridgewell/trace-mapping';[m
[32m+[m
[32m+[m[32mconst tracer = new TraceMap({[m
[32m+[m[32m  version: 3,[m
[32m+[m[32m  sources: ['input.js'],[m
[32m+[m[32m  names: ['foo'],[m
[32m+[m[32m  mappings: 'KAyCIA',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m// Lines start at line 1, columns at column 0.[m
[32m+[m[32mconst traced = originalPositionFor(tracer, { line: 1, column: 5 });[m
[32m+[m[32massert.deepEqual(traced, {[m
[32m+[m[32m  source: 'input.js',[m
[32m+[m[32m  line: 42,[m
[32m+[m[32m  column: 4,[m
[32m+[m[32m  name: 'foo',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst generated = generatedPositionFor(tracer, {[m
[32m+[m[32m  source: 'input.js',[m
[32m+[m[32m  line: 42,[m
[32m+[m[32m  column: 4,[m
[32m+[m[32m});[m
[32m+[m[32massert.deepEqual(generated, {[m
[32m+[m[32m  line: 1,[m
[32m+[m[32m  column: 5,[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mWe also provide a lower level API to get the actual segment that matches our line and column. Unlike[m
[32m+[m[32m`originalPositionFor`, `traceSegment` uses a 0-base for `line`:[m
[32m+[m
[32m+[m[32m```typescript[m
[32m+[m[32mimport { traceSegment } from '@jridgewell/trace-mapping';[m
[32m+[m
[32m+[m[32m// line is 0-base.[m
[32m+[m[32mconst traced = traceSegment(tracer, /* line */ 0, /* column */ 5);[m
[32m+[m
[32m+[m[32m// Segments are [outputColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex][m
[32m+[m[32m// Again, line is 0-base and so is sourceLine[m
[32m+[m[32massert.deepEqual(traced, [5, 0, 41, 4, 0]);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### SectionedSourceMaps[m
[32m+[m
[32m+[m[32mThe sourcemap spec defines a special `sections` field that's designed to handle concatenation of[m
[32m+[m[32moutput code with associated sourcemaps. This type of sourcemap is rarely used (no major build tool[m
[32m+[m[32mproduces it), but if you are hand coding a concatenation you may need it. We provide an `AnyMap`[m
[32m+[m[32mhelper that can receive either a regular sourcemap or a `SectionedSourceMap` and returns a[m
[32m+[m[32m`TraceMap` instance:[m
[32m+[m
[32m+[m[32m```typescript[m
[32m+[m[32mimport { AnyMap } from '@jridgewell/trace-mapping';[m
[32m+[m[32mconst fooOutput = 'foo';[m
[32m+[m[32mconst barOutput = 'bar';[m
[32m+[m[32mconst output = [fooOutput, barOutput].join('\n');[m
[32m+[m
[32m+[m[32mconst sectioned = new AnyMap({[m
[32m+[m[32m  version: 3,[m
[32m+[m[32m  sections: [[m
[32m+[m[32m    {[m
[32m+[m[32m      // 0-base line and column[m
[32m+[m[32m      offset: { line: 0, column: 0 },[m
[32m+[m[32m      // fooOutput's sourcemap[m
[32m+[m[32m      map: {[m
[32m+[m[32m        version: 3,[m
[32m+[m[32m        sources: ['foo.js'],[m
[32m+[m[32m        names: ['foo'],[m
[32m+[m[32m        mappings: 'AAAAA',[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m      // barOutput's sourcemap will not affect the first line, only the second[m
[32m+[m[32m      offset: { line: 1, column: 0 },[m
[32m+[m[32m      map: {[m
[32m+[m[32m        version: 3,[m
[32m+[m[32m        sources: ['bar.js'],[m
[32m+[m[32m        names: ['bar'],[m
[32m+[m[32m        mappings: 'AAAAA',[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m
[32m+[m[32m  ],[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst traced = originalPositionFor(sectioned, {[m
[32m+[m[32m  line: 2,[m
[32m+[m[32m  column: 0,[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32massert.deepEqual(traced, {[m
[32m+[m[32m  source: 'bar.js',[m
[32m+[m[32m  line: 1,[m
[32m+[m[32m  column: 0,[m
[32m+[m[32m  name: 'bar',[m
[32m+[m[32m});[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## Benchmarks[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32mnode v18.0.0[m
[32m+[m
[32m+[m[32mamp.js.map[m
[32m+[m[32mtrace-mapping:    decoded JSON input x 183 ops/sec ±0.41% (87 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded JSON input x 384 ops/sec ±0.89% (89 runs sampled)[m
[32m+[m[32mtrace-mapping:    decoded Object input x 3,085 ops/sec ±0.24% (100 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded Object input x 452 ops/sec ±0.80% (84 runs sampled)[m
[32m+[m[32msource-map-js:    encoded Object input x 88.82 ops/sec ±0.45% (77 runs sampled)[m
[32m+[m[32msource-map-0.6.1: encoded Object input x 38.39 ops/sec ±1.88% (52 runs sampled)[m
[32m+[m[32mFastest is trace-mapping:    decoded Object input[m
[32m+[m
[32m+[m[32mtrace-mapping:    decoded originalPositionFor x 4,025,347 ops/sec ±0.15% (97 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded originalPositionFor x 3,333,136 ops/sec ±1.26% (90 runs sampled)[m
[32m+[m[32msource-map-js:    encoded originalPositionFor x 824,978 ops/sec ±1.06% (94 runs sampled)[m
[32m+[m[32msource-map-0.6.1: encoded originalPositionFor x 741,300 ops/sec ±0.93% (92 runs sampled)[m
[32m+[m[32msource-map-0.8.0: encoded originalPositionFor x 2,587,603 ops/sec ±0.75% (97 runs sampled)[m
[32m+[m[32mFastest is trace-mapping:    decoded originalPositionFor[m
[32m+[m
[32m+[m[32m***[m
[32m+[m
[32m+[m[32mbabel.min.js.map[m
[32m+[m[32mtrace-mapping:    decoded JSON input x 17.43 ops/sec ±8.81% (33 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded JSON input x 34.18 ops/sec ±4.67% (50 runs sampled)[m
[32m+[m[32mtrace-mapping:    decoded Object input x 1,010 ops/sec ±0.41% (98 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded Object input x 39.45 ops/sec ±4.01% (52 runs sampled)[m
[32m+[m[32msource-map-js:    encoded Object input x 6.57 ops/sec ±3.04% (21 runs sampled)[m
[32m+[m[32msource-map-0.6.1: encoded Object input x 4.23 ops/sec ±2.93% (15 runs sampled)[m
[32m+[m[32mFastest is trace-mapping:    decoded Object input[m
[32m+[m
[32m+[m[32mtrace-mapping:    decoded originalPositionFor x 7,576,265 ops/sec ±0.74% (96 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded originalPositionFor x 5,019,743 ops/sec ±0.74% (94 runs sampled)[m
[32m+[m[32msource-map-js:    encoded originalPositionFor x 3,396,137 ops/sec ±42.32% (95 runs sampled)[m
[32m+[m[32msource-map-0.6.1: encoded originalPositionFor x 3,753,176 ops/sec ±0.72% (95 runs sampled)[m
[32m+[m[32msource-map-0.8.0: encoded originalPositionFor x 6,423,633 ops/sec ±0.74% (95 runs sampled)[m
[32m+[m[32mFastest is trace-mapping:    decoded originalPositionFor[m
[32m+[m
[32m+[m[32m***[m
[32m+[m
[32m+[m[32mpreact.js.map[m
[32m+[m[32mtrace-mapping:    decoded JSON input x 3,499 ops/sec ±0.18% (98 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded JSON input x 6,078 ops/sec ±0.25% (99 runs sampled)[m
[32m+[m[32mtrace-mapping:    decoded Object input x 254,788 ops/sec ±0.13% (100 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded Object input x 14,063 ops/sec ±0.27% (94 runs sampled)[m
[32m+[m[32msource-map-js:    encoded Object input x 2,465 ops/sec ±0.25% (98 runs sampled)[m
[32m+[m[32msource-map-0.6.1: encoded Object input x 1,174 ops/sec ±1.90% (95 runs sampled)[m
[32m+[m[32mFastest is trace-mapping:    decoded Object input[m
[32m+[m
[32m+[m[32mtrace-mapping:    decoded originalPositionFor x 7,720,171 ops/sec ±0.14% (97 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded originalPositionFor x 6,864,485 ops/sec ±0.16% (101 runs sampled)[m
[32m+[m[32msource-map-js:    encoded originalPositionFor x 2,387,219 ops/sec ±0.28% (98 runs sampled)[m
[32m+[m[32msource-map-0.6.1: encoded originalPositionFor x 1,565,339 ops/sec ±0.32% (101 runs sampled)[m
[32m+[m[32msource-map-0.8.0: encoded originalPositionFor x 3,819,732 ops/sec ±0.38% (98 runs sampled)[m
[32m+[m[32mFastest is trace-mapping:    decoded originalPositionFor[m
[32m+[m
[32m+[m[32m***[m
[32m+[m
[32m+[m[32mreact.js.map[m
[32m+[m[32mtrace-mapping:    decoded JSON input x 1,719 ops/sec ±0.19% (99 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded JSON input x 4,284 ops/sec ±0.51% (99 runs sampled)[m
[32m+[m[32mtrace-mapping:    decoded Object input x 94,668 ops/sec ±0.08% (99 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded Object input x 5,287 ops/sec ±0.24% (99 runs sampled)[m
[32m+[m[32msource-map-js:    encoded Object input x 814 ops/sec ±0.20% (98 runs sampled)[m
[32m+[m[32msource-map-0.6.1: encoded Object input x 429 ops/sec ±0.24% (94 runs sampled)[m
[32m+[m[32mFastest is trace-mapping:    decoded Object input[m
[32m+[m
[32m+[m[32mtrace-mapping:    decoded originalPositionFor x 28,927,989 ops/sec ±0.61% (94 runs sampled)[m
[32m+[m[32mtrace-mapping:    encoded originalPositionFor x 27,394,475 ops/sec ±0.55% (97 runs sampled)[m
[32m+[m[32msource-map-js:    encoded originalPositionFor x 16,856,730 ops/sec ±0.45% (96 runs sampled)[m
[32m+[m[32msource-map-0.6.1: encoded originalPositionFor x 12,258,950 ops/sec ±0.41% (97 runs sampled)[m
[32m+[m[32msource-map-0.8.0: encoded originalPositionFor x 22,272,990 ops/sec ±0.58% (95 runs sampled)[m
[32m+[m[32mFastest is trace-mapping:    decoded originalPositionFor[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m[source-map]: https://www.npmjs.com/package/source-map[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs b/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs[m
[1mnew file mode 100644[m
[1mindex 0000000..8fce400[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs[m
[36m@@ -0,0 +1,514 @@[m
[32m+[m[32mimport { encode, decode } from '@jridgewell/sourcemap-codec';[m
[32m+[m[32mimport resolveUri from '@jridgewell/resolve-uri';[m
[32m+[m
[32m+[m[32mfunction resolve(input, base) {[m
[32m+[m[32m    // The base is always treated as a directory, if it's not empty.[m
[32m+[m[32m    // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327[m
[32m+[m[32m    // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401[m
[32m+[m[32m    if (base && !base.endsWith('/'))[m
[32m+[m[32m        base += '/';[m
[32m+[m[32m    return resolveUri(input, base);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Removes everything after the last "/", but leaves the slash.[m
[32m+[m[32m */[m
[32m+[m[32mfunction stripFilename(path) {[m
[32m+[m[32m    if (!path)[m
[32m+[m[32m        return '';[m
[32m+[m[32m    const index = path.lastIndexOf('/');[m
[32m+[m[32m    return path.slice(0, index + 1);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst COLUMN = 0;[m
[32m+[m[32mconst SOURCES_INDEX = 1;[m
[32m+[m[32mconst SOURCE_LINE = 2;[m
[32m+[m[32mconst SOURCE_COLUMN = 3;[m
[32m+[m[32mconst NAMES_INDEX = 4;[m
[32m+[m[32mconst REV_GENERATED_LINE = 1;[m
[32m+[m[32mconst REV_GENERATED_COLUMN = 2;[m
[32m+[m
[32m+[m[32mfunction maybeSort(mappings, owned) {[m
[32m+[m[32m    const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);[m
[32m+[m[32m    if (unsortedIndex === mappings.length)[m
[32m+[m[32m        return mappings;[m
[32m+[m[32m    // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If[m
[32m+[m[32m    // not, we do not want to modify the consumer's input array.[m
[32m+[m[32m    if (!owned)[m
[32m+[m[32m        mappings = mappings.slice();[m
[32m+[m[32m    for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {[m
[32m+[m[32m        mappings[i] = sortSegments(mappings[i], owned);[m
[32m+[m[32m    }[m
[32m+[m[32m    return mappings;[m
[32m+[m[32m}[m
[32m+[m[32mfunction nextUnsortedSegmentLine(mappings, start) {[m
[32m+[m[32m    for (let i = start; i < mappings.length; i++) {[m
[32m+[m[32m        if (!isSorted(mappings[i]))[m
[32m+[m[32m            return i;[m
[32m+[m[32m    }[m
[32m+[m[32m    return mappings.length;[m
[32m+[m[32m}[m
[32m+[m[32mfunction isSorted(line) {[m
[32m+[m[32m    for (let j = 1; j < line.length; j++) {[m
[32m+[m[32m        if (line[j][COLUMN] < line[j - 1][COLUMN]) {[m
[32m+[m[32m            return false;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    return true;[m
[32m+[m[32m}[m
[32m+[m[32mfunction sortSegments(line, owned) {[m
[32m+[m[32m    if (!owned)[m
[32m+[m[32m        line = line.slice();[m
[32m+[m[32m    return line.sort(sortComparator);[m
[32m+[m[32m}[m
[32m+[m[32mfunction sortComparator(a, b) {[m
[32m+[m[32m    return a[COLUMN] - b[COLUMN];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mlet found = false;[m
[32m+[m[32m/**[m
[32m+[m[32m * A binary search implementation that returns the index if a match is found.[m
[32m+[m[32m * If no match is found, then the left-index (the index associated with the item that comes just[m
[32m+[m[32m * before the desired index) is returned. To maintain proper sort order, a splice would happen at[m
[32m+[m[32m * the next index:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const array = [1, 3];[m
[32m+[m[32m * const needle = 2;[m
[32m+[m[32m * const index = binarySearch(array, needle, (item, needle) => item - needle);[m
[32m+[m[32m *[m
[32m+[m[32m * assert.equal(index, 0);[m
[32m+[m[32m * array.splice(index + 1, 0, needle);[m
[32m+[m[32m * assert.deepEqual(array, [1, 2, 3]);[m
[32m+[m[32m * ```[m
[32m+[m[32m */[m
[32m+[m[32mfunction binarySearch(haystack, needle, low, high) {[m
[32m+[m[32m    while (low <= high) {[m
[32m+[m[32m        const mid = low + ((high - low) >> 1);[m
[32m+[m[32m        const cmp = haystack[mid][COLUMN] - needle;[m
[32m+[m[32m        if (cmp === 0) {[m
[32m+[m[32m            found = true;[m
[32m+[m[32m            return mid;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (cmp < 0) {[m
[32m+[m[32m            low = mid + 1;[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m            high = mid - 1;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    found = false;[m
[32m+[m[32m    return low - 1;[m
[32m+[m[32m}[m
[32m+[m[32mfunction upperBound(haystack, needle, index) {[m
[32m+[m[32m    for (let i = index + 1; i < haystack.length; i++, index++) {[m
[32m+[m[32m        if (haystack[i][COLUMN] !== needle)[m
[32m+[m[32m            break;[m
[32m+[m[32m    }[m
[32m+[m[32m    return index;[m
[32m+[m[32m}[m
[32m+[m[32mfunction lowerBound(haystack, needle, index) {[m
[32m+[m[32m    for (let i = index - 1; i >= 0; i--, index--) {[m
[32m+[m[32m        if (haystack[i][COLUMN] !== needle)[m
[32m+[m[32m            break;[m
[32m+[m[32m    }[m
[32m+[m[32m    return index;[m
[32m+[m[32m}[m
[32m+[m[32mfunction memoizedState() {[m
[32m+[m[32m    return {[m
[32m+[m[32m        lastKey: -1,[m
[32m+[m[32m        lastNeedle: -1,[m
[32m+[m[32m        lastIndex: -1,[m
[32m+[m[32m    };[m
[32m+[m[32m}[m
[32m+[m[32m/**[m
[32m+[m[32m * This overly complicated beast is just to record the last tested line/column and the resulting[m
[32m+[m[32m * index, allowing us to skip a few tests if mappings are monotonically increasing.[m
[32m+[m[32m */[m
[32m+[m[32mfunction memoizedBinarySearch(haystack, needle, state, key) {[m
[32m+[m[32m    const { lastKey, lastNeedle, lastIndex } = state;[m
[32m+[m[32m    let low = 0;[m
[32m+[m[32m    let high = haystack.length - 1;[m
[32m+[m[32m    if (key === lastKey) {[m
[32m+[m[32m        if (needle === lastNeedle) {[m
[32m+[m[32m            found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;[m
[32m+[m[32m            return lastIndex;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (needle >= lastNeedle) {[m
[32m+[m[32m            // lastIndex may be -1 if the previous needle was not found.[m
[32m+[m[32m            low = lastIndex === -1 ? 0 : lastIndex;[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m            high = lastIndex;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    state.lastKey = key;[m
[32m+[m[32m    state.lastNeedle = needle;[m
[32m+[m[32m    return (state.lastIndex = binarySearch(haystack, needle, low, high));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Rebuilds the original source files, with mappings that are ordered by source line/column instead[m
[32m+[m[32m// of generated line/column.[m
[32m+[m[32mfunction buildBySources(decoded, memos) {[m
[32m+[m[32m    const sources = memos.map(buildNullArray);[m
[32m+[m[32m    for (let i = 0; i < decoded.length; i++) {[m
[32m+[m[32m        const line = decoded[i];[m
[32m+[m[32m        for (let j = 0; j < line.length; j++) {[m
[32m+[m[32m            const seg = line[j];[m
[32m+[m[32m            if (seg.length === 1)[m
[32m+[m[32m                continue;[m
[32m+[m[32m            const sourceIndex = seg[SOURCES_INDEX];[m
[32m+[m[32m            const sourceLine = seg[SOURCE_LINE];[m
[32m+[m[32m            const sourceColumn = seg[SOURCE_COLUMN];[m
[32m+[m[32m            const originalSource = sources[sourceIndex];[m
[32m+[m[32m            const originalLine = (originalSource[sourceLine] || (originalSource[sourceLine] = []));[m
[32m+[m[32m            const memo = memos[sourceIndex];[m
[32m+[m[32m            // The binary search either found a match, or it found the left-index just before where the[m
[32m+[m[32m            // segment should go. Either way, we want to insert after that. And there may be multiple[m
[32m+[m[32m            // generated segments associated with an original location, so there may need to move several[m
[32m+[m[32m            // indexes before we find where we need to insert.[m
[32m+[m[32m            const index = upperBound(originalLine, sourceColumn, memoizedBinarySearch(originalLine, sourceColumn, memo, sourceLine));[m
[32m+[m[32m            insert(originalLine, (memo.lastIndex = index + 1), [sourceColumn, i, seg[COLUMN]]);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    return sources;[m
[32m+[m[32m}[m
[32m+[m[32mfunction insert(array, index, value) {[m
[32m+[m[32m    for (let i = array.length; i > index; i--) {[m
[32m+[m[32m        array[i] = array[i - 1];[m
[32m+[m[32m    }[m
[32m+[m[32m    array[index] = value;[m
[32m+[m[32m}[m
[32m+[m[32m// Null arrays allow us to use ordered index keys without actually allocating contiguous memory like[m
[32m+[m[32m// a real array. We use a null-prototype object to avoid prototype pollution and deoptimizations.[m
[32m+[m[32m// Numeric properties on objects are magically sorted in ascending order by the engine regardless of[m
[32m+[m[32m// the insertion order. So, by setting any numeric keys, even out of order, we'll get ascending[m
[32m+[m[32m// order when iterating with for-in.[m
[32m+[m[32mfunction buildNullArray() {[m
[32m+[m[32m    return { __proto__: null };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst AnyMap = function (map, mapUrl) {[m
[32m+[m[32m    const parsed = typeof map === 'string' ? JSON.parse(map) : map;[m
[32m+[m[32m    if (!('sections' in parsed))[m
[32m+[m[32m        return new TraceMap(parsed, mapUrl);[m
[32m+[m[32m    const mappings = [];[m
[32m+[m[32m    const sources = [];[m
[32m+[m[32m    const sourcesContent = [];[m
[32m+[m[32m    const names = [];[m
[32m+[m[32m    const { sections } = parsed;[m
[32m+[m[32m    let i = 0;[m
[32m+[m[32m    for (; i < sections.length - 1; i++) {[m
[32m+[m[32m        const no = sections[i + 1].offset;[m
[32m+[m[32m        addSection(sections[i], mapUrl, mappings, sources, sourcesContent, names, no.line, no.column);[m
[32m+[m[32m    }[m
[32m+[m[32m    if (sections.length > 0) {[m
[32m+[m[32m        addSection(sections[i], mapUrl, mappings, sources, sourcesContent, names, Infinity, Infinity);[m
[32m+[m[32m    }[m
[32m+[m[32m    const joined = {[m
[32m+[m[32m        version: 3,[m
[32m+[m[32m        file: parsed.file,[m
[32m+[m[32m        names,[m
[32m+[m[32m        sources,[m
[32m+[m[32m        sourcesContent,[m
[32m+[m[32m        mappings,[m
[32m+[m[32m    };[m
[32m+[m[32m    return presortedDecodedMap(joined);[m
[32m+[m[32m};[m
[32m+[m[32mfunction addSection(section, mapUrl, mappings, sources, sourcesContent, names, stopLine, stopColumn) {[m
[32m+[m[32m    const map = AnyMap(section.map, mapUrl);[m
[32m+[m[32m    const { line: lineOffset, column: columnOffset } = section.offset;[m
[32m+[m[32m    const sourcesOffset = sources.length;[m
[32m+[m[32m    const namesOffset = names.length;[m
[32m+[m[32m    const decoded = decodedMappings(map);[m
[32m+[m[32m    const { resolvedSources } = map;[m
[32m+[m[32m    append(sources, resolvedSources);[m
[32m+[m[32m    append(sourcesContent, map.sourcesContent || fillSourcesContent(resolvedSources.length));[m
[32m+[m[32m    append(names, map.names);[m
[32m+[m[32m    // If this section jumps forwards several lines, we need to add lines to the output mappings catch up.[m
[32m+[m[32m    for (let i = mappings.length; i <= lineOffset; i++)[m
[32m+[m[32m        mappings.push([]);[m
[32m+[m[32m    // We can only add so many lines before we step into the range that the next section's map[m
[32m+[m[32m    // controls. When we get to the last line, then we'll start checking the segments to see if[m
[32m+[m[32m    // they've crossed into the column range.[m
[32m+[m[32m    const stopI = stopLine - lineOffset;[m
[32m+[m[32m    const len = Math.min(decoded.length, stopI + 1);[m
[32m+[m[32m    for (let i = 0; i < len; i++) {[m
[32m+[m[32m        const line = decoded[i];[m
[32m+[m[32m        // On the 0th loop, the line will already exist due to a previous section, or the line catch up[m
[32m+[m[32m        // loop above.[m
[32m+[m[32m        const out = i === 0 ? mappings[lineOffset] : (mappings[lineOffset + i] = []);[m
[32m+[m[32m        // On the 0th loop, the section's column offset shifts us forward. On all other lines (since the[m
[32m+[m[32m        // map can be multiple lines), it doesn't.[m
[32m+[m[32m        const cOffset = i === 0 ? columnOffset : 0;[m
[32m+[m[32m        for (let j = 0; j < line.length; j++) {[m
[32m+[m[32m            const seg = line[j];[m
[32m+[m[32m            const column = cOffset + seg[COLUMN];[m
[32m+[m[32m            // If this segment steps into the column range that the next section's map controls, we need[m
[32m+[m[32m            // to stop early.[m
[32m+[m[32m            if (i === stopI && column >= stopColumn)[m
[32m+[m[32m                break;[m
[32m+[m[32m            if (seg.length === 1) {[m
[32m+[m[32m                out.push([column]);[m
[32m+[m[32m                continue;[m
[32m+[m[32m            }[m
[32m+[m[32m            const sourcesIndex = sourcesOffset + seg[SOURCES_INDEX];[m
[32m+[m[32m            const sourceLine = seg[SOURCE_LINE];[m
[32m+[m[32m            const sourceColumn = seg[SOURCE_COLUMN];[m
[32m+[m[32m            if (seg.length === 4) {[m
[32m+[m[32m                out.push([column, sourcesIndex, sourceLine, sourceColumn]);[m
[32m+[m[32m                continue;[m
[32m+[m[32m            }[m
[32m+[m[32m            out.push([column, sourcesIndex, sourceLine, sourceColumn, namesOffset + seg[NAMES_INDEX]]);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mfunction append(arr, other) {[m
[32m+[m[32m    for (let i = 0; i < other.length; i++)[m
[32m+[m[32m        arr.push(other[i]);[m
[32m+[m[32m}[m
[32m+[m[32m// Sourcemaps don't need to have sourcesContent, and if they don't, we need to create an array of[m
[32m+[m[32m// equal length to the sources. This is because the sources and sourcesContent are paired arrays,[m
[32m+[m[32m// where `sourcesContent[i]` is the content of the `sources[i]` file. If we didn't, then joined[m
[32m+[m[32m// sourcemap would desynchronize the sources/contents.[m
[32m+[m[32mfunction fillSourcesContent(len) {[m
[32m+[m[32m    const sourcesContent = [];[m
[32m+[m[32m    for (let i = 0; i < len; i++)[m
[32m+[m[32m        sourcesContent[i] = null;[m
[32m+[m[32m    return sourcesContent;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst INVALID_ORIGINAL_MAPPING = Object.freeze({[m
[32m+[m[32m    source: null,[m
[32m+[m[32m    line: null,[m
[32m+[m[32m    column: null,[m
[32m+[m[32m    name: null,[m
[32m+[m[32m});[m
[32m+[m[32mconst INVALID_GENERATED_MAPPING = Object.freeze({[m
[32m+[m[32m    line: null,[m
[32m+[m[32m    column: null,[m
[32m+[m[32m});[m
[32m+[m[32mconst LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';[m
[32m+[m[32mconst COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';[m
[32m+[m[32mconst LEAST_UPPER_BOUND = -1;[m
[32m+[m[32mconst GREATEST_LOWER_BOUND = 1;[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the encoded (VLQ string) form of the SourceMap's mappings field.[m
[32m+[m[32m */[m
[32m+[m[32mlet encodedMappings;[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.[m
[32m+[m[32m */[m
[32m+[m[32mlet decodedMappings;[m
[32m+[m[32m/**[m
[32m+[m[32m * A low-level API to find the segment associated with a generated line/column (think, from a[m
[32m+[m[32m * stack trace). Line and column here are 0-based, unlike `originalPositionFor`.[m
[32m+[m[32m */[m
[32m+[m[32mlet traceSegment;[m
[32m+[m[32m/**[m
[32m+[m[32m * A higher-level API to find the source/line/column associated with a generated line/column[m
[32m+[m[32m * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in[m
[32m+[m[32m * `source-map` library.[m
[32m+[m[32m */[m
[32m+[m[32mlet originalPositionFor;[m
[32m+[m[32m/**[m
[32m+[m[32m * Finds the source/line/column directly after the mapping returned by originalPositionFor, provided[m
[32m+[m[32m * the found mapping is from the same source and line as the originalPositionFor mapping.[m
[32m+[m[32m *[m
[32m+[m[32m * Eg, in the code `let id = 1`, `originalPositionAfter` could find the mapping associated with `1`[m
[32m+[m[32m * using the same needle that would return `id` when calling `originalPositionFor`.[m
[32m+[m[32m */[m
[32m+[m[32mlet generatedPositionFor;[m
[32m+[m[32m/**[m
[32m+[m[32m * Iterates each mapping in generated position order.[m
[32m+[m[32m */[m
[32m+[m[32mlet eachMapping;[m
[32m+[m[32m/**[m
[32m+[m[32m * A helper that skips sorting of the input map's mappings array, which can be expensive for larger[m
[32m+[m[32m * maps.[m
[32m+[m[32m */[m
[32m+[m[32mlet presortedDecodedMap;[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects[m
[32m+[m[32m * a sourcemap, or to JSON.stringify.[m
[32m+[m[32m */[m
[32m+[m[32mlet decodedMap;[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects[m
[32m+[m[32m * a sourcemap, or to JSON.stringify.[m
[32m+[m[32m */[m
[32m+[m[32mlet encodedMap;[m
[32m+[m[32mclass TraceMap {[m
[32m+[m[32m    constructor(map, mapUrl) {[m
[32m+[m[32m        this._decodedMemo = memoizedState();[m
[32m+[m[32m        this._bySources = undefined;[m
[32m+[m[32m        this._bySourceMemos = undefined;[m
[32m+[m[32m        const isString = typeof map === 'string';[m
[32m+[m[32m        if (!isString && map.constructor === TraceMap)[m
[32m+[m[32m            return map;[m
[32m+[m[32m        const parsed = (isString ? JSON.parse(map) : map);[m
[32m+[m[32m        const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;[m
[32m+[m[32m        this.version = version;[m
[32m+[m[32m        this.file = file;[m
[32m+[m[32m        this.names = names;[m
[32m+[m[32m        this.sourceRoot = sourceRoot;[m
[32m+[m[32m        this.sources = sources;[m
[32m+[m[32m        this.sourcesContent = sourcesContent;[m
[32m+[m[32m        if (sourceRoot || mapUrl) {[m
[32m+[m[32m            const from = resolve(sourceRoot || '', stripFilename(mapUrl));[m
[32m+[m[32m            this.resolvedSources = sources.map((s) => resolve(s || '', from));[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m            this.resolvedSources = sources.map((s) => s || '');[m
[32m+[m[32m        }[m
[32m+[m[32m        const { mappings } = parsed;[m
[32m+[m[32m        if (typeof mappings === 'string') {[m
[32m+[m[32m            this._encoded = mappings;[m
[32m+[m[32m            this._decoded = undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        else {[m
[32m+[m[32m            this._encoded = undefined;[m
[32m+[m[32m            this._decoded = maybeSort(mappings, isString);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32m(() => {[m
[32m+[m[32m    encodedMappings = (map) => {[m
[32m+[m[32m        var _a;[m
[32m+[m[32m        return ((_a = map._encoded) !== null && _a !== void 0 ? _a : (map._encoded = encode(map._decoded)));[m
[32m+[m[32m    };[m
[32m+[m[32m    decodedMappings = (map) => {[m
[32m+[m[32m        return (map._decoded || (map._decoded = decode(map._encoded)));[m
[32m+[m[32m    };[m
[32m+[m[32m    traceSegment = (map, line, column) => {[m
[32m+[m[32m        const decoded = decodedMappings(map);[m
[32m+[m[32m        // It's common for parent source maps to have pointers to lines that have no[m
[32m+[m[32m        // mapping (like a "//# sourceMappingURL=") at the end of the child file.[m
[32m+[m[32m        if (line >= decoded.length)[m
[32m+[m[32m            return null;[m
[32m+[m[32m        return traceSegmentInternal(decoded[line], map._decodedMemo, line, column, GREATEST_LOWER_BOUND);[m
[32m+[m[32m    };[m
[32m+[m[32m    originalPositionFor = (map, { line, column, bias }) => {[m
[32m+[m[32m        line--;[m
[32m+[m[32m        if (line < 0)[m
[32m+[m[32m            throw new Error(LINE_GTR_ZERO);[m
[32m+[m[32m        if (column < 0)[m
[32m+[m[32m            throw new Error(COL_GTR_EQ_ZERO);[m
[32m+[m[32m        const decoded = decodedMappings(map);[m
[32m+[m[32m        // It's common for parent source maps to have pointers to lines that have no[m
[32m+[m[32m        // mapping (like a "//# sourceMappingURL=") at the end of the child file.[m
[32m+[m[32m        if (line >= decoded.length)[m
[32m+[m[32m            return INVALID_ORIGINAL_MAPPING;[m
[32m+[m[32m        const segment = traceSegmentInternal(decoded[line], map._decodedMemo, line, column, bias || GREATEST_LOWER_BOUND);[m
[32m+[m[32m        if (segment == null)[m
[32m+[m[32m            return INVALID_ORIGINAL_MAPPING;[m
[32m+[m[32m        if (segment.length == 1)[m
[32m+[m[32m            return INVALID_ORIGINAL_MAPPING;[m
[32m+[m[32m        const { names, resolvedSources } = map;[m
[32m+[m[32m        return {[m
[32m+[m[32m            source: resolvedSources[segment[SOURCES_INDEX]],[m
[32m+[m[32m            line: segment[SOURCE_LINE] + 1,[m
[32m+[m[32m            column: segment[SOURCE_COLUMN],[m
[32m+[m[32m            name: segment.length === 5 ? names[segment[NAMES_INDEX]] : null,[m
[32m+[m[32m        };[m
[32m+[m[32m    };[m
[32m+[m[32m    generatedPositionFor = (map, { source, line, column, bias }) => {[m
[32m+[m[32m        line--;[m
[32m+[m[32m        if (line < 0)[m
[32m+[m[32m            throw new Error(LINE_GTR_ZERO);[m
[32m+[m[32m        if (column < 0)[m
[32m+[m[32m            throw new Error(COL_GTR_EQ_ZERO);[m
[32m+[m[32m        const { sources, resolvedSources } = map;[m
[32m+[m[32m        let sourceIndex = sources.indexOf(source);[m
[32m+[m[32m        if (sourceIndex === -1)[m
[32m+[m[32m            sourceIndex = resolvedSources.indexOf(source);[m
[32m+[m[32m        if (sourceIndex === -1)[m
[32m+[m[32m            return INVALID_GENERATED_MAPPING;[m
[32m+[m[32m        const generated = (map._bySources || (map._bySources = buildBySources(decodedMappings(map), (map._bySourceMemos = sources.map(memoizedState)))));[m
[32m+[m[32m        const memos = map._bySourceMemos;[m
[32m+[m[32m        const segments = generated[sourceIndex][line];[m
[32m+[m[32m        if (segments == null)[m
[32m+[m[32m            return INVALID_GENERATED_MAPPING;[m
[32m+[m[32m        const segment = traceSegmentInternal(segments, memos[sourceIndex], line, column, bias || GREATEST_LOWER_BOUND);[m
[32m+[m[32m        if (segment == null)[m
[32m+[m[32m            return INVALID_GENERATED_MAPPING;[m
[32m+[m[32m        return {[m
[32m+[m[32m            line: segment[REV_GENERATED_LINE] + 1,[m
[32m+[m[32m            column: segment[REV_GENERATED_COLUMN],[m
[32m+[m[32m        };[m
[32m+[m[32m    };[m
[32m+[m[32m    eachMapping = (map, cb) => {[m
[32m+[m[32m        const decoded = decodedMappings(map);[m
[32m+[m[32m        const { names, resolvedSources } = map;[m
[32m+[m[32m        for (let i = 0; i < decoded.length; i++) {[m
[32m+[m[32m            const line = decoded[i];[m
[32m+[m[32m            for (let j = 0; j < line.length; j++) {[m
[32m+[m[32m                const seg = line[j];[m
[32m+[m[32m                const generatedLine = i + 1;[m
[32m+[m[32m                const generatedColumn = seg[0];[m
[32m+[m[32m                let source = null;[m
[32m+[m[32m                let originalLine = null;[m
[32m+[m[32m                let originalColumn = null;[m
[32m+[m[32m                let name = null;[m
[32m+[m[32m                if (seg.length !== 1) {[m
[32m+[m[32m                    source = resolvedSources[seg[1]];[m
[32m+[m[32m                    originalLine = seg[2] + 1;[m
[32m+[m[32m                    originalColumn = seg[3];[m
[32m+[m[32m                }[m
[32m+[m[32m                if (seg.length === 5)[m
[32m+[m[32m                    name = names[seg[4]];[m
[32m+[m[32m                cb({[m
[32m+[m[32m                    generatedLine,[m
[32m+[m[32m                    generatedColumn,[m
[32m+[m[32m                    source,[m
[32m+[m[32m                    originalLine,[m
[32m+[m[32m                    originalColumn,[m
[32m+[m[32m                    name,[m
[32m+[m[32m                });[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    };[m
[32m+[m[32m    presortedDecodedMap = (map, mapUrl) => {[m
[32m+[m[32m        const clone = Object.assign({}, map);[m
[32m+[m[32m        clone.mappings = [];[m
[32m+[m[32m        const tracer = new TraceMap(clone, mapUrl);[m
[32m+[m[32m        tracer._decoded = map.mappings;[m
[32m+[m[32m        return tracer;[m
[32m+[m[32m    };[m
[32m+[m[32m    decodedMap = (map) => {[m
[32m+[m[32m        return {[m
[32m+[m[32m            version: 3,[m
[32m+[m[32m            file: map.file,[m
[32m+[m[32m            names: map.names,[m
[32m+[m[32m            sourceRoot: map.sourceRoot,[m
[32m+[m[32m            sources: map.sources,[m
[32m+[m[32m            sourcesContent: map.sourcesContent,[m
[32m+[m[32m            mappings: decodedMappings(map),[m
[32m+[m[32m        };[m
[32m+[m[32m    };[m
[32m+[m[32m    encodedMap = (map) => {[m
[32m+[m[32m        return {[m
[32m+[m[32m            version: 3,[m
[32m+[m[32m            file: map.file,[m
[32m+[m[32m            names: map.names,[m
[32m+[m[32m            sourceRoot: map.sourceRoot,[m
[32m+[m[32m            sources: map.sources,[m
[32m+[m[32m            sourcesContent: map.sourcesContent,[m
[32m+[m[32m            mappings: encodedMappings(map),[m
[32m+[m[32m        };[m
[32m+[m[32m    };[m
[32m+[m[32m})();[m
[32m+[m[32mfunction traceSegmentInternal(segments, memo, line, column, bias) {[m
[32m+[m[32m    let index = memoizedBinarySearch(segments, column, memo, line);[m
[32m+[m[32m    if (found) {[m
[32m+[m[32m        index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (bias === LEAST_UPPER_BOUND)[m
[32m+[m[32m        index++;[m
[32m+[m[32m    if (index === -1 || index === segments.length)[m
[32m+[m[32m        return null;[m
[32m+[m[32m    return segments[index];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport { AnyMap, GREATEST_LOWER_BOUND, LEAST_UPPER_BOUND, TraceMap, decodedMap, decodedMappings, eachMapping, encodedMap, encodedMappings, generatedPositionFor, originalPositionFor, presortedDecodedMap, traceSegment };[m
[32m+[m[32m//# sourceMappingURL=trace-mapping.mjs.map[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs.map b/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs.map[m
[1mnew file mode 100644[m
[1mindex 0000000..fec7769[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs.map[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"version":3,"file":"trace-mapping.mjs","sources":["../../src/resolve.ts","../../src/strip-filename.ts","../../src/sourcemap-segment.ts","../../src/sort.ts","../../src/binary-search.ts","../../src/by-source.ts","../../src/any-map.ts","../../src/trace-mapping.ts"],"sourcesContent":[null,null,null,null,null,null,null,null],"names":["bsFound"],"mappings":";;;SAEwB,OAAO,CAAC,KAAa,EAAE,IAAwB;;;;IAIrE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAAE,IAAI,IAAI,GAAG,CAAC;IAE7C,OAAO,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACjC;;ACTA;;;SAGwB,aAAa,CAAC,IAA+B;IACnE,IAAI,CAAC,IAAI;QAAE,OAAO,EAAE,CAAC;IACrB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACpC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAClC;;ACQO,MAAM,MAAM,GAAG,CAAC,CAAC;AACjB,MAAM,aAAa,GAAG,CAAC,CAAC;AACxB,MAAM,WAAW,GAAG,CAAC,CAAC;AACtB,MAAM,aAAa,GAAG,CAAC,CAAC;AACxB,MAAM,WAAW,GAAG,CAAC,CAAC;AAEtB,MAAM,kBAAkB,GAAG,CAAC,CAAC;AAC7B,MAAM,oBAAoB,GAAG,CAAC;;SClBb,SAAS,CAC/B,QAA8B,EAC9B,KAAc;IAEd,MAAM,aAAa,GAAG,uBAAuB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC3D,IAAI,aAAa,KAAK,QAAQ,CAAC,MAAM;QAAE,OAAO,QAAQ,CAAC;;;IAIvD,IAAI,CAAC,KAAK;QAAE,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;IAExC,KAAK,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,uBAAuB,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;QAC7F,QAAQ,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;KAChD;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAS,uBAAuB,CAAC,QAA8B,EAAE,KAAa;IAC5E,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC5C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;KACtC;IACD,OAAO,QAAQ,CAAC,MAAM,CAAC;AACzB,CAAC;AAED,SAAS,QAAQ,CAAC,IAAwB;IACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,KAAK,CAAC;SACd;KACF;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,YAAY,CAAC,IAAwB,EAAE,KAAc;IAC5D,IAAI,CAAC,KAAK;QAAE,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IAChC,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACnC,CAAC;AAED,SAAS,cAAc,CAAC,CAAmB,EAAE,CAAmB;IAC9D,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;AAC/B;;ACnCO,IAAI,KAAK,GAAG,KAAK,CAAC;AAEzB;;;;;;;;;;;;;;;;SAgBgB,YAAY,CAC1B,QAA+C,EAC/C,MAAc,EACd,GAAW,EACX,IAAY;IAEZ,OAAO,GAAG,IAAI,IAAI,EAAE;QAClB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;QACtC,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;QAE3C,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,KAAK,GAAG,IAAI,CAAC;YACb,OAAO,GAAG,CAAC;SACZ;QAED,IAAI,GAAG,GAAG,CAAC,EAAE;YACX,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;SACf;aAAM;YACL,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;SAChB;KACF;IAED,KAAK,GAAG,KAAK,CAAC;IACd,OAAO,GAAG,GAAG,CAAC,CAAC;AACjB,CAAC;SAEe,UAAU,CACxB,QAA+C,EAC/C,MAAc,EACd,KAAa;IAEb,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE;QACzD,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM;YAAE,MAAM;KAC3C;IACD,OAAO,KAAK,CAAC;AACf,CAAC;SAEe,UAAU,CACxB,QAA+C,EAC/C,MAAc,EACd,KAAa;IAEb,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE;QAC5C,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM;YAAE,MAAM;KAC3C;IACD,OAAO,KAAK,CAAC;AACf,CAAC;SAEe,aAAa;IAC3B,OAAO;QACL,OAAO,EAAE,CAAC,CAAC;QACX,UAAU,EAAE,CAAC,CAAC;QACd,SAAS,EAAE,CAAC,CAAC;KACd,CAAC;AACJ,CAAC;AAED;;;;SAIgB,oBAAoB,CAClC,QAA+C,EAC/C,MAAc,EACd,KAAgB,EAChB,GAAW;IAEX,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;IAEjD,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/B,IAAI,GAAG,KAAK,OAAO,EAAE;QACnB,IAAI,MAAM,KAAK,UAAU,EAAE;YACzB,KAAK,GAAG,SAAS,KAAK,CAAC,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC;YACnE,OAAO,SAAS,CAAC;SAClB;QAED,IAAI,MAAM,IAAI,UAAU,EAAE;;YAExB,GAAG,GAAG,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;SACxC;aAAM;YACL,IAAI,GAAG,SAAS,CAAC;SAClB;KACF;IACD,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;IACpB,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;IAE1B,QAAQ,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE;AACvE;;ACvGA;AACA;SACwB,cAAc,CACpC,OAAsC,EACtC,KAAkB;IAElB,MAAM,OAAO,GAAa,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAEpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACvC,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;gBAAE,SAAS;YAE/B,MAAM,WAAW,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;YACvC,MAAM,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;YACpC,MAAM,YAAY,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;YACxC,MAAM,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;YAC5C,MAAM,YAAY,IAAI,cAAc,CAAC,UAAU,MAAzB,cAAc,CAAC,UAAU,IAAM,EAAE,EAAC,CAAC;YACzD,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;;;;;YAMhC,MAAM,KAAK,GAAG,UAAU,CACtB,YAAY,EACZ,YAAY,EACZ,oBAAoB,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC,CACnE,CAAC;YAEF,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACpF;KACF;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,MAAM,CAAI,KAAU,EAAE,KAAa,EAAE,KAAQ;IACpD,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QACzC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KACzB;IACD,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;AACvB,CAAC;AAED;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc;IACrB,OAAO,EAAE,SAAS,EAAE,IAAI,EAAO,CAAC;AAClC;;MC9Ca,MAAM,GAAW,UAAU,GAAG,EAAE,MAAM;IACjD,MAAM,MAAM,GACV,OAAO,GAAG,KAAK,QAAQ,GAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAA8C,GAAG,GAAG,CAAC;IAEhG,IAAI,EAAE,UAAU,IAAI,MAAM,CAAC;QAAE,OAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAEjE,MAAM,QAAQ,GAAyB,EAAE,CAAC;IAC1C,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,MAAM,cAAc,GAAsB,EAAE,CAAC;IAC7C,MAAM,KAAK,GAAa,EAAE,CAAC;IAC3B,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;IAE5B,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,OAAO,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACnC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;QAClC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;KAC/F;IACD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QACvB,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;KAC/F;IAED,MAAM,MAAM,GAAqB;QAC/B,OAAO,EAAE,CAAC;QACV,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,KAAK;QACL,OAAO;QACP,cAAc;QACd,QAAQ;KACT,CAAC;IAEF,OAAO,mBAAmB,CAAC,MAAM,CAAC,CAAC;AACrC,EAAY;AAEZ,SAAS,UAAU,CACjB,OAAgB,EAChB,MAAiC,EACjC,QAA8B,EAC9B,OAAiB,EACjB,cAAiC,EACjC,KAAe,EACf,QAAgB,EAChB,UAAkB;IAElB,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACxC,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC;IAElE,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;IACrC,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;IACjC,MAAM,OAAO,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;IACrC,MAAM,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC;IAChC,MAAM,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;IACjC,MAAM,CAAC,cAAc,EAAE,GAAG,CAAC,cAAc,IAAI,kBAAkB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;IACzF,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;;IAGzB,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,EAAE;QAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;;;IAKtE,MAAM,KAAK,GAAG,QAAQ,GAAG,UAAU,CAAC;IACpC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;IAEhD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC5B,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;;;QAGxB,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;;;QAG7E,MAAM,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;QAE3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,MAAM,MAAM,GAAG,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;;;YAIrC,IAAI,CAAC,KAAK,KAAK,IAAI,MAAM,IAAI,UAAU;gBAAE,MAAM;YAE/C,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACnB,SAAS;aACV;YAED,MAAM,YAAY,GAAG,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;YACxD,MAAM,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;YACpC,MAAM,YAAY,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC;gBAC3D,SAAS;aACV;YAED,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SAC5F;KACF;AACH,CAAC;AAED,SAAS,MAAM,CAAI,GAAQ,EAAE,KAAU;IACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;QAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC;AAED;AACA;AACA;AACA;AACA,SAAS,kBAAkB,CAAC,GAAW;IACrC,MAAM,cAAc,GAAG,EAAE,CAAC;IAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;QAAE,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACvD,OAAO,cAAc,CAAC;AACxB;;ACxEA,MAAM,wBAAwB,GAA2B,MAAM,CAAC,MAAM,CAAC;IACrE,MAAM,EAAE,IAAI;IACZ,IAAI,EAAE,IAAI;IACV,MAAM,EAAE,IAAI;IACZ,IAAI,EAAE,IAAI;CACX,CAAC,CAAC;AAEH,MAAM,yBAAyB,GAA4B,MAAM,CAAC,MAAM,CAAC;IACvE,IAAI,EAAE,IAAI;IACV,MAAM,EAAE,IAAI;CACb,CAAC,CAAC;AAEH,MAAM,aAAa,GAAG,uDAAuD,CAAC;AAC9E,MAAM,eAAe,GAAG,yEAAyE,CAAC;MAErF,iBAAiB,GAAG,CAAC,EAAE;MACvB,oBAAoB,GAAG,EAAE;AAEtC;;;IAGW,gBAAiE;AAE5E;;;IAGW,gBAA2E;AAEtF;;;;IAIW,aAI4B;AAEvC;;;;;IAKW,oBAGmC;AAE9C;;;;;;;IAOW,qBAGqC;AAEhD;;;IAGW,YAAyE;AAEpF;;;;IAIW,oBAA0E;AAErF;;;;IAIW,WAE2E;AAEtF;;;;IAIW,WAAgD;MAI9C,QAAQ;IAiBnB,YAAY,GAAmB,EAAE,MAAsB;QAL/C,iBAAY,GAAG,aAAa,EAAE,CAAC;QAE/B,eAAU,GAAyB,SAAS,CAAC;QAC7C,mBAAc,GAA4B,SAAS,CAAC;QAG1D,MAAM,QAAQ,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC;QAEzC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,WAAW,KAAK,QAAQ;YAAE,OAAO,GAAG,CAAC;QAE1D,MAAM,MAAM,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAA+C,CAAC;QAEhG,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,cAAc,EAAE,GAAG,MAAM,CAAC;QAC7E,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QAErC,IAAI,UAAU,IAAI,MAAM,EAAE;YACxB,MAAM,IAAI,GAAG,OAAO,CAAC,UAAU,IAAI,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;SACnE;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;SACpD;QAED,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;QAC5B,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;SAC/C;KACF;CA+JF;AA7JC;IACE,eAAe,GAAG,CAAC,GAAG;;QACpB,cAAQ,GAAG,CAAC,QAAQ,oCAAZ,GAAG,CAAC,QAAQ,GAAK,MAAM,CAAC,GAAG,CAAC,QAAS,CAAC,GAAE;KACjD,CAAC;IAEF,eAAe,GAAG,CAAC,GAAG;QACpB,QAAQ,GAAG,CAAC,QAAQ,KAAZ,GAAG,CAAC,QAAQ,GAAK,MAAM,CAAC,GAAG,CAAC,QAAS,CAAC,GAAE;KACjD,CAAC;IAEF,YAAY,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM;QAC/B,MAAM,OAAO,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;;;QAIrC,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAExC,OAAO,oBAAoB,CACzB,OAAO,CAAC,IAAI,CAAC,EACb,GAAG,CAAC,YAAY,EAChB,IAAI,EACJ,MAAM,EACN,oBAAoB,CACrB,CAAC;KACH,CAAC;IAEF,mBAAmB,GAAG,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;QAChD,IAAI,EAAE,CAAC;QACP,IAAI,IAAI,GAAG,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;QAC7C,IAAI,MAAM,GAAG,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAEjD,MAAM,OAAO,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;;;QAIrC,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM;YAAE,OAAO,wBAAwB,CAAC;QAE5D,MAAM,OAAO,GAAG,oBAAoB,CAClC,OAAO,CAAC,IAAI,CAAC,EACb,GAAG,CAAC,YAAY,EAChB,IAAI,EACJ,MAAM,EACN,IAAI,IAAI,oBAAoB,CAC7B,CAAC;QAEF,IAAI,OAAO,IAAI,IAAI;YAAE,OAAO,wBAAwB,CAAC;QACrD,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO,wBAAwB,CAAC;QAEzD,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC;QACvC,OAAO;YACL,MAAM,EAAE,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAC/C,IAAI,EAAE,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;YAC9B,MAAM,EAAE,OAAO,CAAC,aAAa,CAAC;YAC9B,IAAI,EAAE,OAAO,CAAC,MAAM,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI;SAChE,CAAC;KACH,CAAC;IAEF,oBAAoB,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;QACzD,IAAI,EAAE,CAAC;QACP,IAAI,IAAI,GAAG,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;QAC7C,IAAI,MAAM,GAAG,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAEjD,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC;QACzC,IAAI,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,WAAW,KAAK,CAAC,CAAC;YAAE,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,WAAW,KAAK,CAAC,CAAC;YAAE,OAAO,yBAAyB,CAAC;QAEzD,MAAM,SAAS,IAAI,GAAG,CAAC,UAAU,KAAd,GAAG,CAAC,UAAU,GAAK,cAAc,CAClD,eAAe,CAAC,GAAG,CAAC,GACnB,GAAG,CAAC,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EACjD,EAAC,CAAC;QACH,MAAM,KAAK,GAAG,GAAG,CAAC,cAAe,CAAC;QAElC,MAAM,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC;QAE9C,IAAI,QAAQ,IAAI,IAAI;YAAE,OAAO,yBAAyB,CAAC;QAEvD,MAAM,OAAO,GAAG,oBAAoB,CAClC,QAAQ,EACR,KAAK,CAAC,WAAW,CAAC,EAClB,IAAI,EACJ,MAAM,EACN,IAAI,IAAI,oBAAoB,CAC7B,CAAC;QAEF,IAAI,OAAO,IAAI,IAAI;YAAE,OAAO,yBAAyB,CAAC;QACtD,OAAO;YACL,IAAI,EAAE,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC;YACrC,MAAM,EAAE,OAAO,CAAC,oBAAoB,CAAC;SACtC,CAAC;KACH,CAAC;IAEF,WAAW,GAAG,CAAC,GAAG,EAAE,EAAE;QACpB,MAAM,OAAO,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC;QAEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAEpB,MAAM,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC5B,MAAM,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,MAAM,GAAG,IAAI,CAAC;gBAClB,IAAI,YAAY,GAAG,IAAI,CAAC;gBACxB,IAAI,cAAc,GAAG,IAAI,CAAC;gBAC1B,IAAI,IAAI,GAAG,IAAI,CAAC;gBAChB,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;oBACpB,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC1B,cAAc,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;iBACzB;gBACD,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;oBAAE,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAE3C,EAAE,CAAC;oBACD,aAAa;oBACb,eAAe;oBACf,MAAM;oBACN,YAAY;oBACZ,cAAc;oBACd,IAAI;iBACU,CAAC,CAAC;aACnB;SACF;KACF,CAAC;IAEF,mBAAmB,GAAG,CAAC,GAAG,EAAE,MAAM;QAChC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QACrC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACpB,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC/B,OAAO,MAAM,CAAC;KACf,CAAC;IAEF,UAAU,GAAG,CAAC,GAAG;QACf,OAAO;YACL,OAAO,EAAE,CAAC;YACV,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,KAAK,EAAE,GAAG,CAAC,KAAK;YAChB,UAAU,EAAE,GAAG,CAAC,UAAU;YAC1B,OAAO,EAAE,GAAG,CAAC,OAAO;YACpB,cAAc,EAAE,GAAG,CAAC,cAAc;YAClC,QAAQ,EAAE,eAAe,CAAC,GAAG,CAAC;SAC/B,CAAC;KACH,CAAC;IAEF,UAAU,GAAG,CAAC,GAAG;QACf,OAAO;YACL,OAAO,EAAE,CAAC;YACV,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,KAAK,EAAE,GAAG,CAAC,KAAK;YAChB,UAAU,EAAE,GAAG,CAAC,UAAU;YAC1B,OAAO,EAAE,GAAG,CAAC,OAAO;YACpB,cAAc,EAAE,GAAG,CAAC,cAAc;YAClC,QAAQ,EAAE,eAAe,CAAC,GAAG,CAAC;SAC/B,CAAC;KACH,CAAC;AACJ,CAAC,GAAA,CAAA;AAiBH,SAAS,oBAAoB,CAC3B,QAA+C,EAC/C,IAAe,EACf,IAAY,EACZ,MAAc,EACd,IAA4D;IAE5D,IAAI,KAAK,GAAG,oBAAoB,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC/D,IAAIA,KAAO,EAAE;QACX,KAAK,GAAG,CAAC,IAAI,KAAK,iBAAiB,GAAG,UAAU,GAAG,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;KACzF;SAAM,IAAI,IAAI,KAAK,iBAAiB;QAAE,KAAK,EAAE,CAAC;IAE/C,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,KAAK,QAAQ,CAAC,MAAM;QAAE,OAAO,IAAI,CAAC;IAC3D,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;AACzB;;;;"}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js b/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8b755bd[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js[m
[36m@@ -0,0 +1,528 @@[m
[32m+[m[32m(function (global, factory) {[m
[32m+[m[32m    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@jridgewell/sourcemap-codec'), require('@jridgewell/resolve-uri')) :[m
[32m+[m[32m    typeof define === 'function' && define.amd ? define(['exports', '@jridgewell/sourcemap-codec', '@jridgewell/resolve-uri'], factory) :[m
[32m+[m[32m    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.traceMapping = {}, global.sourcemapCodec, global.resolveURI));[m
[32m+[m[32m})(this, (function (exports, sourcemapCodec, resolveUri) { 'use strict';[m
[32m+[m
[32m+[m[32m    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }[m
[32m+[m
[32m+[m[32m    var resolveUri__default = /*#__PURE__*/_interopDefaultLegacy(resolveUri);[m
[32m+[m
[32m+[m[32m    function resolve(input, base) {[m
[32m+[m[32m        // The base is always treated as a directory, if it's not empty.[m
[32m+[m[32m        // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327[m
[32m+[m[32m        // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401[m
[32m+[m[32m        if (base && !base.endsWith('/'))[m
[32m+[m[32m            base += '/';[m
[32m+[m[32m        return resolveUri__default["default"](input, base);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Removes everything after the last "/", but leaves the slash.[m
[32m+[m[32m     */[m
[32m+[m[32m    function stripFilename(path) {[m
[32m+[m[32m        if (!path)[m
[32m+[m[32m            return '';[m
[32m+[m[32m        const index = path.lastIndexOf('/');[m
[32m+[m[32m        return path.slice(0, index + 1);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const COLUMN = 0;[m
[32m+[m[32m    const SOURCES_INDEX = 1;[m
[32m+[m[32m    const SOURCE_LINE = 2;[m
[32m+[m[32m    const SOURCE_COLUMN = 3;[m
[32m+[m[32m    const NAMES_INDEX = 4;[m
[32m+[m[32m    const REV_GENERATED_LINE = 1;[m
[32m+[m[32m    const REV_GENERATED_COLUMN = 2;[m
[32m+[m
[32m+[m[32m    function maybeSort(mappings, owned) {[m
[32m+[m[32m        const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);[m
[32m+[m[32m        if (unsortedIndex === mappings.length)[m
[32m+[m[32m            return mappings;[m
[32m+[m[32m        // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If[m
[32m+[m[32m        // not, we do not want to modify the consumer's input array.[m
[32m+[m[32m        if (!owned)[m
[32m+[m[32m            mappings = mappings.slice();[m
[32m+[m[32m        for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {[m
[32m+[m[32m            mappings[i] = sortSegments(mappings[i], owned);[m
[32m+[m[32m        }[m
[32m+[m[32m        return mappings;[m
[32m+[m[32m    }[m
[32m+[m[32m    function nextUnsortedSegmentLine(mappings, start) {[m
[32m+[m[32m        for (let i = start; i < mappings.length; i++) {[m
[32m+[m[32m            if (!isSorted(mappings[i]))[m
[32m+[m[32m                return i;[m
[32m+[m[32m        }[m
[32m+[m[32m        return mappings.length;[m
[32m+[m[32m    }[m
[32m+[m[32m    function isSorted(line) {[m
[32m+[m[32m        for (let j = 1; j < line.length; j++) {[m
[32m+[m[32m            if (line[j][COLUMN] < line[j - 1][COLUMN]) {[m
[32m+[m[32m                return false;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return true;[m
[32m+[m[32m    }[m
[32m+[m[32m    function sortSegments(line, owned) {[m
[32m+[m[32m        if (!owned)[m
[32m+[m[32m            line = line.slice();[m
[32m+[m[32m        return line.sort(sortComparator);[m
[32m+[m[32m    }[m
[32m+[m[32m    function sortComparator(a, b) {[m
[32m+[m[32m        return a[COLUMN] - b[COLUMN];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    let found = false;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A binary search implementation that returns the index if a match is found.[m
[32m+[m[32m     * If no match is found, then the left-index (the index associated with the item that comes just[m
[32m+[m[32m     * before the desired index) is returned. To maintain proper sort order, a splice would happen at[m
[32m+[m[32m     * the next index:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const array = [1, 3];[m
[32m+[m[32m     * const needle = 2;[m
[32m+[m[32m     * const index = binarySearch(array, needle, (item, needle) => item - needle);[m
[32m+[m[32m     *[m
[32m+[m[32m     * assert.equal(index, 0);[m
[32m+[m[32m     * array.splice(index + 1, 0, needle);[m
[32m+[m[32m     * assert.deepEqual(array, [1, 2, 3]);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     */[m
[32m+[m[32m    function binarySearch(haystack, needle, low, high) {[m
[32m+[m[32m        while (low <= high) {[m
[32m+[m[32m            const mid = low + ((high - low) >> 1);[m
[32m+[m[32m            const cmp = haystack[mid][COLUMN] - needle;[m
[32m+[m[32m            if (cmp === 0) {[m
[32m+[m[32m                found = true;[m
[32m+[m[32m                return mid;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (cmp < 0) {[m
[32m+[m[32m                low = mid + 1;[m
[32m+[m[32m            }[m
[32m+[m[32m            else {[m
[32m+[m[32m                high = mid - 1;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        found = false;[m
[32m+[m[32m        return low - 1;[m
[32m+[m[32m    }[m
[32m+[m[32m    function upperBound(haystack, needle, index) {[m
[32m+[m[32m        for (let i = index + 1; i < haystack.length; i++, index++) {[m
[32m+[m[32m            if (haystack[i][COLUMN] !== needle)[m
[32m+[m[32m                break;[m
[32m+[m[32m        }[m
[32m+[m[32m        return index;[m
[32m+[m[32m    }[m
[32m+[m[32m    function lowerBound(haystack, needle, index) {[m
[32m+[m[32m        for (let i = index - 1; i >= 0; i--, index--) {[m
[32m+[m[32m            if (haystack[i][COLUMN] !== needle)[m
[32m+[m[32m                break;[m
[32m+[m[32m        }[m
[32m+[m[32m        return index;[m
[32m+[m[32m    }[m
[32m+[m[32m    function memoizedState() {[m
[32m+[m[32m        return {[m
[32m+[m[32m            lastKey: -1,[m
[32m+[m[32m            lastNeedle: -1,[m
[32m+[m[32m            lastIndex: -1,[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This overly complicated beast is just to record the last tested line/column and the resulting[m
[32m+[m[32m     * index, allowing us to skip a few tests if mappings are monotonically increasing.[m
[32m+[m[32m     */[m
[32m+[m[32m    function memoizedBinarySearch(haystack, needle, state, key) {[m
[32m+[m[32m        const { lastKey, lastNeedle, lastIndex } = state;[m
[32m+[m[32m        let low = 0;[m
[32m+[m[32m        let high = haystack.length - 1;[m
[32m+[m[32m        if (key === lastKey) {[m
[32m+[m[32m            if (needle === lastNeedle) {[m
[32m+[m[32m                found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;[m
[32m+[m[32m                return lastIndex;[m
[32m+[m[32m            }[m
[32m+[m[32m            if (needle >= lastNeedle) {[m
[32m+[m[32m                // lastIndex may be -1 if the previous needle was not found.[m
[32m+[m[32m                low = lastIndex === -1 ? 0 : lastIndex;[m
[32m+[m[32m            }[m
[32m+[m[32m            else {[m
[32m+[m[32m                high = lastIndex;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        state.lastKey = key;[m
[32m+[m[32m        state.lastNeedle = needle;[m
[32m+[m[32m        return (state.lastIndex = binarySearch(haystack, needle, low, high));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Rebuilds the original source files, with mappings that are ordered by source line/column instead[m
[32m+[m[32m    // of generated line/column.[m
[32m+[m[32m    function buildBySources(decoded, memos) {[m
[32m+[m[32m        const sources = memos.map(buildNullArray);[m
[32m+[m[32m        for (let i = 0; i < decoded.length; i++) {[m
[32m+[m[32m            const line = decoded[i];[m
[32m+[m[32m            for (let j = 0; j < line.length; j++) {[m
[32m+[m[32m                const seg = line[j];[m
[32m+[m[32m                if (seg.length === 1)[m
[32m+[m[32m                    continue;[m
[32m+[m[32m                const sourceIndex = seg[SOURCES_INDEX];[m
[32m+[m[32m                const sourceLine = seg[SOURCE_LINE];[m
[32m+[m[32m                const sourceColumn = seg[SOURCE_COLUMN];[m
[32m+[m[32m                const originalSource = sources[sourceIndex];[m
[32m+[m[32m                const originalLine = (originalSource[sourceLine] || (originalSource[sourceLine] = []));[m
[32m+[m[32m                const memo = memos[sourceIndex];[m
[32m+[m[32m                // The binary search either found a match, or it found the left-index just before where the[m
[32m+[m[32m                // segment should go. Either way, we want to insert after that. And there may be multiple[m
[32m+[m[32m                // generated segments associated with an original location, so there may need to move several[m
[32m+[m[32m                // indexes before we find where we need to insert.[m
[32m+[m[32m                const index = upperBound(originalLine, sourceColumn, memoizedBinarySearch(originalLine, sourceColumn, memo, sourceLine));[m
[32m+[m[32m                insert(originalLine, (memo.lastIndex = index + 1), [sourceColumn, i, seg[COLUMN]]);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return sources;[m
[32m+[m[32m    }[m
[32m+[m[32m    function insert(array, index, value) {[m
[32m+[m[32m        for (let i = array.length; i > index; i--) {[m
[32m+[m[32m            array[i] = array[i - 1];[m
[32m+[m[32m        }[m
[32m+[m[32m        array[index] = value;[m
[32m+[m[32m    }[m
[32m+[m[32m    // Null arrays allow us to use ordered index keys without actually allocating contiguous memory like[m
[32m+[m[32m    // a real array. We use a null-prototype object to avoid prototype pollution and deoptimizations.[m
[32m+[m[32m    // Numeric properties on objects are magically sorted in ascending order by the engine regardless of[m
[32m+[m[32m    // the insertion order. So, by setting any numeric keys, even out of order, we'll get ascending[m
[32m+[m[32m    // order when iterating with for-in.[m
[32m+[m[32m    function buildNullArray() {[m
[32m+[m[32m        return { __proto__: null };[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const AnyMap = function (map, mapUrl) {[m
[32m+[m[32m        const parsed = typeof map === 'string' ? JSON.parse(map) : map;[m
[32m+[m[32m        if (!('sections' in parsed))[m
[32m+[m[32m            return new TraceMap(parsed, mapUrl);[m
[32m+[m[32m        const mappings = [];[m
[32m+[m[32m        const sources = [];[m
[32m+[m[32m        const sourcesContent = [];[m
[32m+[m[32m        const names = [];[m
[32m+[m[32m        const { sections } = parsed;[m
[32m+[m[32m        let i = 0;[m
[32m+[m[32m        for (; i < sections.length - 1; i++) {[m
[32m+[m[32m            const no = sections[i + 1].offset;[m
[32m+[m[32m            addSection(sections[i], mapUrl, mappings, sources, sourcesContent, names, no.line, no.column);[m
[32m+[m[32m        }[m
[32m+[m[32m        if (sections.length > 0) {[m
[32m+[m[32m            addSection(sections[i], mapUrl, mappings, sources, sourcesContent, names, Infinity, Infinity);[m
[32m+[m[32m        }[m
[32m+[m[32m        const joined = {[m
[32m+[m[32m            version: 3,[m
[32m+[m[32m            file: parsed.file,[m
[32m+[m[32m            names,[m
[32m+[m[32m            sources,[m
[32m+[m[32m            sourcesContent,[m
[32m+[m[32m            mappings,[m
[32m+[m[32m        };[m
[32m+[m[32m        return exports.presortedDecodedMap(joined);[m
[32m+[m[32m    };[m
[32m+[m[32m    function addSection(section, mapUrl, mappings, sources, sourcesContent, names, stopLine, stopColumn) {[m
[32m+[m[32m        const map = AnyMap(section.map, mapUrl);[m
[32m+[m[32m        const { line: lineOffset, column: columnOffset } = section.offset;[m
[32m+[m[32m        const sourcesOffset = sources.length;[m
[32m+[m[32m        const namesOffset = names.length;[m
[32m+[m[32m        const decoded = exports.decodedMappings(map);[m
[32m+[m[32m        const { resolvedSources } = map;[m
[32m+[m[32m        append(sources, resolvedSources);[m
[32m+[m[32m        append(sourcesContent, map.sourcesContent || fillSourcesContent(resolvedSources.length));[m
[32m+[m[32m        append(names, map.names);[m
[32m+[m[32m        // If this section jumps forwards several lines, we need to add lines to the output mappings catch up.[m
[32m+[m[32m        for (let i = mappings.length; i <= lineOffset; i++)[m
[32m+[m[32m            mappings.push([]);[m
[32m+[m[32m        // We can only add so many lines before we step into the range that the next section's map[m
[32m+[m[32m        // controls. When we get to the last line, then we'll start checking the segments to see if[m
[32m+[m[32m        // they've crossed into the column range.[m
[32m+[m[32m        const stopI = stopLine - lineOffset;[m
[32m+[m[32m        const len = Math.min(decoded.length, stopI + 1);[m
[32m+[m[32m        for (let i = 0; i < len; i++) {[m
[32m+[m[32m            const line = decoded[i];[m
[32m+[m[32m            // On the 0th loop, the line will already exist due to a previous section, or the line catch up[m
[32m+[m[32m            // loop above.[m
[32m+[m[32m            const out = i === 0 ? mappings[lineOffset] : (mappings[lineOffset + i] = []);[m
[32m+[m[32m            // On the 0th loop, the section's column offset shifts us forward. On all other lines (since the[m
[32m+[m[32m            // map can be multiple lines), it doesn't.[m
[32m+[m[32m            const cOffset = i === 0 ? columnOffset : 0;[m
[32m+[m[32m            for (let j = 0; j < line.length; j++) {[m
[32m+[m[32m                const seg = line[j];[m
[32m+[m[32m                const column = cOffset + seg[COLUMN];[m
[32m+[m[32m                // If this segment steps into the column range that the next section's map controls, we need[m
[32m+[m[32m                // to stop early.[m
[32m+[m[32m                if (i === stopI && column >= stopColumn)[m
[32m+[m[32m                    break;[m
[32m+[m[32m                if (seg.length === 1) {[m
[32m+[m[32m                    out.push([column]);[m
[32m+[m[32m                    continue;[m
[32m+[m[32m                }[m
[32m+[m[32m                const sourcesIndex = sourcesOffset + seg[SOURCES_INDEX];[m
[32m+[m[32m                const sourceLine = seg[SOURCE_LINE];[m
[32m+[m[32m                const sourceColumn = seg[SOURCE_COLUMN];[m
[32m+[m[32m                if (seg.length === 4) {[m
[32m+[m[32m                    out.push([column, sourcesIndex, sourceLine, sourceColumn]);[m
[32m+[m[32m                    continue;[m
[32m+[m[32m                }[m
[32m+[m[32m                out.push([column, sourcesIndex, sourceLine, sourceColumn, namesOffset + seg[NAMES_INDEX]]);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    function append(arr, other) {[m
[32m+[m[32m        for (let i = 0; i < other.length; i++)[m
[32m+[m[32m            arr.push(other[i]);[m
[32m+[m[32m    }[m
[32m+[m[32m    // Sourcemaps don't need to have sourcesContent, and if they don't, we need to create an array of[m
[32m+[m[32m    // equal length to the sources. This is because the sources and sourcesContent are paired arrays,[m
[32m+[m[32m    // where `sourcesContent[i]` is the content of the `sources[i]` file. If we didn't, then joined[m
[32m+[m[32m    // sourcemap would desynchronize the sources/contents.[m
[32m+[m[32m    function fillSourcesContent(len) {[m
[32m+[m[32m        const sourcesContent = [];[m
[32m+[m[32m        for (let i = 0; i < len; i++)[m
[32m+[m[32m            sourcesContent[i] = null;[m
[32m+[m[32m        return sourcesContent;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const INVALID_ORIGINAL_MAPPING = Object.freeze({[m
[32m+[m[32m        source: null,[m
[32m+[m[32m        line: null,[m
[32m+[m[32m        column: null,[m
[32m+[m[32m        name: null,[m
[32m+[m[32m    });[m
[32m+[m[32m    const INVALID_GENERATED_MAPPING = Object.freeze({[m
[32m+[m[32m        line: null,[m
[32m+[m[32m        column: null,[m
[32m+[m[32m    });[m
[32m+[m[32m    const LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';[m
[32m+[m[32m    const COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';[m
[32m+[m[32m    const LEAST_UPPER_BOUND = -1;[m
[32m+[m[32m    const GREATEST_LOWER_BOUND = 1;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the encoded (VLQ string) form of the SourceMap's mappings field.[m
[32m+[m[32m     */[m
[32m+[m[32m    exports.encodedMappings = void 0;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.[m
[32m+[m[32m     */[m
[32m+[m[32m    exports.decodedMappings = void 0;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A low-level API to find the segment associated with a generated line/column (think, from a[m
[32m+[m[32m     * stack trace). Line and column here are 0-based, unlike `originalPositionFor`.[m
[32m+[m[32m     */[m
[32m+[m[32m    exports.traceSegment = void 0;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A higher-level API to find the source/line/column associated with a generated line/column[m
[32m+[m[32m     * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in[m
[32m+[m[32m     * `source-map` library.[m
[32m+[m[32m     */[m
[32m+[m[32m    exports.originalPositionFor = void 0;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Finds the source/line/column directly after the mapping returned by originalPositionFor, provided[m
[32m+[m[32m     * the found mapping is from the same source and line as the originalPositionFor mapping.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Eg, in the code `let id = 1`, `originalPositionAfter` could find the mapping associated with `1`[m
[32m+[m[32m     * using the same needle that would return `id` when calling `originalPositionFor`.[m
[32m+[m[32m     */[m
[32m+[m[32m    exports.generatedPositionFor = void 0;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Iterates each mapping in generated position order.[m
[32m+[m[32m     */[m
[32m+[m[32m    exports.eachMapping = void 0;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A helper that skips sorting of the input map's mappings array, which can be expensive for larger[m
[32m+[m[32m     * maps.[m
[32m+[m[32m     */[m
[32m+[m[32m    exports.presortedDecodedMap = void 0;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects[m
[32m+[m[32m     * a sourcemap, or to JSON.stringify.[m
[32m+[m[32m     */[m
[32m+[m[32m    exports.decodedMap = void 0;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects[m
[32m+[m[32m     * a sourcemap, or to JSON.stringify.[m
[32m+[m[32m     */[m
[32m+[m[32m    exports.encodedMap = void 0;[m
[32m+[m[32m    class TraceMap {[m
[32m+[m[32m        constructor(map, mapUrl) {[m
[32m+[m[32m            this._decodedMemo = memoizedState();[m
[32m+[m[32m            this._bySources = undefined;[m
[32m+[m[32m            this._bySourceMemos = undefined;[m
[32m+[m[32m            const isString = typeof map === 'string';[m
[32m+[m[32m            if (!isString && map.constructor === TraceMap)[m
[32m+[m[32m                return map;[m
[32m+[m[32m            const parsed = (isString ? JSON.parse(map) : map);[m
[32m+[m[32m            const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;[m
[32m+[m[32m            this.version = version;[m
[32m+[m[32m            this.file = file;[m
[32m+[m[32m            this.names = names;[m
[32m+[m[32m            this.sourceRoot = sourceRoot;[m
[32m+[m[32m            this.sources = sources;[m
[32m+[m[32m            this.sourcesContent = sourcesContent;[m
[32m+[m[32m            if (sourceRoot || mapUrl) {[m
[32m+[m[32m                const from = resolve(sourceRoot || '', stripFilename(mapUrl));[m
[32m+[m[32m                this.resolvedSources = sources.map((s) => resolve(s || '', from));[m
[32m+[m[32m            }[m
[32m+[m[32m            else {[m
[32m+[m[32m                this.resolvedSources = sources.map((s) => s || '');[m
[32m+[m[32m            }[m
[32m+[m[32m            const { mappings } = parsed;[m
[32m+[m[32m            if (typeof mappings === 'string') {[m
[32m+[m[32m                this._encoded = mappings;[m
[32m+[m[32m                this._decoded = undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            else {[m
[32m+[m[32m                this._encoded = undefined;[m
[32m+[m[32m                this._decoded = maybeSort(mappings, isString);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    (() => {[m
[32m+[m[32m        exports.encodedMappings = (map) => {[m
[32m+[m[32m            var _a;[m
[32m+[m[32m            return ((_a = map._encoded) !== null && _a !== void 0 ? _a : (map._encoded = sourcemapCodec.encode(map._decoded)));[m
[32m+[m[32m        };[m
[32m+[m[32m        exports.decodedMappings = (map) => {[m
[32m+[m[32m            return (map._decoded || (map._decoded = sourcemapCodec.decode(map._encoded)));[m
[32m+[m[32m        };[m
[32m+[m[32m        exports.traceSegment = (map, line, column) => {[m
[32m+[m[32m            const decoded = exports.decodedMappings(map);[m
[32m+[m[32m            // It's common for parent source maps to have pointers to lines that have no[m
[32m+[m[32m            // mapping (like a "//# sourceMappingURL=") at the end of the child file.[m
[32m+[m[32m            if (line >= decoded.length)[m
[32m+[m[32m                return null;[m
[32m+[m[32m            return traceSegmentInternal(decoded[line], map._decodedMemo, line, column, GREATEST_LOWER_BOUND);[m
[32m+[m[32m        };[m
[32m+[m[32m        exports.originalPositionFor = (map, { line, column, bias }) => {[m
[32m+[m[32m            line--;[m
[32m+[m[32m            if (line < 0)[m
[32m+[m[32m                throw new Error(LINE_GTR_ZERO);[m
[32m+[m[32m            if (column < 0)[m
[32m+[m[32m                throw new Error(COL_GTR_EQ_ZERO);[m
[32m+[m[32m            const decoded = exports.decodedMappings(map);[m
[32m+[m[32m            // It's common for parent source maps to have pointers to lines that have no[m
[32m+[m[32m            // mapping (like a "//# sourceMappingURL=") at the end of the child file.[m
[32m+[m[32m            if (line >= decoded.length)[m
[32m+[m[32m                return INVALID_ORIGINAL_MAPPING;[m
[32m+[m[32m            const segment = traceSegmentInternal(decoded[line], map._decodedMemo, line, column, bias || GREATEST_LOWER_BOUND);[m
[32m+[m[32m            if (segment == null)[m
[32m+[m[32m                return INVALID_ORIGINAL_MAPPING;[m
[32m+[m[32m            if (segment.length == 1)[m
[32m+[m[32m                return INVALID_ORIGINAL_MAPPING;[m
[32m+[m[32m            const { names, resolvedSources } = map;[m
[32m+[m[32m            return {[m
[32m+[m[32m                source: resolvedSources[segment[SOURCES_INDEX]],[m
[32m+[m[32m                line: segment[SOURCE_LINE] + 1,[m
[32m+[m[32m                column: segment[SOURCE_COLUMN],[m
[32m+[m[32m                name: segment.length === 5 ? names[segment[NAMES_INDEX]] : null,[m
[32m+[m[32m            };[m
[32m+[m[32m        };[m
[32m+[m[32m        exports.generatedPositionFor = (map, { source, line, column, bias }) => {[m
[32m+[m[32m            line--;[m
[32m+[m[32m            if (line < 0)[m
[32m+[m[32m                throw new Error(LINE_GTR_ZERO);[m
[32m+[m[32m            if (column < 0)[m
[32m+[m[32m                throw new Error(COL_GTR_EQ_ZERO);[m
[32m+[m[32m            const { sources, resolvedSources } = map;[m
[32m+[m[32m            let sourceIndex = sources.indexOf(source);[m
[32m+[m[32m            if (sourceIndex === -1)[m
[32m+[m[32m                sourceIndex = resolvedSources.indexOf(source);[m
[32m+[m[32m            if (sourceIndex === -1)[m
[32m+[m[32m                return INVALID_GENERATED_MAPPING;[m
[32m+[m[32m            const generated = (map._bySources || (map._bySources = buildBySources(exports.decodedMappings(map), (map._bySourceMemos = sources.map(memoizedState)))));[m
[32m+[m[32m            const memos = map._bySourceMemos;[m
[32m+[m[32m            const segments = generated[sourceIndex][line];[m
[32m+[m[32m            if (segments == null)[m
[32m+[m[32m                return INVALID_GENERATED_MAPPING;[m
[32m+[m[32m            const segment = traceSegmentInternal(segments, memos[sourceIndex], line, column, bias || GREATEST_LOWER_BOUND);[m
[32m+[m[32m            if (segment == null)[m
[32m+[m[32m                return INVALID_GENERATED_MAPPING;[m
[32m+[m[32m            return {[m
[32m+[m[32m                line: segment[REV_GENERATED_LINE] + 1,[m
[32m+[m[32m                column: segment[REV_GENERATED_COLUMN],[m
[32m+[m[32m            };[m
[32m+[m[32m        };[m
[32m+[m[32m        exports.eachMapping = (map, cb) => {[m
[32m+[m[32m            const decoded = exports.decodedMappings(map);[m
[32m+[m[32m            const { names, resolvedSources } = map;[m
[32m+[m[32m            for (let i = 0; i < decoded.length; i++) {[m
[32m+[m[32m                const line = decoded[i];[m
[32m+[m[32m                for (let j = 0; j < line.length; j++) {[m
[32m+[m[32m                    const seg = line[j];[m
[32m+[m[32m                    const generatedLine = i + 1;[m
[32m+[m[32m                    const generatedColumn = seg[0];[m
[32m+[m[32m                    let source = null;[m
[32m+[m[32m                    let originalLine = null;[m
[32m+[m[32m                    let originalColumn = null;[m
[32m+[m[32m                    let name = null;[m
[32m+[m[32m                    if (seg.length !== 1) {[m
[32m+[m[32m                        source = resolvedSources[seg[1]];[m
[32m+[m[32m                        originalLine = seg[2] + 1;[m
[32m+[m[32m                        originalColumn = seg[3];[m
[32m+[m[32m                    }[m
[32m+[m[32m                    if (seg.length === 5)[m
[32m+[m[32m                        name = names[seg[4]];[m
[32m+[m[32m                    cb({[m
[32m+[m[32m                        generatedLine,[m
[32m+[m[32m                        generatedColumn,[m
[32m+[m[32m                        source,[m
[32m+[m[32m                        originalLine,[m
[32m+[m[32m                        originalColumn,[m
[32m+[m[32m                        name,[m
[32m+[m[32m                    });[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        };[m
[32m+[m[32m        exports.presortedDecodedMap = (map, mapUrl) => {[m
[32m+[m[32m            const clone = Object.assign({}, map);[m
[32m+[m[32m            clone.mappings = [];[m
[32m+[m[32m            const tracer = new TraceMap(clone, mapUrl);[m
[32m+[m[32m            tracer._decoded = map.mappings;[m
[32m+[m[32m            return tracer;[m
[32m+[m[32m        };[m
[32m+[m[32m        exports.decodedMap = (map) => {[m
[32m+[m[32m            return {[m
[32m+[m[32m                version: 3,[m
[32m+[m[32m                file: map.file,[m
[32m+[m[32m                names: map.names,[m
[32m+[m[32m                sourceRoot: map.sourceRoot,[m
[32m+[m[32m                sources: map.sources,[m
[32m+[m[32m                sourcesContent: map.sourcesContent,[m
[32m+[m[32m                mappings: exports.decodedMappings(map),[m
[32m+[m[32m            };[m
[32m+[m[32m        };[m
[32m+[m[32m        exports.encodedMap = (map) => {[m
[32m+[m[32m            return {[m
[32m+[m[32m                version: 3,[m
[32m+[m[32m                file: map.file,[m
[32m+[m[32m                names: map.names,[m
[32m+[m[32m                sourceRoot: map.sourceRoot,[m
[32m+[m[32m                sources: map.sources,[m
[32m+[m[32m                sourcesContent: map.sourcesContent,[m
[32m+[m[32m                mappings: exports.encodedMappings(map),[m
[32m+[m[32m            };[m
[32m+[m[32m        };[m
[32m+[m[32m    })();[m
[32m+[m[32m    function traceSegmentInternal(segments, memo, line, column, bias) {[m
[32m+[m[32m        let index = memoizedBinarySearch(segments, column, memo, line);[m
[32m+[m[32m        if (found) {[m
[32m+[m[32m            index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);[m
[32m+[m[32m        }[m
[32m+[m[32m        else if (bias === LEAST_UPPER_BOUND)[m
[32m+[m[32m            index++;[m
[32m+[m[32m        if (index === -1 || index === segments.length)[m
[32m+[m[32m            return null;[m
[32m+[m[32m        return segments[index];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    exports.AnyMap = AnyMap;[m
[32m+[m[32m    exports.GREATEST_LOWER_BOUND = GREATEST_LOWER_BOUND;[m
[32m+[m[32m    exports.LEAST_UPPER_BOUND = LEAST_UPPER_BOUND;[m
[32m+[m[32m    exports.TraceMap = TraceMap;[m
[32m+[m
[32m+[m[32m    Object.defineProperty(exports, '__esModule', { value: true });[m
[32m+[m
[32m+[m[32m}));[m
[32m+[m[32m//# sourceMappingURL=trace-mapping.umd.js.map[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js.map b/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js.map[m
[1mnew file mode 100644[m
[1mindex 0000000..4ef72e7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js.map[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"version":3,"file":"trace-mapping.umd.js","sources":["../../src/resolve.ts","../../src/strip-filename.ts","../../src/sourcemap-segment.ts","../../src/sort.ts","../../src/binary-search.ts","../../src/by-source.ts","../../src/any-map.ts","../../src/trace-mapping.ts"],"sourcesContent":[null,null,null,null,null,null,null,null],"names":["resolveUri","presortedDecodedMap","decodedMappings","encodedMappings","traceSegment","originalPositionFor","generatedPositionFor","eachMapping","decodedMap","encodedMap","encode","decode","bsFound"],"mappings":";;;;;;;;;;aAEwB,OAAO,CAAC,KAAa,EAAE,IAAwB;;;;QAIrE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YAAE,IAAI,IAAI,GAAG,CAAC;QAE7C,OAAOA,8BAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACjC;;ICTA;;;aAGwB,aAAa,CAAC,IAA+B;QACnE,IAAI,CAAC,IAAI;YAAE,OAAO,EAAE,CAAC;QACrB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;IAClC;;ICQO,MAAM,MAAM,GAAG,CAAC,CAAC;IACjB,MAAM,aAAa,GAAG,CAAC,CAAC;IACxB,MAAM,WAAW,GAAG,CAAC,CAAC;IACtB,MAAM,aAAa,GAAG,CAAC,CAAC;IACxB,MAAM,WAAW,GAAG,CAAC,CAAC;IAEtB,MAAM,kBAAkB,GAAG,CAAC,CAAC;IAC7B,MAAM,oBAAoB,GAAG,CAAC;;aClBb,SAAS,CAC/B,QAA8B,EAC9B,KAAc;QAEd,MAAM,aAAa,GAAG,uBAAuB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC3D,IAAI,aAAa,KAAK,QAAQ,CAAC,MAAM;YAAE,OAAO,QAAQ,CAAC;;;QAIvD,IAAI,CAAC,KAAK;YAAE,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;QAExC,KAAK,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,uBAAuB,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;YAC7F,QAAQ,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;SAChD;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,SAAS,uBAAuB,CAAC,QAA8B,EAAE,KAAa;QAC5E,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAAE,OAAO,CAAC,CAAC;SACtC;QACD,OAAO,QAAQ,CAAC,MAAM,CAAC;IACzB,CAAC;IAED,SAAS,QAAQ,CAAC,IAAwB;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;gBACzC,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,YAAY,CAAC,IAAwB,EAAE,KAAc;QAC5D,IAAI,CAAC,KAAK;YAAE,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACnC,CAAC;IAED,SAAS,cAAc,CAAC,CAAmB,EAAE,CAAmB;QAC9D,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;IAC/B;;ICnCO,IAAI,KAAK,GAAG,KAAK,CAAC;IAEzB;;;;;;;;;;;;;;;;aAgBgB,YAAY,CAC1B,QAA+C,EAC/C,MAAc,EACd,GAAW,EACX,IAAY;QAEZ,OAAO,GAAG,IAAI,IAAI,EAAE;YAClB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;YACtC,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;YAE3C,IAAI,GAAG,KAAK,CAAC,EAAE;gBACb,KAAK,GAAG,IAAI,CAAC;gBACb,OAAO,GAAG,CAAC;aACZ;YAED,IAAI,GAAG,GAAG,CAAC,EAAE;gBACX,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;aACf;iBAAM;gBACL,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;aAChB;SACF;QAED,KAAK,GAAG,KAAK,CAAC;QACd,OAAO,GAAG,GAAG,CAAC,CAAC;IACjB,CAAC;aAEe,UAAU,CACxB,QAA+C,EAC/C,MAAc,EACd,KAAa;QAEb,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE;YACzD,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM;gBAAE,MAAM;SAC3C;QACD,OAAO,KAAK,CAAC;IACf,CAAC;aAEe,UAAU,CACxB,QAA+C,EAC/C,MAAc,EACd,KAAa;QAEb,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE;YAC5C,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM;gBAAE,MAAM;SAC3C;QACD,OAAO,KAAK,CAAC;IACf,CAAC;aAEe,aAAa;QAC3B,OAAO;YACL,OAAO,EAAE,CAAC,CAAC;YACX,UAAU,EAAE,CAAC,CAAC;YACd,SAAS,EAAE,CAAC,CAAC;SACd,CAAC;IACJ,CAAC;IAED;;;;aAIgB,oBAAoB,CAClC,QAA+C,EAC/C,MAAc,EACd,KAAgB,EAChB,GAAW;QAEX,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;QAEjD,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/B,IAAI,GAAG,KAAK,OAAO,EAAE;YACnB,IAAI,MAAM,KAAK,UAAU,EAAE;gBACzB,KAAK,GAAG,SAAS,KAAK,CAAC,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC;gBACnE,OAAO,SAAS,CAAC;aAClB;YAED,IAAI,MAAM,IAAI,UAAU,EAAE;;gBAExB,GAAG,GAAG,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;aACxC;iBAAM;gBACL,IAAI,GAAG,SAAS,CAAC;aAClB;SACF;QACD,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;QACpB,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;QAE1B,QAAQ,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE;IACvE;;ICvGA;IACA;aACwB,cAAc,CACpC,OAAsC,EACtC,KAAkB;QAElB,MAAM,OAAO,GAAa,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAEpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;oBAAE,SAAS;gBAE/B,MAAM,WAAW,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;gBACvC,MAAM,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;gBACpC,MAAM,YAAY,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;gBACxC,MAAM,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;gBAC5C,MAAM,YAAY,IAAI,cAAc,CAAC,UAAU,MAAzB,cAAc,CAAC,UAAU,IAAM,EAAE,EAAC,CAAC;gBACzD,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;;;;;gBAMhC,MAAM,KAAK,GAAG,UAAU,CACtB,YAAY,EACZ,YAAY,EACZ,oBAAoB,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC,CACnE,CAAC;gBAEF,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACpF;SACF;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,SAAS,MAAM,CAAI,KAAU,EAAE,KAAa,EAAE,KAAQ;QACpD,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YACzC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACzB;QACD,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IACvB,CAAC;IAED;IACA;IACA;IACA;IACA;IACA,SAAS,cAAc;QACrB,OAAO,EAAE,SAAS,EAAE,IAAI,EAAO,CAAC;IAClC;;UC9Ca,MAAM,GAAW,UAAU,GAAG,EAAE,MAAM;QACjD,MAAM,MAAM,GACV,OAAO,GAAG,KAAK,QAAQ,GAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAA8C,GAAG,GAAG,CAAC;QAEhG,IAAI,EAAE,UAAU,IAAI,MAAM,CAAC;YAAE,OAAO,IAAI,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAEjE,MAAM,QAAQ,GAAyB,EAAE,CAAC;QAC1C,MAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,MAAM,cAAc,GAAsB,EAAE,CAAC;QAC7C,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;QAE5B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACnC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;YAClC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;SAC/F;QACD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;SAC/F;QAED,MAAM,MAAM,GAAqB;YAC/B,OAAO,EAAE,CAAC;YACV,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,KAAK;YACL,OAAO;YACP,cAAc;YACd,QAAQ;SACT,CAAC;QAEF,OAAOC,2BAAmB,CAAC,MAAM,CAAC,CAAC;IACrC,EAAY;IAEZ,SAAS,UAAU,CACjB,OAAgB,EAChB,MAAiC,EACjC,QAA8B,EAC9B,OAAiB,EACjB,cAAiC,EACjC,KAAe,EACf,QAAgB,EAChB,UAAkB;QAElB,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACxC,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC;QAElE,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;QACrC,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;QACjC,MAAM,OAAO,GAAGC,uBAAe,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC;QAChC,MAAM,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;QACjC,MAAM,CAAC,cAAc,EAAE,GAAG,CAAC,cAAc,IAAI,kBAAkB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;QACzF,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;;QAGzB,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC,EAAE;YAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;;;QAKtE,MAAM,KAAK,GAAG,QAAQ,GAAG,UAAU,CAAC;QACpC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;QAEhD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;;;YAGxB,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;;;YAG7E,MAAM,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;YAE3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,MAAM,MAAM,GAAG,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;;;gBAIrC,IAAI,CAAC,KAAK,KAAK,IAAI,MAAM,IAAI,UAAU;oBAAE,MAAM;gBAE/C,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;oBACpB,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACnB,SAAS;iBACV;gBAED,MAAM,YAAY,GAAG,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;gBACxD,MAAM,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;gBACpC,MAAM,YAAY,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;gBACxC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;oBACpB,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC;oBAC3D,SAAS;iBACV;gBAED,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aAC5F;SACF;IACH,CAAC;IAED,SAAS,MAAM,CAAI,GAAQ,EAAE,KAAU;QACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;YAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED;IACA;IACA;IACA;IACA,SAAS,kBAAkB,CAAC,GAAW;QACrC,MAAM,cAAc,GAAG,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;YAAE,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACvD,OAAO,cAAc,CAAC;IACxB;;ICxEA,MAAM,wBAAwB,GAA2B,MAAM,CAAC,MAAM,CAAC;QACrE,MAAM,EAAE,IAAI;QACZ,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,IAAI;QACZ,IAAI,EAAE,IAAI;KACX,CAAC,CAAC;IAEH,MAAM,yBAAyB,GAA4B,MAAM,CAAC,MAAM,CAAC;QACvE,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,IAAI;KACb,CAAC,CAAC;IAEH,MAAM,aAAa,GAAG,uDAAuD,CAAC;IAC9E,MAAM,eAAe,GAAG,yEAAyE,CAAC;UAErF,iBAAiB,GAAG,CAAC,EAAE;UACvB,oBAAoB,GAAG,EAAE;IAEtC;;;AAGWC,qCAAiE;IAE5E;;;AAGWD,qCAA2E;IAEtF;;;;AAIWE,kCAI4B;IAEvC;;;;;AAKWC,yCAGmC;IAE9C;;;;;;;AAOWC,0CAGqC;IAEhD;;;AAGWC,iCAAyE;IAEpF;;;;AAIWN,yCAA0E;IAErF;;;;AAIWO,gCAE2E;IAEtF;;;;AAIWC,gCAAgD;UAI9C,QAAQ;QAiBnB,YAAY,GAAmB,EAAE,MAAsB;YAL/C,iBAAY,GAAG,aAAa,EAAE,CAAC;YAE/B,eAAU,GAAyB,SAAS,CAAC;YAC7C,mBAAc,GAA4B,SAAS,CAAC;YAG1D,MAAM,QAAQ,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC;YAEzC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,WAAW,KAAK,QAAQ;gBAAE,OAAO,GAAG,CAAC;YAE1D,MAAM,MAAM,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAA+C,CAAC;YAEhG,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,cAAc,EAAE,GAAG,MAAM,CAAC;YAC7E,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YAErC,IAAI,UAAU,IAAI,MAAM,EAAE;gBACxB,MAAM,IAAI,GAAG,OAAO,CAAC,UAAU,IAAI,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC9D,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;aACnE;iBAAM;gBACL,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;aACpD;YAED,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC;YAC5B,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;gBAC1B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;aAC/C;SACF;KA+JF;IA7JC;QACEN,uBAAe,GAAG,CAAC,GAAG;;YACpB,cAAQ,GAAG,CAAC,QAAQ,oCAAZ,GAAG,CAAC,QAAQ,GAAKO,qBAAM,CAAC,GAAG,CAAC,QAAS,CAAC,GAAE;SACjD,CAAC;QAEFR,uBAAe,GAAG,CAAC,GAAG;YACpB,QAAQ,GAAG,CAAC,QAAQ,KAAZ,GAAG,CAAC,QAAQ,GAAKS,qBAAM,CAAC,GAAG,CAAC,QAAS,CAAC,GAAE;SACjD,CAAC;QAEFP,oBAAY,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM;YAC/B,MAAM,OAAO,GAAGF,uBAAe,CAAC,GAAG,CAAC,CAAC;;;YAIrC,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM;gBAAE,OAAO,IAAI,CAAC;YAExC,OAAO,oBAAoB,CACzB,OAAO,CAAC,IAAI,CAAC,EACb,GAAG,CAAC,YAAY,EAChB,IAAI,EACJ,MAAM,EACN,oBAAoB,CACrB,CAAC;SACH,CAAC;QAEFG,2BAAmB,GAAG,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAChD,IAAI,EAAE,CAAC;YACP,IAAI,IAAI,GAAG,CAAC;gBAAE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;YAC7C,IAAI,MAAM,GAAG,CAAC;gBAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;YAEjD,MAAM,OAAO,GAAGH,uBAAe,CAAC,GAAG,CAAC,CAAC;;;YAIrC,IAAI,IAAI,IAAI,OAAO,CAAC,MAAM;gBAAE,OAAO,wBAAwB,CAAC;YAE5D,MAAM,OAAO,GAAG,oBAAoB,CAClC,OAAO,CAAC,IAAI,CAAC,EACb,GAAG,CAAC,YAAY,EAChB,IAAI,EACJ,MAAM,EACN,IAAI,IAAI,oBAAoB,CAC7B,CAAC;YAEF,IAAI,OAAO,IAAI,IAAI;gBAAE,OAAO,wBAAwB,CAAC;YACrD,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC;gBAAE,OAAO,wBAAwB,CAAC;YAEzD,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC;YACvC,OAAO;gBACL,MAAM,EAAE,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;gBAC/C,IAAI,EAAE,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;gBAC9B,MAAM,EAAE,OAAO,CAAC,aAAa,CAAC;gBAC9B,IAAI,EAAE,OAAO,CAAC,MAAM,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI;aAChE,CAAC;SACH,CAAC;QAEFI,4BAAoB,GAAG,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YACzD,IAAI,EAAE,CAAC;YACP,IAAI,IAAI,GAAG,CAAC;gBAAE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;YAC7C,IAAI,MAAM,GAAG,CAAC;gBAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;YAEjD,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC;YACzC,IAAI,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC1C,IAAI,WAAW,KAAK,CAAC,CAAC;gBAAE,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACtE,IAAI,WAAW,KAAK,CAAC,CAAC;gBAAE,OAAO,yBAAyB,CAAC;YAEzD,MAAM,SAAS,IAAI,GAAG,CAAC,UAAU,KAAd,GAAG,CAAC,UAAU,GAAK,cAAc,CAClDJ,uBAAe,CAAC,GAAG,CAAC,GACnB,GAAG,CAAC,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EACjD,EAAC,CAAC;YACH,MAAM,KAAK,GAAG,GAAG,CAAC,cAAe,CAAC;YAElC,MAAM,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC;YAE9C,IAAI,QAAQ,IAAI,IAAI;gBAAE,OAAO,yBAAyB,CAAC;YAEvD,MAAM,OAAO,GAAG,oBAAoB,CAClC,QAAQ,EACR,KAAK,CAAC,WAAW,CAAC,EAClB,IAAI,EACJ,MAAM,EACN,IAAI,IAAI,oBAAoB,CAC7B,CAAC;YAEF,IAAI,OAAO,IAAI,IAAI;gBAAE,OAAO,yBAAyB,CAAC;YACtD,OAAO;gBACL,IAAI,EAAE,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC;gBACrC,MAAM,EAAE,OAAO,CAAC,oBAAoB,CAAC;aACtC,CAAC;SACH,CAAC;QAEFK,mBAAW,GAAG,CAAC,GAAG,EAAE,EAAE;YACpB,MAAM,OAAO,GAAGL,uBAAe,CAAC,GAAG,CAAC,CAAC;YACrC,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC;YAEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oBAEpB,MAAM,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC5B,MAAM,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,MAAM,GAAG,IAAI,CAAC;oBAClB,IAAI,YAAY,GAAG,IAAI,CAAC;oBACxB,IAAI,cAAc,GAAG,IAAI,CAAC;oBAC1B,IAAI,IAAI,GAAG,IAAI,CAAC;oBAChB,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;wBACpB,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAC1B,cAAc,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;qBACzB;oBACD,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;wBAAE,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAE3C,EAAE,CAAC;wBACD,aAAa;wBACb,eAAe;wBACf,MAAM;wBACN,YAAY;wBACZ,cAAc;wBACd,IAAI;qBACU,CAAC,CAAC;iBACnB;aACF;SACF,CAAC;QAEFD,2BAAmB,GAAG,CAAC,GAAG,EAAE,MAAM;YAChC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;YACrC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;YACpB,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC3C,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;YAC/B,OAAO,MAAM,CAAC;SACf,CAAC;QAEFO,kBAAU,GAAG,CAAC,GAAG;YACf,OAAO;gBACL,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,GAAG,CAAC,IAAI;gBACd,KAAK,EAAE,GAAG,CAAC,KAAK;gBAChB,UAAU,EAAE,GAAG,CAAC,UAAU;gBAC1B,OAAO,EAAE,GAAG,CAAC,OAAO;gBACpB,cAAc,EAAE,GAAG,CAAC,cAAc;gBAClC,QAAQ,EAAEN,uBAAe,CAAC,GAAG,CAAC;aAC/B,CAAC;SACH,CAAC;QAEFO,kBAAU,GAAG,CAAC,GAAG;YACf,OAAO;gBACL,OAAO,EAAE,CAAC;gBACV,IAAI,EAAE,GAAG,CAAC,IAAI;gBACd,KAAK,EAAE,GAAG,CAAC,KAAK;gBAChB,UAAU,EAAE,GAAG,CAAC,UAAU;gBAC1B,OAAO,EAAE,GAAG,CAAC,OAAO;gBACpB,cAAc,EAAE,GAAG,CAAC,cAAc;gBAClC,QAAQ,EAAEN,uBAAe,CAAC,GAAG,CAAC;aAC/B,CAAC;SACH,CAAC;IACJ,CAAC,GAAA,CAAA;IAiBH,SAAS,oBAAoB,CAC3B,QAA+C,EAC/C,IAAe,EACf,IAAY,EACZ,MAAc,EACd,IAA4D;QAE5D,IAAI,KAAK,GAAG,oBAAoB,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/D,IAAIS,KAAO,EAAE;YACX,KAAK,GAAG,CAAC,IAAI,KAAK,iBAAiB,GAAG,UAAU,GAAG,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SACzF;aAAM,IAAI,IAAI,KAAK,iBAAiB;YAAE,KAAK,EAAE,CAAC;QAE/C,IAAI,KAAK,KAAK,CAAC,CAAC,IAAI,KAAK,KAAK,QAAQ,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAC3D,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;IACzB;;;;;;;;;;;;;"}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/types/any-map.d.ts b/node_modules/@jridgewell/trace-mapping/dist/types/any-map.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..08bca6b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/types/any-map.d.ts[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mimport { TraceMap } from './trace-mapping';[m
[32m+[m[32mimport type { SectionedSourceMapInput } from './types';[m
[32m+[m[32mdeclare type AnyMap = {[m
[32m+[m[32m    new (map: SectionedSourceMapInput, mapUrl?: string | null): TraceMap;[m
[32m+[m[32m    (map: SectionedSourceMapInput, mapUrl?: string | null): TraceMap;[m
[32m+[m[32m};[m
[32m+[m[32mexport declare const AnyMap: AnyMap;[m
[32m+[m[32mexport {};[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/types/binary-search.d.ts b/node_modules/@jridgewell/trace-mapping/dist/types/binary-search.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..88820e5[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/types/binary-search.d.ts[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32mimport type { SourceMapSegment, ReverseSegment } from './sourcemap-segment';[m
[32m+[m[32mexport declare type MemoState = {[m
[32m+[m[32m    lastKey: number;[m
[32m+[m[32m    lastNeedle: number;[m
[32m+[m[32m    lastIndex: number;[m
[32m+[m[32m};[m
[32m+[m[32mexport declare let found: boolean;[m
[32m+[m[32m/**[m
[32m+[m[32m * A binary search implementation that returns the index if a match is found.[m
[32m+[m[32m * If no match is found, then the left-index (the index associated with the item that comes just[m
[32m+[m[32m * before the desired index) is returned. To maintain proper sort order, a splice would happen at[m
[32m+[m[32m * the next index:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const array = [1, 3];[m
[32m+[m[32m * const needle = 2;[m
[32m+[m[32m * const index = binarySearch(array, needle, (item, needle) => item - needle);[m
[32m+[m[32m *[m
[32m+[m[32m * assert.equal(index, 0);[m
[32m+[m[32m * array.splice(index + 1, 0, needle);[m
[32m+[m[32m * assert.deepEqual(array, [1, 2, 3]);[m
[32m+[m[32m * ```[m
[32m+[m[32m */[m
[32m+[m[32mexport declare function binarySearch(haystack: SourceMapSegment[] | ReverseSegment[], needle: number, low: number, high: number): number;[m
[32m+[m[32mexport declare function upperBound(haystack: SourceMapSegment[] | ReverseSegment[], needle: number, index: number): number;[m
[32m+[m[32mexport declare function lowerBound(haystack: SourceMapSegment[] | ReverseSegment[], needle: number, index: number): number;[m
[32m+[m[32mexport declare function memoizedState(): MemoState;[m
[32m+[m[32m/**[m
[32m+[m[32m * This overly complicated beast is just to record the last tested line/column and the resulting[m
[32m+[m[32m * index, allowing us to skip a few tests if mappings are monotonically increasing.[m
[32m+[m[32m */[m
[32m+[m[32mexport declare function memoizedBinarySearch(haystack: SourceMapSegment[] | ReverseSegment[], needle: number, state: MemoState, key: number): number;[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/types/by-source.d.ts b/node_modules/@jridgewell/trace-mapping/dist/types/by-source.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..8d1e538[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/types/by-source.d.ts[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mimport type { ReverseSegment, SourceMapSegment } from './sourcemap-segment';[m
[32m+[m[32mimport type { MemoState } from './binary-search';[m
[32m+[m[32mexport declare type Source = {[m
[32m+[m[32m    __proto__: null;[m
[32m+[m[32m    [line: number]: Exclude<ReverseSegment, [number]>[];[m
[32m+[m[32m};[m
[32m+[m[32mexport default function buildBySources(decoded: readonly SourceMapSegment[][], memos: MemoState[]): Source[];[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/types/resolve.d.ts b/node_modules/@jridgewell/trace-mapping/dist/types/resolve.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..cf7d4f8[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/types/resolve.d.ts[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mexport default function resolve(input: string, base: string | undefined): string;[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/types/sort.d.ts b/node_modules/@jridgewell/trace-mapping/dist/types/sort.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..2bfb5dc[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/types/sort.d.ts[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mimport type { SourceMapSegment } from './sourcemap-segment';[m
[32m+[m[32mexport default function maybeSort(mappings: SourceMapSegment[][], owned: boolean): SourceMapSegment[][];[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/types/sourcemap-segment.d.ts b/node_modules/@jridgewell/trace-mapping/dist/types/sourcemap-segment.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..6d70924[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/types/sourcemap-segment.d.ts[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mdeclare type GeneratedColumn = number;[m
[32m+[m[32mdeclare type SourcesIndex = number;[m
[32m+[m[32mdeclare type SourceLine = number;[m
[32m+[m[32mdeclare type SourceColumn = number;[m
[32m+[m[32mdeclare type NamesIndex = number;[m
[32m+[m[32mdeclare type GeneratedLine = number;[m
[32m+[m[32mexport declare type SourceMapSegment = [GeneratedColumn] | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn] | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn, NamesIndex];[m
[32m+[m[32mexport declare type ReverseSegment = [SourceColumn, GeneratedLine, GeneratedColumn];[m
[32m+[m[32mexport declare const COLUMN = 0;[m
[32m+[m[32mexport declare const SOURCES_INDEX = 1;[m
[32m+[m[32mexport declare const SOURCE_LINE = 2;[m
[32m+[m[32mexport declare const SOURCE_COLUMN = 3;[m
[32m+[m[32mexport declare const NAMES_INDEX = 4;[m
[32m+[m[32mexport declare const REV_GENERATED_LINE = 1;[m
[32m+[m[32mexport declare const REV_GENERATED_COLUMN = 2;[m
[32m+[m[32mexport {};[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/types/strip-filename.d.ts b/node_modules/@jridgewell/trace-mapping/dist/types/strip-filename.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..bead5c1[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/types/strip-filename.d.ts[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Removes everything after the last "/", but leaves the slash.[m
[32m+[m[32m */[m
[32m+[m[32mexport default function stripFilename(path: string | undefined | null): string;[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/types/trace-mapping.d.ts b/node_modules/@jridgewell/trace-mapping/dist/types/trace-mapping.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..8cd4574[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/types/trace-mapping.d.ts[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32mimport type { SourceMapSegment } from './sourcemap-segment';[m
[32m+[m[32mimport type { SourceMapV3, DecodedSourceMap, EncodedSourceMap, InvalidOriginalMapping, OriginalMapping, InvalidGeneratedMapping, GeneratedMapping, SourceMapInput, Needle, SourceNeedle, SourceMap, EachMapping } from './types';[m
[32m+[m[32mexport type { SourceMapSegment } from './sourcemap-segment';[m
[32m+[m[32mexport type { SourceMapInput, SectionedSourceMapInput, DecodedSourceMap, EncodedSourceMap, SectionedSourceMap, InvalidOriginalMapping, OriginalMapping as Mapping, OriginalMapping, InvalidGeneratedMapping, GeneratedMapping, EachMapping, } from './types';[m
[32m+[m[32mexport declare const LEAST_UPPER_BOUND = -1;[m
[32m+[m[32mexport declare const GREATEST_LOWER_BOUND = 1;[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the encoded (VLQ string) form of the SourceMap's mappings field.[m
[32m+[m[32m */[m
[32m+[m[32mexport declare let encodedMappings: (map: TraceMap) => EncodedSourceMap['mappings'];[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.[m
[32m+[m[32m */[m
[32m+[m[32mexport declare let decodedMappings: (map: TraceMap) => Readonly<DecodedSourceMap['mappings']>;[m
[32m+[m[32m/**[m
[32m+[m[32m * A low-level API to find the segment associated with a generated line/column (think, from a[m
[32m+[m[32m * stack trace). Line and column here are 0-based, unlike `originalPositionFor`.[m
[32m+[m[32m */[m
[32m+[m[32mexport declare let traceSegment: (map: TraceMap, line: number, column: number) => Readonly<SourceMapSegment> | null;[m
[32m+[m[32m/**[m
[32m+[m[32m * A higher-level API to find the source/line/column associated with a generated line/column[m
[32m+[m[32m * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in[m
[32m+[m[32m * `source-map` library.[m
[32m+[m[32m */[m
[32m+[m[32mexport declare let originalPositionFor: (map: TraceMap, needle: Needle) => OriginalMapping | InvalidOriginalMapping;[m
[32m+[m[32m/**[m
[32m+[m[32m * Finds the source/line/column directly after the mapping returned by originalPositionFor, provided[m
[32m+[m[32m * the found mapping is from the same source and line as the originalPositionFor mapping.[m
[32m+[m[32m *[m
[32m+[m[32m * Eg, in the code `let id = 1`, `originalPositionAfter` could find the mapping associated with `1`[m
[32m+[m[32m * using the same needle that would return `id` when calling `originalPositionFor`.[m
[32m+[m[32m */[m
[32m+[m[32mexport declare let generatedPositionFor: (map: TraceMap, needle: SourceNeedle) => GeneratedMapping | InvalidGeneratedMapping;[m
[32m+[m[32m/**[m
[32m+[m[32m * Iterates each mapping in generated position order.[m
[32m+[m[32m */[m
[32m+[m[32mexport declare let eachMapping: (map: TraceMap, cb: (mapping: EachMapping) => void) => void;[m
[32m+[m[32m/**[m
[32m+[m[32m * A helper that skips sorting of the input map's mappings array, which can be expensive for larger[m
[32m+[m[32m * maps.[m
[32m+[m[32m */[m
[32m+[m[32mexport declare let presortedDecodedMap: (map: DecodedSourceMap, mapUrl?: string) => TraceMap;[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects[m
[32m+[m[32m * a sourcemap, or to JSON.stringify.[m
[32m+[m[32m */[m
[32m+[m[32mexport declare let decodedMap: (map: TraceMap) => Omit<DecodedSourceMap, 'mappings'> & {[m
[32m+[m[32m    mappings: readonly SourceMapSegment[][];[m
[32m+[m[32m};[m
[32m+[m[32m/**[m
[32m+[m[32m * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects[m
[32m+[m[32m * a sourcemap, or to JSON.stringify.[m
[32m+[m[32m */[m
[32m+[m[32mexport declare let encodedMap: (map: TraceMap) => EncodedSourceMap;[m
[32m+[m[32mexport { AnyMap } from './any-map';[m
[32m+[m[32mexport declare class TraceMap implements SourceMap {[m
[32m+[m[32m    version: SourceMapV3['version'];[m
[32m+[m[32m    file: SourceMapV3['file'];[m
[32m+[m[32m    names: SourceMapV3['names'];[m
[32m+[m[32m    sourceRoot: SourceMapV3['sourceRoot'];[m
[32m+[m[32m    sources: SourceMapV3['sources'];[m
[32m+[m[32m    sourcesContent: SourceMapV3['sourcesContent'];[m
[32m+[m[32m    resolvedSources: string[];[m
[32m+[m[32m    private _encoded;[m
[32m+[m[32m    private _decoded;[m
[32m+[m[32m    private _decodedMemo;[m
[32m+[m[32m    private _bySources;[m
[32m+[m[32m    private _bySourceMemos;[m
[32m+[m[32m    constructor(map: SourceMapInput, mapUrl?: string | null);[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/dist/types/types.d.ts b/node_modules/@jridgewell/trace-mapping/dist/types/types.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..2cc90c0[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/dist/types/types.d.ts[m
[36m@@ -0,0 +1,85 @@[m
[32m+[m[32mimport type { SourceMapSegment } from './sourcemap-segment';[m
[32m+[m[32mimport type { TraceMap } from './trace-mapping';[m
[32m+[m[32mexport interface SourceMapV3 {[m
[32m+[m[32m    file?: string | null;[m
[32m+[m[32m    names: string[];[m
[32m+[m[32m    sourceRoot?: string;[m
[32m+[m[32m    sources: (string | null)[];[m
[32m+[m[32m    sourcesContent?: (string | null)[];[m
[32m+[m[32m    version: 3;[m
[32m+[m[32m}[m
[32m+[m[32mexport interface EncodedSourceMap extends SourceMapV3 {[m
[32m+[m[32m    mappings: string;[m
[32m+[m[32m}[m
[32m+[m[32mexport interface DecodedSourceMap extends SourceMapV3 {[m
[32m+[m[32m    mappings: SourceMapSegment[][];[m
[32m+[m[32m}[m
[32m+[m[32mexport interface Section {[m
[32m+[m[32m    offset: {[m
[32m+[m[32m        line: number;[m
[32m+[m[32m        column: number;[m
[32m+[m[32m    };[m
[32m+[m[32m    map: EncodedSourceMap | DecodedSourceMap | SectionedSourceMap;[m
[32m+[m[32m}[m
[32m+[m[32mexport interface SectionedSourceMap {[m
[32m+[m[32m    file?: string | null;[m
[32m+[m[32m    sections: Section[];[m
[32m+[m[32m    version: 3;[m
[32m+[m[32m}[m
[32m+[m[32mexport declare type OriginalMapping = {[m
[32m+[m[32m    source: string | null;[m
[32m+[m[32m    line: number;[m
[32m+[m[32m    column: number;[m
[32m+[m[32m    name: string | null;[m
[32m+[m[32m};[m
[32m+[m[32mexport declare type InvalidOriginalMapping = {[m
[32m+[m[32m    source: null;[m
[32m+[m[32m    line: null;[m
[32m+[m[32m    column: null;[m
[32m+[m[32m    name: null;[m
[32m+[m[32m};[m
[32m+[m[32mexport declare type GeneratedMapping = {[m
[32m+[m[32m    line: number;[m
[32m+[m[32m    column: number;[m
[32m+[m[32m};[m
[32m+[m[32mexport declare type InvalidGeneratedMapping = {[m
[32m+[m[32m    line: null;[m
[32m+[m[32m    column: null;[m
[32m+[m[32m};[m
[32m+[m[32mexport declare type SourceMapInput = string | EncodedSourceMap | DecodedSourceMap | TraceMap;[m
[32m+[m[32mexport declare type SectionedSourceMapInput = SourceMapInput | SectionedSourceMap;[m
[32m+[m[32mexport declare type Needle = {[m
[32m+[m[32m    line: number;[m
[32m+[m[32m    column: number;[m
[32m+[m[32m    bias?: 1 | -1;[m
[32m+[m[32m};[m
[32m+[m[32mexport declare type SourceNeedle = {[m
[32m+[m[32m    source: string;[m
[32m+[m[32m    line: number;[m
[32m+[m[32m    column: number;[m
[32m+[m[32m    bias?: 1 | -1;[m
[32m+[m[32m};[m
[32m+[m[32mexport declare type EachMapping = {[m
[32m+[m[32m    generatedLine: number;[m
[32m+[m[32m    generatedColumn: number;[m
[32m+[m[32m    source: null;[m
[32m+[m[32m    originalLine: null;[m
[32m+[m[32m    originalColumn: null;[m
[32m+[m[32m    name: null;[m
[32m+[m[32m} | {[m
[32m+[m[32m    generatedLine: number;[m
[32m+[m[32m    generatedColumn: number;[m
[32m+[m[32m    source: string | null;[m
[32m+[m[32m    originalLine: number;[m
[32m+[m[32m    originalColumn: number;[m
[32m+[m[32m    name: string | null;[m
[32m+[m[32m};[m
[32m+[m[32mexport declare abstract class SourceMap {[m
[32m+[m[32m    version: SourceMapV3['version'];[m
[32m+[m[32m    file: SourceMapV3['file'];[m
[32m+[m[32m    names: SourceMapV3['names'];[m
[32m+[m[32m    sourceRoot: SourceMapV3['sourceRoot'];[m
[32m+[m[32m    sources: SourceMapV3['sources'];[m
[32m+[m[32m    sourcesContent: SourceMapV3['sourcesContent'];[m
[32m+[m[32m    resolvedSources: SourceMapV3['sources'];[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@jridgewell/trace-mapping/package.json b/node_modules/@jridgewell/trace-mapping/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..a957780[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@jridgewell/trace-mapping/package.json[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "@jridgewell/trace-mapping",[m
[32m+[m[32m  "version": "0.3.9",[m
[32m+[m[32m  "description": "Trace the original position through a source map",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "source",[m
[32m+[m[32m    "map"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "main": "dist/trace-mapping.umd.js",[m
[32m+[m[32m  "module": "dist/trace-mapping.mjs",[m
[32m+[m[32m  "typings": "dist/types/trace-mapping.d.ts",[m
[32m+[m[32m  "files": [[m
[32m+[m[32m    "dist"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "exports": {[m
[32m+[m[32m    ".": {[m
[32m+[m[32m      "browser": "./dist/trace-mapping.umd.js",[m
[32m+[m[32m      "require": "./dist/trace-mapping.umd.js",[m
[32m+[m[32m      "import": "./dist/trace-mapping.mjs"[m
[32m+[m[32m    },[m
[32m+[m[32m    "./package.json": "./package.json"[m
[32m+[m[32m  },[m
[32m+[m[32m  "author": "Justin Ridgewell <justin@ridgewell.name>",[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "git+https://github.com/jridgewell/trace-mapping.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "benchmark": "run-s build:rollup benchmark:*",[m
[32m+[m[32m    "benchmark:install": "cd benchmark && npm install",[m
[32m+[m[32m    "benchmark:only": "node benchmark/index.mjs",[m
[32m+[m[32m    "build": "run-s -n build:*",[m
[32m+[m[32m    "build:rollup": "rollup -c rollup.config.js",[m
[32m+[m[32m    "build:ts": "tsc --project tsconfig.build.json",[m
[32m+[m[32m    "lint": "run-s -n lint:*",[m
[32m+[m[32m    "lint:prettier": "npm run test:lint:prettier -- --write",[m
[32m+[m[32m    "lint:ts": "npm run test:lint:ts -- --fix",[m
[32m+[m[32m    "prebuild": "rm -rf dist",[m
[32m+[m[32m    "prepublishOnly": "npm run preversion",[m
[32m+[m[32m    "preversion": "run-s test build",[m
[32m+[m[32m    "test": "run-s -n test:lint test:only",[m
[32m+[m[32m    "test:debug": "ava debug",[m
[32m+[m[32m    "test:lint": "run-s -n test:lint:*",[m
[32m+[m[32m    "test:lint:prettier": "prettier --check '{src,test}/**/*.ts' '**/*.md'",[m
[32m+[m[32m    "test:lint:ts": "eslint '{src,test}/**/*.ts'",[m
[32m+[m[32m    "test:only": "c8 ava",[m
[32m+[m[32m    "test:watch": "ava --watch"[m
[32m+[m[32m  },[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "@rollup/plugin-typescript": "8.3.0",[m
[32m+[m[32m    "@typescript-eslint/eslint-plugin": "5.10.0",[m
[32m+[m[32m    "@typescript-eslint/parser": "5.10.0",[m
[32m+[m[32m    "ava": "4.0.1",[m
[32m+[m[32m    "benchmark": "2.1.4",[m
[32m+[m[32m    "c8": "7.11.0",[m
[32m+[m[32m    "esbuild": "0.14.14",[m
[32m+[m[32m    "esbuild-node-loader": "0.6.4",[m
[32m+[m[32m    "eslint": "8.7.0",[m
[32m+[m[32m    "eslint-config-prettier": "8.3.0",[m
[32m+[m[32m    "npm-run-all": "4.1.5",[m
[32m+[m[32m    "prettier": "2.5.1",[m
[32m+[m[32m    "rollup": "2.64.0",[m
[32m+[m[32m    "typescript": "4.5.4"[m
[32m+[m[32m  },[m
[32m+[m[32m  "dependencies": {[m
[32m+[m[32m    "@jridgewell/resolve-uri": "^3.0.3",[m
[32m+[m[32m    "@jridgewell/sourcemap-codec": "^1.4.10"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@tsconfig/node10/LICENSE b/node_modules/@tsconfig/node10/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..48ea661[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node10/LICENSE[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mMIT License[m
[32m+[m
[32m+[m[32mCopyright (c) Microsoft Corporation.[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE[m
[1mdiff --git a/node_modules/@tsconfig/node10/README.md b/node_modules/@tsconfig/node10/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..af0b6ef[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node10/README.md[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m### A base TSConfig for working with Node 10.[m
[32m+[m
[32m+[m[32mAdd the package to your `"devDependencies"`:[m
[32m+[m
[32m+[m[32m```sh[m
[32m+[m[32mnpm install --save-dev @tsconfig/node10[m
[32m+[m[32myarn add --dev @tsconfig/node10[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAdd to your `tsconfig.json`:[m
[32m+[m
[32m+[m[32m```json[m
[32m+[m[32m"extends": "@tsconfig/node10/tsconfig.json"[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32mThe `tsconfig.json`:[m[41m [m
[32m+[m
[32m+[m[32m```jsonc[m
[32m+[m[32m{[m
[32m+[m[32m  "$schema": "https://json.schemastore.org/tsconfig",[m
[32m+[m
[32m+[m[32m  "compilerOptions": {[m
[32m+[m[32m    "lib": ["es2018"],[m
[32m+[m[32m    "module": "commonjs",[m
[32m+[m[32m    "target": "es2018",[m
[32m+[m
[32m+[m[32m    "strict": true,[m
[32m+[m[32m    "esModuleInterop": true,[m
[32m+[m[32m    "skipLibCheck": true,[m
[32m+[m[32m    "moduleResolution": "node"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can find the [code here](https://github.com/tsconfig/bases/blob/master/bases/node10.json).[m
[1mdiff --git a/node_modules/@tsconfig/node10/package.json b/node_modules/@tsconfig/node10/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..1db1b6b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node10/package.json[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "@tsconfig/node10",[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "https://github.com/tsconfig/bases.git",[m
[32m+[m[32m    "directory": "bases"[m
[32m+[m[32m  },[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "description": "A base TSConfig for working with Node 10.",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "tsconfig",[m
[32m+[m[32m    "node10"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "version": "1.0.11"[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@tsconfig/node10/tsconfig.json b/node_modules/@tsconfig/node10/tsconfig.json[m
[1mnew file mode 100644[m
[1mindex 0000000..b585482[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node10/tsconfig.json[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "$schema": "https://json.schemastore.org/tsconfig",[m
[32m+[m
[32m+[m[32m  "compilerOptions": {[m
[32m+[m[32m    "lib": ["es2018"],[m
[32m+[m[32m    "module": "commonjs",[m
[32m+[m[32m    "target": "es2018",[m
[32m+[m
[32m+[m[32m    "strict": true,[m
[32m+[m[32m    "esModuleInterop": true,[m
[32m+[m[32m    "skipLibCheck": true,[m
[32m+[m[32m    "moduleResolution": "node"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@tsconfig/node12/LICENSE b/node_modules/@tsconfig/node12/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..48ea661[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node12/LICENSE[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mMIT License[m
[32m+[m
[32m+[m[32mCopyright (c) Microsoft Corporation.[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE[m
[1mdiff --git a/node_modules/@tsconfig/node12/README.md b/node_modules/@tsconfig/node12/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..6352ccd[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node12/README.md[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m### A base TSConfig for working with Node 12.[m
[32m+[m
[32m+[m[32mAdd the package to your `"devDependencies"`:[m
[32m+[m
[32m+[m[32m```sh[m
[32m+[m[32mnpm install --save-dev @tsconfig/node12[m
[32m+[m[32myarn add --dev @tsconfig/node12[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAdd to your `tsconfig.json`:[m
[32m+[m
[32m+[m[32m```json[m
[32m+[m[32m"extends": "@tsconfig/node12/tsconfig.json"[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32mThe `tsconfig.json`:[m[41m [m
[32m+[m
[32m+[m[32m```jsonc[m
[32m+[m[32m{[m
[32m+[m[32m  "$schema": "https://json.schemastore.org/tsconfig",[m
[32m+[m[32m  "display": "Node 12",[m
[32m+[m
[32m+[m[32m  "compilerOptions": {[m
[32m+[m[32m    "lib": ["es2019", "es2020.promise", "es2020.bigint", "es2020.string"],[m
[32m+[m[32m    "module": "commonjs",[m
[32m+[m[32m    "target": "es2019",[m
[32m+[m
[32m+[m[32m    "strict": true,[m
[32m+[m[32m    "esModuleInterop": true,[m
[32m+[m[32m    "skipLibCheck": true,[m
[32m+[m[32m    "forceConsistentCasingInFileNames": true,[m
[32m+[m[32m    "moduleResolution": "node"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can find the [code here](https://github.com/tsconfig/bases/blob/master/bases/node12.json).[m
[1mdiff --git a/node_modules/@tsconfig/node12/package.json b/node_modules/@tsconfig/node12/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..56aad61[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node12/package.json[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"name":"@tsconfig/node12","repository":{"type":"git","url":"https://github.com/tsconfig/bases.git","directory":"bases"},"license":"MIT","description":"A base TSConfig for working with Node 12.","keywords":["tsconfig","node12"],"version":"1.0.11"}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@tsconfig/node12/tsconfig.json b/node_modules/@tsconfig/node12/tsconfig.json[m
[1mnew file mode 100644[m
[1mindex 0000000..eeaf944[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node12/tsconfig.json[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "$schema": "https://json.schemastore.org/tsconfig",[m
[32m+[m[32m  "display": "Node 12",[m
[32m+[m
[32m+[m[32m  "compilerOptions": {[m
[32m+[m[32m    "lib": ["es2019", "es2020.promise", "es2020.bigint", "es2020.string"],[m
[32m+[m[32m    "module": "commonjs",[m
[32m+[m[32m    "target": "es2019",[m
[32m+[m
[32m+[m[32m    "strict": true,[m
[32m+[m[32m    "esModuleInterop": true,[m
[32m+[m[32m    "skipLibCheck": true,[m
[32m+[m[32m    "forceConsistentCasingInFileNames": true,[m
[32m+[m[32m    "moduleResolution": "node"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@tsconfig/node14/LICENSE b/node_modules/@tsconfig/node14/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..48ea661[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node14/LICENSE[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mMIT License[m
[32m+[m
[32m+[m[32mCopyright (c) Microsoft Corporation.[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE[m
[1mdiff --git a/node_modules/@tsconfig/node14/README.md b/node_modules/@tsconfig/node14/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..dad7f02[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node14/README.md[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m### A base TSConfig for working with Node 14.[m
[32m+[m
[32m+[m[32mAdd the package to your `"devDependencies"`:[m
[32m+[m
[32m+[m[32m```sh[m
[32m+[m[32mnpm install --save-dev @tsconfig/node14[m
[32m+[m[32myarn add --dev @tsconfig/node14[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAdd to your `tsconfig.json`:[m
[32m+[m
[32m+[m[32m```json[m
[32m+[m[32m"extends": "@tsconfig/node14/tsconfig.json"[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32mThe `tsconfig.json`:[m[41m [m
[32m+[m
[32m+[m[32m```jsonc[m
[32m+[m[32m{[m
[32m+[m[32m  "$schema": "https://json.schemastore.org/tsconfig",[m
[32m+[m[32m  "display": "Node 14",[m
[32m+[m
[32m+[m[32m  "compilerOptions": {[m
[32m+[m[32m    "lib": ["es2020"],[m
[32m+[m[32m    "module": "commonjs",[m
[32m+[m[32m    "target": "es2020",[m
[32m+[m
[32m+[m[32m    "strict": true,[m
[32m+[m[32m    "esModuleInterop": true,[m
[32m+[m[32m    "skipLibCheck": true,[m
[32m+[m[32m    "forceConsistentCasingInFileNames": true,[m
[32m+[m[32m    "moduleResolution": "node"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can find the [code here](https://github.com/tsconfig/bases/blob/master/bases/node14.json).[m
[1mdiff --git a/node_modules/@tsconfig/node14/package.json b/node_modules/@tsconfig/node14/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..742f97b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node14/package.json[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"name":"@tsconfig/node14","repository":{"type":"git","url":"https://github.com/tsconfig/bases.git","directory":"bases"},"license":"MIT","description":"A base TSConfig for working with Node 14.","keywords":["tsconfig","node14"],"version":"1.0.3"}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@tsconfig/node14/tsconfig.json b/node_modules/@tsconfig/node14/tsconfig.json[m
[1mnew file mode 100644[m
[1mindex 0000000..d1d7551[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node14/tsconfig.json[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "$schema": "https://json.schemastore.org/tsconfig",[m
[32m+[m[32m  "display": "Node 14",[m
[32m+[m
[32m+[m[32m  "compilerOptions": {[m
[32m+[m[32m    "lib": ["es2020"],[m
[32m+[m[32m    "module": "commonjs",[m
[32m+[m[32m    "target": "es2020",[m
[32m+[m
[32m+[m[32m    "strict": true,[m
[32m+[m[32m    "esModuleInterop": true,[m
[32m+[m[32m    "skipLibCheck": true,[m
[32m+[m[32m    "forceConsistentCasingInFileNames": true,[m
[32m+[m[32m    "moduleResolution": "node"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@tsconfig/node16/LICENSE b/node_modules/@tsconfig/node16/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..48ea661[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node16/LICENSE[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mMIT License[m
[32m+[m
[32m+[m[32mCopyright (c) Microsoft Corporation.[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32mof this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32min the Software without restriction, including without limitation the rights[m
[32m+[m[32mto use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32mcopies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32mfurnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be included in all[m
[32m+[m[32mcopies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32mIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32mFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32mAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32mLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32mOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32mSOFTWARE[m
[1mdiff --git a/node_modules/@tsconfig/node16/README.md b/node_modules/@tsconfig/node16/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..2946b2f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node16/README.md[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m### A base TSConfig for working with Node 16.[m
[32m+[m
[32m+[m[32mAdd the package to your `"devDependencies"`:[m
[32m+[m
[32m+[m[32m```sh[m
[32m+[m[32mnpm install --save-dev @tsconfig/node16[m
[32m+[m[32myarn add --dev @tsconfig/node16[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mAdd to your `tsconfig.json`:[m
[32m+[m
[32m+[m[32m```json[m
[32m+[m[32m"extends": "@tsconfig/node16/tsconfig.json"[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32mThe `tsconfig.json`:[m[41m [m
[32m+[m
[32m+[m[32m```jsonc[m
[32m+[m[32m{[m
[32m+[m[32m  "$schema": "https://json.schemastore.org/tsconfig",[m
[32m+[m[32m  "display": "Node 16",[m
[32m+[m
[32m+[m[32m  "compilerOptions": {[m
[32m+[m[32m    "lib": ["es2021"],[m
[32m+[m[32m    "module": "Node16",[m
[32m+[m[32m    "target": "es2021",[m
[32m+[m
[32m+[m[32m    "strict": true,[m
[32m+[m[32m    "esModuleInterop": true,[m
[32m+[m[32m    "skipLibCheck": true,[m
[32m+[m[32m    "forceConsistentCasingInFileNames": true,[m
[32m+[m[32m    "moduleResolution": "node"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can find the [code here](https://github.com/tsconfig/bases/blob/master/bases/node16.json).[m
[1mdiff --git a/node_modules/@tsconfig/node16/package.json b/node_modules/@tsconfig/node16/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..8ccc97f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node16/package.json[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "@tsconfig/node16",[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "https://github.com/tsconfig/bases.git",[m
[32m+[m[32m    "directory": "bases"[m
[32m+[m[32m  },[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "description": "A base TSConfig for working with Node 16.",[m
[32m+[m[32m  "keywords": [[m
[32m+[m[32m    "tsconfig",[m
[32m+[m[32m    "node16"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "version": "1.0.4"[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@tsconfig/node16/tsconfig.json b/node_modules/@tsconfig/node16/tsconfig.json[m
[1mnew file mode 100644[m
[1mindex 0000000..2671912[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@tsconfig/node16/tsconfig.json[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "$schema": "https://json.schemastore.org/tsconfig",[m
[32m+[m[32m  "display": "Node 16",[m
[32m+[m
[32m+[m[32m  "compilerOptions": {[m
[32m+[m[32m    "lib": ["es2021"],[m
[32m+[m[32m    "module": "Node16",[m
[32m+[m[32m    "target": "es2021",[m
[32m+[m
[32m+[m[32m    "strict": true,[m
[32m+[m[32m    "esModuleInterop": true,[m
[32m+[m[32m    "skipLibCheck": true,[m
[32m+[m[32m    "forceConsistentCasingInFileNames": true,[m
[32m+[m[32m    "moduleResolution": "node"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/LICENSE b/node_modules/@types/node/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..9e841e7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/LICENSE[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m    MIT License[m
[32m+[m
[32m+[m[32m    Copyright (c) Microsoft Corporation.[m
[32m+[m
[32m+[m[32m    Permission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32m    of this software and associated documentation files (the "Software"), to deal[m
[32m+[m[32m    in the Software without restriction, including without limitation the rights[m
[32m+[m[32m    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell[m
[32m+[m[32m    copies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32m    furnished to do so, subject to the following conditions:[m
[32m+[m
[32m+[m[32m    The above copyright notice and this permission notice shall be included in all[m
[32m+[m[32m    copies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32m    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32m    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32m    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32m    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32m    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,[m
[32m+[m[32m    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE[m
[32m+[m[32m    SOFTWARE[m
[1mdiff --git a/node_modules/@types/node/README.md b/node_modules/@types/node/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..26d8fad[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/README.md[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m# Installation[m
[32m+[m[32m> `npm install --save @types/node`[m
[32m+[m
[32m+[m[32m# Summary[m
[32m+[m[32mThis package contains type definitions for node (https://nodejs.org/).[m
[32m+[m
[32m+[m[32m# Details[m
[32m+[m[32mFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node.[m
[32m+[m
[32m+[m[32m### Additional Details[m
[32m+[m[32m * Last updated: Wed, 21 Aug 2024 16:09:20 GMT[m
[32m+[m[32m * Dependencies: [undici-types](https://npmjs.com/package/undici-types)[m
[32m+[m
[32m+[m[32m# Credits[m
[32m+[m[32mThese definitions were written by [Microsoft TypeScript](https://github.com/Microsoft), [Alberto Schiabel](https://github.com/jkomyno), [Alvis HT Tang](https://github.com/alvis), [Andrew Makarov](https://github.com/r3nya), [Benjamin Toueg](https://github.com/btoueg), [Chigozirim C.](https://github.com/smac89), [David Junger](https://github.com/touffy), [Deividas Bakanas](https://github.com/DeividasBakanas), [Eugene Y. Q. Shen](https://github.com/eyqs), [Hannes Magnusson](https://github.com/Hannes-Magnusson-CK), [Huw](https://github.com/hoo29), [Kelvin Jin](https://github.com/kjin), [Klaus Meinhardt](https://github.com/ajafff), [Lishude](https://github.com/islishude), [Mariusz Wiktorczyk](https://github.com/mwiktorczyk), [Mohsen Azimi](https://github.com/mohsen1), [Nikita Galkin](https://github.com/galkin), [Parambir Singh](https://github.com/parambirs), [Sebastian Silbermann](https://github.com/eps1lon), [Thomas den Hollander](https://github.com/ThomasdenH), [Wilco Bakker](https://github.com/WilcoBakker), [wwwy3y3](https://github.com/wwwy3y3), [Samuel Ainsworth](https://github.com/samuela), [Kyle Uehlein](https://github.com/kuehlein), [Thanik Bhongbhibhat](https://github.com/bhongy), [Marcin Kopacz](https://github.com/chyzwar), [Trivikram Kamat](https://github.com/trivikr), [Junxiao Shi](https://github.com/yoursunny), [Ilia Baryshnikov](https://github.com/qwelias), [ExE Boss](https://github.com/ExE-Boss), [Piotr Błażejewicz](https://github.com/peterblazejewicz), [Anna Henningsen](https://github.com/addaleax), [Victor Perin](https://github.com/victorperin), [Yongsheng Zhang](https://github.com/ZYSzys), [NodeJS Contributors](https://github.com/NodeJS), [Linus Unnebäck](https://github.com/LinusU), [wafuwafu13](https://github.com/wafuwafu13), [Matteo Collina](https://github.com/mcollina), and [Dmitry Semigradsky](https://github.com/Semigradsky).[m
[1mdiff --git a/node_modules/@types/node/assert.d.ts b/node_modules/@types/node/assert.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..47fffef[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/assert.d.ts[m
[36m@@ -0,0 +1,1040 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:assert` module provides a set of assertion functions for verifying[m
[32m+[m[32m * invariants.[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/assert.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "assert" {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An alias of {@link ok}.[m
[32m+[m[32m     * @since v0.5.9[m
[32m+[m[32m     * @param value The input that is checked for being truthy.[m
[32m+[m[32m     */[m
[32m+[m[32m    function assert(value: unknown, message?: string | Error): asserts value;[m
[32m+[m[32m    namespace assert {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Indicates the failure of an assertion. All errors thrown by the `node:assert` module will be instances of the `AssertionError` class.[m
[32m+[m[32m         */[m
[32m+[m[32m        class AssertionError extends Error {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Set to the `actual` argument for methods such as {@link assert.strictEqual()}.[m
[32m+[m[32m             */[m
[32m+[m[32m            actual: unknown;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Set to the `expected` argument for methods such as {@link assert.strictEqual()}.[m
[32m+[m[32m             */[m
[32m+[m[32m            expected: unknown;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Set to the passed in operator value.[m
[32m+[m[32m             */[m
[32m+[m[32m            operator: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Indicates if the message was auto-generated (`true`) or not.[m
[32m+[m[32m             */[m
[32m+[m[32m            generatedMessage: boolean;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Value is always `ERR_ASSERTION` to show that the error is an assertion error.[m
[32m+[m[32m             */[m
[32m+[m[32m            code: "ERR_ASSERTION";[m
[32m+[m[32m            constructor(options?: {[m
[32m+[m[32m                /** If provided, the error message is set to this value. */[m
[32m+[m[32m                message?: string | undefined;[m
[32m+[m[32m                /** The `actual` property on the error instance. */[m
[32m+[m[32m                actual?: unknown | undefined;[m
[32m+[m[32m                /** The `expected` property on the error instance. */[m
[32m+[m[32m                expected?: unknown | undefined;[m
[32m+[m[32m                /** The `operator` property on the error instance. */[m
[32m+[m[32m                operator?: string | undefined;[m
[32m+[m[32m                /** If provided, the generated stack trace omits frames before this function. */[m
[32m+[m[32m                // eslint-disable-next-line @typescript-eslint/ban-types[m
[32m+[m[32m                stackStartFn?: Function | undefined;[m
[32m+[m[32m            });[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This feature is deprecated and will be removed in a future version.[m
[32m+[m[32m         * Please consider using alternatives such as the `mock` helper function.[m
[32m+[m[32m         * @since v14.2.0, v12.19.0[m
[32m+[m[32m         * @deprecated Deprecated[m
[32m+[m[32m         */[m
[32m+[m[32m        class CallTracker {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The wrapper function is expected to be called exactly `exact` times. If the[m
[32m+[m[32m             * function has not been called exactly `exact` times when `tracker.verify()` is called, then `tracker.verify()` will throw an[m
[32m+[m[32m             * error.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import assert from 'node:assert';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Creates call tracker.[m
[32m+[m[32m             * const tracker = new assert.CallTracker();[m
[32m+[m[32m             *[m
[32m+[m[32m             * function func() {}[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Returns a function that wraps func() that must be called exact times[m
[32m+[m[32m             * // before tracker.verify().[m
[32m+[m[32m             * const callsfunc = tracker.calls(func);[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v14.2.0, v12.19.0[m
[32m+[m[32m             * @param [fn='A no-op function'][m
[32m+[m[32m             * @param [exact=1][m
[32m+[m[32m             * @return A function that wraps `fn`.[m
[32m+[m[32m             */[m
[32m+[m[32m            calls(exact?: number): () => void;[m
[32m+[m[32m            calls<Func extends (...args: any[]) => any>(fn?: Func, exact?: number): Func;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Example:[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import assert from 'node:assert';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const tracker = new assert.CallTracker();[m
[32m+[m[32m             *[m
[32m+[m[32m             * function func() {}[m
[32m+[m[32m             * const callsfunc = tracker.calls(func);[m
[32m+[m[32m             * callsfunc(1, 2, 3);[m
[32m+[m[32m             *[m
[32m+[m[32m             * assert.deepStrictEqual(tracker.getCalls(callsfunc),[m
[32m+[m[32m             *                        [{ thisArg: undefined, arguments: [1, 2, 3] }]);[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v18.8.0, v16.18.0[m
[32m+[m[32m             * @return An array with all the calls to a tracked function.[m
[32m+[m[32m             */[m
[32m+[m[32m            getCalls(fn: Function): CallTrackerCall[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The arrays contains information about the expected and actual number of calls of[m
[32m+[m[32m             * the functions that have not been called the expected number of times.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import assert from 'node:assert';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Creates call tracker.[m
[32m+[m[32m             * const tracker = new assert.CallTracker();[m
[32m+[m[32m             *[m
[32m+[m[32m             * function func() {}[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Returns a function that wraps func() that must be called exact times[m
[32m+[m[32m             * // before tracker.verify().[m
[32m+[m[32m             * const callsfunc = tracker.calls(func, 2);[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Returns an array containing information on callsfunc()[m
[32m+[m[32m             * console.log(tracker.report());[m
[32m+[m[32m             * // [[m
[32m+[m[32m             * //  {[m
[32m+[m[32m             * //    message: 'Expected the func function to be executed 2 time(s) but was[m
[32m+[m[32m             * //    executed 0 time(s).',[m
[32m+[m[32m             * //    actual: 0,[m
[32m+[m[32m             * //    expected: 2,[m
[32m+[m[32m             * //    operator: 'func',[m
[32m+[m[32m             * //    stack: stack trace[m
[32m+[m[32m             * //  }[m
[32m+[m[32m             * // ][m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v14.2.0, v12.19.0[m
[32m+[m[32m             * @return An array of objects containing information about the wrapper functions returned by {@link tracker.calls()}.[m
[32m+[m[32m             */[m
[32m+[m[32m            report(): CallTrackerReportInformation[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reset calls of the call tracker. If a tracked function is passed as an argument, the calls will be reset for it.[m
[32m+[m[32m             * If no arguments are passed, all tracked functions will be reset.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import assert from 'node:assert';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const tracker = new assert.CallTracker();[m
[32m+[m[32m             *[m
[32m+[m[32m             * function func() {}[m
[32m+[m[32m             * const callsfunc = tracker.calls(func);[m
[32m+[m[32m             *[m
[32m+[m[32m             * callsfunc();[m
[32m+[m[32m             * // Tracker was called once[m
[32m+[m[32m             * assert.strictEqual(tracker.getCalls(callsfunc).length, 1);[m
[32m+[m[32m             *[m
[32m+[m[32m             * tracker.reset(callsfunc);[m
[32m+[m[32m             * assert.strictEqual(tracker.getCalls(callsfunc).length, 0);[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v18.8.0, v16.18.0[m
[32m+[m[32m             * @param fn a tracked function to reset.[m
[32m+[m[32m             */[m
[32m+[m[32m            reset(fn?: Function): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Iterates through the list of functions passed to {@link tracker.calls()} and will throw an error for functions that[m
[32m+[m[32m             * have not been called the expected number of times.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import assert from 'node:assert';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Creates call tracker.[m
[32m+[m[32m             * const tracker = new assert.CallTracker();[m
[32m+[m[32m             *[m
[32m+[m[32m             * function func() {}[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Returns a function that wraps func() that must be called exact times[m
[32m+[m[32m             * // before tracker.verify().[m
[32m+[m[32m             * const callsfunc = tracker.calls(func, 2);[m
[32m+[m[32m             *[m
[32m+[m[32m             * callsfunc();[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Will throw an error since callsfunc() was only called once.[m
[32m+[m[32m             * tracker.verify();[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v14.2.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            verify(): void;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface CallTrackerCall {[m
[32m+[m[32m            thisArg: object;[m
[32m+[m[32m            arguments: unknown[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface CallTrackerReportInformation {[m
[32m+[m[32m            message: string;[m
[32m+[m[32m            /** The actual number of times the function was called. */[m
[32m+[m[32m            actual: number;[m
[32m+[m[32m            /** The number of times the function was expected to be called. */[m
[32m+[m[32m            expected: number;[m
[32m+[m[32m            /** The name of the function that is wrapped. */[m
[32m+[m[32m            operator: string;[m
[32m+[m[32m            /** A stack trace of the function. */[m
[32m+[m[32m            stack: object;[m
[32m+[m[32m        }[m
[32m+[m[32m        type AssertPredicate = RegExp | (new() => object) | ((thrown: unknown) => boolean) | object | Error;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Throws an `AssertionError` with the provided error message or a default[m
[32m+[m[32m         * error message. If the `message` parameter is an instance of an `Error` then[m
[32m+[m[32m         * it will be thrown instead of the `AssertionError`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.fail();[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: Failed[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.fail('boom');[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: boom[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.fail(new TypeError('need array'));[m
[32m+[m[32m         * // TypeError: need array[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Using `assert.fail()` with more than two arguments is possible but deprecated.[m
[32m+[m[32m         * See below for further details.[m
[32m+[m[32m         * @since v0.1.21[m
[32m+[m[32m         * @param [message='Failed'][m
[32m+[m[32m         */[m
[32m+[m[32m        function fail(message?: string | Error): never;[m
[32m+[m[32m        /** @deprecated since v10.0.0 - use fail([message]) or other assert functions instead. */[m
[32m+[m[32m        function fail([m
[32m+[m[32m            actual: unknown,[m
[32m+[m[32m            expected: unknown,[m
[32m+[m[32m            message?: string | Error,[m
[32m+[m[32m            operator?: string,[m
[32m+[m[32m            // eslint-disable-next-line @typescript-eslint/ban-types[m
[32m+[m[32m            stackStartFn?: Function,[m
[32m+[m[32m        ): never;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Tests if `value` is truthy. It is equivalent to `assert.equal(!!value, true, message)`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `value` is not truthy, an `AssertionError` is thrown with a `message` property set equal to the value of the `message` parameter. If the `message` parameter is `undefined`, a default[m
[32m+[m[32m         * error message is assigned. If the `message` parameter is an instance of an `Error` then it will be thrown instead of the `AssertionError`.[m
[32m+[m[32m         * If no arguments are passed in at all `message` will be set to the string:`` 'No value argument passed to `assert.ok()`' ``.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Be aware that in the `repl` the error message will be different to the one[m
[32m+[m[32m         * thrown in a file! See below for further details.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.ok(true);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         * assert.ok(1);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.ok();[m
[32m+[m[32m         * // AssertionError: No value argument passed to `assert.ok()`[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.ok(false, 'it\'s false');[m
[32m+[m[32m         * // AssertionError: it's false[m
[32m+[m[32m         *[m
[32m+[m[32m         * // In the repl:[m
[32m+[m[32m         * assert.ok(typeof 123 === 'string');[m
[32m+[m[32m         * // AssertionError: false == true[m
[32m+[m[32m         *[m
[32m+[m[32m         * // In a file (e.g. test.js):[m
[32m+[m[32m         * assert.ok(typeof 123 === 'string');[m
[32m+[m[32m         * // AssertionError: The expression evaluated to a falsy value:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * //   assert.ok(typeof 123 === 'string')[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.ok(false);[m
[32m+[m[32m         * // AssertionError: The expression evaluated to a falsy value:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * //   assert.ok(false)[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.ok(0);[m
[32m+[m[32m         * // AssertionError: The expression evaluated to a falsy value:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * //   assert.ok(0)[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Using `assert()` works the same:[m
[32m+[m[32m         * assert(0);[m
[32m+[m[32m         * // AssertionError: The expression evaluated to a falsy value:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * //   assert(0)[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.1.21[m
[32m+[m[32m         */[m
[32m+[m[32m        function ok(value: unknown, message?: string | Error): asserts value;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * **Strict assertion mode**[m
[32m+[m[32m         *[m
[32m+[m[32m         * An alias of {@link strictEqual}.[m
[32m+[m[32m         *[m
[32m+[m[32m         * **Legacy assertion mode**[m
[32m+[m[32m         *[m
[32m+[m[32m         * > Stability: 3 - Legacy: Use {@link strictEqual} instead.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Tests shallow, coercive equality between the `actual` and `expected` parameters[m
[32m+[m[32m         * using the [`==` operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality). `NaN` is specially handled[m
[32m+[m[32m         * and treated as being identical if both sides are `NaN`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.equal(1, 1);[m
[32m+[m[32m         * // OK, 1 == 1[m
[32m+[m[32m         * assert.equal(1, '1');[m
[32m+[m[32m         * // OK, 1 == '1'[m
[32m+[m[32m         * assert.equal(NaN, NaN);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.equal(1, 2);[m
[32m+[m[32m         * // AssertionError: 1 == 2[m
[32m+[m[32m         * assert.equal({ a: { b: 1 } }, { a: { b: 1 } });[m
[32m+[m[32m         * // AssertionError: { a: { b: 1 } } == { a: { b: 1 } }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the values are not equal, an `AssertionError` is thrown with a `message` property set equal to the value of the `message` parameter. If the `message` parameter is undefined, a default[m
[32m+[m[32m         * error message is assigned. If the `message` parameter is an instance of an `Error` then it will be thrown instead of the `AssertionError`.[m
[32m+[m[32m         * @since v0.1.21[m
[32m+[m[32m         */[m
[32m+[m[32m        function equal(actual: unknown, expected: unknown, message?: string | Error): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * **Strict assertion mode**[m
[32m+[m[32m         *[m
[32m+[m[32m         * An alias of {@link notStrictEqual}.[m
[32m+[m[32m         *[m
[32m+[m[32m         * **Legacy assertion mode**[m
[32m+[m[32m         *[m
[32m+[m[32m         * > Stability: 3 - Legacy: Use {@link notStrictEqual} instead.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Tests shallow, coercive inequality with the [`!=` operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Inequality). `NaN` is[m
[32m+[m[32m         * specially handled and treated as being identical if both sides are `NaN`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notEqual(1, 2);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notEqual(1, 1);[m
[32m+[m[32m         * // AssertionError: 1 != 1[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notEqual(1, '1');[m
[32m+[m[32m         * // AssertionError: 1 != '1'[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the values are equal, an `AssertionError` is thrown with a `message` property set equal to the value of the `message` parameter. If the `message` parameter is undefined, a default error[m
[32m+[m[32m         * message is assigned. If the `message` parameter is an instance of an `Error` then it will be thrown instead of the `AssertionError`.[m
[32m+[m[32m         * @since v0.1.21[m
[32m+[m[32m         */[m
[32m+[m[32m        function notEqual(actual: unknown, expected: unknown, message?: string | Error): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * **Strict assertion mode**[m
[32m+[m[32m         *[m
[32m+[m[32m         * An alias of {@link deepStrictEqual}.[m
[32m+[m[32m         *[m
[32m+[m[32m         * **Legacy assertion mode**[m
[32m+[m[32m         *[m
[32m+[m[32m         * > Stability: 3 - Legacy: Use {@link deepStrictEqual} instead.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Tests for deep equality between the `actual` and `expected` parameters. Consider[m
[32m+[m[32m         * using {@link deepStrictEqual} instead. {@link deepEqual} can have[m
[32m+[m[32m         * surprising results.[m
[32m+[m[32m         *[m
[32m+[m[32m         * _Deep equality_ means that the enumerable "own" properties of child objects[m
[32m+[m[32m         * are also recursively evaluated by the following rules.[m
[32m+[m[32m         * @since v0.1.21[m
[32m+[m[32m         */[m
[32m+[m[32m        function deepEqual(actual: unknown, expected: unknown, message?: string | Error): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * **Strict assertion mode**[m
[32m+[m[32m         *[m
[32m+[m[32m         * An alias of {@link notDeepStrictEqual}.[m
[32m+[m[32m         *[m
[32m+[m[32m         * **Legacy assertion mode**[m
[32m+[m[32m         *[m
[32m+[m[32m         * > Stability: 3 - Legacy: Use {@link notDeepStrictEqual} instead.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Tests for any deep inequality. Opposite of {@link deepEqual}.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const obj1 = {[m
[32m+[m[32m         *   a: {[m
[32m+[m[32m         *     b: 1,[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * };[m
[32m+[m[32m         * const obj2 = {[m
[32m+[m[32m         *   a: {[m
[32m+[m[32m         *     b: 2,[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * };[m
[32m+[m[32m         * const obj3 = {[m
[32m+[m[32m         *   a: {[m
[32m+[m[32m         *     b: 1,[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * };[m
[32m+[m[32m         * const obj4 = { __proto__: obj1 };[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notDeepEqual(obj1, obj1);[m
[32m+[m[32m         * // AssertionError: { a: { b: 1 } } notDeepEqual { a: { b: 1 } }[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notDeepEqual(obj1, obj2);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notDeepEqual(obj1, obj3);[m
[32m+[m[32m         * // AssertionError: { a: { b: 1 } } notDeepEqual { a: { b: 1 } }[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notDeepEqual(obj1, obj4);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the values are deeply equal, an `AssertionError` is thrown with a `message` property set equal to the value of the `message` parameter. If the `message` parameter is undefined, a default[m
[32m+[m[32m         * error message is assigned. If the `message` parameter is an instance of an `Error` then it will be thrown[m
[32m+[m[32m         * instead of the `AssertionError`.[m
[32m+[m[32m         * @since v0.1.21[m
[32m+[m[32m         */[m
[32m+[m[32m        function notDeepEqual(actual: unknown, expected: unknown, message?: string | Error): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Tests strict equality between the `actual` and `expected` parameters as[m
[32m+[m[32m         * determined by [`Object.is()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.strictEqual(1, 2);[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: Expected inputs to be strictly equal:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * // 1 !== 2[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.strictEqual(1, 1);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.strictEqual('Hello foobar', 'Hello World!');[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: Expected inputs to be strictly equal:[m
[32m+[m[32m         * // + actual - expected[m
[32m+[m[32m         * //[m
[32m+[m[32m         * // + 'Hello foobar'[m
[32m+[m[32m         * // - 'Hello World!'[m
[32m+[m[32m         * //          ^[m
[32m+[m[32m         *[m
[32m+[m[32m         * const apples = 1;[m
[32m+[m[32m         * const oranges = 2;[m
[32m+[m[32m         * assert.strictEqual(apples, oranges, `apples ${apples} !== oranges ${oranges}`);[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: apples 1 !== oranges 2[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.strictEqual(1, '1', new TypeError('Inputs are not identical'));[m
[32m+[m[32m         * // TypeError: Inputs are not identical[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the values are not strictly equal, an `AssertionError` is thrown with a `message` property set equal to the value of the `message` parameter. If the `message` parameter is undefined, a[m
[32m+[m[32m         * default error message is assigned. If the `message` parameter is an instance of an `Error` then it will be thrown[m
[32m+[m[32m         * instead of the `AssertionError`.[m
[32m+[m[32m         * @since v0.1.21[m
[32m+[m[32m         */[m
[32m+[m[32m        function strictEqual<T>(actual: unknown, expected: T, message?: string | Error): asserts actual is T;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Tests strict inequality between the `actual` and `expected` parameters as[m
[32m+[m[32m         * determined by [`Object.is()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notStrictEqual(1, 2);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notStrictEqual(1, 1);[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: Expected "actual" to be strictly unequal to:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * // 1[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notStrictEqual(1, '1');[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the values are strictly equal, an `AssertionError` is thrown with a `message` property set equal to the value of the `message` parameter. If the `message` parameter is undefined, a[m
[32m+[m[32m         * default error message is assigned. If the `message` parameter is an instance of an `Error` then it will be thrown[m
[32m+[m[32m         * instead of the `AssertionError`.[m
[32m+[m[32m         * @since v0.1.21[m
[32m+[m[32m         */[m
[32m+[m[32m        function notStrictEqual(actual: unknown, expected: unknown, message?: string | Error): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Tests for deep equality between the `actual` and `expected` parameters.[m
[32m+[m[32m         * "Deep" equality means that the enumerable "own" properties of child objects[m
[32m+[m[32m         * are recursively evaluated also by the following rules.[m
[32m+[m[32m         * @since v1.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function deepStrictEqual<T>(actual: unknown, expected: T, message?: string | Error): asserts actual is T;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Tests for deep strict inequality. Opposite of {@link deepStrictEqual}.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.notDeepStrictEqual({ a: 1 }, { a: '1' });[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the values are deeply and strictly equal, an `AssertionError` is thrown[m
[32m+[m[32m         * with a `message` property set equal to the value of the `message` parameter. If[m
[32m+[m[32m         * the `message` parameter is undefined, a default error message is assigned. If[m
[32m+[m[32m         * the `message` parameter is an instance of an `Error` then it will be thrown[m
[32m+[m[32m         * instead of the `AssertionError`.[m
[32m+[m[32m         * @since v1.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function notDeepStrictEqual(actual: unknown, expected: unknown, message?: string | Error): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Expects the function `fn` to throw an error.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If specified, `error` can be a [`Class`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes),[m
[32m+[m[32m         * [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions), a validation function,[m
[32m+[m[32m         * a validation object where each property will be tested for strict deep equality,[m
[32m+[m[32m         * or an instance of error where each property will be tested for strict deep[m
[32m+[m[32m         * equality including the non-enumerable `message` and `name` properties. When[m
[32m+[m[32m         * using an object, it is also possible to use a regular expression, when[m
[32m+[m[32m         * validating against a string property. See below for examples.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If specified, `message` will be appended to the message provided by the `AssertionError` if the `fn` call fails to throw or in case the error validation[m
[32m+[m[32m         * fails.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Custom validation object/error instance:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const err = new TypeError('Wrong value');[m
[32m+[m[32m         * err.code = 404;[m
[32m+[m[32m         * err.foo = 'bar';[m
[32m+[m[32m         * err.info = {[m
[32m+[m[32m         *   nested: true,[m
[32m+[m[32m         *   baz: 'text',[m
[32m+[m[32m         * };[m
[32m+[m[32m         * err.reg = /abc/i;[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.throws([m
[32m+[m[32m         *   () => {[m
[32m+[m[32m         *     throw err;[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   {[m
[32m+[m[32m         *     name: 'TypeError',[m
[32m+[m[32m         *     message: 'Wrong value',[m
[32m+[m[32m         *     info: {[m
[32m+[m[32m         *       nested: true,[m
[32m+[m[32m         *       baz: 'text',[m
[32m+[m[32m         *     },[m
[32m+[m[32m         *     // Only properties on the validation object will be tested for.[m
[32m+[m[32m         *     // Using nested objects requires all properties to be present. Otherwise[m
[32m+[m[32m         *     // the validation is going to fail.[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * );[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Using regular expressions to validate error properties:[m
[32m+[m[32m         * assert.throws([m
[32m+[m[32m         *   () => {[m
[32m+[m[32m         *     throw err;[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   {[m
[32m+[m[32m         *     // The `name` and `message` properties are strings and using regular[m
[32m+[m[32m         *     // expressions on those will match against the string. If they fail, an[m
[32m+[m[32m         *     // error is thrown.[m
[32m+[m[32m         *     name: /^TypeError$/,[m
[32m+[m[32m         *     message: /Wrong/,[m
[32m+[m[32m         *     foo: 'bar',[m
[32m+[m[32m         *     info: {[m
[32m+[m[32m         *       nested: true,[m
[32m+[m[32m         *       // It is not possible to use regular expressions for nested properties![m
[32m+[m[32m         *       baz: 'text',[m
[32m+[m[32m         *     },[m
[32m+[m[32m         *     // The `reg` property contains a regular expression and only if the[m
[32m+[m[32m         *     // validation object contains an identical regular expression, it is going[m
[32m+[m[32m         *     // to pass.[m
[32m+[m[32m         *     reg: /abc/i,[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * );[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Fails due to the different `message` and `name` properties:[m
[32m+[m[32m         * assert.throws([m
[32m+[m[32m         *   () => {[m
[32m+[m[32m         *     const otherErr = new Error('Not found');[m
[32m+[m[32m         *     // Copy all enumerable properties from `err` to `otherErr`.[m
[32m+[m[32m         *     for (const [key, value] of Object.entries(err)) {[m
[32m+[m[32m         *       otherErr[key] = value;[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *     throw otherErr;[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   // The error's `message` and `name` properties will also be checked when using[m
[32m+[m[32m         *   // an error as validation object.[m
[32m+[m[32m         *   err,[m
[32m+[m[32m         * );[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Validate instanceof using constructor:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.throws([m
[32m+[m[32m         *   () => {[m
[32m+[m[32m         *     throw new Error('Wrong value');[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   Error,[m
[32m+[m[32m         * );[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Validate error message using [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions):[m
[32m+[m[32m         *[m
[32m+[m[32m         * Using a regular expression runs `.toString` on the error object, and will[m
[32m+[m[32m         * therefore also include the error name.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.throws([m
[32m+[m[32m         *   () => {[m
[32m+[m[32m         *     throw new Error('Wrong value');[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   /^Error: Wrong value$/,[m
[32m+[m[32m         * );[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Custom error validation:[m
[32m+[m[32m         *[m
[32m+[m[32m         * The function must return `true` to indicate all internal validations passed.[m
[32m+[m[32m         * It will otherwise fail with an `AssertionError`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.throws([m
[32m+[m[32m         *   () => {[m
[32m+[m[32m         *     throw new Error('Wrong value');[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   (err) => {[m
[32m+[m[32m         *     assert(err instanceof Error);[m
[32m+[m[32m         *     assert(/value/.test(err));[m
[32m+[m[32m         *     // Avoid returning anything from validation functions besides `true`.[m
[32m+[m[32m         *     // Otherwise, it's not clear what part of the validation failed. Instead,[m
[32m+[m[32m         *     // throw an error about the specific validation that failed (as done in this[m
[32m+[m[32m         *     // example) and add as much helpful debugging information to that error as[m
[32m+[m[32m         *     // possible.[m
[32m+[m[32m         *     return true;[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   'unexpected error',[m
[32m+[m[32m         * );[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * `error` cannot be a string. If a string is provided as the second[m
[32m+[m[32m         * argument, then `error` is assumed to be omitted and the string will be used for `message` instead. This can lead to easy-to-miss mistakes. Using the same[m
[32m+[m[32m         * message as the thrown error message is going to result in an `ERR_AMBIGUOUS_ARGUMENT` error. Please read the example below carefully if using[m
[32m+[m[32m         * a string as the second argument gets considered:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * function throwingFirst() {[m
[32m+[m[32m         *   throw new Error('First');[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * function throwingSecond() {[m
[32m+[m[32m         *   throw new Error('Second');[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * function notThrowing() {}[m
[32m+[m[32m         *[m
[32m+[m[32m         * // The second argument is a string and the input function threw an Error.[m
[32m+[m[32m         * // The first case will not throw as it does not match for the error message[m
[32m+[m[32m         * // thrown by the input function![m
[32m+[m[32m         * assert.throws(throwingFirst, 'Second');[m
[32m+[m[32m         * // In the next example the message has no benefit over the message from the[m
[32m+[m[32m         * // error and since it is not clear if the user intended to actually match[m
[32m+[m[32m         * // against the error message, Node.js throws an `ERR_AMBIGUOUS_ARGUMENT` error.[m
[32m+[m[32m         * assert.throws(throwingSecond, 'Second');[m
[32m+[m[32m         * // TypeError [ERR_AMBIGUOUS_ARGUMENT][m
[32m+[m[32m         *[m
[32m+[m[32m         * // The string is only used (as message) in case the function does not throw:[m
[32m+[m[32m         * assert.throws(notThrowing, 'Second');[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: Missing expected exception: Second[m
[32m+[m[32m         *[m
[32m+[m[32m         * // If it was intended to match for the error message do this instead:[m
[32m+[m[32m         * // It does not throw because the error messages match.[m
[32m+[m[32m         * assert.throws(throwingSecond, /Second$/);[m
[32m+[m[32m         *[m
[32m+[m[32m         * // If the error message does not match, an AssertionError is thrown.[m
[32m+[m[32m         * assert.throws(throwingFirst, /Second$/);[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION][m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Due to the confusing error-prone notation, avoid a string as the second[m
[32m+[m[32m         * argument.[m
[32m+[m[32m         * @since v0.1.21[m
[32m+[m[32m         */[m
[32m+[m[32m        function throws(block: () => unknown, message?: string | Error): void;[m
[32m+[m[32m        function throws(block: () => unknown, error: AssertPredicate, message?: string | Error): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asserts that the function `fn` does not throw an error.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Using `assert.doesNotThrow()` is actually not useful because there[m
[32m+[m[32m         * is no benefit in catching an error and then rethrowing it. Instead, consider[m
[32m+[m[32m         * adding a comment next to the specific code path that should not throw and keep[m
[32m+[m[32m         * error messages as expressive as possible.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When `assert.doesNotThrow()` is called, it will immediately call the `fn` function.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If an error is thrown and it is the same type as that specified by the `error` parameter, then an `AssertionError` is thrown. If the error is of a[m
[32m+[m[32m         * different type, or if the `error` parameter is undefined, the error is[m
[32m+[m[32m         * propagated back to the caller.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If specified, `error` can be a [`Class`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes),[m
[32m+[m[32m         * [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions), or a validation[m
[32m+[m[32m         * function. See {@link throws} for more details.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The following, for instance, will throw the `TypeError` because there is no[m
[32m+[m[32m         * matching error type in the assertion:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.doesNotThrow([m
[32m+[m[32m         *   () => {[m
[32m+[m[32m         *     throw new TypeError('Wrong value');[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   SyntaxError,[m
[32m+[m[32m         * );[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * However, the following will result in an `AssertionError` with the message[m
[32m+[m[32m         * 'Got unwanted exception...':[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.doesNotThrow([m
[32m+[m[32m         *   () => {[m
[32m+[m[32m         *     throw new TypeError('Wrong value');[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   TypeError,[m
[32m+[m[32m         * );[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If an `AssertionError` is thrown and a value is provided for the `message` parameter, the value of `message` will be appended to the `AssertionError` message:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.doesNotThrow([m
[32m+[m[32m         *   () => {[m
[32m+[m[32m         *     throw new TypeError('Wrong value');[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   /Wrong value/,[m
[32m+[m[32m         *   'Whoops',[m
[32m+[m[32m         * );[m
[32m+[m[32m         * // Throws: AssertionError: Got unwanted exception: Whoops[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.1.21[m
[32m+[m[32m         */[m
[32m+[m[32m        function doesNotThrow(block: () => unknown, message?: string | Error): void;[m
[32m+[m[32m        function doesNotThrow(block: () => unknown, error: AssertPredicate, message?: string | Error): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Throws `value` if `value` is not `undefined` or `null`. This is useful when[m
[32m+[m[32m         * testing the `error` argument in callbacks. The stack trace contains all frames[m
[32m+[m[32m         * from the error passed to `ifError()` including the potential new frames for `ifError()` itself.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.ifError(null);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         * assert.ifError(0);[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: ifError got unwanted exception: 0[m
[32m+[m[32m         * assert.ifError('error');[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: ifError got unwanted exception: 'error'[m
[32m+[m[32m         * assert.ifError(new Error());[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: ifError got unwanted exception: Error[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Create some random error frames.[m
[32m+[m[32m         * let err;[m
[32m+[m[32m         * (function errorFrame() {[m
[32m+[m[32m         *   err = new Error('test error');[m
[32m+[m[32m         * })();[m
[32m+[m[32m         *[m
[32m+[m[32m         * (function ifErrorFrame() {[m
[32m+[m[32m         *   assert.ifError(err);[m
[32m+[m[32m         * })();[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: ifError got unwanted exception: test error[m
[32m+[m[32m         * //     at ifErrorFrame[m
[32m+[m[32m         * //     at errorFrame[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.1.97[m
[32m+[m[32m         */[m
[32m+[m[32m        function ifError(value: unknown): asserts value is null | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Awaits the `asyncFn` promise or, if `asyncFn` is a function, immediately[m
[32m+[m[32m         * calls the function and awaits the returned promise to complete. It will then[m
[32m+[m[32m         * check that the promise is rejected.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `asyncFn` is a function and it throws an error synchronously, `assert.rejects()` will return a rejected `Promise` with that error. If the[m
[32m+[m[32m         * function does not return a promise, `assert.rejects()` will return a rejected `Promise` with an [ERR_INVALID_RETURN_VALUE](https://nodejs.org/docs/latest-v22.x/api/errors.html#err_invalid_return_value)[m
[32m+[m[32m         * error. In both cases the error handler is skipped.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Besides the async nature to await the completion behaves identically to {@link throws}.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If specified, `error` can be a [`Class`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes),[m
[32m+[m[32m         * [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions), a validation function,[m
[32m+[m[32m         * an object where each property will be tested for, or an instance of error where[m
[32m+[m[32m         * each property will be tested for including the non-enumerable `message` and `name` properties.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If specified, `message` will be the message provided by the `{@link AssertionError}` if the `asyncFn` fails to reject.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * await assert.rejects([m
[32m+[m[32m         *   async () => {[m
[32m+[m[32m         *     throw new TypeError('Wrong value');[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   {[m
[32m+[m[32m         *     name: 'TypeError',[m
[32m+[m[32m         *     message: 'Wrong value',[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * );[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * await assert.rejects([m
[32m+[m[32m         *   async () => {[m
[32m+[m[32m         *     throw new TypeError('Wrong value');[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   (err) => {[m
[32m+[m[32m         *     assert.strictEqual(err.name, 'TypeError');[m
[32m+[m[32m         *     assert.strictEqual(err.message, 'Wrong value');[m
[32m+[m[32m         *     return true;[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * );[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.rejects([m
[32m+[m[32m         *   Promise.reject(new Error('Wrong value')),[m
[32m+[m[32m         *   Error,[m
[32m+[m[32m         * ).then(() => {[m
[32m+[m[32m         *   // ...[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * `error` cannot be a string. If a string is provided as the second argument, then `error` is assumed to[m
[32m+[m[32m         * be omitted and the string will be used for `message` instead. This can lead to easy-to-miss mistakes. Please read the[m
[32m+[m[32m         * example in {@link throws} carefully if using a string as the second argument gets considered.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function rejects(block: (() => Promise<unknown>) | Promise<unknown>, message?: string | Error): Promise<void>;[m
[32m+[m[32m        function rejects([m
[32m+[m[32m            block: (() => Promise<unknown>) | Promise<unknown>,[m
[32m+[m[32m            error: AssertPredicate,[m
[32m+[m[32m            message?: string | Error,[m
[32m+[m[32m        ): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Awaits the `asyncFn` promise or, if `asyncFn` is a function, immediately[m
[32m+[m[32m         * calls the function and awaits the returned promise to complete. It will then[m
[32m+[m[32m         * check that the promise is not rejected.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `asyncFn` is a function and it throws an error synchronously, `assert.doesNotReject()` will return a rejected `Promise` with that error. If[m
[32m+[m[32m         * the function does not return a promise, `assert.doesNotReject()` will return a[m
[32m+[m[32m         * rejected `Promise` with an [ERR_INVALID_RETURN_VALUE](https://nodejs.org/docs/latest-v22.x/api/errors.html#err_invalid_return_value) error. In both cases[m
[32m+[m[32m         * the error handler is skipped.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Using `assert.doesNotReject()` is actually not useful because there is little[m
[32m+[m[32m         * benefit in catching a rejection and then rejecting it again. Instead, consider[m
[32m+[m[32m         * adding a comment next to the specific code path that should not reject and keep[m
[32m+[m[32m         * error messages as expressive as possible.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If specified, `error` can be a [`Class`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes),[m
[32m+[m[32m         * [`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions), or a validation[m
[32m+[m[32m         * function. See {@link throws} for more details.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Besides the async nature to await the completion behaves identically to {@link doesNotThrow}.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * await assert.doesNotReject([m
[32m+[m[32m         *   async () => {[m
[32m+[m[32m         *     throw new TypeError('Wrong value');[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   SyntaxError,[m
[32m+[m[32m         * );[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.doesNotReject(Promise.reject(new TypeError('Wrong value')))[m
[32m+[m[32m         *   .then(() => {[m
[32m+[m[32m         *     // ...[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function doesNotReject([m
[32m+[m[32m            block: (() => Promise<unknown>) | Promise<unknown>,[m
[32m+[m[32m            message?: string | Error,[m
[32m+[m[32m        ): Promise<void>;[m
[32m+[m[32m        function doesNotReject([m
[32m+[m[32m            block: (() => Promise<unknown>) | Promise<unknown>,[m
[32m+[m[32m            error: AssertPredicate,[m
[32m+[m[32m            message?: string | Error,[m
[32m+[m[32m        ): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Expects the `string` input to match the regular expression.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.match('I will fail', /pass/);[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: The input did not match the regular ...[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.match(123, /pass/);[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: The "string" argument must be of type string.[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.match('I will pass', /pass/);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the values do not match, or if the `string` argument is of another type than `string`, an `{@link AssertionError}` is thrown with a `message` property set equal[m
[32m+[m[32m         * to the value of the `message` parameter. If the `message` parameter is[m
[32m+[m[32m         * undefined, a default error message is assigned. If the `message` parameter is an[m
[32m+[m[32m         * instance of an [Error](https://nodejs.org/docs/latest-v22.x/api/errors.html#class-error) then it will be thrown instead of the `{@link AssertionError}`.[m
[32m+[m[32m         * @since v13.6.0, v12.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function match(value: string, regExp: RegExp, message?: string | Error): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Expects the `string` input not to match the regular expression.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.doesNotMatch('I will fail', /fail/);[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: The input was expected to not match the ...[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.doesNotMatch(123, /pass/);[m
[32m+[m[32m         * // AssertionError [ERR_ASSERTION]: The "string" argument must be of type string.[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.doesNotMatch('I will pass', /different/);[m
[32m+[m[32m         * // OK[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the values do match, or if the `string` argument is of another type than `string`, an `{@link AssertionError}` is thrown with a `message` property set equal[m
[32m+[m[32m         * to the value of the `message` parameter. If the `message` parameter is[m
[32m+[m[32m         * undefined, a default error message is assigned. If the `message` parameter is an[m
[32m+[m[32m         * instance of an [Error](https://nodejs.org/docs/latest-v22.x/api/errors.html#class-error) then it will be thrown instead of the `{@link AssertionError}`.[m
[32m+[m[32m         * @since v13.6.0, v12.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function doesNotMatch(value: string, regExp: RegExp, message?: string | Error): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * In strict assertion mode, non-strict methods behave like their corresponding strict methods. For example,[m
[32m+[m[32m         * {@link deepEqual} will behave like {@link deepStrictEqual}.[m
[32m+[m[32m         *[m
[32m+[m[32m         * In strict assertion mode, error messages for objects display a diff. In legacy assertion mode, error[m
[32m+[m[32m         * messages for objects display the objects, often truncated.[m
[32m+[m[32m         *[m
[32m+[m[32m         * To use strict assertion mode:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { strict as assert } from 'node:assert';COPY[m
[32m+[m[32m         * import assert from 'node:assert/strict';[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example error diff:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { strict as assert } from 'node:assert';[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.deepEqual([[[1, 2, 3]], 4, 5], [[[1, 2, '3']], 4, 5]);[m
[32m+[m[32m         * // AssertionError: Expected inputs to be strictly deep-equal:[m
[32m+[m[32m         * // + actual - expected ... Lines skipped[m
[32m+[m[32m         * //[m
[32m+[m[32m         * //   [[m
[32m+[m[32m         * //     [[m
[32m+[m[32m         * // ...[m
[32m+[m[32m         * //       2,[m
[32m+[m[32m         * // +     3[m
[32m+[m[32m         * // -     '3'[m
[32m+[m[32m         * //     ],[m
[32m+[m[32m         * // ...[m
[32m+[m[32m         * //     5[m
[32m+[m[32m         * //   ][m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * To deactivate the colors, use the `NO_COLOR` or `NODE_DISABLE_COLORS` environment variables. This will also[m
[32m+[m[32m         * deactivate the colors in the REPL. For more on color support in terminal environments, read the tty[m
[32m+[m[32m         * `getColorDepth()` documentation.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @since v15.0.0, v13.9.0, v12.16.2, v9.9.0[m
[32m+[m[32m         */[m
[32m+[m[32m        namespace strict {[m
[32m+[m[32m            type AssertionError = assert.AssertionError;[m
[32m+[m[32m            type AssertPredicate = assert.AssertPredicate;[m
[32m+[m[32m            type CallTrackerCall = assert.CallTrackerCall;[m
[32m+[m[32m            type CallTrackerReportInformation = assert.CallTrackerReportInformation;[m
[32m+[m[32m        }[m
[32m+[m[32m        const strict:[m
[32m+[m[32m            & Omit<[m
[32m+[m[32m                typeof assert,[m
[32m+[m[32m                | "equal"[m
[32m+[m[32m                | "notEqual"[m
[32m+[m[32m                | "deepEqual"[m
[32m+[m[32m                | "notDeepEqual"[m
[32m+[m[32m                | "ok"[m
[32m+[m[32m                | "strictEqual"[m
[32m+[m[32m                | "deepStrictEqual"[m
[32m+[m[32m                | "ifError"[m
[32m+[m[32m                | "strict"[m
[32m+[m[32m            >[m
[32m+[m[32m            & {[m
[32m+[m[32m                (value: unknown, message?: string | Error): asserts value;[m
[32m+[m[32m                equal: typeof strictEqual;[m
[32m+[m[32m                notEqual: typeof notStrictEqual;[m
[32m+[m[32m                deepEqual: typeof deepStrictEqual;[m
[32m+[m[32m                notDeepEqual: typeof notDeepStrictEqual;[m
[32m+[m[32m                // Mapped types and assertion functions are incompatible?[m
[32m+[m[32m                // TS2775: Assertions require every name in the call target[m
[32m+[m[32m                // to be declared with an explicit type annotation.[m
[32m+[m[32m                ok: typeof ok;[m
[32m+[m[32m                strictEqual: typeof strictEqual;[m
[32m+[m[32m                deepStrictEqual: typeof deepStrictEqual;[m
[32m+[m[32m                ifError: typeof ifError;[m
[32m+[m[32m                strict: typeof strict;[m
[32m+[m[32m            };[m
[32m+[m[32m    }[m
[32m+[m[32m    export = assert;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:assert" {[m
[32m+[m[32m    import assert = require("assert");[m
[32m+[m[32m    export = assert;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/assert/strict.d.ts b/node_modules/@types/node/assert/strict.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..f333913[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/assert/strict.d.ts[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mdeclare module "assert/strict" {[m
[32m+[m[32m    import { strict } from "node:assert";[m
[32m+[m[32m    export = strict;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:assert/strict" {[m
[32m+[m[32m    import { strict } from "node:assert";[m
[32m+[m[32m    export = strict;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/async_hooks.d.ts b/node_modules/@types/node/async_hooks.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..a84198f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/async_hooks.d.ts[m
[36m@@ -0,0 +1,541 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * We strongly discourage the use of the `async_hooks` API.[m
[32m+[m[32m * Other APIs that can cover most of its use cases include:[m
[32m+[m[32m *[m
[32m+[m[32m * * [`AsyncLocalStorage`](https://nodejs.org/docs/latest-v22.x/api/async_context.html#class-asynclocalstorage) tracks async context[m
[32m+[m[32m * * [`process.getActiveResourcesInfo()`](https://nodejs.org/docs/latest-v22.x/api/process.html#processgetactiveresourcesinfo) tracks active resources[m
[32m+[m[32m *[m
[32m+[m[32m * The `node:async_hooks` module provides an API to track asynchronous resources.[m
[32m+[m[32m * It can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import async_hooks from 'node:async_hooks';[m
[32m+[m[32m * ```[m
[32m+[m[32m * @experimental[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/async_hooks.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "async_hooks" {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { executionAsyncId } from 'node:async_hooks';[m
[32m+[m[32m     * import fs from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * console.log(executionAsyncId());  // 1 - bootstrap[m
[32m+[m[32m     * const path = '.';[m
[32m+[m[32m     * fs.open(path, 'r', (err, fd) => {[m
[32m+[m[32m     *   console.log(executionAsyncId());  // 6 - open()[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The ID returned from `executionAsyncId()` is related to execution timing, not[m
[32m+[m[32m     * causality (which is covered by `triggerAsyncId()`):[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const server = net.createServer((conn) => {[m
[32m+[m[32m     *   // Returns the ID of the server, not of the new connection, because the[m
[32m+[m[32m     *   // callback runs in the execution scope of the server's MakeCallback().[m
[32m+[m[32m     *   async_hooks.executionAsyncId();[m
[32m+[m[32m     *[m
[32m+[m[32m     * }).listen(port, () => {[m
[32m+[m[32m     *   // Returns the ID of a TickObject (process.nextTick()) because all[m
[32m+[m[32m     *   // callbacks passed to .listen() are wrapped in a nextTick().[m
[32m+[m[32m     *   async_hooks.executionAsyncId();[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Promise contexts may not get precise `executionAsyncIds` by default.[m
[32m+[m[32m     * See the section on [promise execution tracking](https://nodejs.org/docs/latest-v22.x/api/async_hooks.html#promise-execution-tracking).[m
[32m+[m[32m     * @since v8.1.0[m
[32m+[m[32m     * @return The `asyncId` of the current execution context. Useful to track when something calls.[m
[32m+[m[32m     */[m
[32m+[m[32m    function executionAsyncId(): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Resource objects returned by `executionAsyncResource()` are most often internal[m
[32m+[m[32m     * Node.js handle objects with undocumented APIs. Using any functions or properties[m
[32m+[m[32m     * on the object is likely to crash your application and should be avoided.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using `executionAsyncResource()` in the top-level execution context will[m
[32m+[m[32m     * return an empty object as there is no handle or request object to use,[m
[32m+[m[32m     * but having an object representing the top-level can be helpful.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { open } from 'node:fs';[m
[32m+[m[32m     * import { executionAsyncId, executionAsyncResource } from 'node:async_hooks';[m
[32m+[m[32m     *[m
[32m+[m[32m     * console.log(executionAsyncId(), executionAsyncResource());  // 1 {}[m
[32m+[m[32m     * open(new URL(import.meta.url), 'r', (err, fd) => {[m
[32m+[m[32m     *   console.log(executionAsyncId(), executionAsyncResource());  // 7 FSReqWrap[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * This can be used to implement continuation local storage without the[m
[32m+[m[32m     * use of a tracking `Map` to store the metadata:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { createServer } from 'node:http';[m
[32m+[m[32m     * import {[m
[32m+[m[32m     *   executionAsyncId,[m
[32m+[m[32m     *   executionAsyncResource,[m
[32m+[m[32m     *   createHook,[m
[32m+[m[32m     * } from 'async_hooks';[m
[32m+[m[32m     * const sym = Symbol('state'); // Private symbol to avoid pollution[m
[32m+[m[32m     *[m
[32m+[m[32m     * createHook({[m
[32m+[m[32m     *   init(asyncId, type, triggerAsyncId, resource) {[m
[32m+[m[32m     *     const cr = executionAsyncResource();[m
[32m+[m[32m     *     if (cr) {[m
[32m+[m[32m     *       resource[sym] = cr[sym];[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *   },[m
[32m+[m[32m     * }).enable();[m
[32m+[m[32m     *[m
[32m+[m[32m     * const server = createServer((req, res) => {[m
[32m+[m[32m     *   executionAsyncResource()[sym] = { state: req.url };[m
[32m+[m[32m     *   setTimeout(function() {[m
[32m+[m[32m     *     res.end(JSON.stringify(executionAsyncResource()[sym]));[m
[32m+[m[32m     *   }, 100);[m
[32m+[m[32m     * }).listen(3000);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v13.9.0, v12.17.0[m
[32m+[m[32m     * @return The resource representing the current execution. Useful to store data within the resource.[m
[32m+[m[32m     */[m
[32m+[m[32m    function executionAsyncResource(): object;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const server = net.createServer((conn) => {[m
[32m+[m[32m     *   // The resource that caused (or triggered) this callback to be called[m
[32m+[m[32m     *   // was that of the new connection. Thus the return value of triggerAsyncId()[m
[32m+[m[32m     *   // is the asyncId of "conn".[m
[32m+[m[32m     *   async_hooks.triggerAsyncId();[m
[32m+[m[32m     *[m
[32m+[m[32m     * }).listen(port, () => {[m
[32m+[m[32m     *   // Even though all callbacks passed to .listen() are wrapped in a nextTick()[m
[32m+[m[32m     *   // the callback itself exists because the call to the server's .listen()[m
[32m+[m[32m     *   // was made. So the return value would be the ID of the server.[m
[32m+[m[32m     *   async_hooks.triggerAsyncId();[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Promise contexts may not get valid `triggerAsyncId`s by default. See[m
[32m+[m[32m     * the section on [promise execution tracking](https://nodejs.org/docs/latest-v22.x/api/async_hooks.html#promise-execution-tracking).[m
[32m+[m[32m     * @return The ID of the resource responsible for calling the callback that is currently being executed.[m
[32m+[m[32m     */[m
[32m+[m[32m    function triggerAsyncId(): number;[m
[32m+[m[32m    interface HookCallbacks {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Called when a class is constructed that has the possibility to emit an asynchronous event.[m
[32m+[m[32m         * @param asyncId A unique ID for the async resource[m
[32m+[m[32m         * @param type The type of the async resource[m
[32m+[m[32m         * @param triggerAsyncId The unique ID of the async resource in whose execution context this async resource was created[m
[32m+[m[32m         * @param resource Reference to the resource representing the async operation, needs to be released during destroy[m
[32m+[m[32m         */[m
[32m+[m[32m        init?(asyncId: number, type: string, triggerAsyncId: number, resource: object): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When an asynchronous operation is initiated or completes a callback is called to notify the user.[m
[32m+[m[32m         * The before callback is called just before said callback is executed.[m
[32m+[m[32m         * @param asyncId the unique identifier assigned to the resource about to execute the callback.[m
[32m+[m[32m         */[m
[32m+[m[32m        before?(asyncId: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Called immediately after the callback specified in `before` is completed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If an uncaught exception occurs during execution of the callback, then `after` will run after the `'uncaughtException'` event is emitted or a `domain`'s handler runs.[m
[32m+[m[32m         * @param asyncId the unique identifier assigned to the resource which has executed the callback.[m
[32m+[m[32m         */[m
[32m+[m[32m        after?(asyncId: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Called when a promise has resolve() called. This may not be in the same execution id[m
[32m+[m[32m         * as the promise itself.[m
[32m+[m[32m         * @param asyncId the unique id for the promise that was resolve()d.[m
[32m+[m[32m         */[m
[32m+[m[32m        promiseResolve?(asyncId: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Called after the resource corresponding to asyncId is destroyed[m
[32m+[m[32m         * @param asyncId a unique ID for the async resource[m
[32m+[m[32m         */[m
[32m+[m[32m        destroy?(asyncId: number): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface AsyncHook {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enable the callbacks for a given AsyncHook instance. If no callbacks are provided enabling is a noop.[m
[32m+[m[32m         */[m
[32m+[m[32m        enable(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Disable the callbacks for a given AsyncHook instance from the global pool of AsyncHook callbacks to be executed. Once a hook has been disabled it will not be called again until enabled.[m
[32m+[m[32m         */[m
[32m+[m[32m        disable(): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Registers functions to be called for different lifetime events of each async[m
[32m+[m[32m     * operation.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The callbacks `init()`/`before()`/`after()`/`destroy()` are called for the[m
[32m+[m[32m     * respective asynchronous event during a resource's lifetime.[m
[32m+[m[32m     *[m
[32m+[m[32m     * All callbacks are optional. For example, if only resource cleanup needs to[m
[32m+[m[32m     * be tracked, then only the `destroy` callback needs to be passed. The[m
[32m+[m[32m     * specifics of all functions that can be passed to `callbacks` is in the `Hook Callbacks` section.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { createHook } from 'node:async_hooks';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const asyncHook = createHook({[m
[32m+[m[32m     *   init(asyncId, type, triggerAsyncId, resource) { },[m
[32m+[m[32m     *   destroy(asyncId) { },[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The callbacks will be inherited via the prototype chain:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * class MyAsyncCallbacks {[m
[32m+[m[32m     *   init(asyncId, type, triggerAsyncId, resource) { }[m
[32m+[m[32m     *   destroy(asyncId) {}[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * class MyAddedCallbacks extends MyAsyncCallbacks {[m
[32m+[m[32m     *   before(asyncId) { }[m
[32m+[m[32m     *   after(asyncId) { }[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * const asyncHook = async_hooks.createHook(new MyAddedCallbacks());[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Because promises are asynchronous resources whose lifecycle is tracked[m
[32m+[m[32m     * via the async hooks mechanism, the `init()`, `before()`, `after()`, and`destroy()` callbacks _must not_ be async functions that return promises.[m
[32m+[m[32m     * @since v8.1.0[m
[32m+[m[32m     * @param callbacks The `Hook Callbacks` to register[m
[32m+[m[32m     * @return Instance used for disabling and enabling hooks[m
[32m+[m[32m     */[m
[32m+[m[32m    function createHook(callbacks: HookCallbacks): AsyncHook;[m
[32m+[m[32m    interface AsyncResourceOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The ID of the execution context that created this async event.[m
[32m+[m[32m         * @default executionAsyncId()[m
[32m+[m[32m         */[m
[32m+[m[32m        triggerAsyncId?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Disables automatic `emitDestroy` when the object is garbage collected.[m
[32m+[m[32m         * This usually does not need to be set (even if `emitDestroy` is called[m
[32m+[m[32m         * manually), unless the resource's `asyncId` is retrieved and the[m
[32m+[m[32m         * sensitive API's `emitDestroy` is called with it.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        requireManualDestroy?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The class `AsyncResource` is designed to be extended by the embedder's async[m
[32m+[m[32m     * resources. Using this, users can easily trigger the lifetime events of their[m
[32m+[m[32m     * own resources.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `init` hook will trigger when an `AsyncResource` is instantiated.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The following is an overview of the `AsyncResource` API.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { AsyncResource, executionAsyncId } from 'node:async_hooks';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // AsyncResource() is meant to be extended. Instantiating a[m
[32m+[m[32m     * // new AsyncResource() also triggers init. If triggerAsyncId is omitted then[m
[32m+[m[32m     * // async_hook.executionAsyncId() is used.[m
[32m+[m[32m     * const asyncResource = new AsyncResource([m
[32m+[m[32m     *   type, { triggerAsyncId: executionAsyncId(), requireManualDestroy: false },[m
[32m+[m[32m     * );[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Run a function in the execution context of the resource. This will[m
[32m+[m[32m     * // * establish the context of the resource[m
[32m+[m[32m     * // * trigger the AsyncHooks before callbacks[m
[32m+[m[32m     * // * call the provided function `fn` with the supplied arguments[m
[32m+[m[32m     * // * trigger the AsyncHooks after callbacks[m
[32m+[m[32m     * // * restore the original execution context[m
[32m+[m[32m     * asyncResource.runInAsyncScope(fn, thisArg, ...args);[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Call AsyncHooks destroy callbacks.[m
[32m+[m[32m     * asyncResource.emitDestroy();[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Return the unique ID assigned to the AsyncResource instance.[m
[32m+[m[32m     * asyncResource.asyncId();[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Return the trigger ID for the AsyncResource instance.[m
[32m+[m[32m     * asyncResource.triggerAsyncId();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     */[m
[32m+[m[32m    class AsyncResource {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * AsyncResource() is meant to be extended. Instantiating a[m
[32m+[m[32m         * new AsyncResource() also triggers init. If triggerAsyncId is omitted then[m
[32m+[m[32m         * async_hook.executionAsyncId() is used.[m
[32m+[m[32m         * @param type The type of async event.[m
[32m+[m[32m         * @param triggerAsyncId The ID of the execution context that created[m
[32m+[m[32m         *   this async event (default: `executionAsyncId()`), or an[m
[32m+[m[32m         *   AsyncResourceOptions object (since v9.3.0)[m
[32m+[m[32m         */[m
[32m+[m[32m        constructor(type: string, triggerAsyncId?: number | AsyncResourceOptions);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Binds the given function to the current execution context.[m
[32m+[m[32m         * @since v14.8.0, v12.19.0[m
[32m+[m[32m         * @param fn The function to bind to the current execution context.[m
[32m+[m[32m         * @param type An optional name to associate with the underlying `AsyncResource`.[m
[32m+[m[32m         */[m
[32m+[m[32m        static bind<Func extends (this: ThisArg, ...args: any[]) => any, ThisArg>([m
[32m+[m[32m            fn: Func,[m
[32m+[m[32m            type?: string,[m
[32m+[m[32m            thisArg?: ThisArg,[m
[32m+[m[32m        ): Func;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Binds the given function to execute to this `AsyncResource`'s scope.[m
[32m+[m[32m         * @since v14.8.0, v12.19.0[m
[32m+[m[32m         * @param fn The function to bind to the current `AsyncResource`.[m
[32m+[m[32m         */[m
[32m+[m[32m        bind<Func extends (...args: any[]) => any>(fn: Func): Func;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Call the provided function with the provided arguments in the execution context[m
[32m+[m[32m         * of the async resource. This will establish the context, trigger the AsyncHooks[m
[32m+[m[32m         * before callbacks, call the function, trigger the AsyncHooks after callbacks, and[m
[32m+[m[32m         * then restore the original execution context.[m
[32m+[m[32m         * @since v9.6.0[m
[32m+[m[32m         * @param fn The function to call in the execution context of this async resource.[m
[32m+[m[32m         * @param thisArg The receiver to be used for the function call.[m
[32m+[m[32m         * @param args Optional arguments to pass to the function.[m
[32m+[m[32m         */[m
[32m+[m[32m        runInAsyncScope<This, Result>([m
[32m+[m[32m            fn: (this: This, ...args: any[]) => Result,[m
[32m+[m[32m            thisArg?: This,[m
[32m+[m[32m            ...args: any[][m
[32m+[m[32m        ): Result;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Call all `destroy` hooks. This should only ever be called once. An error will[m
[32m+[m[32m         * be thrown if it is called more than once. This **must** be manually called. If[m
[32m+[m[32m         * the resource is left to be collected by the GC then the `destroy` hooks will[m
[32m+[m[32m         * never be called.[m
[32m+[m[32m         * @return A reference to `asyncResource`.[m
[32m+[m[32m         */[m
[32m+[m[32m        emitDestroy(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @return The unique `asyncId` assigned to the resource.[m
[32m+[m[32m         */[m
[32m+[m[32m        asyncId(): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @return The same `triggerAsyncId` that is passed to the `AsyncResource` constructor.[m
[32m+[m[32m         */[m
[32m+[m[32m        triggerAsyncId(): number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This class creates stores that stay coherent through asynchronous operations.[m
[32m+[m[32m     *[m
[32m+[m[32m     * While you can create your own implementation on top of the `node:async_hooks` module, `AsyncLocalStorage` should be preferred as it is a performant and memory[m
[32m+[m[32m     * safe implementation that involves significant optimizations that are non-obvious[m
[32m+[m[32m     * to implement.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The following example uses `AsyncLocalStorage` to build a simple logger[m
[32m+[m[32m     * that assigns IDs to incoming HTTP requests and includes them in messages[m
[32m+[m[32m     * logged within each request.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import http from 'node:http';[m
[32m+[m[32m     * import { AsyncLocalStorage } from 'node:async_hooks';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const asyncLocalStorage = new AsyncLocalStorage();[m
[32m+[m[32m     *[m
[32m+[m[32m     * function logWithId(msg) {[m
[32m+[m[32m     *   const id = asyncLocalStorage.getStore();[m
[32m+[m[32m     *   console.log(`${id !== undefined ? id : '-'}:`, msg);[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * let idSeq = 0;[m
[32m+[m[32m     * http.createServer((req, res) => {[m
[32m+[m[32m     *   asyncLocalStorage.run(idSeq++, () => {[m
[32m+[m[32m     *     logWithId('start');[m
[32m+[m[32m     *     // Imagine any chain of async operations here[m
[32m+[m[32m     *     setImmediate(() => {[m
[32m+[m[32m     *       logWithId('finish');[m
[32m+[m[32m     *       res.end();[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * }).listen(8080);[m
[32m+[m[32m     *[m
[32m+[m[32m     * http.get('http://localhost:8080');[m
[32m+[m[32m     * http.get('http://localhost:8080');[m
[32m+[m[32m     * // Prints:[m
[32m+[m[32m     * //   0: start[m
[32m+[m[32m     * //   1: start[m
[32m+[m[32m     * //   0: finish[m
[32m+[m[32m     * //   1: finish[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Each instance of `AsyncLocalStorage` maintains an independent storage context.[m
[32m+[m[32m     * Multiple instances can safely exist simultaneously without risk of interfering[m
[32m+[m[32m     * with each other's data.[m
[32m+[m[32m     * @since v13.10.0, v12.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class AsyncLocalStorage<T> {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Binds the given function to the current execution context.[m
[32m+[m[32m         * @since v19.8.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @param fn The function to bind to the current execution context.[m
[32m+[m[32m         * @return A new function that calls `fn` within the captured execution context.[m
[32m+[m[32m         */[m
[32m+[m[32m        static bind<Func extends (...args: any[]) => any>(fn: Func): Func;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Captures the current execution context and returns a function that accepts a[m
[32m+[m[32m         * function as an argument. Whenever the returned function is called, it[m
[32m+[m[32m         * calls the function passed to it within the captured context.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const asyncLocalStorage = new AsyncLocalStorage();[m
[32m+[m[32m         * const runInAsyncScope = asyncLocalStorage.run(123, () => AsyncLocalStorage.snapshot());[m
[32m+[m[32m         * const result = asyncLocalStorage.run(321, () => runInAsyncScope(() => asyncLocalStorage.getStore()));[m
[32m+[m[32m         * console.log(result);  // returns 123[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * AsyncLocalStorage.snapshot() can replace the use of AsyncResource for simple[m
[32m+[m[32m         * async context tracking purposes, for example:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * class Foo {[m
[32m+[m[32m         *   #runInAsyncScope = AsyncLocalStorage.snapshot();[m
[32m+[m[32m         *[m
[32m+[m[32m         *   get() { return this.#runInAsyncScope(() => asyncLocalStorage.getStore()); }[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * const foo = asyncLocalStorage.run(123, () => new Foo());[m
[32m+[m[32m         * console.log(asyncLocalStorage.run(321, () => foo.get())); // returns 123[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v19.8.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @return A new function with the signature `(fn: (...args) : R, ...args) : R`.[m
[32m+[m[32m         */[m
[32m+[m[32m        static snapshot(): <R, TArgs extends any[]>(fn: (...args: TArgs) => R, ...args: TArgs) => R;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Disables the instance of `AsyncLocalStorage`. All subsequent calls[m
[32m+[m[32m         * to `asyncLocalStorage.getStore()` will return `undefined` until `asyncLocalStorage.run()` or `asyncLocalStorage.enterWith()` is called again.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When calling `asyncLocalStorage.disable()`, all current contexts linked to the[m
[32m+[m[32m         * instance will be exited.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling `asyncLocalStorage.disable()` is required before the `asyncLocalStorage` can be garbage collected. This does not apply to stores[m
[32m+[m[32m         * provided by the `asyncLocalStorage`, as those objects are garbage collected[m
[32m+[m[32m         * along with the corresponding async resources.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Use this method when the `asyncLocalStorage` is not in use anymore[m
[32m+[m[32m         * in the current process.[m
[32m+[m[32m         * @since v13.10.0, v12.17.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        disable(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the current store.[m
[32m+[m[32m         * If called outside of an asynchronous context initialized by[m
[32m+[m[32m         * calling `asyncLocalStorage.run()` or `asyncLocalStorage.enterWith()`, it[m
[32m+[m[32m         * returns `undefined`.[m
[32m+[m[32m         * @since v13.10.0, v12.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getStore(): T | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Runs a function synchronously within a context and returns its[m
[32m+[m[32m         * return value. The store is not accessible outside of the callback function.[m
[32m+[m[32m         * The store is accessible to any asynchronous operations created within the[m
[32m+[m[32m         * callback.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `args` are passed to the callback function.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the callback function throws an error, the error is thrown by `run()` too.[m
[32m+[m[32m         * The stacktrace is not impacted by this call and the context is exited.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const store = { id: 2 };[m
[32m+[m[32m         * try {[m
[32m+[m[32m         *   asyncLocalStorage.run(store, () => {[m
[32m+[m[32m         *     asyncLocalStorage.getStore(); // Returns the store object[m
[32m+[m[32m         *     setTimeout(() => {[m
[32m+[m[32m         *       asyncLocalStorage.getStore(); // Returns the store object[m
[32m+[m[32m         *     }, 200);[m
[32m+[m[32m         *     throw new Error();[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * } catch (e) {[m
[32m+[m[32m         *   asyncLocalStorage.getStore(); // Returns undefined[m
[32m+[m[32m         *   // The error will be caught here[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v13.10.0, v12.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        run<R>(store: T, callback: () => R): R;[m
[32m+[m[32m        run<R, TArgs extends any[]>(store: T, callback: (...args: TArgs) => R, ...args: TArgs): R;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Runs a function synchronously outside of a context and returns its[m
[32m+[m[32m         * return value. The store is not accessible within the callback function or[m
[32m+[m[32m         * the asynchronous operations created within the callback. Any `getStore()` call done within the callback function will always return `undefined`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `args` are passed to the callback function.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the callback function throws an error, the error is thrown by `exit()` too.[m
[32m+[m[32m         * The stacktrace is not impacted by this call and the context is re-entered.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Within a call to run[m
[32m+[m[32m         * try {[m
[32m+[m[32m         *   asyncLocalStorage.getStore(); // Returns the store object or value[m
[32m+[m[32m         *   asyncLocalStorage.exit(() => {[m
[32m+[m[32m         *     asyncLocalStorage.getStore(); // Returns undefined[m
[32m+[m[32m         *     throw new Error();[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * } catch (e) {[m
[32m+[m[32m         *   asyncLocalStorage.getStore(); // Returns the same object or value[m
[32m+[m[32m         *   // The error will be caught here[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v13.10.0, v12.17.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        exit<R, TArgs extends any[]>(callback: (...args: TArgs) => R, ...args: TArgs): R;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Transitions into the context for the remainder of the current[m
[32m+[m[32m         * synchronous execution and then persists the store through any following[m
[32m+[m[32m         * asynchronous calls.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const store = { id: 1 };[m
[32m+[m[32m         * // Replaces previous store with the given store object[m
[32m+[m[32m         * asyncLocalStorage.enterWith(store);[m
[32m+[m[32m         * asyncLocalStorage.getStore(); // Returns the store object[m
[32m+[m[32m         * someAsyncOperation(() => {[m
[32m+[m[32m         *   asyncLocalStorage.getStore(); // Returns the same object[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * This transition will continue for the _entire_ synchronous execution.[m
[32m+[m[32m         * This means that if, for example, the context is entered within an event[m
[32m+[m[32m         * handler subsequent event handlers will also run within that context unless[m
[32m+[m[32m         * specifically bound to another context with an `AsyncResource`. That is why `run()` should be preferred over `enterWith()` unless there are strong reasons[m
[32m+[m[32m         * to use the latter method.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const store = { id: 1 };[m
[32m+[m[32m         *[m
[32m+[m[32m         * emitter.on('my-event', () => {[m
[32m+[m[32m         *   asyncLocalStorage.enterWith(store);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * emitter.on('my-event', () => {[m
[32m+[m[32m         *   asyncLocalStorage.getStore(); // Returns the same object[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * asyncLocalStorage.getStore(); // Returns undefined[m
[32m+[m[32m         * emitter.emit('my-event');[m
[32m+[m[32m         * asyncLocalStorage.getStore(); // Returns the same object[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v13.11.0, v12.17.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        enterWith(store: T): void;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:async_hooks" {[m
[32m+[m[32m    export * from "async_hooks";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/buffer.d.ts b/node_modules/@types/node/buffer.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..6a3c82a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/buffer.d.ts[m
[36m@@ -0,0 +1,2293 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * `Buffer` objects are used to represent a fixed-length sequence of bytes. Many[m
[32m+[m[32m * Node.js APIs support `Buffer`s.[m
[32m+[m[32m *[m
[32m+[m[32m * The `Buffer` class is a subclass of JavaScript's [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array) class and[m
[32m+[m[32m * extends it with methods that cover additional use cases. Node.js APIs accept[m
[32m+[m[32m * plain [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array) s wherever `Buffer`s are supported as well.[m
[32m+[m[32m *[m
[32m+[m[32m * While the `Buffer` class is available within the global scope, it is still[m
[32m+[m[32m * recommended to explicitly reference it via an import or require statement.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import { Buffer } from 'node:buffer';[m
[32m+[m[32m *[m
[32m+[m[32m * // Creates a zero-filled Buffer of length 10.[m
[32m+[m[32m * const buf1 = Buffer.alloc(10);[m
[32m+[m[32m *[m
[32m+[m[32m * // Creates a Buffer of length 10,[m
[32m+[m[32m * // filled with bytes which all have the value `1`.[m
[32m+[m[32m * const buf2 = Buffer.alloc(10, 1);[m
[32m+[m[32m *[m
[32m+[m[32m * // Creates an uninitialized buffer of length 10.[m
[32m+[m[32m * // This is faster than calling Buffer.alloc() but the returned[m
[32m+[m[32m * // Buffer instance might contain old data that needs to be[m
[32m+[m[32m * // overwritten using fill(), write(), or other functions that fill the Buffer's[m
[32m+[m[32m * // contents.[m
[32m+[m[32m * const buf3 = Buffer.allocUnsafe(10);[m
[32m+[m[32m *[m
[32m+[m[32m * // Creates a Buffer containing the bytes [1, 2, 3].[m
[32m+[m[32m * const buf4 = Buffer.from([1, 2, 3]);[m
[32m+[m[32m *[m
[32m+[m[32m * // Creates a Buffer containing the bytes [1, 1, 1, 1] – the entries[m
[32m+[m[32m * // are all truncated using `(value &#x26; 255)` to fit into the range 0–255.[m
[32m+[m[32m * const buf5 = Buffer.from([257, 257.5, -255, '1']);[m
[32m+[m[32m *[m
[32m+[m[32m * // Creates a Buffer containing the UTF-8-encoded bytes for the string 'tést':[m
[32m+[m[32m * // [0x74, 0xc3, 0xa9, 0x73, 0x74] (in hexadecimal notation)[m
[32m+[m[32m * // [116, 195, 169, 115, 116] (in decimal notation)[m
[32m+[m[32m * const buf6 = Buffer.from('tést');[m
[32m+[m[32m *[m
[32m+[m[32m * // Creates a Buffer containing the Latin-1 bytes [0x74, 0xe9, 0x73, 0x74].[m
[32m+[m[32m * const buf7 = Buffer.from('tést', 'latin1');[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/buffer.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "buffer" {[m
[32m+[m[32m    import { BinaryLike } from "node:crypto";[m
[32m+[m[32m    import { ReadableStream as WebReadableStream } from "node:stream/web";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This function returns `true` if `input` contains only valid UTF-8-encoded data,[m
[32m+[m[32m     * including the case in which `input` is empty.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Throws if the `input` is a detached array buffer.[m
[32m+[m[32m     * @since v19.4.0, v18.14.0[m
[32m+[m[32m     * @param input The input to validate.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function isUtf8(input: Buffer | ArrayBuffer | NodeJS.TypedArray): boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This function returns `true` if `input` contains only valid ASCII-encoded data,[m
[32m+[m[32m     * including the case in which `input` is empty.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Throws if the `input` is a detached array buffer.[m
[32m+[m[32m     * @since v19.6.0, v18.15.0[m
[32m+[m[32m     * @param input The input to validate.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function isAscii(input: Buffer | ArrayBuffer | NodeJS.TypedArray): boolean;[m
[32m+[m[32m    export const INSPECT_MAX_BYTES: number;[m
[32m+[m[32m    export const kMaxLength: number;[m
[32m+[m[32m    export const kStringMaxLength: number;[m
[32m+[m[32m    export const constants: {[m
[32m+[m[32m        MAX_LENGTH: number;[m
[32m+[m[32m        MAX_STRING_LENGTH: number;[m
[32m+[m[32m    };[m
[32m+[m[32m    export type TranscodeEncoding =[m
[32m+[m[32m        | "ascii"[m
[32m+[m[32m        | "utf8"[m
[32m+[m[32m        | "utf-8"[m
[32m+[m[32m        | "utf16le"[m
[32m+[m[32m        | "utf-16le"[m
[32m+[m[32m        | "ucs2"[m
[32m+[m[32m        | "ucs-2"[m
[32m+[m[32m        | "latin1"[m
[32m+[m[32m        | "binary";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Re-encodes the given `Buffer` or `Uint8Array` instance from one character[m
[32m+[m[32m     * encoding to another. Returns a new `Buffer` instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Throws if the `fromEnc` or `toEnc` specify invalid character encodings or if[m
[32m+[m[32m     * conversion from `fromEnc` to `toEnc` is not permitted.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Encodings supported by `buffer.transcode()` are: `'ascii'`, `'utf8'`, `'utf16le'`, `'ucs2'`, `'latin1'`, and `'binary'`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The transcoding process will use substitution characters if a given byte[m
[32m+[m[32m     * sequence cannot be adequately represented in the target encoding. For instance:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { Buffer, transcode } from 'node:buffer';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const newBuf = transcode(Buffer.from('€'), 'utf8', 'ascii');[m
[32m+[m[32m     * console.log(newBuf.toString('ascii'));[m
[32m+[m[32m     * // Prints: '?'[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Because the Euro (`€`) sign is not representable in US-ASCII, it is replaced[m
[32m+[m[32m     * with `?` in the transcoded `Buffer`.[m
[32m+[m[32m     * @since v7.1.0[m
[32m+[m[32m     * @param source A `Buffer` or `Uint8Array` instance.[m
[32m+[m[32m     * @param fromEnc The current encoding.[m
[32m+[m[32m     * @param toEnc To target encoding.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function transcode(source: Uint8Array, fromEnc: TranscodeEncoding, toEnc: TranscodeEncoding): Buffer;[m
[32m+[m[32m    export const SlowBuffer: {[m
[32m+[m[32m        /** @deprecated since v6.0.0, use `Buffer.allocUnsafeSlow()` */[m
[32m+[m[32m        new(size: number): Buffer;[m
[32m+[m[32m        prototype: Buffer;[m
[32m+[m[32m    };[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Resolves a `'blob:nodedata:...'` an associated `Blob` object registered using[m
[32m+[m[32m     * a prior call to `URL.createObjectURL()`.[m
[32m+[m[32m     * @since v16.7.0[m
[32m+[m[32m     * @experimental[m
[32m+[m[32m     * @param id A `'blob:nodedata:...` URL string returned by a prior call to `URL.createObjectURL()`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolveObjectURL(id: string): Blob | undefined;[m
[32m+[m[32m    export { Buffer };[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @experimental[m
[32m+[m[32m     */[m
[32m+[m[32m    export interface BlobOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * One of either `'transparent'` or `'native'`. When set to `'native'`, line endings in string source parts[m
[32m+[m[32m         * will be converted to the platform native line-ending as specified by `require('node:os').EOL`.[m
[32m+[m[32m         */[m
[32m+[m[32m        endings?: "transparent" | "native";[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The Blob content-type. The intent is for `type` to convey[m
[32m+[m[32m         * the MIME media type of the data, however no validation of the type format[m
[32m+[m[32m         * is performed.[m
[32m+[m[32m         */[m
[32m+[m[32m        type?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob) encapsulates immutable, raw data that can be safely shared across[m
[32m+[m[32m     * multiple worker threads.[m
[32m+[m[32m     * @since v15.7.0, v14.18.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export class Blob {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The total size of the `Blob` in bytes.[m
[32m+[m[32m         * @since v15.7.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly size: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The content-type of the `Blob`.[m
[32m+[m[32m         * @since v15.7.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly type: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Creates a new `Blob` object containing a concatenation of the given sources.[m
[32m+[m[32m         *[m
[32m+[m[32m         * {ArrayBuffer}, {TypedArray}, {DataView}, and {Buffer} sources are copied into[m
[32m+[m[32m         * the 'Blob' and can therefore be safely modified after the 'Blob' is created.[m
[32m+[m[32m         *[m
[32m+[m[32m         * String sources are also copied into the `Blob`.[m
[32m+[m[32m         */[m
[32m+[m[32m        constructor(sources: Array<ArrayBuffer | BinaryLike | Blob>, options?: BlobOptions);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a promise that fulfills with an [ArrayBuffer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer) containing a copy of[m
[32m+[m[32m         * the `Blob` data.[m
[32m+[m[32m         * @since v15.7.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        arrayBuffer(): Promise<ArrayBuffer>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `blob.bytes()` method returns the byte of the `Blob` object as a `Promise<Uint8Array>`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const blob = new Blob(['hello']);[m
[32m+[m[32m         * blob.bytes().then((bytes) => {[m
[32m+[m[32m         *   console.log(bytes); // Outputs: Uint8Array(5) [ 104, 101, 108, 108, 111 ][m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         */[m
[32m+[m[32m        bytes(): Promise<Uint8Array>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Creates and returns a new `Blob` containing a subset of this `Blob` objects[m
[32m+[m[32m         * data. The original `Blob` is not altered.[m
[32m+[m[32m         * @since v15.7.0, v14.18.0[m
[32m+[m[32m         * @param start The starting index.[m
[32m+[m[32m         * @param end The ending index.[m
[32m+[m[32m         * @param type The content-type for the new `Blob`[m
[32m+[m[32m         */[m
[32m+[m[32m        slice(start?: number, end?: number, type?: string): Blob;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a promise that fulfills with the contents of the `Blob` decoded as a[m
[32m+[m[32m         * UTF-8 string.[m
[32m+[m[32m         * @since v15.7.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        text(): Promise<string>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a new `ReadableStream` that allows the content of the `Blob` to be read.[m
[32m+[m[32m         * @since v16.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        stream(): WebReadableStream;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface FileOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * One of either `'transparent'` or `'native'`. When set to `'native'`, line endings in string source parts will be[m
[32m+[m[32m         * converted to the platform native line-ending as specified by `require('node:os').EOL`.[m
[32m+[m[32m         */[m
[32m+[m[32m        endings?: "native" | "transparent";[m
[32m+[m[32m        /** The File content-type. */[m
[32m+[m[32m        type?: string;[m
[32m+[m[32m        /** The last modified date of the file. `Default`: Date.now(). */[m
[32m+[m[32m        lastModified?: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File) provides information about files.[m
[32m+[m[32m     * @since v19.2.0, v18.13.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export class File extends Blob {[m
[32m+[m[32m        constructor(sources: Array<BinaryLike | Blob>, fileName: string, options?: FileOptions);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The name of the `File`.[m
[32m+[m[32m         * @since v19.2.0, v18.13.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly name: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The last modified date of the `File`.[m
[32m+[m[32m         * @since v19.2.0, v18.13.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly lastModified: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    export import atob = globalThis.atob;[m
[32m+[m[32m    export import btoa = globalThis.btoa;[m
[32m+[m[32m    import { Blob as NodeBlob } from "buffer";[m
[32m+[m[32m    // This conditional type will be the existing global Blob in a browser, or[m
[32m+[m[32m    // the copy below in a Node environment.[m
[32m+[m[32m    type __Blob = typeof globalThis extends { onmessage: any; Blob: any } ? {} : NodeBlob;[m
[32m+[m[32m    global {[m
[32m+[m[32m        namespace NodeJS {[m
[32m+[m[32m            export { BufferEncoding };[m
[32m+[m[32m        }[m
[32m+[m[32m        // Buffer class[m
[32m+[m[32m        type BufferEncoding =[m
[32m+[m[32m            | "ascii"[m
[32m+[m[32m            | "utf8"[m
[32m+[m[32m            | "utf-8"[m
[32m+[m[32m            | "utf16le"[m
[32m+[m[32m            | "utf-16le"[m
[32m+[m[32m            | "ucs2"[m
[32m+[m[32m            | "ucs-2"[m
[32m+[m[32m            | "base64"[m
[32m+[m[32m            | "base64url"[m
[32m+[m[32m            | "latin1"[m
[32m+[m[32m            | "binary"[m
[32m+[m[32m            | "hex";[m
[32m+[m[32m        type WithImplicitCoercion<T> =[m
[32m+[m[32m            | T[m
[32m+[m[32m            | {[m
[32m+[m[32m                valueOf(): T;[m
[32m+[m[32m            };[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Raw data is stored in instances of the Buffer class.[m
[32m+[m[32m         * A Buffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap.  A Buffer cannot be resized.[m
[32m+[m[32m         * Valid string encodings: 'ascii'|'utf8'|'utf16le'|'ucs2'(alias of 'utf16le')|'base64'|'base64url'|'binary'(deprecated)|'hex'[m
[32m+[m[32m         */[m
[32m+[m[32m        interface BufferConstructor {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Allocates a new buffer containing the given {str}.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param str String to store in buffer.[m
[32m+[m[32m             * @param encoding encoding to use, optional.  Default is 'utf8'[m
[32m+[m[32m             * @deprecated since v10.0.0 - Use `Buffer.from(string[, encoding])` instead.[m
[32m+[m[32m             */[m
[32m+[m[32m            new(str: string, encoding?: BufferEncoding): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Allocates a new buffer of {size} octets.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param size count of octets to allocate.[m
[32m+[m[32m             * @deprecated since v10.0.0 - Use `Buffer.alloc()` instead (also see `Buffer.allocUnsafe()`).[m
[32m+[m[32m             */[m
[32m+[m[32m            new(size: number): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Allocates a new buffer containing the given {array} of octets.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param array The octets to store.[m
[32m+[m[32m             * @deprecated since v10.0.0 - Use `Buffer.from(array)` instead.[m
[32m+[m[32m             */[m
[32m+[m[32m            new(array: Uint8Array): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Produces a Buffer backed by the same allocated memory as[m
[32m+[m[32m             * the given {ArrayBuffer}/{SharedArrayBuffer}.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param arrayBuffer The ArrayBuffer with which to share memory.[m
[32m+[m[32m             * @deprecated since v10.0.0 - Use `Buffer.from(arrayBuffer[, byteOffset[, length]])` instead.[m
[32m+[m[32m             */[m
[32m+[m[32m            new(arrayBuffer: ArrayBuffer | SharedArrayBuffer): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Allocates a new buffer containing the given {array} of octets.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param array The octets to store.[m
[32m+[m[32m             * @deprecated since v10.0.0 - Use `Buffer.from(array)` instead.[m
[32m+[m[32m             */[m
[32m+[m[32m            new(array: readonly any[]): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Copies the passed {buffer} data onto a new {Buffer} instance.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param buffer The buffer to copy.[m
[32m+[m[32m             * @deprecated since v10.0.0 - Use `Buffer.from(buffer)` instead.[m
[32m+[m[32m             */[m
[32m+[m[32m            new(buffer: Buffer): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Allocates a new `Buffer` using an `array` of bytes in the range `0` – `255`.[m
[32m+[m[32m             * Array entries outside that range will be truncated to fit into it.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Creates a new Buffer containing the UTF-8 bytes of the string 'buffer'.[m
[32m+[m[32m             * const buf = Buffer.from([0x62, 0x75, 0x66, 0x66, 0x65, 0x72]);[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `array` is an `Array`\-like object (that is, one with a `length` property of[m
[32m+[m[32m             * type `number`), it is treated as if it is an array, unless it is a `Buffer` or[m
[32m+[m[32m             * a `Uint8Array`. This means all other `TypedArray` variants get treated as an `Array`. To create a `Buffer` from the bytes backing a `TypedArray`, use `Buffer.copyBytesFrom()`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * A `TypeError` will be thrown if `array` is not an `Array` or another type[m
[32m+[m[32m             * appropriate for `Buffer.from()` variants.[m
[32m+[m[32m             *[m
[32m+[m[32m             * `Buffer.from(array)` and `Buffer.from(string)` may also use the internal `Buffer` pool like `Buffer.allocUnsafe()` does.[m
[32m+[m[32m             * @since v5.10.0[m
[32m+[m[32m             */[m
[32m+[m[32m            from([m
[32m+[m[32m                arrayBuffer: WithImplicitCoercion<ArrayBuffer | SharedArrayBuffer>,[m
[32m+[m[32m                byteOffset?: number,[m
[32m+[m[32m                length?: number,[m
[32m+[m[32m            ): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Creates a new Buffer using the passed {data}[m
[32m+[m[32m             * @param data data to create a new Buffer[m
[32m+[m[32m             */[m
[32m+[m[32m            from(data: Uint8Array | readonly number[]): Buffer;[m
[32m+[m[32m            from(data: WithImplicitCoercion<Uint8Array | readonly number[] | string>): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Creates a new Buffer containing the given JavaScript string {str}.[m
[32m+[m[32m             * If provided, the {encoding} parameter identifies the character encoding.[m
[32m+[m[32m             * If not provided, {encoding} defaults to 'utf8'.[m
[32m+[m[32m             */[m
[32m+[m[32m            from([m
[32m+[m[32m                str:[m
[32m+[m[32m                    | WithImplicitCoercion<string>[m
[32m+[m[32m                    | {[m
[32m+[m[32m                        [Symbol.toPrimitive](hint: "string"): string;[m
[32m+[m[32m                    },[m
[32m+[m[32m                encoding?: BufferEncoding,[m
[32m+[m[32m            ): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Creates a new Buffer using the passed {data}[m
[32m+[m[32m             * @param values to create a new Buffer[m
[32m+[m[32m             */[m
[32m+[m[32m            of(...items: number[]): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Returns `true` if `obj` is a `Buffer`, `false` otherwise.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * Buffer.isBuffer(Buffer.alloc(10)); // true[m
[32m+[m[32m             * Buffer.isBuffer(Buffer.from('foo')); // true[m
[32m+[m[32m             * Buffer.isBuffer('a string'); // false[m
[32m+[m[32m             * Buffer.isBuffer([]); // false[m
[32m+[m[32m             * Buffer.isBuffer(new Uint8Array(1024)); // false[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.1.101[m
[32m+[m[32m             */[m
[32m+[m[32m            isBuffer(obj: any): obj is Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Returns `true` if `encoding` is the name of a supported character encoding,[m
[32m+[m[32m             * or `false` otherwise.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(Buffer.isEncoding('utf8'));[m
[32m+[m[32m             * // Prints: true[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(Buffer.isEncoding('hex'));[m
[32m+[m[32m             * // Prints: true[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(Buffer.isEncoding('utf/8'));[m
[32m+[m[32m             * // Prints: false[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(Buffer.isEncoding(''));[m
[32m+[m[32m             * // Prints: false[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.9.1[m
[32m+[m[32m             * @param encoding A character encoding name to check.[m
[32m+[m[32m             */[m
[32m+[m[32m            isEncoding(encoding: string): encoding is BufferEncoding;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Returns the byte length of a string when encoded using `encoding`.[m
[32m+[m[32m             * This is not the same as [`String.prototype.length`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length), which does not account[m
[32m+[m[32m             * for the encoding that is used to convert the string into bytes.[m
[32m+[m[32m             *[m
[32m+[m[32m             * For `'base64'`, `'base64url'`, and `'hex'`, this function assumes valid input.[m
[32m+[m[32m             * For strings that contain non-base64/hex-encoded data (e.g. whitespace), the[m
[32m+[m[32m             * return value might be greater than the length of a `Buffer` created from the[m
[32m+[m[32m             * string.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const str = '\u00bd + \u00bc = \u00be';[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(`${str}: ${str.length} characters, ` +[m
[32m+[m[32m             *             `${Buffer.byteLength(str, 'utf8')} bytes`);[m
[32m+[m[32m             * // Prints: ½ + ¼ = ¾: 9 characters, 12 bytes[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * When `string` is a[m
[32m+[m[32m             * `Buffer`/[`DataView`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView)/[`TypedArray`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/-[m
[32m+[m[32m             * Reference/Global_Objects/TypedArray)/[`ArrayBuffer`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)/[`SharedArrayBuffer`](https://develop-[m
[32m+[m[32m             * er.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer), the byte length as reported by `.byteLength`is returned.[m
[32m+[m[32m             * @since v0.1.90[m
[32m+[m[32m             * @param string A value to calculate the length of.[m
[32m+[m[32m             * @param [encoding='utf8'] If `string` is a string, this is its encoding.[m
[32m+[m[32m             * @return The number of bytes contained within `string`.[m
[32m+[m[32m             */[m
[32m+[m[32m            byteLength([m
[32m+[m[32m                string: string | Buffer | NodeJS.ArrayBufferView | ArrayBuffer | SharedArrayBuffer,[m
[32m+[m[32m                encoding?: BufferEncoding,[m
[32m+[m[32m            ): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Returns a new `Buffer` which is the result of concatenating all the `Buffer` instances in the `list` together.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If the list has no items, or if the `totalLength` is 0, then a new zero-length `Buffer` is returned.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `totalLength` is not provided, it is calculated from the `Buffer` instances[m
[32m+[m[32m             * in `list` by adding their lengths.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `totalLength` is provided, it is coerced to an unsigned integer. If the[m
[32m+[m[32m             * combined length of the `Buffer`s in `list` exceeds `totalLength`, the result is[m
[32m+[m[32m             * truncated to `totalLength`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Create a single `Buffer` from a list of three `Buffer` instances.[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf1 = Buffer.alloc(10);[m
[32m+[m[32m             * const buf2 = Buffer.alloc(14);[m
[32m+[m[32m             * const buf3 = Buffer.alloc(18);[m
[32m+[m[32m             * const totalLength = buf1.length + buf2.length + buf3.length;[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(totalLength);[m
[32m+[m[32m             * // Prints: 42[m
[32m+[m[32m             *[m
[32m+[m[32m             * const bufA = Buffer.concat([buf1, buf2, buf3], totalLength);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(bufA);[m
[32m+[m[32m             * // Prints: <Buffer 00 00 00 00 ...>[m
[32m+[m[32m             * console.log(bufA.length);[m
[32m+[m[32m             * // Prints: 42[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * `Buffer.concat()` may also use the internal `Buffer` pool like `Buffer.allocUnsafe()` does.[m
[32m+[m[32m             * @since v0.7.11[m
[32m+[m[32m             * @param list List of `Buffer` or {@link Uint8Array} instances to concatenate.[m
[32m+[m[32m             * @param totalLength Total length of the `Buffer` instances in `list` when concatenated.[m
[32m+[m[32m             */[m
[32m+[m[32m            concat(list: readonly Uint8Array[], totalLength?: number): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Copies the underlying memory of `view` into a new `Buffer`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * const u16 = new Uint16Array([0, 0xffff]);[m
[32m+[m[32m             * const buf = Buffer.copyBytesFrom(u16, 1, 1);[m
[32m+[m[32m             * u16[1] = 0;[m
[32m+[m[32m             * console.log(buf.length); // 2[m
[32m+[m[32m             * console.log(buf[0]); // 255[m
[32m+[m[32m             * console.log(buf[1]); // 255[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v19.8.0[m
[32m+[m[32m             * @param view The {TypedArray} to copy.[m
[32m+[m[32m             * @param [offset=0] The starting offset within `view`.[m
[32m+[m[32m             * @param [length=view.length - offset] The number of elements from `view` to copy.[m
[32m+[m[32m             */[m
[32m+[m[32m            copyBytesFrom(view: NodeJS.TypedArray, offset?: number, length?: number): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Compares `buf1` to `buf2`, typically for the purpose of sorting arrays of `Buffer` instances. This is equivalent to calling `buf1.compare(buf2)`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf1 = Buffer.from('1234');[m
[32m+[m[32m             * const buf2 = Buffer.from('0123');[m
[32m+[m[32m             * const arr = [buf1, buf2];[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(arr.sort(Buffer.compare));[m
[32m+[m[32m             * // Prints: [ <Buffer 30 31 32 33>, <Buffer 31 32 33 34> ][m
[32m+[m[32m             * // (This result is equal to: [buf2, buf1].)[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.13[m
[32m+[m[32m             * @return Either `-1`, `0`, or `1`, depending on the result of the comparison. See `compare` for details.[m
[32m+[m[32m             */[m
[32m+[m[32m            compare(buf1: Uint8Array, buf2: Uint8Array): -1 | 0 | 1;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Allocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the`Buffer` will be zero-filled.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.alloc(5);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 00 00 00 00 00>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `size` is larger than {@link constants.MAX_LENGTH} or smaller than 0, `ERR_OUT_OF_RANGE` is thrown.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `fill` is specified, the allocated `Buffer` will be initialized by calling `buf.fill(fill)`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.alloc(5, 'a');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 61 61 61 61 61>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * If both `fill` and `encoding` are specified, the allocated `Buffer` will be[m
[32m+[m[32m             * initialized by calling `buf.fill(fill, encoding)`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * Calling `Buffer.alloc()` can be measurably slower than the alternative `Buffer.allocUnsafe()` but ensures that the newly created `Buffer` instance[m
[32m+[m[32m             * contents will never contain sensitive data from previous allocations, including[m
[32m+[m[32m             * data that might not have been allocated for `Buffer`s.[m
[32m+[m[32m             *[m
[32m+[m[32m             * A `TypeError` will be thrown if `size` is not a number.[m
[32m+[m[32m             * @since v5.10.0[m
[32m+[m[32m             * @param size The desired length of the new `Buffer`.[m
[32m+[m[32m             * @param [fill=0] A value to pre-fill the new `Buffer` with.[m
[32m+[m[32m             * @param [encoding='utf8'] If `fill` is a string, this is its encoding.[m
[32m+[m[32m             */[m
[32m+[m[32m            alloc(size: number, fill?: string | Uint8Array | number, encoding?: BufferEncoding): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Allocates a new `Buffer` of `size` bytes. If `size` is larger than {@link constants.MAX_LENGTH} or smaller than 0, `ERR_OUT_OF_RANGE` is thrown.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The underlying memory for `Buffer` instances created in this way is _not_[m
[32m+[m[32m             * _initialized_. The contents of the newly created `Buffer` are unknown and _may contain sensitive data_. Use `Buffer.alloc()` instead to initialize`Buffer` instances with zeroes.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(10);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints (contents may vary): <Buffer a0 8b 28 3f 01 00 00 00 50 32>[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.fill(0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 00 00 00 00 00 00 00 00 00 00>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * A `TypeError` will be thrown if `size` is not a number.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The `Buffer` module pre-allocates an internal `Buffer` instance of[m
[32m+[m[32m             * size `Buffer.poolSize` that is used as a pool for the fast allocation of new `Buffer` instances created using `Buffer.allocUnsafe()`, `Buffer.from(array)`,[m
[32m+[m[32m             * and `Buffer.concat()` only when `size` is less than `Buffer.poolSize >>> 1` (floor of `Buffer.poolSize` divided by two).[m
[32m+[m[32m             *[m
[32m+[m[32m             * Use of this pre-allocated internal memory pool is a key difference between[m
[32m+[m[32m             * calling `Buffer.alloc(size, fill)` vs. `Buffer.allocUnsafe(size).fill(fill)`.[m
[32m+[m[32m             * Specifically, `Buffer.alloc(size, fill)` will _never_ use the internal `Buffer`pool, while `Buffer.allocUnsafe(size).fill(fill)`_will_ use the internal`Buffer` pool if `size` is less[m
[32m+[m[32m             * than or equal to half `Buffer.poolSize`. The[m
[32m+[m[32m             * difference is subtle but can be important when an application requires the[m
[32m+[m[32m             * additional performance that `Buffer.allocUnsafe()` provides.[m
[32m+[m[32m             * @since v5.10.0[m
[32m+[m[32m             * @param size The desired length of the new `Buffer`.[m
[32m+[m[32m             */[m
[32m+[m[32m            allocUnsafe(size: number): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Allocates a new `Buffer` of `size` bytes. If `size` is larger than {@link constants.MAX_LENGTH} or smaller than 0, `ERR_OUT_OF_RANGE` is thrown. A zero-length `Buffer` is created if[m
[32m+[m[32m             * `size` is 0.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The underlying memory for `Buffer` instances created in this way is _not_[m
[32m+[m[32m             * _initialized_. The contents of the newly created `Buffer` are unknown and _may contain sensitive data_. Use `buf.fill(0)` to initialize[m
[32m+[m[32m             * such `Buffer` instances with zeroes.[m
[32m+[m[32m             *[m
[32m+[m[32m             * When using `Buffer.allocUnsafe()` to allocate new `Buffer` instances,[m
[32m+[m[32m             * allocations under 4 KiB are sliced from a single pre-allocated `Buffer`. This[m
[32m+[m[32m             * allows applications to avoid the garbage collection overhead of creating many[m
[32m+[m[32m             * individually allocated `Buffer` instances. This approach improves both[m
[32m+[m[32m             * performance and memory usage by eliminating the need to track and clean up as[m
[32m+[m[32m             * many individual `ArrayBuffer` objects.[m
[32m+[m[32m             *[m
[32m+[m[32m             * However, in the case where a developer may need to retain a small chunk of[m
[32m+[m[32m             * memory from a pool for an indeterminate amount of time, it may be appropriate[m
[32m+[m[32m             * to create an un-pooled `Buffer` instance using `Buffer.allocUnsafeSlow()` and[m
[32m+[m[32m             * then copying out the relevant bits.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Need to keep around a few small chunks of memory.[m
[32m+[m[32m             * const store = [];[m
[32m+[m[32m             *[m
[32m+[m[32m             * socket.on('readable', () => {[m
[32m+[m[32m             *   let data;[m
[32m+[m[32m             *   while (null !== (data = readable.read())) {[m
[32m+[m[32m             *     // Allocate for retained data.[m
[32m+[m[32m             *     const sb = Buffer.allocUnsafeSlow(10);[m
[32m+[m[32m             *[m
[32m+[m[32m             *     // Copy the data into the new allocation.[m
[32m+[m[32m             *     data.copy(sb, 0, 0, 10);[m
[32m+[m[32m             *[m
[32m+[m[32m             *     store.push(sb);[m
[32m+[m[32m             *   }[m
[32m+[m[32m             * });[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * A `TypeError` will be thrown if `size` is not a number.[m
[32m+[m[32m             * @since v5.12.0[m
[32m+[m[32m             * @param size The desired length of the new `Buffer`.[m
[32m+[m[32m             */[m
[32m+[m[32m            allocUnsafeSlow(size: number): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * This is the size (in bytes) of pre-allocated internal `Buffer` instances used[m
[32m+[m[32m             * for pooling. This value may be modified.[m
[32m+[m[32m             * @since v0.11.3[m
[32m+[m[32m             */[m
[32m+[m[32m            poolSize: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface Buffer extends Uint8Array {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `string` to `buf` at `offset` according to the character encoding in`encoding`. The `length` parameter is the number of bytes to write. If `buf` did[m
[32m+[m[32m             * not contain enough space to fit the entire string, only part of `string` will be[m
[32m+[m[32m             * written. However, partially encoded characters will not be written.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.alloc(256);[m
[32m+[m[32m             *[m
[32m+[m[32m             * const len = buf.write('\u00bd + \u00bc = \u00be', 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(`${len} bytes: ${buf.toString('utf8', 0, len)}`);[m
[32m+[m[32m             * // Prints: 12 bytes: ½ + ¼ = ¾[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buffer = Buffer.alloc(10);[m
[32m+[m[32m             *[m
[32m+[m[32m             * const length = buffer.write('abcd', 8);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(`${length} bytes: ${buffer.toString('utf8', 8, 10)}`);[m
[32m+[m[32m             * // Prints: 2 bytes : ab[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.1.90[m
[32m+[m[32m             * @param string String to write to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write `string`.[m
[32m+[m[32m             * @param [length=buf.length - offset] Maximum number of bytes to write (written bytes will not exceed `buf.length - offset`).[m
[32m+[m[32m             * @param [encoding='utf8'] The character encoding of `string`.[m
[32m+[m[32m             * @return Number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            write(string: string, encoding?: BufferEncoding): number;[m
[32m+[m[32m            write(string: string, offset: number, encoding?: BufferEncoding): number;[m
[32m+[m[32m            write(string: string, offset: number, length: number, encoding?: BufferEncoding): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Decodes `buf` to a string according to the specified character encoding in`encoding`. `start` and `end` may be passed to decode only a subset of `buf`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `encoding` is `'utf8'` and a byte sequence in the input is not valid UTF-8,[m
[32m+[m[32m             * then each invalid byte is replaced with the replacement character `U+FFFD`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The maximum length of a string instance (in UTF-16 code units) is available[m
[32m+[m[32m             * as {@link constants.MAX_STRING_LENGTH}.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf1 = Buffer.allocUnsafe(26);[m
[32m+[m[32m             *[m
[32m+[m[32m             * for (let i = 0; i < 26; i++) {[m
[32m+[m[32m             *   // 97 is the decimal ASCII value for 'a'.[m
[32m+[m[32m             *   buf1[i] = i + 97;[m
[32m+[m[32m             * }[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf1.toString('utf8'));[m
[32m+[m[32m             * // Prints: abcdefghijklmnopqrstuvwxyz[m
[32m+[m[32m             * console.log(buf1.toString('utf8', 0, 5));[m
[32m+[m[32m             * // Prints: abcde[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf2 = Buffer.from('tést');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf2.toString('hex'));[m
[32m+[m[32m             * // Prints: 74c3a97374[m
[32m+[m[32m             * console.log(buf2.toString('utf8', 0, 3));[m
[32m+[m[32m             * // Prints: té[m
[32m+[m[32m             * console.log(buf2.toString(undefined, 0, 3));[m
[32m+[m[32m             * // Prints: té[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.1.90[m
[32m+[m[32m             * @param [encoding='utf8'] The character encoding to use.[m
[32m+[m[32m             * @param [start=0] The byte offset to start decoding at.[m
[32m+[m[32m             * @param [end=buf.length] The byte offset to stop decoding at (not inclusive).[m
[32m+[m[32m             */[m
[32m+[m[32m            toString(encoding?: BufferEncoding, start?: number, end?: number): string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Returns a JSON representation of `buf`. [`JSON.stringify()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) implicitly calls[m
[32m+[m[32m             * this function when stringifying a `Buffer` instance.[m
[32m+[m[32m             *[m
[32m+[m[32m             * `Buffer.from()` accepts objects in the format returned from this method.[m
[32m+[m[32m             * In particular, `Buffer.from(buf.toJSON())` works like `Buffer.from(buf)`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x1, 0x2, 0x3, 0x4, 0x5]);[m
[32m+[m[32m             * const json = JSON.stringify(buf);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(json);[m
[32m+[m[32m             * // Prints: {"type":"Buffer","data":[1,2,3,4,5]}[m
[32m+[m[32m             *[m
[32m+[m[32m             * const copy = JSON.parse(json, (key, value) => {[m
[32m+[m[32m             *   return value &#x26;&#x26; value.type === 'Buffer' ?[m
[32m+[m[32m             *     Buffer.from(value) :[m
[32m+[m[32m             *     value;[m
[32m+[m[32m             * });[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(copy);[m
[32m+[m[32m             * // Prints: <Buffer 01 02 03 04 05>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.9.2[m
[32m+[m[32m             */[m
[32m+[m[32m            toJSON(): {[m
[32m+[m[32m                type: "Buffer";[m
[32m+[m[32m                data: number[];[m
[32m+[m[32m            };[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Returns `true` if both `buf` and `otherBuffer` have exactly the same bytes,`false` otherwise. Equivalent to `buf.compare(otherBuffer) === 0`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf1 = Buffer.from('ABC');[m
[32m+[m[32m             * const buf2 = Buffer.from('414243', 'hex');[m
[32m+[m[32m             * const buf3 = Buffer.from('ABCD');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf1.equals(buf2));[m
[32m+[m[32m             * // Prints: true[m
[32m+[m[32m             * console.log(buf1.equals(buf3));[m
[32m+[m[32m             * // Prints: false[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.13[m
[32m+[m[32m             * @param otherBuffer A `Buffer` or {@link Uint8Array} with which to compare `buf`.[m
[32m+[m[32m             */[m
[32m+[m[32m            equals(otherBuffer: Uint8Array): boolean;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Compares `buf` with `target` and returns a number indicating whether `buf`comes before, after, or is the same as `target` in sort order.[m
[32m+[m[32m             * Comparison is based on the actual sequence of bytes in each `Buffer`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * * `0` is returned if `target` is the same as `buf`[m
[32m+[m[32m             * * `1` is returned if `target` should come _before_`buf` when sorted.[m
[32m+[m[32m             * * `-1` is returned if `target` should come _after_`buf` when sorted.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf1 = Buffer.from('ABC');[m
[32m+[m[32m             * const buf2 = Buffer.from('BCD');[m
[32m+[m[32m             * const buf3 = Buffer.from('ABCD');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf1.compare(buf1));[m
[32m+[m[32m             * // Prints: 0[m
[32m+[m[32m             * console.log(buf1.compare(buf2));[m
[32m+[m[32m             * // Prints: -1[m
[32m+[m[32m             * console.log(buf1.compare(buf3));[m
[32m+[m[32m             * // Prints: -1[m
[32m+[m[32m             * console.log(buf2.compare(buf1));[m
[32m+[m[32m             * // Prints: 1[m
[32m+[m[32m             * console.log(buf2.compare(buf3));[m
[32m+[m[32m             * // Prints: 1[m
[32m+[m[32m             * console.log([buf1, buf2, buf3].sort(Buffer.compare));[m
[32m+[m[32m             * // Prints: [ <Buffer 41 42 43>, <Buffer 41 42 43 44>, <Buffer 42 43 44> ][m
[32m+[m[32m             * // (This result is equal to: [buf1, buf3, buf2].)[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * The optional `targetStart`, `targetEnd`, `sourceStart`, and `sourceEnd` arguments can be used to limit the comparison to specific ranges within `target` and `buf` respectively.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf1 = Buffer.from([1, 2, 3, 4, 5, 6, 7, 8, 9]);[m
[32m+[m[32m             * const buf2 = Buffer.from([5, 6, 7, 8, 9, 1, 2, 3, 4]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf1.compare(buf2, 5, 9, 0, 4));[m
[32m+[m[32m             * // Prints: 0[m
[32m+[m[32m             * console.log(buf1.compare(buf2, 0, 6, 4));[m
[32m+[m[32m             * // Prints: -1[m
[32m+[m[32m             * console.log(buf1.compare(buf2, 5, 6, 5));[m
[32m+[m[32m             * // Prints: 1[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * `ERR_OUT_OF_RANGE` is thrown if `targetStart < 0`, `sourceStart < 0`, `targetEnd > target.byteLength`, or `sourceEnd > source.byteLength`.[m
[32m+[m[32m             * @since v0.11.13[m
[32m+[m[32m             * @param target A `Buffer` or {@link Uint8Array} with which to compare `buf`.[m
[32m+[m[32m             * @param [targetStart=0] The offset within `target` at which to begin comparison.[m
[32m+[m[32m             * @param [targetEnd=target.length] The offset within `target` at which to end comparison (not inclusive).[m
[32m+[m[32m             * @param [sourceStart=0] The offset within `buf` at which to begin comparison.[m
[32m+[m[32m             * @param [sourceEnd=buf.length] The offset within `buf` at which to end comparison (not inclusive).[m
[32m+[m[32m             */[m
[32m+[m[32m            compare([m
[32m+[m[32m                target: Uint8Array,[m
[32m+[m[32m                targetStart?: number,[m
[32m+[m[32m                targetEnd?: number,[m
[32m+[m[32m                sourceStart?: number,[m
[32m+[m[32m                sourceEnd?: number,[m
[32m+[m[32m            ): -1 | 0 | 1;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Copies data from a region of `buf` to a region in `target`, even if the `target`memory region overlaps with `buf`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * [`TypedArray.prototype.set()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set) performs the same operation, and is available[m
[32m+[m[32m             * for all TypedArrays, including Node.js `Buffer`s, although it takes[m
[32m+[m[32m             * different function arguments.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Create two `Buffer` instances.[m
[32m+[m[32m             * const buf1 = Buffer.allocUnsafe(26);[m
[32m+[m[32m             * const buf2 = Buffer.allocUnsafe(26).fill('!');[m
[32m+[m[32m             *[m
[32m+[m[32m             * for (let i = 0; i < 26; i++) {[m
[32m+[m[32m             *   // 97 is the decimal ASCII value for 'a'.[m
[32m+[m[32m             *   buf1[i] = i + 97;[m
[32m+[m[32m             * }[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Copy `buf1` bytes 16 through 19 into `buf2` starting at byte 8 of `buf2`.[m
[32m+[m[32m             * buf1.copy(buf2, 8, 16, 20);[m
[32m+[m[32m             * // This is equivalent to:[m
[32m+[m[32m             * // buf2.set(buf1.subarray(16, 20), 8);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf2.toString('ascii', 0, 25));[m
[32m+[m[32m             * // Prints: !!!!!!!!qrst!!!!!!!!!!!!![m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Create a `Buffer` and copy data from one region to an overlapping region[m
[32m+[m[32m             * // within the same `Buffer`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(26);[m
[32m+[m[32m             *[m
[32m+[m[32m             * for (let i = 0; i < 26; i++) {[m
[32m+[m[32m             *   // 97 is the decimal ASCII value for 'a'.[m
[32m+[m[32m             *   buf[i] = i + 97;[m
[32m+[m[32m             * }[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.copy(buf, 0, 4, 10);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.toString());[m
[32m+[m[32m             * // Prints: efghijghijklmnopqrstuvwxyz[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.1.90[m
[32m+[m[32m             * @param target A `Buffer` or {@link Uint8Array} to copy into.[m
[32m+[m[32m             * @param [targetStart=0] The offset within `target` at which to begin writing.[m
[32m+[m[32m             * @param [sourceStart=0] The offset within `buf` from which to begin copying.[m
[32m+[m[32m             * @param [sourceEnd=buf.length] The offset within `buf` at which to stop copying (not inclusive).[m
[32m+[m[32m             * @return The number of bytes copied.[m
[32m+[m[32m             */[m
[32m+[m[32m            copy(target: Uint8Array, targetStart?: number, sourceStart?: number, sourceEnd?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Returns a new `Buffer` that references the same memory as the original, but[m
[32m+[m[32m             * offset and cropped by the `start` and `end` indices.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This method is not compatible with the `Uint8Array.prototype.slice()`,[m
[32m+[m[32m             * which is a superclass of `Buffer`. To copy the slice, use`Uint8Array.prototype.slice()`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from('buffer');[m
[32m+[m[32m             *[m
[32m+[m[32m             * const copiedBuf = Uint8Array.prototype.slice.call(buf);[m
[32m+[m[32m             * copiedBuf[0]++;[m
[32m+[m[32m             * console.log(copiedBuf.toString());[m
[32m+[m[32m             * // Prints: cuffer[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.toString());[m
[32m+[m[32m             * // Prints: buffer[m
[32m+[m[32m             *[m
[32m+[m[32m             * // With buf.slice(), the original buffer is modified.[m
[32m+[m[32m             * const notReallyCopiedBuf = buf.slice();[m
[32m+[m[32m             * notReallyCopiedBuf[0]++;[m
[32m+[m[32m             * console.log(notReallyCopiedBuf.toString());[m
[32m+[m[32m             * // Prints: cuffer[m
[32m+[m[32m             * console.log(buf.toString());[m
[32m+[m[32m             * // Also prints: cuffer (!)[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.3.0[m
[32m+[m[32m             * @deprecated Use `subarray` instead.[m
[32m+[m[32m             * @param [start=0] Where the new `Buffer` will start.[m
[32m+[m[32m             * @param [end=buf.length] Where the new `Buffer` will end (not inclusive).[m
[32m+[m[32m             */[m
[32m+[m[32m            slice(start?: number, end?: number): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Returns a new `Buffer` that references the same memory as the original, but[m
[32m+[m[32m             * offset and cropped by the `start` and `end` indices.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Specifying `end` greater than `buf.length` will return the same result as[m
[32m+[m[32m             * that of `end` equal to `buf.length`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This method is inherited from [`TypedArray.prototype.subarray()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray).[m
[32m+[m[32m             *[m
[32m+[m[32m             * Modifying the new `Buffer` slice will modify the memory in the original `Buffer`because the allocated memory of the two objects overlap.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Create a `Buffer` with the ASCII alphabet, take a slice, and modify one byte[m
[32m+[m[32m             * // from the original `Buffer`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf1 = Buffer.allocUnsafe(26);[m
[32m+[m[32m             *[m
[32m+[m[32m             * for (let i = 0; i < 26; i++) {[m
[32m+[m[32m             *   // 97 is the decimal ASCII value for 'a'.[m
[32m+[m[32m             *   buf1[i] = i + 97;[m
[32m+[m[32m             * }[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf2 = buf1.subarray(0, 3);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf2.toString('ascii', 0, buf2.length));[m
[32m+[m[32m             * // Prints: abc[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf1[0] = 33;[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf2.toString('ascii', 0, buf2.length));[m
[32m+[m[32m             * // Prints: !bc[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * Specifying negative indexes causes the slice to be generated relative to the[m
[32m+[m[32m             * end of `buf` rather than the beginning.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from('buffer');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.subarray(-6, -1).toString());[m
[32m+[m[32m             * // Prints: buffe[m
[32m+[m[32m             * // (Equivalent to buf.subarray(0, 5).)[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.subarray(-6, -2).toString());[m
[32m+[m[32m             * // Prints: buff[m
[32m+[m[32m             * // (Equivalent to buf.subarray(0, 4).)[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.subarray(-5, -2).toString());[m
[32m+[m[32m             * // Prints: uff[m
[32m+[m[32m             * // (Equivalent to buf.subarray(1, 4).)[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v3.0.0[m
[32m+[m[32m             * @param [start=0] Where the new `Buffer` will start.[m
[32m+[m[32m             * @param [end=buf.length] Where the new `Buffer` will end (not inclusive).[m
[32m+[m[32m             */[m
[32m+[m[32m            subarray(start?: number, end?: number): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as big-endian.[m
[32m+[m[32m             *[m
[32m+[m[32m             * `value` is interpreted and written as a two's complement signed integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(8);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeBigInt64BE(0x0102030405060708n, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 01 02 03 04 05 06 07 08>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v12.0.0, v10.20.0[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy: `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeBigInt64BE(value: bigint, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as little-endian.[m
[32m+[m[32m             *[m
[32m+[m[32m             * `value` is interpreted and written as a two's complement signed integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(8);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeBigInt64LE(0x0102030405060708n, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 08 07 06 05 04 03 02 01>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v12.0.0, v10.20.0[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy: `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeBigInt64LE(value: bigint, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as big-endian.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `writeBigUint64BE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(8);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeBigUInt64BE(0xdecafafecacefaden, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer de ca fa fe ca ce fa de>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v12.0.0, v10.20.0[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy: `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeBigUInt64BE(value: bigint, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.writeBigUInt64BE[m
[32m+[m[32m             * @since v14.10.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            writeBigUint64BE(value: bigint, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as little-endian[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(8);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeBigUInt64LE(0xdecafafecacefaden, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer de fa ce ca fe fa ca de>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `writeBigUint64LE` alias.[m
[32m+[m[32m             * @since v12.0.0, v10.20.0[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy: `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeBigUInt64LE(value: bigint, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.writeBigUInt64LE[m
[32m+[m[32m             * @since v14.10.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            writeBigUint64LE(value: bigint, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `byteLength` bytes of `value` to `buf` at the specified `offset`as little-endian. Supports up to 48 bits of accuracy. Behavior is undefined[m
[32m+[m[32m             * when `value` is anything other than an unsigned integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `writeUintLE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(6);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeUIntLE(0x1234567890ab, 0, 6);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer ab 90 78 56 34 12>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param offset Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - byteLength`.[m
[32m+[m[32m             * @param byteLength Number of bytes to write. Must satisfy `0 < byteLength <= 6`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUIntLE(value: number, offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.writeUIntLE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUintLE(value: number, offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `byteLength` bytes of `value` to `buf` at the specified `offset`as big-endian. Supports up to 48 bits of accuracy. Behavior is undefined[m
[32m+[m[32m             * when `value` is anything other than an unsigned integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `writeUintBE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(6);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeUIntBE(0x1234567890ab, 0, 6);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 12 34 56 78 90 ab>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param offset Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - byteLength`.[m
[32m+[m[32m             * @param byteLength Number of bytes to write. Must satisfy `0 < byteLength <= 6`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUIntBE(value: number, offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.writeUIntBE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUintBE(value: number, offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `byteLength` bytes of `value` to `buf` at the specified `offset`as little-endian. Supports up to 48 bits of accuracy. Behavior is undefined[m
[32m+[m[32m             * when `value` is anything other than a signed integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(6);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeIntLE(0x1234567890ab, 0, 6);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer ab 90 78 56 34 12>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param offset Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - byteLength`.[m
[32m+[m[32m             * @param byteLength Number of bytes to write. Must satisfy `0 < byteLength <= 6`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeIntLE(value: number, offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `byteLength` bytes of `value` to `buf` at the specified `offset`as big-endian. Supports up to 48 bits of accuracy. Behavior is undefined when`value` is anything other than a[m
[32m+[m[32m             * signed integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(6);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeIntBE(0x1234567890ab, 0, 6);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 12 34 56 78 90 ab>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param offset Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - byteLength`.[m
[32m+[m[32m             * @param byteLength Number of bytes to write. Must satisfy `0 < byteLength <= 6`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeIntBE(value: number, offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads an unsigned, big-endian 64-bit integer from `buf` at the specified`offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `readBigUint64BE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readBigUInt64BE(0));[m
[32m+[m[32m             * // Prints: 4294967295n[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v12.0.0, v10.20.0[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy: `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readBigUInt64BE(offset?: number): bigint;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.readBigUInt64BE[m
[32m+[m[32m             * @since v14.10.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readBigUint64BE(offset?: number): bigint;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads an unsigned, little-endian 64-bit integer from `buf` at the specified`offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `readBigUint64LE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readBigUInt64LE(0));[m
[32m+[m[32m             * // Prints: 18446744069414584320n[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v12.0.0, v10.20.0[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy: `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readBigUInt64LE(offset?: number): bigint;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.readBigUInt64LE[m
[32m+[m[32m             * @since v14.10.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readBigUint64LE(offset?: number): bigint;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a signed, big-endian 64-bit integer from `buf` at the specified `offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Integers read from a `Buffer` are interpreted as two's complement signed[m
[32m+[m[32m             * values.[m
[32m+[m[32m             * @since v12.0.0, v10.20.0[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy: `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readBigInt64BE(offset?: number): bigint;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a signed, little-endian 64-bit integer from `buf` at the specified`offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Integers read from a `Buffer` are interpreted as two's complement signed[m
[32m+[m[32m             * values.[m
[32m+[m[32m             * @since v12.0.0, v10.20.0[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy: `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readBigInt64LE(offset?: number): bigint;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads `byteLength` number of bytes from `buf` at the specified `offset` and interprets the result as an unsigned, little-endian integer supporting[m
[32m+[m[32m             * up to 48 bits of accuracy.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `readUintLE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x12, 0x34, 0x56, 0x78, 0x90, 0xab]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readUIntLE(0, 6).toString(16));[m
[32m+[m[32m             * // Prints: ab9078563412[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param offset Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - byteLength`.[m
[32m+[m[32m             * @param byteLength Number of bytes to read. Must satisfy `0 < byteLength <= 6`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readUIntLE(offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.readUIntLE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readUintLE(offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads `byteLength` number of bytes from `buf` at the specified `offset` and interprets the result as an unsigned big-endian integer supporting[m
[32m+[m[32m             * up to 48 bits of accuracy.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `readUintBE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x12, 0x34, 0x56, 0x78, 0x90, 0xab]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readUIntBE(0, 6).toString(16));[m
[32m+[m[32m             * // Prints: 1234567890ab[m
[32m+[m[32m             * console.log(buf.readUIntBE(1, 6).toString(16));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param offset Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - byteLength`.[m
[32m+[m[32m             * @param byteLength Number of bytes to read. Must satisfy `0 < byteLength <= 6`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readUIntBE(offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.readUIntBE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readUintBE(offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads `byteLength` number of bytes from `buf` at the specified `offset` and interprets the result as a little-endian, two's complement signed value[m
[32m+[m[32m             * supporting up to 48 bits of accuracy.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x12, 0x34, 0x56, 0x78, 0x90, 0xab]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readIntLE(0, 6).toString(16));[m
[32m+[m[32m             * // Prints: -546f87a9cbee[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param offset Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - byteLength`.[m
[32m+[m[32m             * @param byteLength Number of bytes to read. Must satisfy `0 < byteLength <= 6`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readIntLE(offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads `byteLength` number of bytes from `buf` at the specified `offset` and interprets the result as a big-endian, two's complement signed value[m
[32m+[m[32m             * supporting up to 48 bits of accuracy.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x12, 0x34, 0x56, 0x78, 0x90, 0xab]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readIntBE(0, 6).toString(16));[m
[32m+[m[32m             * // Prints: 1234567890ab[m
[32m+[m[32m             * console.log(buf.readIntBE(1, 6).toString(16));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * console.log(buf.readIntBE(1, 0).toString(16));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param offset Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - byteLength`.[m
[32m+[m[32m             * @param byteLength Number of bytes to read. Must satisfy `0 < byteLength <= 6`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readIntBE(offset: number, byteLength: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads an unsigned 8-bit integer from `buf` at the specified `offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `readUint8` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([1, -2]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readUInt8(0));[m
[32m+[m[32m             * // Prints: 1[m
[32m+[m[32m             * console.log(buf.readUInt8(1));[m
[32m+[m[32m             * // Prints: 254[m
[32m+[m[32m             * console.log(buf.readUInt8(2));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.0[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 1`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readUInt8(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.readUInt8[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readUint8(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads an unsigned, little-endian 16-bit integer from `buf` at the specified `offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `readUint16LE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x12, 0x34, 0x56]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readUInt16LE(0).toString(16));[m
[32m+[m[32m             * // Prints: 3412[m
[32m+[m[32m             * console.log(buf.readUInt16LE(1).toString(16));[m
[32m+[m[32m             * // Prints: 5634[m
[32m+[m[32m             * console.log(buf.readUInt16LE(2).toString(16));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 2`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readUInt16LE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.readUInt16LE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readUint16LE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads an unsigned, big-endian 16-bit integer from `buf` at the specified`offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `readUint16BE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x12, 0x34, 0x56]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readUInt16BE(0).toString(16));[m
[32m+[m[32m             * // Prints: 1234[m
[32m+[m[32m             * console.log(buf.readUInt16BE(1).toString(16));[m
[32m+[m[32m             * // Prints: 3456[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 2`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readUInt16BE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.readUInt16BE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readUint16BE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads an unsigned, little-endian 32-bit integer from `buf` at the specified`offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `readUint32LE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x12, 0x34, 0x56, 0x78]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readUInt32LE(0).toString(16));[m
[32m+[m[32m             * // Prints: 78563412[m
[32m+[m[32m             * console.log(buf.readUInt32LE(1).toString(16));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readUInt32LE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.readUInt32LE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readUint32LE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads an unsigned, big-endian 32-bit integer from `buf` at the specified`offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `readUint32BE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0x12, 0x34, 0x56, 0x78]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readUInt32BE(0).toString(16));[m
[32m+[m[32m             * // Prints: 12345678[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readUInt32BE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.readUInt32BE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readUint32BE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a signed 8-bit integer from `buf` at the specified `offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Integers read from a `Buffer` are interpreted as two's complement signed values.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([-1, 5]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readInt8(0));[m
[32m+[m[32m             * // Prints: -1[m
[32m+[m[32m             * console.log(buf.readInt8(1));[m
[32m+[m[32m             * // Prints: 5[m
[32m+[m[32m             * console.log(buf.readInt8(2));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.0[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 1`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readInt8(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a signed, little-endian 16-bit integer from `buf` at the specified`offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Integers read from a `Buffer` are interpreted as two's complement signed values.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0, 5]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readInt16LE(0));[m
[32m+[m[32m             * // Prints: 1280[m
[32m+[m[32m             * console.log(buf.readInt16LE(1));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 2`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readInt16LE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a signed, big-endian 16-bit integer from `buf` at the specified `offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Integers read from a `Buffer` are interpreted as two's complement signed values.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0, 5]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readInt16BE(0));[m
[32m+[m[32m             * // Prints: 5[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 2`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readInt16BE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a signed, little-endian 32-bit integer from `buf` at the specified`offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Integers read from a `Buffer` are interpreted as two's complement signed values.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0, 0, 0, 5]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readInt32LE(0));[m
[32m+[m[32m             * // Prints: 83886080[m
[32m+[m[32m             * console.log(buf.readInt32LE(1));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readInt32LE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a signed, big-endian 32-bit integer from `buf` at the specified `offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Integers read from a `Buffer` are interpreted as two's complement signed values.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([0, 0, 0, 5]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readInt32BE(0));[m
[32m+[m[32m             * // Prints: 5[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readInt32BE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a 32-bit, little-endian float from `buf` at the specified `offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([1, 2, 3, 4]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readFloatLE(0));[m
[32m+[m[32m             * // Prints: 1.539989614439558e-36[m
[32m+[m[32m             * console.log(buf.readFloatLE(1));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readFloatLE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a 32-bit, big-endian float from `buf` at the specified `offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([1, 2, 3, 4]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readFloatBE(0));[m
[32m+[m[32m             * // Prints: 2.387939260590663e-38[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readFloatBE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a 64-bit, little-endian double from `buf` at the specified `offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([1, 2, 3, 4, 5, 6, 7, 8]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readDoubleLE(0));[m
[32m+[m[32m             * // Prints: 5.447603722011605e-270[m
[32m+[m[32m             * console.log(buf.readDoubleLE(1));[m
[32m+[m[32m             * // Throws ERR_OUT_OF_RANGE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readDoubleLE(offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reads a 64-bit, big-endian double from `buf` at the specified `offset`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from([1, 2, 3, 4, 5, 6, 7, 8]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.readDoubleBE(0));[m
[32m+[m[32m             * // Prints: 8.20788039913184e-304[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to read. Must satisfy `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readDoubleBE(offset?: number): number;[m
[32m+[m[32m            reverse(): this;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Interprets `buf` as an array of unsigned 16-bit integers and swaps the[m
[32m+[m[32m             * byte order _in-place_. Throws `ERR_INVALID_BUFFER_SIZE` if `buf.length` is not a multiple of 2.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf1 = Buffer.from([0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf1);[m
[32m+[m[32m             * // Prints: <Buffer 01 02 03 04 05 06 07 08>[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf1.swap16();[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf1);[m
[32m+[m[32m             * // Prints: <Buffer 02 01 04 03 06 05 08 07>[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf2 = Buffer.from([0x1, 0x2, 0x3]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf2.swap16();[m
[32m+[m[32m             * // Throws ERR_INVALID_BUFFER_SIZE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * One convenient use of `buf.swap16()` is to perform a fast in-place conversion[m
[32m+[m[32m             * between UTF-16 little-endian and UTF-16 big-endian:[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from('This is little-endian UTF-16', 'utf16le');[m
[32m+[m[32m             * buf.swap16(); // Convert to big-endian UTF-16 text.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v5.10.0[m
[32m+[m[32m             * @return A reference to `buf`.[m
[32m+[m[32m             */[m
[32m+[m[32m            swap16(): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Interprets `buf` as an array of unsigned 32-bit integers and swaps the[m
[32m+[m[32m             * byte order _in-place_. Throws `ERR_INVALID_BUFFER_SIZE` if `buf.length` is not a multiple of 4.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf1 = Buffer.from([0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf1);[m
[32m+[m[32m             * // Prints: <Buffer 01 02 03 04 05 06 07 08>[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf1.swap32();[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf1);[m
[32m+[m[32m             * // Prints: <Buffer 04 03 02 01 08 07 06 05>[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf2 = Buffer.from([0x1, 0x2, 0x3]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf2.swap32();[m
[32m+[m[32m             * // Throws ERR_INVALID_BUFFER_SIZE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v5.10.0[m
[32m+[m[32m             * @return A reference to `buf`.[m
[32m+[m[32m             */[m
[32m+[m[32m            swap32(): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Interprets `buf` as an array of 64-bit numbers and swaps byte order _in-place_.[m
[32m+[m[32m             * Throws `ERR_INVALID_BUFFER_SIZE` if `buf.length` is not a multiple of 8.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf1 = Buffer.from([0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf1);[m
[32m+[m[32m             * // Prints: <Buffer 01 02 03 04 05 06 07 08>[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf1.swap64();[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf1);[m
[32m+[m[32m             * // Prints: <Buffer 08 07 06 05 04 03 02 01>[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf2 = Buffer.from([0x1, 0x2, 0x3]);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf2.swap64();[m
[32m+[m[32m             * // Throws ERR_INVALID_BUFFER_SIZE.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v6.3.0[m
[32m+[m[32m             * @return A reference to `buf`.[m
[32m+[m[32m             */[m
[32m+[m[32m            swap64(): Buffer;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset`. `value` must be a[m
[32m+[m[32m             * valid unsigned 8-bit integer. Behavior is undefined when `value` is anything[m
[32m+[m[32m             * other than an unsigned 8-bit integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `writeUint8` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(4);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeUInt8(0x3, 0);[m
[32m+[m[32m             * buf.writeUInt8(0x4, 1);[m
[32m+[m[32m             * buf.writeUInt8(0x23, 2);[m
[32m+[m[32m             * buf.writeUInt8(0x42, 3);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 03 04 23 42>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.0[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 1`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUInt8(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.writeUInt8[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUint8(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as little-endian. The `value` must be a valid unsigned 16-bit integer. Behavior is undefined when `value` is[m
[32m+[m[32m             * anything other than an unsigned 16-bit integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `writeUint16LE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(4);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeUInt16LE(0xdead, 0);[m
[32m+[m[32m             * buf.writeUInt16LE(0xbeef, 2);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer ad de ef be>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 2`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUInt16LE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.writeUInt16LE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUint16LE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as big-endian. The `value` must be a valid unsigned 16-bit integer. Behavior is undefined when `value`is anything other than an[m
[32m+[m[32m             * unsigned 16-bit integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `writeUint16BE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(4);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeUInt16BE(0xdead, 0);[m
[32m+[m[32m             * buf.writeUInt16BE(0xbeef, 2);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer de ad be ef>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 2`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUInt16BE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.writeUInt16BE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUint16BE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as little-endian. The `value` must be a valid unsigned 32-bit integer. Behavior is undefined when `value` is[m
[32m+[m[32m             * anything other than an unsigned 32-bit integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `writeUint32LE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(4);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeUInt32LE(0xfeedface, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer ce fa ed fe>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUInt32LE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.writeUInt32LE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUint32LE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as big-endian. The `value` must be a valid unsigned 32-bit integer. Behavior is undefined when `value`is anything other than an[m
[32m+[m[32m             * unsigned 32-bit integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This function is also available under the `writeUint32BE` alias.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(4);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeUInt32BE(0xfeedface, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer fe ed fa ce>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUInt32BE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @alias Buffer.writeUInt32BE[m
[32m+[m[32m             * @since v14.9.0, v12.19.0[m
[32m+[m[32m             */[m
[32m+[m[32m            writeUint32BE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset`. `value` must be a valid[m
[32m+[m[32m             * signed 8-bit integer. Behavior is undefined when `value` is anything other than[m
[32m+[m[32m             * a signed 8-bit integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * `value` is interpreted and written as a two's complement signed integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(2);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeInt8(2, 0);[m
[32m+[m[32m             * buf.writeInt8(-2, 1);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 02 fe>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.0[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 1`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeInt8(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as little-endian.  The `value` must be a valid signed 16-bit integer. Behavior is undefined when `value` is[m
[32m+[m[32m             * anything other than a signed 16-bit integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The `value` is interpreted and written as a two's complement signed integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(2);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeInt16LE(0x0304, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 04 03>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 2`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeInt16LE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as big-endian.  The `value` must be a valid signed 16-bit integer. Behavior is undefined when `value` is[m
[32m+[m[32m             * anything other than a signed 16-bit integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The `value` is interpreted and written as a two's complement signed integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(2);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeInt16BE(0x0102, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 01 02>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 2`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeInt16BE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as little-endian. The `value` must be a valid signed 32-bit integer. Behavior is undefined when `value` is[m
[32m+[m[32m             * anything other than a signed 32-bit integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The `value` is interpreted and written as a two's complement signed integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(4);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeInt32LE(0x05060708, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 08 07 06 05>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeInt32LE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as big-endian. The `value` must be a valid signed 32-bit integer. Behavior is undefined when `value` is[m
[32m+[m[32m             * anything other than a signed 32-bit integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The `value` is interpreted and written as a two's complement signed integer.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(4);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeInt32BE(0x01020304, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 01 02 03 04>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.5[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeInt32BE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as little-endian. Behavior is[m
[32m+[m[32m             * undefined when `value` is anything other than a JavaScript number.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(4);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeFloatLE(0xcafebabe, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer bb fe 4a 4f>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeFloatLE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as big-endian. Behavior is[m
[32m+[m[32m             * undefined when `value` is anything other than a JavaScript number.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(4);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeFloatBE(0xcafebabe, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 4f 4a fe bb>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 4`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeFloatBE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as little-endian. The `value` must be a JavaScript number. Behavior is undefined when `value` is anything[m
[32m+[m[32m             * other than a JavaScript number.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(8);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeDoubleLE(123.456, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 77 be 9f 1a 2f dd 5e 40>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeDoubleLE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Writes `value` to `buf` at the specified `offset` as big-endian. The `value` must be a JavaScript number. Behavior is undefined when `value` is anything[m
[32m+[m[32m             * other than a JavaScript number.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(8);[m
[32m+[m[32m             *[m
[32m+[m[32m             * buf.writeDoubleBE(123.456, 0);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf);[m
[32m+[m[32m             * // Prints: <Buffer 40 5e dd 2f 1a 9f be 77>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.11.15[m
[32m+[m[32m             * @param value Number to be written to `buf`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to write. Must satisfy `0 <= offset <= buf.length - 8`.[m
[32m+[m[32m             * @return `offset` plus the number of bytes written.[m
[32m+[m[32m             */[m
[32m+[m[32m            writeDoubleBE(value: number, offset?: number): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Fills `buf` with the specified `value`. If the `offset` and `end` are not given,[m
[32m+[m[32m             * the entire `buf` will be filled:[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Fill a `Buffer` with the ASCII character 'h'.[m
[32m+[m[32m             *[m
[32m+[m[32m             * const b = Buffer.allocUnsafe(50).fill('h');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(b.toString());[m
[32m+[m[32m             * // Prints: hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Fill a buffer with empty string[m
[32m+[m[32m             * const c = Buffer.allocUnsafe(5).fill('');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(c.fill(''));[m
[32m+[m[32m             * // Prints: <Buffer 00 00 00 00 00>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * `value` is coerced to a `uint32` value if it is not a string, `Buffer`, or[m
[32m+[m[32m             * integer. If the resulting integer is greater than `255` (decimal), `buf` will be[m
[32m+[m[32m             * filled with `value &#x26; 255`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If the final write of a `fill()` operation falls on a multi-byte character,[m
[32m+[m[32m             * then only the bytes of that character that fit into `buf` are written:[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Fill a `Buffer` with character that takes up two bytes in UTF-8.[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(Buffer.allocUnsafe(5).fill('\u0222'));[m
[32m+[m[32m             * // Prints: <Buffer c8 a2 c8 a2 c8>[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `value` contains invalid characters, it is truncated; if no valid[m
[32m+[m[32m             * fill data remains, an exception is thrown:[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.allocUnsafe(5);[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.fill('a'));[m
[32m+[m[32m             * // Prints: <Buffer 61 61 61 61 61>[m
[32m+[m[32m             * console.log(buf.fill('aazz', 'hex'));[m
[32m+[m[32m             * // Prints: <Buffer aa aa aa aa aa>[m
[32m+[m[32m             * console.log(buf.fill('zz', 'hex'));[m
[32m+[m[32m             * // Throws an exception.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.5.0[m
[32m+[m[32m             * @param value The value with which to fill `buf`. Empty value (string, Uint8Array, Buffer) is coerced to `0`.[m
[32m+[m[32m             * @param [offset=0] Number of bytes to skip before starting to fill `buf`.[m
[32m+[m[32m             * @param [end=buf.length] Where to stop filling `buf` (not inclusive).[m
[32m+[m[32m             * @param [encoding='utf8'] The encoding for `value` if `value` is a string.[m
[32m+[m[32m             * @return A reference to `buf`.[m
[32m+[m[32m             */[m
[32m+[m[32m            fill(value: string | Uint8Array | number, offset?: number, end?: number, encoding?: BufferEncoding): this;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * If `value` is:[m
[32m+[m[32m             *[m
[32m+[m[32m             * * a string, `value` is interpreted according to the character encoding in `encoding`.[m
[32m+[m[32m             * * a `Buffer` or [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array), `value` will be used in its entirety.[m
[32m+[m[32m             * To compare a partial `Buffer`, use `buf.subarray`.[m
[32m+[m[32m             * * a number, `value` will be interpreted as an unsigned 8-bit integer[m
[32m+[m[32m             * value between `0` and `255`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from('this is a buffer');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.indexOf('this'));[m
[32m+[m[32m             * // Prints: 0[m
[32m+[m[32m             * console.log(buf.indexOf('is'));[m
[32m+[m[32m             * // Prints: 2[m
[32m+[m[32m             * console.log(buf.indexOf(Buffer.from('a buffer')));[m
[32m+[m[32m             * // Prints: 8[m
[32m+[m[32m             * console.log(buf.indexOf(97));[m
[32m+[m[32m             * // Prints: 8 (97 is the decimal ASCII value for 'a')[m
[32m+[m[32m             * console.log(buf.indexOf(Buffer.from('a buffer example')));[m
[32m+[m[32m             * // Prints: -1[m
[32m+[m[32m             * console.log(buf.indexOf(Buffer.from('a buffer example').slice(0, 8)));[m
[32m+[m[32m             * // Prints: 8[m
[32m+[m[32m             *[m
[32m+[m[32m             * const utf16Buffer = Buffer.from('\u039a\u0391\u03a3\u03a3\u0395', 'utf16le');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(utf16Buffer.indexOf('\u03a3', 0, 'utf16le'));[m
[32m+[m[32m             * // Prints: 4[m
[32m+[m[32m             * console.log(utf16Buffer.indexOf('\u03a3', -4, 'utf16le'));[m
[32m+[m[32m             * // Prints: 6[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `value` is not a string, number, or `Buffer`, this method will throw a `TypeError`. If `value` is a number, it will be coerced to a valid byte value,[m
[32m+[m[32m             * an integer between 0 and 255.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `byteOffset` is not a number, it will be coerced to a number. If the result[m
[32m+[m[32m             * of coercion is `NaN` or `0`, then the entire buffer will be searched. This[m
[32m+[m[32m             * behavior matches [`String.prototype.indexOf()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf).[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const b = Buffer.from('abcdef');[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Passing a value that's a number, but not a valid byte.[m
[32m+[m[32m             * // Prints: 2, equivalent to searching for 99 or 'c'.[m
[32m+[m[32m             * console.log(b.indexOf(99.9));[m
[32m+[m[32m             * console.log(b.indexOf(256 + 99));[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Passing a byteOffset that coerces to NaN or 0.[m
[32m+[m[32m             * // Prints: 1, searching the whole buffer.[m
[32m+[m[32m             * console.log(b.indexOf('b', undefined));[m
[32m+[m[32m             * console.log(b.indexOf('b', {}));[m
[32m+[m[32m             * console.log(b.indexOf('b', null));[m
[32m+[m[32m             * console.log(b.indexOf('b', []));[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `value` is an empty string or empty `Buffer` and `byteOffset` is less[m
[32m+[m[32m             * than `buf.length`, `byteOffset` will be returned. If `value` is empty and`byteOffset` is at least `buf.length`, `buf.length` will be returned.[m
[32m+[m[32m             * @since v1.5.0[m
[32m+[m[32m             * @param value What to search for.[m
[32m+[m[32m             * @param [byteOffset=0] Where to begin searching in `buf`. If negative, then offset is calculated from the end of `buf`.[m
[32m+[m[32m             * @param [encoding='utf8'] If `value` is a string, this is the encoding used to determine the binary representation of the string that will be searched for in `buf`.[m
[32m+[m[32m             * @return The index of the first occurrence of `value` in `buf`, or `-1` if `buf` does not contain `value`.[m
[32m+[m[32m             */[m
[32m+[m[32m            indexOf(value: string | number | Uint8Array, byteOffset?: number, encoding?: BufferEncoding): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identical to `buf.indexOf()`, except the last occurrence of `value` is found[m
[32m+[m[32m             * rather than the first occurrence.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from('this buffer is a buffer');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.lastIndexOf('this'));[m
[32m+[m[32m             * // Prints: 0[m
[32m+[m[32m             * console.log(buf.lastIndexOf('buffer'));[m
[32m+[m[32m             * // Prints: 17[m
[32m+[m[32m             * console.log(buf.lastIndexOf(Buffer.from('buffer')));[m
[32m+[m[32m             * // Prints: 17[m
[32m+[m[32m             * console.log(buf.lastIndexOf(97));[m
[32m+[m[32m             * // Prints: 15 (97 is the decimal ASCII value for 'a')[m
[32m+[m[32m             * console.log(buf.lastIndexOf(Buffer.from('yolo')));[m
[32m+[m[32m             * // Prints: -1[m
[32m+[m[32m             * console.log(buf.lastIndexOf('buffer', 5));[m
[32m+[m[32m             * // Prints: 5[m
[32m+[m[32m             * console.log(buf.lastIndexOf('buffer', 4));[m
[32m+[m[32m             * // Prints: -1[m
[32m+[m[32m             *[m
[32m+[m[32m             * const utf16Buffer = Buffer.from('\u039a\u0391\u03a3\u03a3\u0395', 'utf16le');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(utf16Buffer.lastIndexOf('\u03a3', undefined, 'utf16le'));[m
[32m+[m[32m             * // Prints: 6[m
[32m+[m[32m             * console.log(utf16Buffer.lastIndexOf('\u03a3', -5, 'utf16le'));[m
[32m+[m[32m             * // Prints: 4[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `value` is not a string, number, or `Buffer`, this method will throw a `TypeError`. If `value` is a number, it will be coerced to a valid byte value,[m
[32m+[m[32m             * an integer between 0 and 255.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `byteOffset` is not a number, it will be coerced to a number. Any arguments[m
[32m+[m[32m             * that coerce to `NaN`, like `{}` or `undefined`, will search the whole buffer.[m
[32m+[m[32m             * This behavior matches [`String.prototype.lastIndexOf()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf).[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const b = Buffer.from('abcdef');[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Passing a value that's a number, but not a valid byte.[m
[32m+[m[32m             * // Prints: 2, equivalent to searching for 99 or 'c'.[m
[32m+[m[32m             * console.log(b.lastIndexOf(99.9));[m
[32m+[m[32m             * console.log(b.lastIndexOf(256 + 99));[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Passing a byteOffset that coerces to NaN.[m
[32m+[m[32m             * // Prints: 1, searching the whole buffer.[m
[32m+[m[32m             * console.log(b.lastIndexOf('b', undefined));[m
[32m+[m[32m             * console.log(b.lastIndexOf('b', {}));[m
[32m+[m[32m             *[m
[32m+[m[32m             * // Passing a byteOffset that coerces to 0.[m
[32m+[m[32m             * // Prints: -1, equivalent to passing 0.[m
[32m+[m[32m             * console.log(b.lastIndexOf('b', null));[m
[32m+[m[32m             * console.log(b.lastIndexOf('b', []));[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `value` is an empty string or empty `Buffer`, `byteOffset` will be returned.[m
[32m+[m[32m             * @since v6.0.0[m
[32m+[m[32m             * @param value What to search for.[m
[32m+[m[32m             * @param [byteOffset=buf.length - 1] Where to begin searching in `buf`. If negative, then offset is calculated from the end of `buf`.[m
[32m+[m[32m             * @param [encoding='utf8'] If `value` is a string, this is the encoding used to determine the binary representation of the string that will be searched for in `buf`.[m
[32m+[m[32m             * @return The index of the last occurrence of `value` in `buf`, or `-1` if `buf` does not contain `value`.[m
[32m+[m[32m             */[m
[32m+[m[32m            lastIndexOf(value: string | number | Uint8Array, byteOffset?: number, encoding?: BufferEncoding): number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Equivalent to `buf.indexOf() !== -1`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * import { Buffer } from 'node:buffer';[m
[32m+[m[32m             *[m
[32m+[m[32m             * const buf = Buffer.from('this is a buffer');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.log(buf.includes('this'));[m
[32m+[m[32m             * // Prints: true[m
[32m+[m[32m             * console.log(buf.includes('is'));[m
[32m+[m[32m             * // Prints: true[m
[32m+[m[32m             * console.log(buf.includes(Buffer.from('a buffer')));[m
[32m+[m[32m             * // Prints: true[m
[32m+[m[32m             * console.log(buf.includes(97));[m
[32m+[m[32m             * // Prints: true (97 is the decimal ASCII value for 'a')[m
[32m+[m[32m             * console.log(buf.includes(Buffer.from('a buffer example')));[m
[32m+[m[32m             * // Prints: false[m
[32m+[m[32m             * console.log(buf.includes(Buffer.from('a buffer example').slice(0, 8)));[m
[32m+[m[32m             * // Prints: true[m
[32m+[m[32m             * console.log(buf.includes('this', 4));[m
[32m+[m[32m             * // Prints: false[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v5.3.0[m
[32m+[m[32m             * @param value What to search for.[m
[32m+[m[32m             * @param [byteOffset=0] Where to begin searching in `buf`. If negative, then offset is calculated from the end of `buf`.[m
[32m+[m[32m             * @param [encoding='utf8'] If `value` is a string, this is its encoding.[m
[32m+[m[32m             * @return `true` if `value` was found in `buf`, `false` otherwise.[m
[32m+[m[32m             */[m
[32m+[m[32m            includes(value: string | number | Buffer, byteOffset?: number, encoding?: BufferEncoding): boolean;[m
[32m+[m[32m        }[m
[32m+[m[32m        var Buffer: BufferConstructor;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Decodes a string of Base64-encoded data into bytes, and encodes those bytes[m
[32m+[m[32m         * into a string using Latin-1 (ISO-8859-1).[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `data` may be any JavaScript-value that can be coerced into a string.[m
[32m+[m[32m         *[m
[32m+[m[32m         * **This function is only provided for compatibility with legacy web platform APIs**[m
[32m+[m[32m         * **and should never be used in new code, because they use strings to represent**[m
[32m+[m[32m         * **binary data and predate the introduction of typed arrays in JavaScript.**[m
[32m+[m[32m         * **For code running using Node.js APIs, converting between base64-encoded strings**[m
[32m+[m[32m         * **and binary data should be performed using `Buffer.from(str, 'base64')` and `buf.toString('base64')`.**[m
[32m+[m[32m         * @since v15.13.0, v14.17.0[m
[32m+[m[32m         * @legacy Use `Buffer.from(data, 'base64')` instead.[m
[32m+[m[32m         * @param data The Base64-encoded input string.[m
[32m+[m[32m         */[m
[32m+[m[32m        function atob(data: string): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Decodes a string into bytes using Latin-1 (ISO-8859), and encodes those bytes[m
[32m+[m[32m         * into a string using Base64.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `data` may be any JavaScript-value that can be coerced into a string.[m
[32m+[m[32m         *[m
[32m+[m[32m         * **This function is only provided for compatibility with legacy web platform APIs**[m
[32m+[m[32m         * **and should never be used in new code, because they use strings to represent**[m
[32m+[m[32m         * **binary data and predate the introduction of typed arrays in JavaScript.**[m
[32m+[m[32m         * **For code running using Node.js APIs, converting between base64-encoded strings**[m
[32m+[m[32m         * **and binary data should be performed using `Buffer.from(str, 'base64')` and `buf.toString('base64')`.**[m
[32m+[m[32m         * @since v15.13.0, v14.17.0[m
[32m+[m[32m         * @legacy Use `buf.toString('base64')` instead.[m
[32m+[m[32m         * @param data An ASCII (Latin1) string.[m
[32m+[m[32m         */[m
[32m+[m[32m        function btoa(data: string): string;[m
[32m+[m[32m        interface Blob extends __Blob {}[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `Blob` class is a global reference for `require('node:buffer').Blob`[m
[32m+[m[32m         * https://nodejs.org/api/buffer.html#class-blob[m
[32m+[m[32m         * @since v18.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        var Blob: typeof globalThis extends {[m
[32m+[m[32m            onmessage: any;[m
[32m+[m[32m            Blob: infer T;[m
[32m+[m[32m        } ? T[m
[32m+[m[32m            : typeof NodeBlob;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:buffer" {[m
[32m+[m[32m    export * from "buffer";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/child_process.d.ts b/node_modules/@types/node/child_process.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..aa0de66[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/child_process.d.ts[m
[36m@@ -0,0 +1,1544 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:child_process` module provides the ability to spawn subprocesses in[m
[32m+[m[32m * a manner that is similar, but not identical, to [`popen(3)`](http://man7.org/linux/man-pages/man3/popen.3.html). This capability[m
[32m+[m[32m * is primarily provided by the {@link spawn} function:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const { spawn } = require('node:child_process');[m
[32m+[m[32m * const ls = spawn('ls', ['-lh', '/usr']);[m
[32m+[m[32m *[m
[32m+[m[32m * ls.stdout.on('data', (data) => {[m
[32m+[m[32m *   console.log(`stdout: ${data}`);[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * ls.stderr.on('data', (data) => {[m
[32m+[m[32m *   console.error(`stderr: ${data}`);[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * ls.on('close', (code) => {[m
[32m+[m[32m *   console.log(`child process exited with code ${code}`);[m
[32m+[m[32m * });[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * By default, pipes for `stdin`, `stdout`, and `stderr` are established between[m
[32m+[m[32m * the parent Node.js process and the spawned subprocess. These pipes have[m
[32m+[m[32m * limited (and platform-specific) capacity. If the subprocess writes to[m
[32m+[m[32m * stdout in excess of that limit without the output being captured, the[m
[32m+[m[32m * subprocess blocks waiting for the pipe buffer to accept more data. This is[m
[32m+[m[32m * identical to the behavior of pipes in the shell. Use the `{ stdio: 'ignore' }` option if the output will not be consumed.[m
[32m+[m[32m *[m
[32m+[m[32m * The command lookup is performed using the `options.env.PATH` environment[m
[32m+[m[32m * variable if `env` is in the `options` object. Otherwise, `process.env.PATH` is[m
[32m+[m[32m * used. If `options.env` is set without `PATH`, lookup on Unix is performed[m
[32m+[m[32m * on a default search path search of `/usr/bin:/bin` (see your operating system's[m
[32m+[m[32m * manual for execvpe/execvp), on Windows the current processes environment[m
[32m+[m[32m * variable `PATH` is used.[m
[32m+[m[32m *[m
[32m+[m[32m * On Windows, environment variables are case-insensitive. Node.js[m
[32m+[m[32m * lexicographically sorts the `env` keys and uses the first one that[m
[32m+[m[32m * case-insensitively matches. Only first (in lexicographic order) entry will be[m
[32m+[m[32m * passed to the subprocess. This might lead to issues on Windows when passing[m
[32m+[m[32m * objects to the `env` option that have multiple variants of the same key, such as `PATH` and `Path`.[m
[32m+[m[32m *[m
[32m+[m[32m * The {@link spawn} method spawns the child process asynchronously,[m
[32m+[m[32m * without blocking the Node.js event loop. The {@link spawnSync} function provides equivalent functionality in a synchronous manner that blocks[m
[32m+[m[32m * the event loop until the spawned process either exits or is terminated.[m
[32m+[m[32m *[m
[32m+[m[32m * For convenience, the `node:child_process` module provides a handful of[m
[32m+[m[32m * synchronous and asynchronous alternatives to {@link spawn} and {@link spawnSync}. Each of these alternatives are implemented on[m
[32m+[m[32m * top of {@link spawn} or {@link spawnSync}.[m
[32m+[m[32m *[m
[32m+[m[32m * * {@link exec}: spawns a shell and runs a command within that[m
[32m+[m[32m * shell, passing the `stdout` and `stderr` to a callback function when[m
[32m+[m[32m * complete.[m
[32m+[m[32m * * {@link execFile}: similar to {@link exec} except[m
[32m+[m[32m * that it spawns the command directly without first spawning a shell by[m
[32m+[m[32m * default.[m
[32m+[m[32m * * {@link fork}: spawns a new Node.js process and invokes a[m
[32m+[m[32m * specified module with an IPC communication channel established that allows[m
[32m+[m[32m * sending messages between parent and child.[m
[32m+[m[32m * * {@link execSync}: a synchronous version of {@link exec} that will block the Node.js event loop.[m
[32m+[m[32m * * {@link execFileSync}: a synchronous version of {@link execFile} that will block the Node.js event loop.[m
[32m+[m[32m *[m
[32m+[m[32m * For certain use cases, such as automating shell scripts, the `synchronous counterparts` may be more convenient. In many cases, however,[m
[32m+[m[32m * the synchronous methods can have significant impact on performance due to[m
[32m+[m[32m * stalling the event loop while spawned processes complete.[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/child_process.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "child_process" {[m
[32m+[m[32m    import { ObjectEncodingOptions } from "node:fs";[m
[32m+[m[32m    import { Abortable, EventEmitter } from "node:events";[m
[32m+[m[32m    import * as dgram from "node:dgram";[m
[32m+[m[32m    import * as net from "node:net";[m
[32m+[m[32m    import { Pipe, Readable, Stream, Writable } from "node:stream";[m
[32m+[m[32m    import { URL } from "node:url";[m
[32m+[m[32m    type Serializable = string | object | number | boolean | bigint;[m
[32m+[m[32m    type SendHandle = net.Socket | net.Server | dgram.Socket | undefined;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Instances of the `ChildProcess` represent spawned child processes.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Instances of `ChildProcess` are not intended to be created directly. Rather,[m
[32m+[m[32m     * use the {@link spawn}, {@link exec},{@link execFile}, or {@link fork} methods to create[m
[32m+[m[32m     * instances of `ChildProcess`.[m
[32m+[m[32m     * @since v2.2.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class ChildProcess extends EventEmitter {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A `Writable Stream` that represents the child process's `stdin`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If a child process waits to read all of its input, the child will not continue[m
[32m+[m[32m         * until this stream has been closed via `end()`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the child was spawned with `stdio[0]` set to anything other than `'pipe'`,[m
[32m+[m[32m         * then this will be `null`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `subprocess.stdin` is an alias for `subprocess.stdio[0]`. Both properties will[m
[32m+[m[32m         * refer to the same value.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `subprocess.stdin` property can be `null` or `undefined` if the child process could not be successfully spawned.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         */[m
[32m+[m[32m        stdin: Writable | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A `Readable Stream` that represents the child process's `stdout`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the child was spawned with `stdio[1]` set to anything other than `'pipe'`,[m
[32m+[m[32m         * then this will be `null`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `subprocess.stdout` is an alias for `subprocess.stdio[1]`. Both properties will[m
[32m+[m[32m         * refer to the same value.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { spawn } = require('node:child_process');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const subprocess = spawn('ls');[m
[32m+[m[32m         *[m
[32m+[m[32m         * subprocess.stdout.on('data', (data) => {[m
[32m+[m[32m         *   console.log(`Received chunk ${data}`);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `subprocess.stdout` property can be `null` or `undefined` if the child process could not be successfully spawned.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         */[m
[32m+[m[32m        stdout: Readable | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A `Readable Stream` that represents the child process's `stderr`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the child was spawned with `stdio[2]` set to anything other than `'pipe'`,[m
[32m+[m[32m         * then this will be `null`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `subprocess.stderr` is an alias for `subprocess.stdio[2]`. Both properties will[m
[32m+[m[32m         * refer to the same value.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `subprocess.stderr` property can be `null` or `undefined` if the child process could not be successfully spawned.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         */[m
[32m+[m[32m        stderr: Readable | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `subprocess.channel` property is a reference to the child's IPC channel. If[m
[32m+[m[32m         * no IPC channel exists, this property is `undefined`.[m
[32m+[m[32m         * @since v7.1.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly channel?: Pipe | null | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A sparse array of pipes to the child process, corresponding with positions in[m
[32m+[m[32m         * the `stdio` option passed to {@link spawn} that have been set[m
[32m+[m[32m         * to the value `'pipe'`. `subprocess.stdio[0]`, `subprocess.stdio[1]`, and `subprocess.stdio[2]` are also available as `subprocess.stdin`, `subprocess.stdout`, and `subprocess.stderr`,[m
[32m+[m[32m         * respectively.[m
[32m+[m[32m         *[m
[32m+[m[32m         * In the following example, only the child's fd `1` (stdout) is configured as a[m
[32m+[m[32m         * pipe, so only the parent's `subprocess.stdio[1]` is a stream, all other values[m
[32m+[m[32m         * in the array are `null`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const assert = require('node:assert');[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         * const child_process = require('node:child_process');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const subprocess = child_process.spawn('ls', {[m
[32m+[m[32m         *   stdio: [[m
[32m+[m[32m         *     0, // Use parent's stdin for child.[m
[32m+[m[32m         *     'pipe', // Pipe child's stdout to parent.[m
[32m+[m[32m         *     fs.openSync('err.out', 'w'), // Direct child's stderr to a file.[m
[32m+[m[32m         *   ],[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.strictEqual(subprocess.stdio[0], null);[m
[32m+[m[32m         * assert.strictEqual(subprocess.stdio[0], subprocess.stdin);[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert(subprocess.stdout);[m
[32m+[m[32m         * assert.strictEqual(subprocess.stdio[1], subprocess.stdout);[m
[32m+[m[32m         *[m
[32m+[m[32m         * assert.strictEqual(subprocess.stdio[2], null);[m
[32m+[m[32m         * assert.strictEqual(subprocess.stdio[2], subprocess.stderr);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `subprocess.stdio` property can be `undefined` if the child process could[m
[32m+[m[32m         * not be successfully spawned.[m
[32m+[m[32m         * @since v0.7.10[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly stdio: [[m
[32m+[m[32m            Writable | null,[m
[32m+[m[32m            // stdin[m
[32m+[m[32m            Readable | null,[m
[32m+[m[32m            // stdout[m
[32m+[m[32m            Readable | null,[m
[32m+[m[32m            // stderr[m
[32m+[m[32m            Readable | Writable | null | undefined,[m
[32m+[m[32m            // extra[m
[32m+[m[32m            Readable | Writable | null | undefined, // extra[m
[32m+[m[32m        ];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `subprocess.killed` property indicates whether the child process[m
[32m+[m[32m         * successfully received a signal from `subprocess.kill()`. The `killed` property[m
[32m+[m[32m         * does not indicate that the child process has been terminated.[m
[32m+[m[32m         * @since v0.5.10[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly killed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the process identifier (PID) of the child process. If the child process[m
[32m+[m[32m         * fails to spawn due to errors, then the value is `undefined` and `error` is[m
[32m+[m[32m         * emitted.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { spawn } = require('node:child_process');[m
[32m+[m[32m         * const grep = spawn('grep', ['ssh']);[m
[32m+[m[32m         *[m
[32m+[m[32m         * console.log(`Spawned child pid: ${grep.pid}`);[m
[32m+[m[32m         * grep.stdin.end();[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly pid?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `subprocess.connected` property indicates whether it is still possible to[m
[32m+[m[32m         * send and receive messages from a child process. When `subprocess.connected` is `false`, it is no longer possible to send or receive messages.[m
[32m+[m[32m         * @since v0.7.2[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly connected: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `subprocess.exitCode` property indicates the exit code of the child process.[m
[32m+[m[32m         * If the child process is still running, the field will be `null`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly exitCode: number | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `subprocess.signalCode` property indicates the signal received by[m
[32m+[m[32m         * the child process if any, else `null`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly signalCode: NodeJS.Signals | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `subprocess.spawnargs` property represents the full list of command-line[m
[32m+[m[32m         * arguments the child process was launched with.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly spawnargs: string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `subprocess.spawnfile` property indicates the executable file name of[m
[32m+[m[32m         * the child process that is launched.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For {@link fork}, its value will be equal to `process.execPath`.[m
[32m+[m[32m         * For {@link spawn}, its value will be the name of[m
[32m+[m[32m         * the executable file.[m
[32m+[m[32m         * For {@link exec},  its value will be the name of the shell[m
[32m+[m[32m         * in which the child process is launched.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly spawnfile: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `subprocess.kill()` method sends a signal to the child process. If no[m
[32m+[m[32m         * argument is given, the process will be sent the `'SIGTERM'` signal. See [`signal(7)`](http://man7.org/linux/man-pages/man7/signal.7.html) for a list of available signals. This function[m
[32m+[m[32m         * returns `true` if [`kill(2)`](http://man7.org/linux/man-pages/man2/kill.2.html) succeeds, and `false` otherwise.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { spawn } = require('node:child_process');[m
[32m+[m[32m         * const grep = spawn('grep', ['ssh']);[m
[32m+[m[32m         *[m
[32m+[m[32m         * grep.on('close', (code, signal) => {[m
[32m+[m[32m         *   console.log([m
[32m+[m[32m         *     `child process terminated due to receipt of signal ${signal}`);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Send SIGHUP to process.[m
[32m+[m[32m         * grep.kill('SIGHUP');[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `ChildProcess` object may emit an `'error'` event if the signal[m
[32m+[m[32m         * cannot be delivered. Sending a signal to a child process that has already exited[m
[32m+[m[32m         * is not an error but may have unforeseen consequences. Specifically, if the[m
[32m+[m[32m         * process identifier (PID) has been reassigned to another process, the signal will[m
[32m+[m[32m         * be delivered to that process instead which can have unexpected results.[m
[32m+[m[32m         *[m
[32m+[m[32m         * While the function is called `kill`, the signal delivered to the child process[m
[32m+[m[32m         * may not actually terminate the process.[m
[32m+[m[32m         *[m
[32m+[m[32m         * See [`kill(2)`](http://man7.org/linux/man-pages/man2/kill.2.html) for reference.[m
[32m+[m[32m         *[m
[32m+[m[32m         * On Windows, where POSIX signals do not exist, the `signal` argument will be[m
[32m+[m[32m         * ignored, and the process will be killed forcefully and abruptly (similar to `'SIGKILL'`).[m
[32m+[m[32m         * See `Signal Events` for more details.[m
[32m+[m[32m         *[m
[32m+[m[32m         * On Linux, child processes of child processes will not be terminated[m
[32m+[m[32m         * when attempting to kill their parent. This is likely to happen when running a[m
[32m+[m[32m         * new process in a shell or with the use of the `shell` option of `ChildProcess`:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * 'use strict';[m
[32m+[m[32m         * const { spawn } = require('node:child_process');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const subprocess = spawn([m
[32m+[m[32m         *   'sh',[m
[32m+[m[32m         *   [[m
[32m+[m[32m         *     '-c',[m
[32m+[m[32m         *     `node -e "setInterval(() => {[m
[32m+[m[32m         *       console.log(process.pid, 'is alive')[m
[32m+[m[32m         *     }, 500);"`,[m
[32m+[m[32m         *   ], {[m
[32m+[m[32m         *     stdio: ['inherit', 'inherit', 'inherit'],[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * );[m
[32m+[m[32m         *[m
[32m+[m[32m         * setTimeout(() => {[m
[32m+[m[32m         *   subprocess.kill(); // Does not terminate the Node.js process in the shell.[m
[32m+[m[32m         * }, 2000);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         */[m
[32m+[m[32m        kill(signal?: NodeJS.Signals | number): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calls {@link ChildProcess.kill} with `'SIGTERM'`.[m
[32m+[m[32m         * @since v20.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        [Symbol.dispose](): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When an IPC channel has been established between the parent and child ([m
[32m+[m[32m         * i.e. when using {@link fork}), the `subprocess.send()` method can[m
[32m+[m[32m         * be used to send messages to the child process. When the child process is a[m
[32m+[m[32m         * Node.js instance, these messages can be received via the `'message'` event.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The message goes through serialization and parsing. The resulting[m
[32m+[m[32m         * message might not be the same as what is originally sent.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For example, in the parent script:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const cp = require('node:child_process');[m
[32m+[m[32m         * const n = cp.fork(`${__dirname}/sub.js`);[m
[32m+[m[32m         *[m
[32m+[m[32m         * n.on('message', (m) => {[m
[32m+[m[32m         *   console.log('PARENT got message:', m);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Causes the child to print: CHILD got message: { hello: 'world' }[m
[32m+[m[32m         * n.send({ hello: 'world' });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * And then the child script, `'sub.js'` might look like this:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * process.on('message', (m) => {[m
[32m+[m[32m         *   console.log('CHILD got message:', m);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Causes the parent to print: PARENT got message: { foo: 'bar', baz: null }[m
[32m+[m[32m         * process.send({ foo: 'bar', baz: NaN });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Child Node.js processes will have a `process.send()` method of their own[m
[32m+[m[32m         * that allows the child to send messages back to the parent.[m
[32m+[m[32m         *[m
[32m+[m[32m         * There is a special case when sending a `{cmd: 'NODE_foo'}` message. Messages[m
[32m+[m[32m         * containing a `NODE_` prefix in the `cmd` property are reserved for use within[m
[32m+[m[32m         * Node.js core and will not be emitted in the child's `'message'` event. Rather, such messages are emitted using the `'internalMessage'` event and are consumed internally by Node.js.[m
[32m+[m[32m         * Applications should avoid using such messages or listening for `'internalMessage'` events as it is subject to change without notice.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `sendHandle` argument that may be passed to `subprocess.send()` is[m
[32m+[m[32m         * for passing a TCP server or socket object to the child process. The child will[m
[32m+[m[32m         * receive the object as the second argument passed to the callback function[m
[32m+[m[32m         * registered on the `'message'` event. Any data that is received and buffered in[m
[32m+[m[32m         * the socket will not be sent to the child. Sending IPC sockets is not supported on Windows.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `callback` is a function that is invoked after the message is[m
[32m+[m[32m         * sent but before the child may have received it. The function is called with a[m
[32m+[m[32m         * single argument: `null` on success, or an `Error` object on failure.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If no `callback` function is provided and the message cannot be sent, an `'error'` event will be emitted by the `ChildProcess` object. This can[m
[32m+[m[32m         * happen, for instance, when the child process has already exited.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `subprocess.send()` will return `false` if the channel has closed or when the[m
[32m+[m[32m         * backlog of unsent messages exceeds a threshold that makes it unwise to send[m
[32m+[m[32m         * more. Otherwise, the method returns `true`. The `callback` function can be[m
[32m+[m[32m         * used to implement flow control.[m
[32m+[m[32m         *[m
[32m+[m[32m         * #### Example: sending a server object[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `sendHandle` argument can be used, for instance, to pass the handle of[m
[32m+[m[32m         * a TCP server object to the child process as illustrated in the example below:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const subprocess = require('node:child_process').fork('subprocess.js');[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Open up the server object and send the handle.[m
[32m+[m[32m         * const server = require('node:net').createServer();[m
[32m+[m[32m         * server.on('connection', (socket) => {[m
[32m+[m[32m         *   socket.end('handled by parent');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * server.listen(1337, () => {[m
[32m+[m[32m         *   subprocess.send('server', server);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The child would then receive the server object as:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * process.on('message', (m, server) => {[m
[32m+[m[32m         *   if (m === 'server') {[m
[32m+[m[32m         *     server.on('connection', (socket) => {[m
[32m+[m[32m         *       socket.end('handled by child');[m
[32m+[m[32m         *     });[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Once the server is now shared between the parent and child, some connections[m
[32m+[m[32m         * can be handled by the parent and some by the child.[m
[32m+[m[32m         *[m
[32m+[m[32m         * While the example above uses a server created using the `node:net` module, `node:dgram` module servers use exactly the same workflow with the exceptions of[m
[32m+[m[32m         * listening on a `'message'` event instead of `'connection'` and using `server.bind()` instead of `server.listen()`. This is, however, only[m
[32m+[m[32m         * supported on Unix platforms.[m
[32m+[m[32m         *[m
[32m+[m[32m         * #### Example: sending a socket object[m
[32m+[m[32m         *[m
[32m+[m[32m         * Similarly, the `sendHandler` argument can be used to pass the handle of a[m
[32m+[m[32m         * socket to the child process. The example below spawns two children that each[m
[32m+[m[32m         * handle connections with "normal" or "special" priority:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { fork } = require('node:child_process');[m
[32m+[m[32m         * const normal = fork('subprocess.js', ['normal']);[m
[32m+[m[32m         * const special = fork('subprocess.js', ['special']);[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Open up the server and send sockets to child. Use pauseOnConnect to prevent[m
[32m+[m[32m         * // the sockets from being read before they are sent to the child process.[m
[32m+[m[32m         * const server = require('node:net').createServer({ pauseOnConnect: true });[m
[32m+[m[32m         * server.on('connection', (socket) => {[m
[32m+[m[32m         *[m
[32m+[m[32m         *   // If this is special priority...[m
[32m+[m[32m         *   if (socket.remoteAddress === '74.125.127.100') {[m
[32m+[m[32m         *     special.send('socket', socket);[m
[32m+[m[32m         *     return;[m
[32m+[m[32m         *   }[m
[32m+[m[32m         *   // This is normal priority.[m
[32m+[m[32m         *   normal.send('socket', socket);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * server.listen(1337);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `subprocess.js` would receive the socket handle as the second argument[m
[32m+[m[32m         * passed to the event callback function:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * process.on('message', (m, socket) => {[m
[32m+[m[32m         *   if (m === 'socket') {[m
[32m+[m[32m         *     if (socket) {[m
[32m+[m[32m         *       // Check that the client socket exists.[m
[32m+[m[32m         *       // It is possible for the socket to be closed between the time it is[m
[32m+[m[32m         *       // sent and the time it is received in the child process.[m
[32m+[m[32m         *       socket.end(`Request handled with ${process.argv[2]} priority`);[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Do not use `.maxConnections` on a socket that has been passed to a subprocess.[m
[32m+[m[32m         * The parent cannot track when the socket is destroyed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Any `'message'` handlers in the subprocess should verify that `socket` exists,[m
[32m+[m[32m         * as the connection may have been closed during the time it takes to send the[m
[32m+[m[32m         * connection to the child.[m
[32m+[m[32m         * @since v0.5.9[m
[32m+[m[32m         * @param sendHandle `undefined`, or a [`net.Socket`](https://nodejs.org/docs/latest-v22.x/api/net.html#class-netsocket), [`net.Server`](https://nodejs.org/docs/latest-v22.x/api/net.html#class-netserver), or [`dgram.Socket`](https://nodejs.org/docs/latest-v22.x/api/dgram.html#class-dgramsocket) object.[m
[32m+[m[32m         * @param options The `options` argument, if present, is an object used to parameterize the sending of certain types of handles. `options` supports the following properties:[m
[32m+[m[32m         */[m
[32m+[m[32m        send(message: Serializable, callback?: (error: Error | null) => void): boolean;[m
[32m+[m[32m        send(message: Serializable, sendHandle?: SendHandle, callback?: (error: Error | null) => void): boolean;[m
[32m+[m[32m        send([m
[32m+[m[32m            message: Serializable,[m
[32m+[m[32m            sendHandle?: SendHandle,[m
[32m+[m[32m            options?: MessageOptions,[m
[32m+[m[32m            callback?: (error: Error | null) => void,[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Closes the IPC channel between parent and child, allowing the child to exit[m
[32m+[m[32m         * gracefully once there are no other connections keeping it alive. After calling[m
[32m+[m[32m         * this method the `subprocess.connected` and `process.connected` properties in[m
[32m+[m[32m         * both the parent and child (respectively) will be set to `false`, and it will be[m
[32m+[m[32m         * no longer possible to pass messages between the processes.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `'disconnect'` event will be emitted when there are no messages in the[m
[32m+[m[32m         * process of being received. This will most often be triggered immediately after[m
[32m+[m[32m         * calling `subprocess.disconnect()`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When the child process is a Node.js instance (e.g. spawned using {@link fork}), the `process.disconnect()` method can be invoked[m
[32m+[m[32m         * within the child process to close the IPC channel as well.[m
[32m+[m[32m         * @since v0.7.2[m
[32m+[m[32m         */[m
[32m+[m[32m        disconnect(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * By default, the parent will wait for the detached child to exit. To prevent the[m
[32m+[m[32m         * parent from waiting for a given `subprocess` to exit, use the `subprocess.unref()` method. Doing so will cause the parent's event loop to not[m
[32m+[m[32m         * include the child in its reference count, allowing the parent to exit[m
[32m+[m[32m         * independently of the child, unless there is an established IPC channel between[m
[32m+[m[32m         * the child and the parent.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { spawn } = require('node:child_process');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const subprocess = spawn(process.argv[0], ['child_program.js'], {[m
[32m+[m[32m         *   detached: true,[m
[32m+[m[32m         *   stdio: 'ignore',[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * subprocess.unref();[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.7.10[m
[32m+[m[32m         */[m
[32m+[m[32m        unref(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calling `subprocess.ref()` after making a call to `subprocess.unref()` will[m
[32m+[m[32m         * restore the removed reference count for the child process, forcing the parent[m
[32m+[m[32m         * to wait for the child to exit before exiting itself.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { spawn } = require('node:child_process');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const subprocess = spawn(process.argv[0], ['child_program.js'], {[m
[32m+[m[32m         *   detached: true,[m
[32m+[m[32m         *   stdio: 'ignore',[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * subprocess.unref();[m
[32m+[m[32m         * subprocess.ref();[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.7.10[m
[32m+[m[32m         */[m
[32m+[m[32m        ref(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         * 1. close[m
[32m+[m[32m         * 2. disconnect[m
[32m+[m[32m         * 3. error[m
[32m+[m[32m         * 4. exit[m
[32m+[m[32m         * 5. message[m
[32m+[m[32m         * 6. spawn[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: (code: number | null, signal: NodeJS.Signals | null) => void): this;[m
[32m+[m[32m        addListener(event: "disconnect", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "exit", listener: (code: number | null, signal: NodeJS.Signals | null) => void): this;[m
[32m+[m[32m        addListener(event: "message", listener: (message: Serializable, sendHandle: SendHandle) => void): this;[m
[32m+[m[32m        addListener(event: "spawn", listener: () => void): this;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: "close", code: number | null, signal: NodeJS.Signals | null): boolean;[m
[32m+[m[32m        emit(event: "disconnect"): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: "exit", code: number | null, signal: NodeJS.Signals | null): boolean;[m
[32m+[m[32m        emit(event: "message", message: Serializable, sendHandle: SendHandle): boolean;[m
[32m+[m[32m        emit(event: "spawn", listener: () => void): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "close", listener: (code: number | null, signal: NodeJS.Signals | null) => void): this;[m
[32m+[m[32m        on(event: "disconnect", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "exit", listener: (code: number | null, signal: NodeJS.Signals | null) => void): this;[m
[32m+[m[32m        on(event: "message", listener: (message: Serializable, sendHandle: SendHandle) => void): this;[m
[32m+[m[32m        on(event: "spawn", listener: () => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: (code: number | null, signal: NodeJS.Signals | null) => void): this;[m
[32m+[m[32m        once(event: "disconnect", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "exit", listener: (code: number | null, signal: NodeJS.Signals | null) => void): this;[m
[32m+[m[32m        once(event: "message", listener: (message: Serializable, sendHandle: SendHandle) => void): this;[m
[32m+[m[32m        once(event: "spawn", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: (code: number | null, signal: NodeJS.Signals | null) => void): this;[m
[32m+[m[32m        prependListener(event: "disconnect", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "exit", listener: (code: number | null, signal: NodeJS.Signals | null) => void): this;[m
[32m+[m[32m        prependListener(event: "message", listener: (message: Serializable, sendHandle: SendHandle) => void): this;[m
[32m+[m[32m        prependListener(event: "spawn", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "close",[m
[32m+[m[32m            listener: (code: number | null, signal: NodeJS.Signals | null) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "disconnect", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "exit",[m
[32m+[m[32m            listener: (code: number | null, signal: NodeJS.Signals | null) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "message", listener: (message: Serializable, sendHandle: SendHandle) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "spawn", listener: () => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    // return this object when stdio option is undefined or not specified[m
[32m+[m[32m    interface ChildProcessWithoutNullStreams extends ChildProcess {[m
[32m+[m[32m        stdin: Writable;[m
[32m+[m[32m        stdout: Readable;[m
[32m+[m[32m        stderr: Readable;[m
[32m+[m[32m        readonly stdio: [[m
[32m+[m[32m            Writable,[m
[32m+[m[32m            Readable,[m
[32m+[m[32m            Readable,[m
[32m+[m[32m            // stderr[m
[32m+[m[32m            Readable | Writable | null | undefined,[m
[32m+[m[32m            // extra, no modification[m
[32m+[m[32m            Readable | Writable | null | undefined, // extra, no modification[m
[32m+[m[32m        ];[m
[32m+[m[32m    }[m
[32m+[m[32m    // return this object when stdio option is a tuple of 3[m
[32m+[m[32m    interface ChildProcessByStdio<I extends null | Writable, O extends null | Readable, E extends null | Readable>[m
[32m+[m[32m        extends ChildProcess[m
[32m+[m[32m    {[m
[32m+[m[32m        stdin: I;[m
[32m+[m[32m        stdout: O;[m
[32m+[m[32m        stderr: E;[m
[32m+[m[32m        readonly stdio: [[m
[32m+[m[32m            I,[m
[32m+[m[32m            O,[m
[32m+[m[32m            E,[m
[32m+[m[32m            Readable | Writable | null | undefined,[m
[32m+[m[32m            // extra, no modification[m
[32m+[m[32m            Readable | Writable | null | undefined, // extra, no modification[m
[32m+[m[32m        ];[m
[32m+[m[32m    }[m
[32m+[m[32m    interface MessageOptions {[m
[32m+[m[32m        keepOpen?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    type IOType = "overlapped" | "pipe" | "ignore" | "inherit";[m
[32m+[m[32m    type StdioOptions = IOType | Array<IOType | "ipc" | Stream | number | null | undefined>;[m
[32m+[m[32m    type SerializationType = "json" | "advanced";[m
[32m+[m[32m    interface MessagingOptions extends Abortable {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specify the kind of serialization used for sending messages between processes.[m
[32m+[m[32m         * @default 'json'[m
[32m+[m[32m         */[m
[32m+[m[32m        serialization?: SerializationType | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The signal value to be used when the spawned process will be killed by the abort signal.[m
[32m+[m[32m         * @default 'SIGTERM'[m
[32m+[m[32m         */[m
[32m+[m[32m        killSignal?: NodeJS.Signals | number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * In milliseconds the maximum amount of time the process is allowed to run.[m
[32m+[m[32m         */[m
[32m+[m[32m        timeout?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ProcessEnvOptions {[m
[32m+[m[32m        uid?: number | undefined;[m
[32m+[m[32m        gid?: number | undefined;[m
[32m+[m[32m        cwd?: string | URL | undefined;[m
[32m+[m[32m        env?: NodeJS.ProcessEnv | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CommonOptions extends ProcessEnvOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        windowsHide?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         */[m
[32m+[m[32m        timeout?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CommonSpawnOptions extends CommonOptions, MessagingOptions, Abortable {[m
[32m+[m[32m        argv0?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Can be set to 'pipe', 'inherit', 'overlapped', or 'ignore', or an array of these strings.[m
[32m+[m[32m         * If passed as an array, the first element is used for `stdin`, the second for[m
[32m+[m[32m         * `stdout`, and the third for `stderr`. A fourth element can be used to[m
[32m+[m[32m         * specify the `stdio` behavior beyond the standard streams. See[m
[32m+[m[32m         * {@link ChildProcess.stdio} for more information.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @default 'pipe'[m
[32m+[m[32m         */[m
[32m+[m[32m        stdio?: StdioOptions | undefined;[m
[32m+[m[32m        shell?: boolean | string | undefined;[m
[32m+[m[32m        windowsVerbatimArguments?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface SpawnOptions extends CommonSpawnOptions {[m
[32m+[m[32m        detached?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface SpawnOptionsWithoutStdio extends SpawnOptions {[m
[32m+[m[32m        stdio?: StdioPipeNamed | StdioPipe[] | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    type StdioNull = "inherit" | "ignore" | Stream;[m
[32m+[m[32m    type StdioPipeNamed = "pipe" | "overlapped";[m
[32m+[m[32m    type StdioPipe = undefined | null | StdioPipeNamed;[m
[32m+[m[32m    interface SpawnOptionsWithStdioTuple<[m
[32m+[m[32m        Stdin extends StdioNull | StdioPipe,[m
[32m+[m[32m        Stdout extends StdioNull | StdioPipe,[m
[32m+[m[32m        Stderr extends StdioNull | StdioPipe,[m
[32m+[m[32m    > extends SpawnOptions {[m
[32m+[m[32m        stdio: [Stdin, Stdout, Stderr];[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `child_process.spawn()` method spawns a new process using the given `command`, with command-line arguments in `args`. If omitted, `args` defaults[m
[32m+[m[32m     * to an empty array.[m
[32m+[m[32m     *[m
[32m+[m[32m     * **If the `shell` option is enabled, do not pass unsanitized user input to this**[m
[32m+[m[32m     * **function. Any input containing shell metacharacters may be used to trigger**[m
[32m+[m[32m     * **arbitrary command execution.**[m
[32m+[m[32m     *[m
[32m+[m[32m     * A third argument may be used to specify additional options, with these defaults:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const defaults = {[m
[32m+[m[32m     *   cwd: undefined,[m
[32m+[m[32m     *   env: process.env,[m
[32m+[m[32m     * };[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Use `cwd` to specify the working directory from which the process is spawned.[m
[32m+[m[32m     * If not given, the default is to inherit the current working directory. If given,[m
[32m+[m[32m     * but the path does not exist, the child process emits an `ENOENT` error[m
[32m+[m[32m     * and exits immediately. `ENOENT` is also emitted when the command[m
[32m+[m[32m     * does not exist.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Use `env` to specify environment variables that will be visible to the new[m
[32m+[m[32m     * process, the default is `process.env`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `undefined` values in `env` will be ignored.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example of running `ls -lh /usr`, capturing `stdout`, `stderr`, and the[m
[32m+[m[32m     * exit code:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { spawn } = require('node:child_process');[m
[32m+[m[32m     * const ls = spawn('ls', ['-lh', '/usr']);[m
[32m+[m[32m     *[m
[32m+[m[32m     * ls.stdout.on('data', (data) => {[m
[32m+[m[32m     *   console.log(`stdout: ${data}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * ls.stderr.on('data', (data) => {[m
[32m+[m[32m     *   console.error(`stderr: ${data}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * ls.on('close', (code) => {[m
[32m+[m[32m     *   console.log(`child process exited with code ${code}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: A very elaborate way to run `ps ax | grep ssh`[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { spawn } = require('node:child_process');[m
[32m+[m[32m     * const ps = spawn('ps', ['ax']);[m
[32m+[m[32m     * const grep = spawn('grep', ['ssh']);[m
[32m+[m[32m     *[m
[32m+[m[32m     * ps.stdout.on('data', (data) => {[m
[32m+[m[32m     *   grep.stdin.write(data);[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * ps.stderr.on('data', (data) => {[m
[32m+[m[32m     *   console.error(`ps stderr: ${data}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * ps.on('close', (code) => {[m
[32m+[m[32m     *   if (code !== 0) {[m
[32m+[m[32m     *     console.log(`ps process exited with code ${code}`);[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *   grep.stdin.end();[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * grep.stdout.on('data', (data) => {[m
[32m+[m[32m     *   console.log(data.toString());[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * grep.stderr.on('data', (data) => {[m
[32m+[m[32m     *   console.error(`grep stderr: ${data}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * grep.on('close', (code) => {[m
[32m+[m[32m     *   if (code !== 0) {[m
[32m+[m[32m     *     console.log(`grep process exited with code ${code}`);[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example of checking for failed `spawn`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { spawn } = require('node:child_process');[m
[32m+[m[32m     * const subprocess = spawn('bad_command');[m
[32m+[m[32m     *[m
[32m+[m[32m     * subprocess.on('error', (err) => {[m
[32m+[m[32m     *   console.error('Failed to start subprocess.');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Certain platforms (macOS, Linux) will use the value of `argv[0]` for the process[m
[32m+[m[32m     * title while others (Windows, SunOS) will use `command`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Node.js overwrites `argv[0]` with `process.execPath` on startup, so `process.argv[0]` in a Node.js child process will not match the `argv0` parameter passed to `spawn` from the parent. Retrieve[m
[32m+[m[32m     * it with the `process.argv0` property instead.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `signal` option is enabled, calling `.abort()` on the corresponding `AbortController` is similar to calling `.kill()` on the child process except[m
[32m+[m[32m     * the error passed to the callback will be an `AbortError`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { spawn } = require('node:child_process');[m
[32m+[m[32m     * const controller = new AbortController();[m
[32m+[m[32m     * const { signal } = controller;[m
[32m+[m[32m     * const grep = spawn('grep', ['ssh'], { signal });[m
[32m+[m[32m     * grep.on('error', (err) => {[m
[32m+[m[32m     *   // This will be called with err being an AbortError if the controller aborts[m
[32m+[m[32m     * });[m
[32m+[m[32m     * controller.abort(); // Stops the child process[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.90[m
[32m+[m[32m     * @param command The command to run.[m
[32m+[m[32m     * @param args List of string arguments.[m
[32m+[m[32m     */[m
[32m+[m[32m    function spawn(command: string, options?: SpawnOptionsWithoutStdio): ChildProcessWithoutNullStreams;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioPipe, StdioPipe, StdioPipe>,[m
[32m+[m[32m    ): ChildProcessByStdio<Writable, Readable, Readable>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioPipe, StdioPipe, StdioNull>,[m
[32m+[m[32m    ): ChildProcessByStdio<Writable, Readable, null>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioPipe, StdioNull, StdioPipe>,[m
[32m+[m[32m    ): ChildProcessByStdio<Writable, null, Readable>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioNull, StdioPipe, StdioPipe>,[m
[32m+[m[32m    ): ChildProcessByStdio<null, Readable, Readable>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioPipe, StdioNull, StdioNull>,[m
[32m+[m[32m    ): ChildProcessByStdio<Writable, null, null>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioNull, StdioPipe, StdioNull>,[m
[32m+[m[32m    ): ChildProcessByStdio<null, Readable, null>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioNull, StdioNull, StdioPipe>,[m
[32m+[m[32m    ): ChildProcessByStdio<null, null, Readable>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioNull, StdioNull, StdioNull>,[m
[32m+[m[32m    ): ChildProcessByStdio<null, null, null>;[m
[32m+[m[32m    function spawn(command: string, options: SpawnOptions): ChildProcess;[m
[32m+[m[32m    // overloads of spawn with 'args'[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args?: readonly string[],[m
[32m+[m[32m        options?: SpawnOptionsWithoutStdio,[m
[32m+[m[32m    ): ChildProcessWithoutNullStreams;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioPipe, StdioPipe, StdioPipe>,[m
[32m+[m[32m    ): ChildProcessByStdio<Writable, Readable, Readable>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioPipe, StdioPipe, StdioNull>,[m
[32m+[m[32m    ): ChildProcessByStdio<Writable, Readable, null>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioPipe, StdioNull, StdioPipe>,[m
[32m+[m[32m    ): ChildProcessByStdio<Writable, null, Readable>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioNull, StdioPipe, StdioPipe>,[m
[32m+[m[32m    ): ChildProcessByStdio<null, Readable, Readable>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioPipe, StdioNull, StdioNull>,[m
[32m+[m[32m    ): ChildProcessByStdio<Writable, null, null>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioNull, StdioPipe, StdioNull>,[m
[32m+[m[32m    ): ChildProcessByStdio<null, Readable, null>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioNull, StdioNull, StdioPipe>,[m
[32m+[m[32m    ): ChildProcessByStdio<null, null, Readable>;[m
[32m+[m[32m    function spawn([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: SpawnOptionsWithStdioTuple<StdioNull, StdioNull, StdioNull>,[m
[32m+[m[32m    ): ChildProcessByStdio<null, null, null>;[m
[32m+[m[32m    function spawn(command: string, args: readonly string[], options: SpawnOptions): ChildProcess;[m
[32m+[m[32m    interface ExecOptions extends CommonOptions {[m
[32m+[m[32m        shell?: string | undefined;[m
[32m+[m[32m        signal?: AbortSignal | undefined;[m
[32m+[m[32m        maxBuffer?: number | undefined;[m
[32m+[m[32m        killSignal?: NodeJS.Signals | number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecOptionsWithStringEncoding extends ExecOptions {[m
[32m+[m[32m        encoding: BufferEncoding;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecOptionsWithBufferEncoding extends ExecOptions {[m
[32m+[m[32m        encoding: BufferEncoding | null; // specify `null`.[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecException extends Error {[m
[32m+[m[32m        cmd?: string | undefined;[m
[32m+[m[32m        killed?: boolean | undefined;[m
[32m+[m[32m        code?: number | undefined;[m
[32m+[m[32m        signal?: NodeJS.Signals | undefined;[m
[32m+[m[32m        stdout?: string;[m
[32m+[m[32m        stderr?: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Spawns a shell then executes the `command` within that shell, buffering any[m
[32m+[m[32m     * generated output. The `command` string passed to the exec function is processed[m
[32m+[m[32m     * directly by the shell and special characters (vary based on [shell](https://en.wikipedia.org/wiki/List_of_command-line_interpreters))[m
[32m+[m[32m     * need to be dealt with accordingly:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { exec } = require('node:child_process');[m
[32m+[m[32m     *[m
[32m+[m[32m     * exec('"/path/to/test file/test.sh" arg1 arg2');[m
[32m+[m[32m     * // Double quotes are used so that the space in the path is not interpreted as[m
[32m+[m[32m     * // a delimiter of multiple arguments.[m
[32m+[m[32m     *[m
[32m+[m[32m     * exec('echo "The \\$HOME variable is $HOME"');[m
[32m+[m[32m     * // The $HOME variable is escaped in the first instance, but not in the second.[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * **Never pass unsanitized user input to this function. Any input containing shell**[m
[32m+[m[32m     * **metacharacters may be used to trigger arbitrary command execution.**[m
[32m+[m[32m     *[m
[32m+[m[32m     * If a `callback` function is provided, it is called with the arguments `(error, stdout, stderr)`. On success, `error` will be `null`. On error, `error` will be an instance of `Error`. The[m
[32m+[m[32m     * `error.code` property will be[m
[32m+[m[32m     * the exit code of the process. By convention, any exit code other than `0` indicates an error. `error.signal` will be the signal that terminated the[m
[32m+[m[32m     * process.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `stdout` and `stderr` arguments passed to the callback will contain the[m
[32m+[m[32m     * stdout and stderr output of the child process. By default, Node.js will decode[m
[32m+[m[32m     * the output as UTF-8 and pass strings to the callback. The `encoding` option[m
[32m+[m[32m     * can be used to specify the character encoding used to decode the stdout and[m
[32m+[m[32m     * stderr output. If `encoding` is `'buffer'`, or an unrecognized character[m
[32m+[m[32m     * encoding, `Buffer` objects will be passed to the callback instead.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { exec } = require('node:child_process');[m
[32m+[m[32m     * exec('cat *.js missing_file | wc -l', (error, stdout, stderr) => {[m
[32m+[m[32m     *   if (error) {[m
[32m+[m[32m     *     console.error(`exec error: ${error}`);[m
[32m+[m[32m     *     return;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *   console.log(`stdout: ${stdout}`);[m
[32m+[m[32m     *   console.error(`stderr: ${stderr}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `timeout` is greater than `0`, the parent will send the signal[m
[32m+[m[32m     * identified by the `killSignal` property (the default is `'SIGTERM'`) if the[m
[32m+[m[32m     * child runs longer than `timeout` milliseconds.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Unlike the [`exec(3)`](http://man7.org/linux/man-pages/man3/exec.3.html) POSIX system call, `child_process.exec()` does not replace[m
[32m+[m[32m     * the existing process and uses a shell to execute the command.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If this method is invoked as its `util.promisify()` ed version, it returns[m
[32m+[m[32m     * a `Promise` for an `Object` with `stdout` and `stderr` properties. The returned `ChildProcess` instance is attached to the `Promise` as a `child` property. In[m
[32m+[m[32m     * case of an error (including any error resulting in an exit code other than 0), a[m
[32m+[m[32m     * rejected promise is returned, with the same `error` object given in the[m
[32m+[m[32m     * callback, but with two additional properties `stdout` and `stderr`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const util = require('node:util');[m
[32m+[m[32m     * const exec = util.promisify(require('node:child_process').exec);[m
[32m+[m[32m     *[m
[32m+[m[32m     * async function lsExample() {[m
[32m+[m[32m     *   const { stdout, stderr } = await exec('ls');[m
[32m+[m[32m     *   console.log('stdout:', stdout);[m
[32m+[m[32m     *   console.error('stderr:', stderr);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * lsExample();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `signal` option is enabled, calling `.abort()` on the corresponding `AbortController` is similar to calling `.kill()` on the child process except[m
[32m+[m[32m     * the error passed to the callback will be an `AbortError`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { exec } = require('node:child_process');[m
[32m+[m[32m     * const controller = new AbortController();[m
[32m+[m[32m     * const { signal } = controller;[m
[32m+[m[32m     * const child = exec('grep ssh', { signal }, (error) => {[m
[32m+[m[32m     *   console.error(error); // an AbortError[m
[32m+[m[32m     * });[m
[32m+[m[32m     * controller.abort();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.90[m
[32m+[m[32m     * @param command The command to run, with space-separated arguments.[m
[32m+[m[32m     * @param callback called with the output when process terminates.[m
[32m+[m[32m     */[m
[32m+[m[32m    function exec([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        callback?: (error: ExecException | null, stdout: string, stderr: string) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // `options` with `"buffer"` or `null` for `encoding` means stdout/stderr are definitely `Buffer`.[m
[32m+[m[32m    function exec([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: {[m
[32m+[m[32m            encoding: "buffer" | null;[m
[32m+[m[32m        } & ExecOptions,[m
[32m+[m[32m        callback?: (error: ExecException | null, stdout: Buffer, stderr: Buffer) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // `options` with well known `encoding` means stdout/stderr are definitely `string`.[m
[32m+[m[32m    function exec([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: {[m
[32m+[m[32m            encoding: BufferEncoding;[m
[32m+[m[32m        } & ExecOptions,[m
[32m+[m[32m        callback?: (error: ExecException | null, stdout: string, stderr: string) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // `options` with an `encoding` whose type is `string` means stdout/stderr could either be `Buffer` or `string`.[m
[32m+[m[32m    // There is no guarantee the `encoding` is unknown as `string` is a superset of `BufferEncoding`.[m
[32m+[m[32m    function exec([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: {[m
[32m+[m[32m            encoding: BufferEncoding;[m
[32m+[m[32m        } & ExecOptions,[m
[32m+[m[32m        callback?: (error: ExecException | null, stdout: string | Buffer, stderr: string | Buffer) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // `options` without an `encoding` means stdout/stderr are definitely `string`.[m
[32m+[m[32m    function exec([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: ExecOptions,[m
[32m+[m[32m        callback?: (error: ExecException | null, stdout: string, stderr: string) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // fallback if nothing else matches. Worst case is always `string | Buffer`.[m
[32m+[m[32m    function exec([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        options: (ObjectEncodingOptions & ExecOptions) | undefined | null,[m
[32m+[m[32m        callback?: (error: ExecException | null, stdout: string | Buffer, stderr: string | Buffer) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    interface PromiseWithChild<T> extends Promise<T> {[m
[32m+[m[32m        child: ChildProcess;[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace exec {[m
[32m+[m[32m        function __promisify__(command: string): PromiseWithChild<{[m
[32m+[m[32m            stdout: string;[m
[32m+[m[32m            stderr: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            command: string,[m
[32m+[m[32m            options: {[m
[32m+[m[32m                encoding: "buffer" | null;[m
[32m+[m[32m            } & ExecOptions,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: Buffer;[m
[32m+[m[32m            stderr: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            command: string,[m
[32m+[m[32m            options: {[m
[32m+[m[32m                encoding: BufferEncoding;[m
[32m+[m[32m            } & ExecOptions,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string;[m
[32m+[m[32m            stderr: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            command: string,[m
[32m+[m[32m            options: ExecOptions,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string;[m
[32m+[m[32m            stderr: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            command: string,[m
[32m+[m[32m            options?: (ObjectEncodingOptions & ExecOptions) | null,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string | Buffer;[m
[32m+[m[32m            stderr: string | Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecFileOptions extends CommonOptions, Abortable {[m
[32m+[m[32m        maxBuffer?: number | undefined;[m
[32m+[m[32m        killSignal?: NodeJS.Signals | number | undefined;[m
[32m+[m[32m        windowsVerbatimArguments?: boolean | undefined;[m
[32m+[m[32m        shell?: boolean | string | undefined;[m
[32m+[m[32m        signal?: AbortSignal | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecFileOptionsWithStringEncoding extends ExecFileOptions {[m
[32m+[m[32m        encoding: BufferEncoding;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecFileOptionsWithBufferEncoding extends ExecFileOptions {[m
[32m+[m[32m        encoding: "buffer" | null;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecFileOptionsWithOtherEncoding extends ExecFileOptions {[m
[32m+[m[32m        encoding: BufferEncoding;[m
[32m+[m[32m    }[m
[32m+[m[32m    type ExecFileException =[m
[32m+[m[32m        & Omit<ExecException, "code">[m
[32m+[m[32m        & Omit<NodeJS.ErrnoException, "code">[m
[32m+[m[32m        & { code?: string | number | undefined | null };[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `child_process.execFile()` function is similar to {@link exec} except that it does not spawn a shell by default. Rather, the specified[m
[32m+[m[32m     * executable `file` is spawned directly as a new process making it slightly more[m
[32m+[m[32m     * efficient than {@link exec}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The same options as {@link exec} are supported. Since a shell is[m
[32m+[m[32m     * not spawned, behaviors such as I/O redirection and file globbing are not[m
[32m+[m[32m     * supported.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { execFile } = require('node:child_process');[m
[32m+[m[32m     * const child = execFile('node', ['--version'], (error, stdout, stderr) => {[m
[32m+[m[32m     *   if (error) {[m
[32m+[m[32m     *     throw error;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *   console.log(stdout);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `stdout` and `stderr` arguments passed to the callback will contain the[m
[32m+[m[32m     * stdout and stderr output of the child process. By default, Node.js will decode[m
[32m+[m[32m     * the output as UTF-8 and pass strings to the callback. The `encoding` option[m
[32m+[m[32m     * can be used to specify the character encoding used to decode the stdout and[m
[32m+[m[32m     * stderr output. If `encoding` is `'buffer'`, or an unrecognized character[m
[32m+[m[32m     * encoding, `Buffer` objects will be passed to the callback instead.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If this method is invoked as its `util.promisify()` ed version, it returns[m
[32m+[m[32m     * a `Promise` for an `Object` with `stdout` and `stderr` properties. The returned `ChildProcess` instance is attached to the `Promise` as a `child` property. In[m
[32m+[m[32m     * case of an error (including any error resulting in an exit code other than 0), a[m
[32m+[m[32m     * rejected promise is returned, with the same `error` object given in the[m
[32m+[m[32m     * callback, but with two additional properties `stdout` and `stderr`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const util = require('node:util');[m
[32m+[m[32m     * const execFile = util.promisify(require('node:child_process').execFile);[m
[32m+[m[32m     * async function getVersion() {[m
[32m+[m[32m     *   const { stdout } = await execFile('node', ['--version']);[m
[32m+[m[32m     *   console.log(stdout);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * getVersion();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * **If the `shell` option is enabled, do not pass unsanitized user input to this**[m
[32m+[m[32m     * **function. Any input containing shell metacharacters may be used to trigger**[m
[32m+[m[32m     * **arbitrary command execution.**[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `signal` option is enabled, calling `.abort()` on the corresponding `AbortController` is similar to calling `.kill()` on the child process except[m
[32m+[m[32m     * the error passed to the callback will be an `AbortError`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { execFile } = require('node:child_process');[m
[32m+[m[32m     * const controller = new AbortController();[m
[32m+[m[32m     * const { signal } = controller;[m
[32m+[m[32m     * const child = execFile('node', ['--version'], { signal }, (error) => {[m
[32m+[m[32m     *   console.error(error); // an AbortError[m
[32m+[m[32m     * });[m
[32m+[m[32m     * controller.abort();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.91[m
[32m+[m[32m     * @param file The name or path of the executable file to run.[m
[32m+[m[32m     * @param args List of string arguments.[m
[32m+[m[32m     * @param callback Called with the output when process terminates.[m
[32m+[m[32m     */[m
[32m+[m[32m    function execFile(file: string): ChildProcess;[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        options: (ObjectEncodingOptions & ExecFileOptions) | undefined | null,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    function execFile(file: string, args?: readonly string[] | null): ChildProcess;[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        args: readonly string[] | undefined | null,[m
[32m+[m[32m        options: (ObjectEncodingOptions & ExecFileOptions) | undefined | null,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // no `options` definitely means stdout/stderr are `string`.[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        callback: (error: ExecFileException | null, stdout: string, stderr: string) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        args: readonly string[] | undefined | null,[m
[32m+[m[32m        callback: (error: ExecFileException | null, stdout: string, stderr: string) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // `options` with `"buffer"` or `null` for `encoding` means stdout/stderr are definitely `Buffer`.[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        options: ExecFileOptionsWithBufferEncoding,[m
[32m+[m[32m        callback: (error: ExecFileException | null, stdout: Buffer, stderr: Buffer) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        args: readonly string[] | undefined | null,[m
[32m+[m[32m        options: ExecFileOptionsWithBufferEncoding,[m
[32m+[m[32m        callback: (error: ExecFileException | null, stdout: Buffer, stderr: Buffer) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // `options` with well known `encoding` means stdout/stderr are definitely `string`.[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        options: ExecFileOptionsWithStringEncoding,[m
[32m+[m[32m        callback: (error: ExecFileException | null, stdout: string, stderr: string) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        args: readonly string[] | undefined | null,[m
[32m+[m[32m        options: ExecFileOptionsWithStringEncoding,[m
[32m+[m[32m        callback: (error: ExecFileException | null, stdout: string, stderr: string) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // `options` with an `encoding` whose type is `string` means stdout/stderr could either be `Buffer` or `string`.[m
[32m+[m[32m    // There is no guarantee the `encoding` is unknown as `string` is a superset of `BufferEncoding`.[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        options: ExecFileOptionsWithOtherEncoding,[m
[32m+[m[32m        callback: (error: ExecFileException | null, stdout: string | Buffer, stderr: string | Buffer) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        args: readonly string[] | undefined | null,[m
[32m+[m[32m        options: ExecFileOptionsWithOtherEncoding,[m
[32m+[m[32m        callback: (error: ExecFileException | null, stdout: string | Buffer, stderr: string | Buffer) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // `options` without an `encoding` means stdout/stderr are definitely `string`.[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        options: ExecFileOptions,[m
[32m+[m[32m        callback: (error: ExecFileException | null, stdout: string, stderr: string) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        args: readonly string[] | undefined | null,[m
[32m+[m[32m        options: ExecFileOptions,[m
[32m+[m[32m        callback: (error: ExecFileException | null, stdout: string, stderr: string) => void,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    // fallback if nothing else matches. Worst case is always `string | Buffer`.[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        options: (ObjectEncodingOptions & ExecFileOptions) | undefined | null,[m
[32m+[m[32m        callback:[m
[32m+[m[32m            | ((error: ExecFileException | null, stdout: string | Buffer, stderr: string | Buffer) => void)[m
[32m+[m[32m            | undefined[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    function execFile([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        args: readonly string[] | undefined | null,[m
[32m+[m[32m        options: (ObjectEncodingOptions & ExecFileOptions) | undefined | null,[m
[32m+[m[32m        callback:[m
[32m+[m[32m            | ((error: ExecFileException | null, stdout: string | Buffer, stderr: string | Buffer) => void)[m
[32m+[m[32m            | undefined[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): ChildProcess;[m
[32m+[m[32m    namespace execFile {[m
[32m+[m[32m        function __promisify__(file: string): PromiseWithChild<{[m
[32m+[m[32m            stdout: string;[m
[32m+[m[32m            stderr: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            args: readonly string[] | undefined | null,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string;[m
[32m+[m[32m            stderr: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            options: ExecFileOptionsWithBufferEncoding,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: Buffer;[m
[32m+[m[32m            stderr: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            args: readonly string[] | undefined | null,[m
[32m+[m[32m            options: ExecFileOptionsWithBufferEncoding,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: Buffer;[m
[32m+[m[32m            stderr: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            options: ExecFileOptionsWithStringEncoding,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string;[m
[32m+[m[32m            stderr: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            args: readonly string[] | undefined | null,[m
[32m+[m[32m            options: ExecFileOptionsWithStringEncoding,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string;[m
[32m+[m[32m            stderr: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            options: ExecFileOptionsWithOtherEncoding,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string | Buffer;[m
[32m+[m[32m            stderr: string | Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            args: readonly string[] | undefined | null,[m
[32m+[m[32m            options: ExecFileOptionsWithOtherEncoding,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string | Buffer;[m
[32m+[m[32m            stderr: string | Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            options: ExecFileOptions,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string;[m
[32m+[m[32m            stderr: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            args: readonly string[] | undefined | null,[m
[32m+[m[32m            options: ExecFileOptions,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string;[m
[32m+[m[32m            stderr: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            options: (ObjectEncodingOptions & ExecFileOptions) | undefined | null,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string | Buffer;[m
[32m+[m[32m            stderr: string | Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: string,[m
[32m+[m[32m            args: readonly string[] | undefined | null,[m
[32m+[m[32m            options: (ObjectEncodingOptions & ExecFileOptions) | undefined | null,[m
[32m+[m[32m        ): PromiseWithChild<{[m
[32m+[m[32m            stdout: string | Buffer;[m
[32m+[m[32m            stderr: string | Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ForkOptions extends ProcessEnvOptions, MessagingOptions, Abortable {[m
[32m+[m[32m        execPath?: string | undefined;[m
[32m+[m[32m        execArgv?: string[] | undefined;[m
[32m+[m[32m        silent?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Can be set to 'pipe', 'inherit', 'overlapped', or 'ignore', or an array of these strings.[m
[32m+[m[32m         * If passed as an array, the first element is used for `stdin`, the second for[m
[32m+[m[32m         * `stdout`, and the third for `stderr`. A fourth element can be used to[m
[32m+[m[32m         * specify the `stdio` behavior beyond the standard streams. See[m
[32m+[m[32m         * {@link ChildProcess.stdio} for more information.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @default 'pipe'[m
[32m+[m[32m         */[m
[32m+[m[32m        stdio?: StdioOptions | undefined;[m
[32m+[m[32m        detached?: boolean | undefined;[m
[32m+[m[32m        windowsVerbatimArguments?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `child_process.fork()` method is a special case of {@link spawn} used specifically to spawn new Node.js processes.[m
[32m+[m[32m     * Like {@link spawn}, a `ChildProcess` object is returned. The[m
[32m+[m[32m     * returned `ChildProcess` will have an additional communication channel[m
[32m+[m[32m     * built-in that allows messages to be passed back and forth between the parent and[m
[32m+[m[32m     * child. See `subprocess.send()` for details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Keep in mind that spawned Node.js child processes are[m
[32m+[m[32m     * independent of the parent with exception of the IPC communication channel[m
[32m+[m[32m     * that is established between the two. Each process has its own memory, with[m
[32m+[m[32m     * their own V8 instances. Because of the additional resource allocations[m
[32m+[m[32m     * required, spawning a large number of child Node.js processes is not[m
[32m+[m[32m     * recommended.[m
[32m+[m[32m     *[m
[32m+[m[32m     * By default, `child_process.fork()` will spawn new Node.js instances using the `process.execPath` of the parent process. The `execPath` property in the `options` object allows for an alternative[m
[32m+[m[32m     * execution path to be used.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Node.js processes launched with a custom `execPath` will communicate with the[m
[32m+[m[32m     * parent process using the file descriptor (fd) identified using the[m
[32m+[m[32m     * environment variable `NODE_CHANNEL_FD` on the child process.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Unlike the [`fork(2)`](http://man7.org/linux/man-pages/man2/fork.2.html) POSIX system call, `child_process.fork()` does not clone the[m
[32m+[m[32m     * current process.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `shell` option available in {@link spawn} is not supported by `child_process.fork()` and will be ignored if set.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `signal` option is enabled, calling `.abort()` on the corresponding `AbortController` is similar to calling `.kill()` on the child process except[m
[32m+[m[32m     * the error passed to the callback will be an `AbortError`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * if (process.argv[2] === 'child') {[m
[32m+[m[32m     *   setTimeout(() => {[m
[32m+[m[32m     *     console.log(`Hello from ${process.argv[2]}!`);[m
[32m+[m[32m     *   }, 1_000);[m
[32m+[m[32m     * } else {[m
[32m+[m[32m     *   const { fork } = require('node:child_process');[m
[32m+[m[32m     *   const controller = new AbortController();[m
[32m+[m[32m     *   const { signal } = controller;[m
[32m+[m[32m     *   const child = fork(__filename, ['child'], { signal });[m
[32m+[m[32m     *   child.on('error', (err) => {[m
[32m+[m[32m     *     // This will be called with err being an AbortError if the controller aborts[m
[32m+[m[32m     *   });[m
[32m+[m[32m     *   controller.abort(); // Stops the child process[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.5.0[m
[32m+[m[32m     * @param modulePath The module to run in the child.[m
[32m+[m[32m     * @param args List of string arguments.[m
[32m+[m[32m     */[m
[32m+[m[32m    function fork(modulePath: string | URL, options?: ForkOptions): ChildProcess;[m
[32m+[m[32m    function fork(modulePath: string | URL, args?: readonly string[], options?: ForkOptions): ChildProcess;[m
[32m+[m[32m    interface SpawnSyncOptions extends CommonSpawnOptions {[m
[32m+[m[32m        input?: string | NodeJS.ArrayBufferView | undefined;[m
[32m+[m[32m        maxBuffer?: number | undefined;[m
[32m+[m[32m        encoding?: BufferEncoding | "buffer" | null | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface SpawnSyncOptionsWithStringEncoding extends SpawnSyncOptions {[m
[32m+[m[32m        encoding: BufferEncoding;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface SpawnSyncOptionsWithBufferEncoding extends SpawnSyncOptions {[m
[32m+[m[32m        encoding?: "buffer" | null | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface SpawnSyncReturns<T> {[m
[32m+[m[32m        pid: number;[m
[32m+[m[32m        output: Array<T | null>;[m
[32m+[m[32m        stdout: T;[m
[32m+[m[32m        stderr: T;[m
[32m+[m[32m        status: number | null;[m
[32m+[m[32m        signal: NodeJS.Signals | null;[m
[32m+[m[32m        error?: Error | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `child_process.spawnSync()` method is generally identical to {@link spawn} with the exception that the function will not return[m
[32m+[m[32m     * until the child process has fully closed. When a timeout has been encountered[m
[32m+[m[32m     * and `killSignal` is sent, the method won't return until the process has[m
[32m+[m[32m     * completely exited. If the process intercepts and handles the `SIGTERM` signal[m
[32m+[m[32m     * and doesn't exit, the parent process will wait until the child process has[m
[32m+[m[32m     * exited.[m
[32m+[m[32m     *[m
[32m+[m[32m     * **If the `shell` option is enabled, do not pass unsanitized user input to this**[m
[32m+[m[32m     * **function. Any input containing shell metacharacters may be used to trigger**[m
[32m+[m[32m     * **arbitrary command execution.**[m
[32m+[m[32m     * @since v0.11.12[m
[32m+[m[32m     * @param command The command to run.[m
[32m+[m[32m     * @param args List of string arguments.[m
[32m+[m[32m     */[m
[32m+[m[32m    function spawnSync(command: string): SpawnSyncReturns<Buffer>;[m
[32m+[m[32m    function spawnSync(command: string, options: SpawnSyncOptionsWithStringEncoding): SpawnSyncReturns<string>;[m
[32m+[m[32m    function spawnSync(command: string, options: SpawnSyncOptionsWithBufferEncoding): SpawnSyncReturns<Buffer>;[m
[32m+[m[32m    function spawnSync(command: string, options?: SpawnSyncOptions): SpawnSyncReturns<string | Buffer>;[m
[32m+[m[32m    function spawnSync(command: string, args: readonly string[]): SpawnSyncReturns<Buffer>;[m
[32m+[m[32m    function spawnSync([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: SpawnSyncOptionsWithStringEncoding,[m
[32m+[m[32m    ): SpawnSyncReturns<string>;[m
[32m+[m[32m    function spawnSync([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: SpawnSyncOptionsWithBufferEncoding,[m
[32m+[m[32m    ): SpawnSyncReturns<Buffer>;[m
[32m+[m[32m    function spawnSync([m
[32m+[m[32m        command: string,[m
[32m+[m[32m        args?: readonly string[],[m
[32m+[m[32m        options?: SpawnSyncOptions,[m
[32m+[m[32m    ): SpawnSyncReturns<string | Buffer>;[m
[32m+[m[32m    interface CommonExecOptions extends CommonOptions {[m
[32m+[m[32m        input?: string | NodeJS.ArrayBufferView | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Can be set to 'pipe', 'inherit, or 'ignore', or an array of these strings.[m
[32m+[m[32m         * If passed as an array, the first element is used for `stdin`, the second for[m
[32m+[m[32m         * `stdout`, and the third for `stderr`. A fourth element can be used to[m
[32m+[m[32m         * specify the `stdio` behavior beyond the standard streams. See[m
[32m+[m[32m         * {@link ChildProcess.stdio} for more information.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @default 'pipe'[m
[32m+[m[32m         */[m
[32m+[m[32m        stdio?: StdioOptions | undefined;[m
[32m+[m[32m        killSignal?: NodeJS.Signals | number | undefined;[m
[32m+[m[32m        maxBuffer?: number | undefined;[m
[32m+[m[32m        encoding?: BufferEncoding | "buffer" | null | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecSyncOptions extends CommonExecOptions {[m
[32m+[m[32m        shell?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecSyncOptionsWithStringEncoding extends ExecSyncOptions {[m
[32m+[m[32m        encoding: BufferEncoding;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecSyncOptionsWithBufferEncoding extends ExecSyncOptions {[m
[32m+[m[32m        encoding?: "buffer" | null | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `child_process.execSync()` method is generally identical to {@link exec} with the exception that the method will not return[m
[32m+[m[32m     * until the child process has fully closed. When a timeout has been encountered[m
[32m+[m[32m     * and `killSignal` is sent, the method won't return until the process has[m
[32m+[m[32m     * completely exited. If the child process intercepts and handles the `SIGTERM` signal and doesn't exit, the parent process will wait until the child process[m
[32m+[m[32m     * has exited.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the process times out or has a non-zero exit code, this method will throw.[m
[32m+[m[32m     * The `Error` object will contain the entire result from {@link spawnSync}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * **Never pass unsanitized user input to this function. Any input containing shell**[m
[32m+[m[32m     * **metacharacters may be used to trigger arbitrary command execution.**[m
[32m+[m[32m     * @since v0.11.12[m
[32m+[m[32m     * @param command The command to run.[m
[32m+[m[32m     * @return The stdout from the command.[m
[32m+[m[32m     */[m
[32m+[m[32m    function execSync(command: string): Buffer;[m
[32m+[m[32m    function execSync(command: string, options: ExecSyncOptionsWithStringEncoding): string;[m
[32m+[m[32m    function execSync(command: string, options: ExecSyncOptionsWithBufferEncoding): Buffer;[m
[32m+[m[32m    function execSync(command: string, options?: ExecSyncOptions): string | Buffer;[m
[32m+[m[32m    interface ExecFileSyncOptions extends CommonExecOptions {[m
[32m+[m[32m        shell?: boolean | string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecFileSyncOptionsWithStringEncoding extends ExecFileSyncOptions {[m
[32m+[m[32m        encoding: BufferEncoding;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ExecFileSyncOptionsWithBufferEncoding extends ExecFileSyncOptions {[m
[32m+[m[32m        encoding?: "buffer" | null; // specify `null`.[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `child_process.execFileSync()` method is generally identical to {@link execFile} with the exception that the method will not[m
[32m+[m[32m     * return until the child process has fully closed. When a timeout has been[m
[32m+[m[32m     * encountered and `killSignal` is sent, the method won't return until the process[m
[32m+[m[32m     * has completely exited.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the child process intercepts and handles the `SIGTERM` signal and[m
[32m+[m[32m     * does not exit, the parent process will still wait until the child process has[m
[32m+[m[32m     * exited.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the process times out or has a non-zero exit code, this method will throw an `Error` that will include the full result of the underlying {@link spawnSync}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * **If the `shell` option is enabled, do not pass unsanitized user input to this**[m
[32m+[m[32m     * **function. Any input containing shell metacharacters may be used to trigger**[m
[32m+[m[32m     * **arbitrary command execution.**[m
[32m+[m[32m     * @since v0.11.12[m
[32m+[m[32m     * @param file The name or path of the executable file to run.[m
[32m+[m[32m     * @param args List of string arguments.[m
[32m+[m[32m     * @return The stdout from the command.[m
[32m+[m[32m     */[m
[32m+[m[32m    function execFileSync(file: string): Buffer;[m
[32m+[m[32m    function execFileSync(file: string, options: ExecFileSyncOptionsWithStringEncoding): string;[m
[32m+[m[32m    function execFileSync(file: string, options: ExecFileSyncOptionsWithBufferEncoding): Buffer;[m
[32m+[m[32m    function execFileSync(file: string, options?: ExecFileSyncOptions): string | Buffer;[m
[32m+[m[32m    function execFileSync(file: string, args: readonly string[]): Buffer;[m
[32m+[m[32m    function execFileSync([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: ExecFileSyncOptionsWithStringEncoding,[m
[32m+[m[32m    ): string;[m
[32m+[m[32m    function execFileSync([m
[32m+[m[32m        file: string,[m
[32m+[m[32m        args: readonly string[],[m
[32m+[m[32m        options: ExecFileSyncOptionsWithBufferEncoding,[m
[32m+[m[32m    ): Buffer;[m
[32m+[m[32m    function execFileSync(file: string, args?: readonly string[], options?: ExecFileSyncOptions): string | Buffer;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:child_process" {[m
[32m+[m[32m    export * from "child_process";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/cluster.d.ts b/node_modules/@types/node/cluster.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..01bf3d8[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/cluster.d.ts[m
[36m@@ -0,0 +1,578 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Clusters of Node.js processes can be used to run multiple instances of Node.js[m
[32m+[m[32m * that can distribute workloads among their application threads. When process isolation[m
[32m+[m[32m * is not needed, use the [`worker_threads`](https://nodejs.org/docs/latest-v22.x/api/worker_threads.html)[m
[32m+[m[32m * module instead, which allows running multiple application threads within a single Node.js instance.[m
[32m+[m[32m *[m
[32m+[m[32m * The cluster module allows easy creation of child processes that all share[m
[32m+[m[32m * server ports.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import cluster from 'node:cluster';[m
[32m+[m[32m * import http from 'node:http';[m
[32m+[m[32m * import { availableParallelism } from 'node:os';[m
[32m+[m[32m * import process from 'node:process';[m
[32m+[m[32m *[m
[32m+[m[32m * const numCPUs = availableParallelism();[m
[32m+[m[32m *[m
[32m+[m[32m * if (cluster.isPrimary) {[m
[32m+[m[32m *   console.log(`Primary ${process.pid} is running`);[m
[32m+[m[32m *[m
[32m+[m[32m *   // Fork workers.[m
[32m+[m[32m *   for (let i = 0; i < numCPUs; i++) {[m
[32m+[m[32m *     cluster.fork();[m
[32m+[m[32m *   }[m
[32m+[m[32m *[m
[32m+[m[32m *   cluster.on('exit', (worker, code, signal) => {[m
[32m+[m[32m *     console.log(`worker ${worker.process.pid} died`);[m
[32m+[m[32m *   });[m
[32m+[m[32m * } else {[m
[32m+[m[32m *   // Workers can share any TCP connection[m
[32m+[m[32m *   // In this case it is an HTTP server[m
[32m+[m[32m *   http.createServer((req, res) => {[m
[32m+[m[32m *     res.writeHead(200);[m
[32m+[m[32m *     res.end('hello world\n');[m
[32m+[m[32m *   }).listen(8000);[m
[32m+[m[32m *[m
[32m+[m[32m *   console.log(`Worker ${process.pid} started`);[m
[32m+[m[32m * }[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * Running Node.js will now share port 8000 between the workers:[m
[32m+[m[32m *[m
[32m+[m[32m * ```console[m
[32m+[m[32m * $ node server.js[m
[32m+[m[32m * Primary 3596 is running[m
[32m+[m[32m * Worker 4324 started[m
[32m+[m[32m * Worker 4520 started[m
[32m+[m[32m * Worker 6056 started[m
[32m+[m[32m * Worker 5644 started[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * On Windows, it is not yet possible to set up a named pipe server in a worker.[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/cluster.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "cluster" {[m
[32m+[m[32m    import * as child from "node:child_process";[m
[32m+[m[32m    import EventEmitter = require("node:events");[m
[32m+[m[32m    import * as net from "node:net";[m
[32m+[m[32m    type SerializationType = "json" | "advanced";[m
[32m+[m[32m    export interface ClusterSettings {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * List of string arguments passed to the Node.js executable.[m
[32m+[m[32m         * @default process.execArgv[m
[32m+[m[32m         */[m
[32m+[m[32m        execArgv?: string[] | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * File path to worker file.[m
[32m+[m[32m         * @default process.argv[1][m
[32m+[m[32m         */[m
[32m+[m[32m        exec?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * String arguments passed to worker.[m
[32m+[m[32m         * @default process.argv.slice(2)[m
[32m+[m[32m         */[m
[32m+[m[32m        args?: string[] | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Whether or not to send output to parent's stdio.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        silent?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Configures the stdio of forked processes. Because the cluster module relies on IPC to function, this configuration must[m
[32m+[m[32m         * contain an `'ipc'` entry. When this option is provided, it overrides `silent`. See [`child_prcess.spawn()`](https://nodejs.org/docs/latest-v22.x/api/child_process.html#child_processspawncommand-args-options)'s[m
[32m+[m[32m         * [`stdio`](https://nodejs.org/docs/latest-v22.x/api/child_process.html#optionsstdio).[m
[32m+[m[32m         */[m
[32m+[m[32m        stdio?: any[] | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the user identity of the process. (See [`setuid(2)`](https://man7.org/linux/man-pages/man2/setuid.2.html).)[m
[32m+[m[32m         */[m
[32m+[m[32m        uid?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the group identity of the process. (See [`setgid(2)`](https://man7.org/linux/man-pages/man2/setgid.2.html).)[m
[32m+[m[32m         */[m
[32m+[m[32m        gid?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets inspector port of worker. This can be a number, or a function that takes no arguments and returns a number.[m
[32m+[m[32m         * By default each worker gets its own port, incremented from the primary's `process.debugPort`.[m
[32m+[m[32m         */[m
[32m+[m[32m        inspectPort?: number | (() => number) | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specify the kind of serialization used for sending messages between processes. Possible values are `'json'` and `'advanced'`.[m
[32m+[m[32m         * See [Advanced serialization for `child_process`](https://nodejs.org/docs/latest-v22.x/api/child_process.html#advanced-serialization) for more details.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        serialization?: SerializationType | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Current working directory of the worker process.[m
[32m+[m[32m         * @default undefined (inherits from parent process)[m
[32m+[m[32m         */[m
[32m+[m[32m        cwd?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Hide the forked processes console window that would normally be created on Windows systems.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        windowsHide?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface Address {[m
[32m+[m[32m        address: string;[m
[32m+[m[32m        port: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `addressType` is one of:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `4` (TCPv4)[m
[32m+[m[32m         * * `6` (TCPv6)[m
[32m+[m[32m         * * `-1` (Unix domain socket)[m
[32m+[m[32m         * * `'udp4'` or `'udp6'` (UDPv4 or UDPv6)[m
[32m+[m[32m         */[m
[32m+[m[32m        addressType: 4 | 6 | -1 | "udp4" | "udp6";[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A `Worker` object contains all public information and method about a worker.[m
[32m+[m[32m     * In the primary it can be obtained using `cluster.workers`. In a worker[m
[32m+[m[32m     * it can be obtained using `cluster.worker`.[m
[32m+[m[32m     * @since v0.7.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export class Worker extends EventEmitter {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Each new worker is given its own unique id, this id is stored in the `id`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * While a worker is alive, this is the key that indexes it in `cluster.workers`.[m
[32m+[m[32m         * @since v0.8.0[m
[32m+[m[32m         */[m
[32m+[m[32m        id: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * All workers are created using [`child_process.fork()`](https://nodejs.org/docs/latest-v22.x/api/child_process.html#child_processforkmodulepath-args-options), the returned object[m
[32m+[m[32m         * from this function is stored as `.process`. In a worker, the global `process` is stored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * See: [Child Process module](https://nodejs.org/docs/latest-v22.x/api/child_process.html#child_processforkmodulepath-args-options).[m
[32m+[m[32m         *[m
[32m+[m[32m         * Workers will call `process.exit(0)` if the `'disconnect'` event occurs[m
[32m+[m[32m         * on `process` and `.exitedAfterDisconnect` is not `true`. This protects against[m
[32m+[m[32m         * accidental disconnection.[m
[32m+[m[32m         * @since v0.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        process: child.ChildProcess;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Send a message to a worker or primary, optionally with a handle.[m
[32m+[m[32m         *[m
[32m+[m[32m         * In the primary, this sends a message to a specific worker. It is identical to [`ChildProcess.send()`](https://nodejs.org/docs/latest-v22.x/api/child_process.html#subprocesssendmessage-sendhandle-options-callback).[m
[32m+[m[32m         *[m
[32m+[m[32m         * In a worker, this sends a message to the primary. It is identical to `process.send()`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This example will echo back all messages from the primary:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * if (cluster.isPrimary) {[m
[32m+[m[32m         *   const worker = cluster.fork();[m
[32m+[m[32m         *   worker.send('hi there');[m
[32m+[m[32m         *[m
[32m+[m[32m         * } else if (cluster.isWorker) {[m
[32m+[m[32m         *   process.on('message', (msg) => {[m
[32m+[m[32m         *     process.send(msg);[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.7.0[m
[32m+[m[32m         * @param options The `options` argument, if present, is an object used to parameterize the sending of certain types of handles.[m
[32m+[m[32m         */[m
[32m+[m[32m        send(message: child.Serializable, callback?: (error: Error | null) => void): boolean;[m
[32m+[m[32m        send([m
[32m+[m[32m            message: child.Serializable,[m
[32m+[m[32m            sendHandle: child.SendHandle,[m
[32m+[m[32m            callback?: (error: Error | null) => void,[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        send([m
[32m+[m[32m            message: child.Serializable,[m
[32m+[m[32m            sendHandle: child.SendHandle,[m
[32m+[m[32m            options?: child.MessageOptions,[m
[32m+[m[32m            callback?: (error: Error | null) => void,[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function will kill the worker. In the primary worker, it does this by[m
[32m+[m[32m         * disconnecting the `worker.process`, and once disconnected, killing with `signal`. In the worker, it does it by killing the process with `signal`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `kill()` function kills the worker process without waiting for a graceful[m
[32m+[m[32m         * disconnect, it has the same behavior as `worker.process.kill()`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method is aliased as `worker.destroy()` for backwards compatibility.[m
[32m+[m[32m         *[m
[32m+[m[32m         * In a worker, `process.kill()` exists, but it is not this function;[m
[32m+[m[32m         * it is [`kill()`](https://nodejs.org/docs/latest-v22.x/api/process.html#processkillpid-signal).[m
[32m+[m[32m         * @since v0.9.12[m
[32m+[m[32m         * @param [signal='SIGTERM'] Name of the kill signal to send to the worker process.[m
[32m+[m[32m         */[m
[32m+[m[32m        kill(signal?: string): void;[m
[32m+[m[32m        destroy(signal?: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * In a worker, this function will close all servers, wait for the `'close'` event[m
[32m+[m[32m         * on those servers, and then disconnect the IPC channel.[m
[32m+[m[32m         *[m
[32m+[m[32m         * In the primary, an internal message is sent to the worker causing it to call `.disconnect()` on itself.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Causes `.exitedAfterDisconnect` to be set.[m
[32m+[m[32m         *[m
[32m+[m[32m         * After a server is closed, it will no longer accept new connections,[m
[32m+[m[32m         * but connections may be accepted by any other listening worker. Existing[m
[32m+[m[32m         * connections will be allowed to close as usual. When no more connections exist,[m
[32m+[m[32m         * see `server.close()`, the IPC channel to the worker will close allowing it[m
[32m+[m[32m         * to die gracefully.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The above applies _only_ to server connections, client connections are not[m
[32m+[m[32m         * automatically closed by workers, and disconnect does not wait for them to close[m
[32m+[m[32m         * before exiting.[m
[32m+[m[32m         *[m
[32m+[m[32m         * In a worker, `process.disconnect` exists, but it is not this function;[m
[32m+[m[32m         * it is `disconnect()`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Because long living server connections may block workers from disconnecting, it[m
[32m+[m[32m         * may be useful to send a message, so application specific actions may be taken to[m
[32m+[m[32m         * close them. It also may be useful to implement a timeout, killing a worker if[m
[32m+[m[32m         * the `'disconnect'` event has not been emitted after some time.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * if (cluster.isPrimary) {[m
[32m+[m[32m         *   const worker = cluster.fork();[m
[32m+[m[32m         *   let timeout;[m
[32m+[m[32m         *[m
[32m+[m[32m         *   worker.on('listening', (address) => {[m
[32m+[m[32m         *     worker.send('shutdown');[m
[32m+[m[32m         *     worker.disconnect();[m
[32m+[m[32m         *     timeout = setTimeout(() => {[m
[32m+[m[32m         *       worker.kill();[m
[32m+[m[32m         *     }, 2000);[m
[32m+[m[32m         *   });[m
[32m+[m[32m         *[m
[32m+[m[32m         *   worker.on('disconnect', () => {[m
[32m+[m[32m         *     clearTimeout(timeout);[m
[32m+[m[32m         *   });[m
[32m+[m[32m         *[m
[32m+[m[32m         * } else if (cluster.isWorker) {[m
[32m+[m[32m         *   const net = require('node:net');[m
[32m+[m[32m         *   const server = net.createServer((socket) => {[m
[32m+[m[32m         *     // Connections never end[m
[32m+[m[32m         *   });[m
[32m+[m[32m         *[m
[32m+[m[32m         *   server.listen(8000);[m
[32m+[m[32m         *[m
[32m+[m[32m         *   process.on('message', (msg) => {[m
[32m+[m[32m         *     if (msg === 'shutdown') {[m
[32m+[m[32m         *       // Initiate graceful close of any connections to server[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.7.7[m
[32m+[m[32m         * @return A reference to `worker`.[m
[32m+[m[32m         */[m
[32m+[m[32m        disconnect(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function returns `true` if the worker is connected to its primary via its[m
[32m+[m[32m         * IPC channel, `false` otherwise. A worker is connected to its primary after it[m
[32m+[m[32m         * has been created. It is disconnected after the `'disconnect'` event is emitted.[m
[32m+[m[32m         * @since v0.11.14[m
[32m+[m[32m         */[m
[32m+[m[32m        isConnected(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function returns `true` if the worker's process has terminated (either[m
[32m+[m[32m         * because of exiting or being signaled). Otherwise, it returns `false`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import cluster from 'node:cluster';[m
[32m+[m[32m         * import http from 'node:http';[m
[32m+[m[32m         * import { availableParallelism } from 'node:os';[m
[32m+[m[32m         * import process from 'node:process';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const numCPUs = availableParallelism();[m
[32m+[m[32m         *[m
[32m+[m[32m         * if (cluster.isPrimary) {[m
[32m+[m[32m         *   console.log(`Primary ${process.pid} is running`);[m
[32m+[m[32m         *[m
[32m+[m[32m         *   // Fork workers.[m
[32m+[m[32m         *   for (let i = 0; i < numCPUs; i++) {[m
[32m+[m[32m         *     cluster.fork();[m
[32m+[m[32m         *   }[m
[32m+[m[32m         *[m
[32m+[m[32m         *   cluster.on('fork', (worker) => {[m
[32m+[m[32m         *     console.log('worker is dead:', worker.isDead());[m
[32m+[m[32m         *   });[m
[32m+[m[32m         *[m
[32m+[m[32m         *   cluster.on('exit', (worker, code, signal) => {[m
[32m+[m[32m         *     console.log('worker is dead:', worker.isDead());[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * } else {[m
[32m+[m[32m         *   // Workers can share any TCP connection. In this case, it is an HTTP server.[m
[32m+[m[32m         *   http.createServer((req, res) => {[m
[32m+[m[32m         *     res.writeHead(200);[m
[32m+[m[32m         *     res.end(`Current process\n ${process.pid}`);[m
[32m+[m[32m         *     process.kill(process.pid);[m
[32m+[m[32m         *   }).listen(8000);[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.11.14[m
[32m+[m[32m         */[m
[32m+[m[32m        isDead(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property is `true` if the worker exited due to `.disconnect()`.[m
[32m+[m[32m         * If the worker exited any other way, it is `false`. If the[m
[32m+[m[32m         * worker has not exited, it is `undefined`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The boolean `worker.exitedAfterDisconnect` allows distinguishing between[m
[32m+[m[32m         * voluntary and accidental exit, the primary may choose not to respawn a worker[m
[32m+[m[32m         * based on this value.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * cluster.on('exit', (worker, code, signal) => {[m
[32m+[m[32m         *   if (worker.exitedAfterDisconnect === true) {[m
[32m+[m[32m         *     console.log('Oh, it was just voluntary – no need to worry');[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * // kill worker[m
[32m+[m[32m         * worker.kill();[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v6.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        exitedAfterDisconnect: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         *   1. disconnect[m
[32m+[m[32m         *   2. error[m
[32m+[m[32m         *   3. exit[m
[32m+[m[32m         *   4. listening[m
[32m+[m[32m         *   5. message[m
[32m+[m[32m         *   6. online[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "disconnect", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        addListener(event: "exit", listener: (code: number, signal: string) => void): this;[m
[32m+[m[32m        addListener(event: "listening", listener: (address: Address) => void): this;[m
[32m+[m[32m        addListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.[m
[32m+[m[32m        addListener(event: "online", listener: () => void): this;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: "disconnect"): boolean;[m
[32m+[m[32m        emit(event: "error", error: Error): boolean;[m
[32m+[m[32m        emit(event: "exit", code: number, signal: string): boolean;[m
[32m+[m[32m        emit(event: "listening", address: Address): boolean;[m
[32m+[m[32m        emit(event: "message", message: any, handle: net.Socket | net.Server): boolean;[m
[32m+[m[32m        emit(event: "online"): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "disconnect", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        on(event: "exit", listener: (code: number, signal: string) => void): this;[m
[32m+[m[32m        on(event: "listening", listener: (address: Address) => void): this;[m
[32m+[m[32m        on(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.[m
[32m+[m[32m        on(event: "online", listener: () => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "disconnect", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        once(event: "exit", listener: (code: number, signal: string) => void): this;[m
[32m+[m[32m        once(event: "listening", listener: (address: Address) => void): this;[m
[32m+[m[32m        once(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.[m
[32m+[m[32m        once(event: "online", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "disconnect", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "exit", listener: (code: number, signal: string) => void): this;[m
[32m+[m[32m        prependListener(event: "listening", listener: (address: Address) => void): this;[m
[32m+[m[32m        prependListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.[m
[32m+[m[32m        prependListener(event: "online", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "disconnect", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "exit", listener: (code: number, signal: string) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "listening", listener: (address: Address) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "message", listener: (message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.[m
[32m+[m[32m        prependOnceListener(event: "online", listener: () => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface Cluster extends EventEmitter {[m
[32m+[m[32m        disconnect(callback?: () => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Spawn a new worker process.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This can only be called from the primary process.[m
[32m+[m[32m         * @param env Key/value pairs to add to worker process environment.[m
[32m+[m[32m         * @since v0.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        fork(env?: any): Worker;[m
[32m+[m[32m        /** @deprecated since v16.0.0 - use isPrimary. */[m
[32m+[m[32m        readonly isMaster: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * True if the process is a primary. This is determined by the `process.env.NODE_UNIQUE_ID`. If `process.env.NODE_UNIQUE_ID`[m
[32m+[m[32m         * is undefined, then `isPrimary` is `true`.[m
[32m+[m[32m         * @since v16.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly isPrimary: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * True if the process is not a primary (it is the negation of `cluster.isPrimary`).[m
[32m+[m[32m         * @since v0.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly isWorker: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The scheduling policy, either `cluster.SCHED_RR` for round-robin or `cluster.SCHED_NONE` to leave it to the operating system. This is a[m
[32m+[m[32m         * global setting and effectively frozen once either the first worker is spawned, or [`.setupPrimary()`](https://nodejs.org/docs/latest-v22.x/api/cluster.html#clustersetupprimarysettings)[m
[32m+[m[32m         * is called, whichever comes first.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `SCHED_RR` is the default on all operating systems except Windows. Windows will change to `SCHED_RR` once libuv is able to effectively distribute[m
[32m+[m[32m         * IOCP handles without incurring a large performance hit.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `cluster.schedulingPolicy` can also be set through the `NODE_CLUSTER_SCHED_POLICY` environment variable. Valid values are `'rr'` and `'none'`.[m
[32m+[m[32m         * @since v0.11.2[m
[32m+[m[32m         */[m
[32m+[m[32m        schedulingPolicy: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * After calling [`.setupPrimary()`](https://nodejs.org/docs/latest-v22.x/api/cluster.html#clustersetupprimarysettings)[m
[32m+[m[32m         * (or [`.fork()`](https://nodejs.org/docs/latest-v22.x/api/cluster.html#clusterforkenv)) this settings object will contain[m
[32m+[m[32m         * the settings, including the default values.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This object is not intended to be changed or set manually.[m
[32m+[m[32m         * @since v0.7.1[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly settings: ClusterSettings;[m
[32m+[m[32m        /** @deprecated since v16.0.0 - use [`.setupPrimary()`](https://nodejs.org/docs/latest-v22.x/api/cluster.html#clustersetupprimarysettings) instead. */[m
[32m+[m[32m        setupMaster(settings?: ClusterSettings): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `setupPrimary` is used to change the default 'fork' behavior. Once called, the settings will be present in `cluster.settings`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Any settings changes only affect future calls to [`.fork()`](https://nodejs.org/docs/latest-v22.x/api/cluster.html#clusterforkenv)[m
[32m+[m[32m         * and have no effect on workers that are already running.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The only attribute of a worker that cannot be set via `.setupPrimary()` is the `env` passed to[m
[32m+[m[32m         * [`.fork()`](https://nodejs.org/docs/latest-v22.x/api/cluster.html#clusterforkenv).[m
[32m+[m[32m         *[m
[32m+[m[32m         * The defaults above apply to the first call only; the defaults for later calls are the current values at the time of[m
[32m+[m[32m         * `cluster.setupPrimary()` is called.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import cluster from 'node:cluster';[m
[32m+[m[32m         *[m
[32m+[m[32m         * cluster.setupPrimary({[m
[32m+[m[32m         *   exec: 'worker.js',[m
[32m+[m[32m         *   args: ['--use', 'https'],[m
[32m+[m[32m         *   silent: true,[m
[32m+[m[32m         * });[m
[32m+[m[32m         * cluster.fork(); // https worker[m
[32m+[m[32m         * cluster.setupPrimary({[m
[32m+[m[32m         *   exec: 'worker.js',[m
[32m+[m[32m         *   args: ['--use', 'http'],[m
[32m+[m[32m         * });[m
[32m+[m[32m         * cluster.fork(); // http worker[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * This can only be called from the primary process.[m
[32m+[m[32m         * @since v16.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setupPrimary(settings?: ClusterSettings): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A reference to the current worker object. Not available in the primary process.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import cluster from 'node:cluster';[m
[32m+[m[32m         *[m
[32m+[m[32m         * if (cluster.isPrimary) {[m
[32m+[m[32m         *   console.log('I am primary');[m
[32m+[m[32m         *   cluster.fork();[m
[32m+[m[32m         *   cluster.fork();[m
[32m+[m[32m         * } else if (cluster.isWorker) {[m
[32m+[m[32m         *   console.log(`I am worker #${cluster.worker.id}`);[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly worker?: Worker | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A hash that stores the active worker objects, keyed by `id` field. This makes it easy to loop through all the workers. It is only available in the primary process.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A worker is removed from `cluster.workers` after the worker has disconnected _and_ exited. The order between these two events cannot be determined in advance. However, it[m
[32m+[m[32m         * is guaranteed that the removal from the `cluster.workers` list happens before the last `'disconnect'` or `'exit'` event is emitted.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import cluster from 'node:cluster';[m
[32m+[m[32m         *[m
[32m+[m[32m         * for (const worker of Object.values(cluster.workers)) {[m
[32m+[m[32m         *   worker.send('big announcement to all workers');[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly workers?: NodeJS.Dict<Worker> | undefined;[m
[32m+[m[32m        readonly SCHED_NONE: number;[m
[32m+[m[32m        readonly SCHED_RR: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         *   1. disconnect[m
[32m+[m[32m         *   2. exit[m
[32m+[m[32m         *   3. fork[m
[32m+[m[32m         *   4. listening[m
[32m+[m[32m         *   5. message[m
[32m+[m[32m         *   6. online[m
[32m+[m[32m         *   7. setup[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "disconnect", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        addListener(event: "exit", listener: (worker: Worker, code: number, signal: string) => void): this;[m
[32m+[m[32m        addListener(event: "fork", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        addListener(event: "listening", listener: (worker: Worker, address: Address) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "message",[m
[32m+[m[32m            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,[m
[32m+[m[32m        ): this; // the handle is a net.Socket or net.Server object, or undefined.[m
[32m+[m[32m        addListener(event: "online", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        addListener(event: "setup", listener: (settings: ClusterSettings) => void): this;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: "disconnect", worker: Worker): boolean;[m
[32m+[m[32m        emit(event: "exit", worker: Worker, code: number, signal: string): boolean;[m
[32m+[m[32m        emit(event: "fork", worker: Worker): boolean;[m
[32m+[m[32m        emit(event: "listening", worker: Worker, address: Address): boolean;[m
[32m+[m[32m        emit(event: "message", worker: Worker, message: any, handle: net.Socket | net.Server): boolean;[m
[32m+[m[32m        emit(event: "online", worker: Worker): boolean;[m
[32m+[m[32m        emit(event: "setup", settings: ClusterSettings): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "disconnect", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        on(event: "exit", listener: (worker: Worker, code: number, signal: string) => void): this;[m
[32m+[m[32m        on(event: "fork", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        on(event: "listening", listener: (worker: Worker, address: Address) => void): this;[m
[32m+[m[32m        on(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.[m
[32m+[m[32m        on(event: "online", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        on(event: "setup", listener: (settings: ClusterSettings) => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "disconnect", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        once(event: "exit", listener: (worker: Worker, code: number, signal: string) => void): this;[m
[32m+[m[32m        once(event: "fork", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        once(event: "listening", listener: (worker: Worker, address: Address) => void): this;[m
[32m+[m[32m        once(event: "message", listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void): this; // the handle is a net.Socket or net.Server object, or undefined.[m
[32m+[m[32m        once(event: "online", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        once(event: "setup", listener: (settings: ClusterSettings) => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "disconnect", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        prependListener(event: "exit", listener: (worker: Worker, code: number, signal: string) => void): this;[m
[32m+[m[32m        prependListener(event: "fork", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        prependListener(event: "listening", listener: (worker: Worker, address: Address) => void): this;[m
[32m+[m[32m        // the handle is a net.Socket or net.Server object, or undefined.[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "message",[m
[32m+[m[32m            listener: (worker: Worker, message: any, handle?: net.Socket | net.Server) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "online", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        prependListener(event: "setup", listener: (settings: ClusterSettings) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "disconnect", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "exit", listener: (worker: Worker, code: number, signal: string) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "fork", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "listening", listener: (worker: Worker, address: Address) => void): this;[m
[32m+[m[32m        // the handle is a net.Socket or net.Server object, or undefined.[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "message",[m
[32m+[m[32m            listener: (worker: Worker, message: any, handle: net.Socket | net.Server) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "online", listener: (worker: Worker) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "setup", listener: (settings: ClusterSettings) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    const cluster: Cluster;[m
[32m+[m[32m    export default cluster;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:cluster" {[m
[32m+[m[32m    export * from "cluster";[m
[32m+[m[32m    export { default as default } from "cluster";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/console.d.ts b/node_modules/@types/node/console.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..d6a97b5[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/console.d.ts[m
[36m@@ -0,0 +1,452 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:console` module provides a simple debugging console that is similar to[m
[32m+[m[32m * the JavaScript console mechanism provided by web browsers.[m
[32m+[m[32m *[m
[32m+[m[32m * The module exports two specific components:[m
[32m+[m[32m *[m
[32m+[m[32m * * A `Console` class with methods such as `console.log()`, `console.error()`, and `console.warn()` that can be used to write to any Node.js stream.[m
[32m+[m[32m * * A global `console` instance configured to write to [`process.stdout`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstdout) and[m
[32m+[m[32m * [`process.stderr`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstderr). The global `console` can be used without calling `require('node:console')`.[m
[32m+[m[32m *[m
[32m+[m[32m * _**Warning**_: The global console object's methods are neither consistently[m
[32m+[m[32m * synchronous like the browser APIs they resemble, nor are they consistently[m
[32m+[m[32m * asynchronous like all other Node.js streams. See the [`note on process I/O`](https://nodejs.org/docs/latest-v22.x/api/process.html#a-note-on-process-io) for[m
[32m+[m[32m * more information.[m
[32m+[m[32m *[m
[32m+[m[32m * Example using the global `console`:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * console.log('hello world');[m
[32m+[m[32m * // Prints: hello world, to stdout[m
[32m+[m[32m * console.log('hello %s', 'world');[m
[32m+[m[32m * // Prints: hello world, to stdout[m
[32m+[m[32m * console.error(new Error('Whoops, something bad happened'));[m
[32m+[m[32m * // Prints error message and stack trace to stderr:[m
[32m+[m[32m * //   Error: Whoops, something bad happened[m
[32m+[m[32m * //     at [eval]:5:15[m
[32m+[m[32m * //     at Script.runInThisContext (node:vm:132:18)[m
[32m+[m[32m * //     at Object.runInThisContext (node:vm:309:38)[m
[32m+[m[32m * //     at node:internal/process/execution:77:19[m
[32m+[m[32m * //     at [eval]-wrapper:6:22[m
[32m+[m[32m * //     at evalScript (node:internal/process/execution:76:60)[m
[32m+[m[32m * //     at node:internal/main/eval_string:23:3[m
[32m+[m[32m *[m
[32m+[m[32m * const name = 'Will Robinson';[m
[32m+[m[32m * console.warn(`Danger ${name}! Danger!`);[m
[32m+[m[32m * // Prints: Danger Will Robinson! Danger!, to stderr[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * Example using the `Console` class:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const out = getStreamSomehow();[m
[32m+[m[32m * const err = getStreamSomehow();[m
[32m+[m[32m * const myConsole = new console.Console(out, err);[m
[32m+[m[32m *[m
[32m+[m[32m * myConsole.log('hello world');[m
[32m+[m[32m * // Prints: hello world, to out[m
[32m+[m[32m * myConsole.log('hello %s', 'world');[m
[32m+[m[32m * // Prints: hello world, to out[m
[32m+[m[32m * myConsole.error(new Error('Whoops, something bad happened'));[m
[32m+[m[32m * // Prints: [Error: Whoops, something bad happened], to err[m
[32m+[m[32m *[m
[32m+[m[32m * const name = 'Will Robinson';[m
[32m+[m[32m * myConsole.warn(`Danger ${name}! Danger!`);[m
[32m+[m[32m * // Prints: Danger Will Robinson! Danger!, to err[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/console.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "console" {[m
[32m+[m[32m    import console = require("node:console");[m
[32m+[m[32m    export = console;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:console" {[m
[32m+[m[32m    import { InspectOptions } from "node:util";[m
[32m+[m[32m    global {[m
[32m+[m[32m        // This needs to be global to avoid TS2403 in case lib.dom.d.ts is present in the same build[m
[32m+[m[32m        interface Console {[m
[32m+[m[32m            Console: console.ConsoleConstructor;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * `console.assert()` writes a message if `value` is [falsy](https://developer.mozilla.org/en-US/docs/Glossary/Falsy) or omitted. It only[m
[32m+[m[32m             * writes a message and does not otherwise affect execution. The output always[m
[32m+[m[32m             * starts with `"Assertion failed"`. If provided, `message` is formatted using[m
[32m+[m[32m             * [`util.format()`](https://nodejs.org/docs/latest-v22.x/api/util.html#utilformatformat-args).[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `value` is [truthy](https://developer.mozilla.org/en-US/docs/Glossary/Truthy), nothing happens.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * console.assert(true, 'does nothing');[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.assert(false, 'Whoops %s work', 'didn\'t');[m
[32m+[m[32m             * // Assertion failed: Whoops didn't work[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.assert();[m
[32m+[m[32m             * // Assertion failed[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.1.101[m
[32m+[m[32m             * @param value The value tested for being truthy.[m
[32m+[m[32m             * @param message All arguments besides `value` are used as error message.[m
[32m+[m[32m             */[m
[32m+[m[32m            assert(value: any, message?: string, ...optionalParams: any[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * When `stdout` is a TTY, calling `console.clear()` will attempt to clear the[m
[32m+[m[32m             * TTY. When `stdout` is not a TTY, this method does nothing.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The specific operation of `console.clear()` can vary across operating systems[m
[32m+[m[32m             * and terminal types. For most Linux operating systems, `console.clear()` operates similarly to the `clear` shell command. On Windows, `console.clear()` will clear only the output in the[m
[32m+[m[32m             * current terminal viewport for the Node.js[m
[32m+[m[32m             * binary.[m
[32m+[m[32m             * @since v8.3.0[m
[32m+[m[32m             */[m
[32m+[m[32m            clear(): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Maintains an internal counter specific to `label` and outputs to `stdout` the[m
[32m+[m[32m             * number of times `console.count()` has been called with the given `label`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * > console.count()[m
[32m+[m[32m             * default: 1[m
[32m+[m[32m             * undefined[m
[32m+[m[32m             * > console.count('default')[m
[32m+[m[32m             * default: 2[m
[32m+[m[32m             * undefined[m
[32m+[m[32m             * > console.count('abc')[m
[32m+[m[32m             * abc: 1[m
[32m+[m[32m             * undefined[m
[32m+[m[32m             * > console.count('xyz')[m
[32m+[m[32m             * xyz: 1[m
[32m+[m[32m             * undefined[m
[32m+[m[32m             * > console.count('abc')[m
[32m+[m[32m             * abc: 2[m
[32m+[m[32m             * undefined[m
[32m+[m[32m             * > console.count()[m
[32m+[m[32m             * default: 3[m
[32m+[m[32m             * undefined[m
[32m+[m[32m             * >[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v8.3.0[m
[32m+[m[32m             * @param [label='default'] The display label for the counter.[m
[32m+[m[32m             */[m
[32m+[m[32m            count(label?: string): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Resets the internal counter specific to `label`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * > console.count('abc');[m
[32m+[m[32m             * abc: 1[m
[32m+[m[32m             * undefined[m
[32m+[m[32m             * > console.countReset('abc');[m
[32m+[m[32m             * undefined[m
[32m+[m[32m             * > console.count('abc');[m
[32m+[m[32m             * abc: 1[m
[32m+[m[32m             * undefined[m
[32m+[m[32m             * >[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v8.3.0[m
[32m+[m[32m             * @param [label='default'] The display label for the counter.[m
[32m+[m[32m             */[m
[32m+[m[32m            countReset(label?: string): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The `console.debug()` function is an alias for {@link log}.[m
[32m+[m[32m             * @since v8.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            debug(message?: any, ...optionalParams: any[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Uses [`util.inspect()`](https://nodejs.org/docs/latest-v22.x/api/util.html#utilinspectobject-options) on `obj` and prints the resulting string to `stdout`.[m
[32m+[m[32m             * This function bypasses any custom `inspect()` function defined on `obj`.[m
[32m+[m[32m             * @since v0.1.101[m
[32m+[m[32m             */[m
[32m+[m[32m            dir(obj: any, options?: InspectOptions): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * This method calls `console.log()` passing it the arguments received.[m
[32m+[m[32m             * This method does not produce any XML formatting.[m
[32m+[m[32m             * @since v8.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            dirxml(...data: any[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Prints to `stderr` with newline. Multiple arguments can be passed, with the[m
[32m+[m[32m             * first used as the primary message and all additional used as substitution[m
[32m+[m[32m             * values similar to [`printf(3)`](http://man7.org/linux/man-pages/man3/printf.3.html)[m
[32m+[m[32m             * (the arguments are all passed to [`util.format()`](https://nodejs.org/docs/latest-v22.x/api/util.html#utilformatformat-args)).[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * const code = 5;[m
[32m+[m[32m             * console.error('error #%d', code);[m
[32m+[m[32m             * // Prints: error #5, to stderr[m
[32m+[m[32m             * console.error('error', code);[m
[32m+[m[32m             * // Prints: error 5, to stderr[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * If formatting elements (e.g. `%d`) are not found in the first string then[m
[32m+[m[32m             * [`util.inspect()`](https://nodejs.org/docs/latest-v22.x/api/util.html#utilinspectobject-options) is called on each argument and the[m
[32m+[m[32m             * resulting string values are concatenated. See [`util.format()`](https://nodejs.org/docs/latest-v22.x/api/util.html#utilformatformat-args)[m
[32m+[m[32m             * for more information.[m
[32m+[m[32m             * @since v0.1.100[m
[32m+[m[32m             */[m
[32m+[m[32m            error(message?: any, ...optionalParams: any[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Increases indentation of subsequent lines by spaces for `groupIndentation` length.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If one or more `label`s are provided, those are printed first without the[m
[32m+[m[32m             * additional indentation.[m
[32m+[m[32m             * @since v8.5.0[m
[32m+[m[32m             */[m
[32m+[m[32m            group(...label: any[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * An alias for {@link group}.[m
[32m+[m[32m             * @since v8.5.0[m
[32m+[m[32m             */[m
[32m+[m[32m            groupCollapsed(...label: any[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Decreases indentation of subsequent lines by spaces for `groupIndentation` length.[m
[32m+[m[32m             * @since v8.5.0[m
[32m+[m[32m             */[m
[32m+[m[32m            groupEnd(): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The `console.info()` function is an alias for {@link log}.[m
[32m+[m[32m             * @since v0.1.100[m
[32m+[m[32m             */[m
[32m+[m[32m            info(message?: any, ...optionalParams: any[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Prints to `stdout` with newline. Multiple arguments can be passed, with the[m
[32m+[m[32m             * first used as the primary message and all additional used as substitution[m
[32m+[m[32m             * values similar to [`printf(3)`](http://man7.org/linux/man-pages/man3/printf.3.html)[m
[32m+[m[32m             * (the arguments are all passed to [`util.format()`](https://nodejs.org/docs/latest-v22.x/api/util.html#utilformatformat-args)).[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * const count = 5;[m
[32m+[m[32m             * console.log('count: %d', count);[m
[32m+[m[32m             * // Prints: count: 5, to stdout[m
[32m+[m[32m             * console.log('count:', count);[m
[32m+[m[32m             * // Prints: count: 5, to stdout[m
[32m+[m[32m             * ```[m
[32m+[m[32m             *[m
[32m+[m[32m             * See [`util.format()`](https://nodejs.org/docs/latest-v22.x/api/util.html#utilformatformat-args) for more information.[m
[32m+[m[32m             * @since v0.1.100[m
[32m+[m[32m             */[m
[32m+[m[32m            log(message?: any, ...optionalParams: any[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Try to construct a table with the columns of the properties of `tabularData` (or use `properties`) and rows of `tabularData` and log it. Falls back to just[m
[32m+[m[32m             * logging the argument if it can't be parsed as tabular.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * // These can't be parsed as tabular data[m
[32m+[m[32m             * console.table(Symbol());[m
[32m+[m[32m             * // Symbol()[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.table(undefined);[m
[32m+[m[32m             * // undefined[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.table([{ a: 1, b: 'Y' }, { a: 'Z', b: 2 }]);[m
[32m+[m[32m             * // ┌─────────┬─────┬─────┐[m
[32m+[m[32m             * // │ (index) │  a  │  b  │[m
[32m+[m[32m             * // ├─────────┼─────┼─────┤[m
[32m+[m[32m             * // │    0    │  1  │ 'Y' │[m
[32m+[m[32m             * // │    1    │ 'Z' │  2  │[m
[32m+[m[32m             * // └─────────┴─────┴─────┘[m
[32m+[m[32m             *[m
[32m+[m[32m             * console.table([{ a: 1, b: 'Y' }, { a: 'Z', b: 2 }], ['a']);[m
[32m+[m[32m             * // ┌─────────┬─────┐[m
[32m+[m[32m             * // │ (index) │  a  │[m
[32m+[m[32m             * // ├─────────┼─────┤[m
[32m+[m[32m             * // │    0    │  1  │[m
[32m+[m[32m             * // │    1    │ 'Z' │[m
[32m+[m[32m             * // └─────────┴─────┘[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v10.0.0[m
[32m+[m[32m             * @param properties Alternate properties for constructing the table.[m
[32m+[m[32m             */[m
[32m+[m[32m            table(tabularData: any, properties?: readonly string[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Starts a timer that can be used to compute the duration of an operation. Timers[m
[32m+[m[32m             * are identified by a unique `label`. Use the same `label` when calling {@link timeEnd} to stop the timer and output the elapsed time in[m
[32m+[m[32m             * suitable time units to `stdout`. For example, if the elapsed[m
[32m+[m[32m             * time is 3869ms, `console.timeEnd()` displays "3.869s".[m
[32m+[m[32m             * @since v0.1.104[m
[32m+[m[32m             * @param [label='default'][m
[32m+[m[32m             */[m
[32m+[m[32m            time(label?: string): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Stops a timer that was previously started by calling {@link time} and[m
[32m+[m[32m             * prints the result to `stdout`:[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * console.time('bunch-of-stuff');[m
[32m+[m[32m             * // Do a bunch of stuff.[m
[32m+[m[32m             * console.timeEnd('bunch-of-stuff');[m
[32m+[m[32m             * // Prints: bunch-of-stuff: 225.438ms[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.1.104[m
[32m+[m[32m             * @param [label='default'][m
[32m+[m[32m             */[m
[32m+[m[32m            timeEnd(label?: string): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * For a timer that was previously started by calling {@link time}, prints[m
[32m+[m[32m             * the elapsed time and other `data` arguments to `stdout`:[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * console.time('process');[m
[32m+[m[32m             * const value = expensiveProcess1(); // Returns 42[m
[32m+[m[32m             * console.timeLog('process', value);[m
[32m+[m[32m             * // Prints "process: 365.227ms 42".[m
[32m+[m[32m             * doExpensiveProcess2(value);[m
[32m+[m[32m             * console.timeEnd('process');[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v10.7.0[m
[32m+[m[32m             * @param [label='default'][m
[32m+[m[32m             */[m
[32m+[m[32m            timeLog(label?: string, ...data: any[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Prints to `stderr` the string `'Trace: '`, followed by the [`util.format()`](https://nodejs.org/docs/latest-v22.x/api/util.html#utilformatformat-args)[m
[32m+[m[32m             * formatted message and stack trace to the current position in the code.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * console.trace('Show me');[m
[32m+[m[32m             * // Prints: (stack trace will vary based on where trace is called)[m
[32m+[m[32m             * //  Trace: Show me[m
[32m+[m[32m             * //    at repl:2:9[m
[32m+[m[32m             * //    at REPLServer.defaultEval (repl.js:248:27)[m
[32m+[m[32m             * //    at bound (domain.js:287:14)[m
[32m+[m[32m             * //    at REPLServer.runBound [as eval] (domain.js:300:12)[m
[32m+[m[32m             * //    at REPLServer.<anonymous> (repl.js:412:12)[m
[32m+[m[32m             * //    at emitOne (events.js:82:20)[m
[32m+[m[32m             * //    at REPLServer.emit (events.js:169:7)[m
[32m+[m[32m             * //    at REPLServer.Interface._onLine (readline.js:210:10)[m
[32m+[m[32m             * //    at REPLServer.Interface._line (readline.js:549:8)[m
[32m+[m[32m             * //    at REPLServer.Interface._ttyWrite (readline.js:826:14)[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v0.1.104[m
[32m+[m[32m             */[m
[32m+[m[32m            trace(message?: any, ...optionalParams: any[]): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The `console.warn()` function is an alias for {@link error}.[m
[32m+[m[32m             * @since v0.1.100[m
[32m+[m[32m             */[m
[32m+[m[32m            warn(message?: any, ...optionalParams: any[]): void;[m
[32m+[m[32m            // --- Inspector mode only ---[m
[32m+[m[32m            /**[m
[32m+[m[32m             * This method does not display anything unless used in the inspector. The `console.profile()`[m
[32m+[m[32m             * method starts a JavaScript CPU profile with an optional label until {@link profileEnd}[m
[32m+[m[32m             * is called. The profile is then added to the Profile panel of the inspector.[m
[32m+[m[32m             *[m
[32m+[m[32m             * ```js[m
[32m+[m[32m             * console.profile('MyLabel');[m
[32m+[m[32m             * // Some code[m
[32m+[m[32m             * console.profileEnd('MyLabel');[m
[32m+[m[32m             * // Adds the profile 'MyLabel' to the Profiles panel of the inspector.[m
[32m+[m[32m             * ```[m
[32m+[m[32m             * @since v8.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            profile(label?: string): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * This method does not display anything unless used in the inspector. Stops the current[m
[32m+[m[32m             * JavaScript CPU profiling session if one has been started and prints the report to the[m
[32m+[m[32m             * Profiles panel of the inspector. See {@link profile} for an example.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If this method is called without a label, the most recently started profile is stopped.[m
[32m+[m[32m             * @since v8.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            profileEnd(label?: string): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * This method does not display anything unless used in the inspector. The `console.timeStamp()`[m
[32m+[m[32m             * method adds an event with the label `'label'` to the Timeline panel of the inspector.[m
[32m+[m[32m             * @since v8.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            timeStamp(label?: string): void;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `console` module provides a simple debugging console that is similar to the[m
[32m+[m[32m         * JavaScript console mechanism provided by web browsers.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The module exports two specific components:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * A `Console` class with methods such as `console.log()`, `console.error()` and `console.warn()` that can be used to write to any Node.js stream.[m
[32m+[m[32m         * * A global `console` instance configured to write to [`process.stdout`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstdout) and[m
[32m+[m[32m         * [`process.stderr`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstderr). The global `console` can be used without calling `require('console')`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * _**Warning**_: The global console object's methods are neither consistently[m
[32m+[m[32m         * synchronous like the browser APIs they resemble, nor are they consistently[m
[32m+[m[32m         * asynchronous like all other Node.js streams. See the [`note on process I/O`](https://nodejs.org/docs/latest-v22.x/api/process.html#a-note-on-process-io) for[m
[32m+[m[32m         * more information.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example using the global `console`:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * console.log('hello world');[m
[32m+[m[32m         * // Prints: hello world, to stdout[m
[32m+[m[32m         * console.log('hello %s', 'world');[m
[32m+[m[32m         * // Prints: hello world, to stdout[m
[32m+[m[32m         * console.error(new Error('Whoops, something bad happened'));[m
[32m+[m[32m         * // Prints error message and stack trace to stderr:[m
[32m+[m[32m         * //   Error: Whoops, something bad happened[m
[32m+[m[32m         * //     at [eval]:5:15[m
[32m+[m[32m         * //     at Script.runInThisContext (node:vm:132:18)[m
[32m+[m[32m         * //     at Object.runInThisContext (node:vm:309:38)[m
[32m+[m[32m         * //     at node:internal/process/execution:77:19[m
[32m+[m[32m         * //     at [eval]-wrapper:6:22[m
[32m+[m[32m         * //     at evalScript (node:internal/process/execution:76:60)[m
[32m+[m[32m         * //     at node:internal/main/eval_string:23:3[m
[32m+[m[32m         *[m
[32m+[m[32m         * const name = 'Will Robinson';[m
[32m+[m[32m         * console.warn(`Danger ${name}! Danger!`);[m
[32m+[m[32m         * // Prints: Danger Will Robinson! Danger!, to stderr[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example using the `Console` class:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const out = getStreamSomehow();[m
[32m+[m[32m         * const err = getStreamSomehow();[m
[32m+[m[32m         * const myConsole = new console.Console(out, err);[m
[32m+[m[32m         *[m
[32m+[m[32m         * myConsole.log('hello world');[m
[32m+[m[32m         * // Prints: hello world, to out[m
[32m+[m[32m         * myConsole.log('hello %s', 'world');[m
[32m+[m[32m         * // Prints: hello world, to out[m
[32m+[m[32m         * myConsole.error(new Error('Whoops, something bad happened'));[m
[32m+[m[32m         * // Prints: [Error: Whoops, something bad happened], to err[m
[32m+[m[32m         *[m
[32m+[m[32m         * const name = 'Will Robinson';[m
[32m+[m[32m         * myConsole.warn(`Danger ${name}! Danger!`);[m
[32m+[m[32m         * // Prints: Danger Will Robinson! Danger!, to err[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/console.js)[m
[32m+[m[32m         */[m
[32m+[m[32m        namespace console {[m
[32m+[m[32m            interface ConsoleConstructorOptions {[m
[32m+[m[32m                stdout: NodeJS.WritableStream;[m
[32m+[m[32m                stderr?: NodeJS.WritableStream | undefined;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Ignore errors when writing to the underlying streams.[m
[32m+[m[32m                 * @default true[m
[32m+[m[32m                 */[m
[32m+[m[32m                ignoreErrors?: boolean | undefined;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Set color support for this `Console` instance. Setting to true enables coloring while inspecting[m
[32m+[m[32m                 * values. Setting to `false` disables coloring while inspecting values. Setting to `'auto'` makes color[m
[32m+[m[32m                 * support depend on the value of the `isTTY` property and the value returned by `getColorDepth()` on the[m
[32m+[m[32m                 * respective stream. This option can not be used, if `inspectOptions.colors` is set as well.[m
[32m+[m[32m                 * @default auto[m
[32m+[m[32m                 */[m
[32m+[m[32m                colorMode?: boolean | "auto" | undefined;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Specifies options that are passed along to[m
[32m+[m[32m                 * [`util.inspect()`](https://nodejs.org/docs/latest-v22.x/api/util.html#utilinspectobject-options).[m
[32m+[m[32m                 */[m
[32m+[m[32m                inspectOptions?: InspectOptions | undefined;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Set group indentation.[m
[32m+[m[32m                 * @default 2[m
[32m+[m[32m                 */[m
[32m+[m[32m                groupIndentation?: number | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface ConsoleConstructor {[m
[32m+[m[32m                prototype: Console;[m
[32m+[m[32m                new(stdout: NodeJS.WritableStream, stderr?: NodeJS.WritableStream, ignoreErrors?: boolean): Console;[m
[32m+[m[32m                new(options: ConsoleConstructorOptions): Console;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        var console: Console;[m
[32m+[m[32m    }[m
[32m+[m[32m    export = globalThis.console;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/constants.d.ts b/node_modules/@types/node/constants.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..c3ac2b8[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/constants.d.ts[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m/** @deprecated since v6.3.0 - use constants property exposed by the relevant module instead. */[m
[32m+[m[32mdeclare module "constants" {[m
[32m+[m[32m    import { constants as osConstants, SignalConstants } from "node:os";[m
[32m+[m[32m    import { constants as cryptoConstants } from "node:crypto";[m
[32m+[m[32m    import { constants as fsConstants } from "node:fs";[m
[32m+[m
[32m+[m[32m    const exp:[m
[32m+[m[32m        & typeof osConstants.errno[m
[32m+[m[32m        & typeof osConstants.priority[m
[32m+[m[32m        & SignalConstants[m
[32m+[m[32m        & typeof cryptoConstants[m
[32m+[m[32m        & typeof fsConstants;[m
[32m+[m[32m    export = exp;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mdeclare module "node:constants" {[m
[32m+[m[32m    import constants = require("constants");[m
[32m+[m[32m    export = constants;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/crypto.d.ts b/node_modules/@types/node/crypto.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..9a83dda[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/crypto.d.ts[m
[36m@@ -0,0 +1,4451 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:crypto` module provides cryptographic functionality that includes a[m
[32m+[m[32m * set of wrappers for OpenSSL's hash, HMAC, cipher, decipher, sign, and verify[m
[32m+[m[32m * functions.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const { createHmac } = await import('node:crypto');[m
[32m+[m[32m *[m
[32m+[m[32m * const secret = 'abcdefg';[m
[32m+[m[32m * const hash = createHmac('sha256', secret)[m
[32m+[m[32m *                .update('I love cupcakes')[m
[32m+[m[32m *                .digest('hex');[m
[32m+[m[32m * console.log(hash);[m
[32m+[m[32m * // Prints:[m
[32m+[m[32m * //   c0fa1bc00531bd78ef38c628449c5102aeabd49b5dc3a2a516ea6ea959d6658e[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/crypto.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "crypto" {[m
[32m+[m[32m    import * as stream from "node:stream";[m
[32m+[m[32m    import { PeerCertificate } from "node:tls";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * SPKAC is a Certificate Signing Request mechanism originally implemented by[m
[32m+[m[32m     * Netscape and was specified formally as part of HTML5's `keygen` element.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `<keygen>` is deprecated since [HTML 5.2](https://www.w3.org/TR/html52/changes.html#features-removed) and new projects[m
[32m+[m[32m     * should not use this element anymore.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `node:crypto` module provides the `Certificate` class for working with SPKAC[m
[32m+[m[32m     * data. The most common usage is handling output generated by the HTML5 `<keygen>` element. Node.js uses [OpenSSL's SPKAC[m
[32m+[m[32m     * implementation](https://www.openssl.org/docs/man3.0/man1/openssl-spkac.html) internally.[m
[32m+[m[32m     * @since v0.11.8[m
[32m+[m[32m     */[m
[32m+[m[32m    class Certificate {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { Certificate } = await import('node:crypto');[m
[32m+[m[32m         * const spkac = getSpkacSomehow();[m
[32m+[m[32m         * const challenge = Certificate.exportChallenge(spkac);[m
[32m+[m[32m         * console.log(challenge.toString('utf8'));[m
[32m+[m[32m         * // Prints: the challenge as a UTF8 string[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v9.0.0[m
[32m+[m[32m         * @param encoding The `encoding` of the `spkac` string.[m
[32m+[m[32m         * @return The challenge component of the `spkac` data structure, which includes a public key and a challenge.[m
[32m+[m[32m         */[m
[32m+[m[32m        static exportChallenge(spkac: BinaryLike): Buffer;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { Certificate } = await import('node:crypto');[m
[32m+[m[32m         * const spkac = getSpkacSomehow();[m
[32m+[m[32m         * const publicKey = Certificate.exportPublicKey(spkac);[m
[32m+[m[32m         * console.log(publicKey);[m
[32m+[m[32m         * // Prints: the public key as <Buffer ...>[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v9.0.0[m
[32m+[m[32m         * @param encoding The `encoding` of the `spkac` string.[m
[32m+[m[32m         * @return The public key component of the `spkac` data structure, which includes a public key and a challenge.[m
[32m+[m[32m         */[m
[32m+[m[32m        static exportPublicKey(spkac: BinaryLike, encoding?: string): Buffer;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { Buffer } from 'node:buffer';[m
[32m+[m[32m         * const { Certificate } = await import('node:crypto');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const spkac = getSpkacSomehow();[m
[32m+[m[32m         * console.log(Certificate.verifySpkac(Buffer.from(spkac)));[m
[32m+[m[32m         * // Prints: true or false[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v9.0.0[m
[32m+[m[32m         * @param encoding The `encoding` of the `spkac` string.[m
[32m+[m[32m         * @return `true` if the given `spkac` data structure is valid, `false` otherwise.[m
[32m+[m[32m         */[m
[32m+[m[32m        static verifySpkac(spkac: NodeJS.ArrayBufferView): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated[m
[32m+[m[32m         * @param spkac[m
[32m+[m[32m         * @returns The challenge component of the `spkac` data structure,[m
[32m+[m[32m         * which includes a public key and a challenge.[m
[32m+[m[32m         */[m
[32m+[m[32m        exportChallenge(spkac: BinaryLike): Buffer;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated[m
[32m+[m[32m         * @param spkac[m
[32m+[m[32m         * @param encoding The encoding of the spkac string.[m
[32m+[m[32m         * @returns The public key component of the `spkac` data structure,[m
[32m+[m[32m         * which includes a public key and a challenge.[m
[32m+[m[32m         */[m
[32m+[m[32m        exportPublicKey(spkac: BinaryLike, encoding?: string): Buffer;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated[m
[32m+[m[32m         * @param spkac[m
[32m+[m[32m         * @returns `true` if the given `spkac` data structure is valid,[m
[32m+[m[32m         * `false` otherwise.[m
[32m+[m[32m         */[m
[32m+[m[32m        verifySpkac(spkac: NodeJS.ArrayBufferView): boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace constants {[m
[32m+[m[32m        // https://nodejs.org/dist/latest-v22.x/docs/api/crypto.html#crypto-constants[m
[32m+[m[32m        const OPENSSL_VERSION_NUMBER: number;[m
[32m+[m[32m        /** Applies multiple bug workarounds within OpenSSL. See https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html for detail. */[m
[32m+[m[32m        const SSL_OP_ALL: number;[m
[32m+[m[32m        /** Instructs OpenSSL to allow a non-[EC]DHE-based key exchange mode for TLS v1.3 */[m
[32m+[m[32m        const SSL_OP_ALLOW_NO_DHE_KEX: number;[m
[32m+[m[32m        /** Allows legacy insecure renegotiation between OpenSSL and unpatched clients or servers. See https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html. */[m
[32m+[m[32m        const SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION: number;[m
[32m+[m[32m        /** Attempts to use the server's preferences instead of the client's when selecting a cipher. See https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html. */[m
[32m+[m[32m        const SSL_OP_CIPHER_SERVER_PREFERENCE: number;[m
[32m+[m[32m        /** Instructs OpenSSL to use Cisco's version identifier of DTLS_BAD_VER. */[m
[32m+[m[32m        const SSL_OP_CISCO_ANYCONNECT: number;[m
[32m+[m[32m        /** Instructs OpenSSL to turn on cookie exchange. */[m
[32m+[m[32m        const SSL_OP_COOKIE_EXCHANGE: number;[m
[32m+[m[32m        /** Instructs OpenSSL to add server-hello extension from an early version of the cryptopro draft. */[m
[32m+[m[32m        const SSL_OP_CRYPTOPRO_TLSEXT_BUG: number;[m
[32m+[m[32m        /** Instructs OpenSSL to disable a SSL 3.0/TLS 1.0 vulnerability workaround added in OpenSSL 0.9.6d. */[m
[32m+[m[32m        const SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS: number;[m
[32m+[m[32m        /** Allows initial connection to servers that do not support RI. */[m
[32m+[m[32m        const SSL_OP_LEGACY_SERVER_CONNECT: number;[m
[32m+[m[32m        /** Instructs OpenSSL to disable support for SSL/TLS compression. */[m
[32m+[m[32m        const SSL_OP_NO_COMPRESSION: number;[m
[32m+[m[32m        /** Instructs OpenSSL to disable encrypt-then-MAC. */[m
[32m+[m[32m        const SSL_OP_NO_ENCRYPT_THEN_MAC: number;[m
[32m+[m[32m        const SSL_OP_NO_QUERY_MTU: number;[m
[32m+[m[32m        /** Instructs OpenSSL to disable renegotiation. */[m
[32m+[m[32m        const SSL_OP_NO_RENEGOTIATION: number;[m
[32m+[m[32m        /** Instructs OpenSSL to always start a new session when performing renegotiation. */[m
[32m+[m[32m        const SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION: number;[m
[32m+[m[32m        /** Instructs OpenSSL to turn off SSL v2 */[m
[32m+[m[32m        const SSL_OP_NO_SSLv2: number;[m
[32m+[m[32m        /** Instructs OpenSSL to turn off SSL v3 */[m
[32m+[m[32m        const SSL_OP_NO_SSLv3: number;[m
[32m+[m[32m        /** Instructs OpenSSL to disable use of RFC4507bis tickets. */[m
[32m+[m[32m        const SSL_OP_NO_TICKET: number;[m
[32m+[m[32m        /** Instructs OpenSSL to turn off TLS v1 */[m
[32m+[m[32m        const SSL_OP_NO_TLSv1: number;[m
[32m+[m[32m        /** Instructs OpenSSL to turn off TLS v1.1 */[m
[32m+[m[32m        const SSL_OP_NO_TLSv1_1: number;[m
[32m+[m[32m        /** Instructs OpenSSL to turn off TLS v1.2 */[m
[32m+[m[32m        const SSL_OP_NO_TLSv1_2: number;[m
[32m+[m[32m        /** Instructs OpenSSL to turn off TLS v1.3 */[m
[32m+[m[32m        const SSL_OP_NO_TLSv1_3: number;[m
[32m+[m[32m        /** Instructs OpenSSL server to prioritize ChaCha20-Poly1305 when the client does. This option has no effect if `SSL_OP_CIPHER_SERVER_PREFERENCE` is not enabled. */[m
[32m+[m[32m        const SSL_OP_PRIORITIZE_CHACHA: number;[m
[32m+[m[32m        /** Instructs OpenSSL to disable version rollback attack detection. */[m
[32m+[m[32m        const SSL_OP_TLS_ROLLBACK_BUG: number;[m
[32m+[m[32m        const ENGINE_METHOD_RSA: number;[m
[32m+[m[32m        const ENGINE_METHOD_DSA: number;[m
[32m+[m[32m        const ENGINE_METHOD_DH: number;[m
[32m+[m[32m        const ENGINE_METHOD_RAND: number;[m
[32m+[m[32m        const ENGINE_METHOD_EC: number;[m
[32m+[m[32m        const ENGINE_METHOD_CIPHERS: number;[m
[32m+[m[32m        const ENGINE_METHOD_DIGESTS: number;[m
[32m+[m[32m        const ENGINE_METHOD_PKEY_METHS: number;[m
[32m+[m[32m        const ENGINE_METHOD_PKEY_ASN1_METHS: number;[m
[32m+[m[32m        const ENGINE_METHOD_ALL: number;[m
[32m+[m[32m        const ENGINE_METHOD_NONE: number;[m
[32m+[m[32m        const DH_CHECK_P_NOT_SAFE_PRIME: number;[m
[32m+[m[32m        const DH_CHECK_P_NOT_PRIME: number;[m
[32m+[m[32m        const DH_UNABLE_TO_CHECK_GENERATOR: number;[m
[32m+[m[32m        const DH_NOT_SUITABLE_GENERATOR: number;[m
[32m+[m[32m        const RSA_PKCS1_PADDING: number;[m
[32m+[m[32m        const RSA_SSLV23_PADDING: number;[m
[32m+[m[32m        const RSA_NO_PADDING: number;[m
[32m+[m[32m        const RSA_PKCS1_OAEP_PADDING: number;[m
[32m+[m[32m        const RSA_X931_PADDING: number;[m
[32m+[m[32m        const RSA_PKCS1_PSS_PADDING: number;[m
[32m+[m[32m        /** Sets the salt length for RSA_PKCS1_PSS_PADDING to the digest size when signing or verifying. */[m
[32m+[m[32m        const RSA_PSS_SALTLEN_DIGEST: number;[m
[32m+[m[32m        /** Sets the salt length for RSA_PKCS1_PSS_PADDING to the maximum permissible value when signing data. */[m
[32m+[m[32m        const RSA_PSS_SALTLEN_MAX_SIGN: number;[m
[32m+[m[32m        /** Causes the salt length for RSA_PKCS1_PSS_PADDING to be determined automatically when verifying a signature. */[m
[32m+[m[32m        const RSA_PSS_SALTLEN_AUTO: number;[m
[32m+[m[32m        const POINT_CONVERSION_COMPRESSED: number;[m
[32m+[m[32m        const POINT_CONVERSION_UNCOMPRESSED: number;[m
[32m+[m[32m        const POINT_CONVERSION_HYBRID: number;[m
[32m+[m[32m        /** Specifies the built-in default cipher list used by Node.js (colon-separated values). */[m
[32m+[m[32m        const defaultCoreCipherList: string;[m
[32m+[m[32m        /** Specifies the active default cipher list used by the current Node.js process  (colon-separated values). */[m
[32m+[m[32m        const defaultCipherList: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface HashOptions extends stream.TransformOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * For XOF hash functions such as `shake256`, the[m
[32m+[m[32m         * outputLength option can be used to specify the desired output length in bytes.[m
[32m+[m[32m         */[m
[32m+[m[32m        outputLength?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /** @deprecated since v10.0.0 */[m
[32m+[m[32m    const fips: boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates and returns a `Hash` object that can be used to generate hash digests[m
[32m+[m[32m     * using the given `algorithm`. Optional `options` argument controls stream[m
[32m+[m[32m     * behavior. For XOF hash functions such as `'shake256'`, the `outputLength` option[m
[32m+[m[32m     * can be used to specify the desired output length in bytes.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `algorithm` is dependent on the available algorithms supported by the[m
[32m+[m[32m     * version of OpenSSL on the platform. Examples are `'sha256'`, `'sha512'`, etc.[m
[32m+[m[32m     * On recent releases of OpenSSL, `openssl list -digest-algorithms` will[m
[32m+[m[32m     * display the available digest algorithms.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: generating the sha256 sum of a file[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import {[m
[32m+[m[32m     *   createReadStream,[m
[32m+[m[32m     * } from 'node:fs';[m
[32m+[m[32m     * import { argv } from 'node:process';[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   createHash,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const filename = argv[2];[m
[32m+[m[32m     *[m
[32m+[m[32m     * const hash = createHash('sha256');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const input = createReadStream(filename);[m
[32m+[m[32m     * input.on('readable', () => {[m
[32m+[m[32m     *   // Only one element is going to be produced by the[m
[32m+[m[32m     *   // hash stream.[m
[32m+[m[32m     *   const data = input.read();[m
[32m+[m[32m     *   if (data)[m
[32m+[m[32m     *     hash.update(data);[m
[32m+[m[32m     *   else {[m
[32m+[m[32m     *     console.log(`${hash.digest('hex')} ${filename}`);[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.92[m
[32m+[m[32m     * @param options `stream.transform` options[m
[32m+[m[32m     */[m
[32m+[m[32m    function createHash(algorithm: string, options?: HashOptions): Hash;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates and returns an `Hmac` object that uses the given `algorithm` and `key`.[m
[32m+[m[32m     * Optional `options` argument controls stream behavior.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `algorithm` is dependent on the available algorithms supported by the[m
[32m+[m[32m     * version of OpenSSL on the platform. Examples are `'sha256'`, `'sha512'`, etc.[m
[32m+[m[32m     * On recent releases of OpenSSL, `openssl list -digest-algorithms` will[m
[32m+[m[32m     * display the available digest algorithms.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `key` is the HMAC key used to generate the cryptographic HMAC hash. If it is[m
[32m+[m[32m     * a `KeyObject`, its type must be `secret`. If it is a string, please consider `caveats when using strings as inputs to cryptographic APIs`. If it was[m
[32m+[m[32m     * obtained from a cryptographically secure source of entropy, such as {@link randomBytes} or {@link generateKey}, its length should not[m
[32m+[m[32m     * exceed the block size of `algorithm` (e.g., 512 bits for SHA-256).[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: generating the sha256 HMAC of a file[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import {[m
[32m+[m[32m     *   createReadStream,[m
[32m+[m[32m     * } from 'node:fs';[m
[32m+[m[32m     * import { argv } from 'node:process';[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   createHmac,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const filename = argv[2];[m
[32m+[m[32m     *[m
[32m+[m[32m     * const hmac = createHmac('sha256', 'a secret');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const input = createReadStream(filename);[m
[32m+[m[32m     * input.on('readable', () => {[m
[32m+[m[32m     *   // Only one element is going to be produced by the[m
[32m+[m[32m     *   // hash stream.[m
[32m+[m[32m     *   const data = input.read();[m
[32m+[m[32m     *   if (data)[m
[32m+[m[32m     *     hmac.update(data);[m
[32m+[m[32m     *   else {[m
[32m+[m[32m     *     console.log(`${hmac.digest('hex')} ${filename}`);[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.94[m
[32m+[m[32m     * @param options `stream.transform` options[m
[32m+[m[32m     */[m
[32m+[m[32m    function createHmac(algorithm: string, key: BinaryLike | KeyObject, options?: stream.TransformOptions): Hmac;[m
[32m+[m[32m    // https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings[m
[32m+[m[32m    type BinaryToTextEncoding = "base64" | "base64url" | "hex" | "binary";[m
[32m+[m[32m    type CharacterEncoding = "utf8" | "utf-8" | "utf16le" | "utf-16le" | "latin1";[m
[32m+[m[32m    type LegacyCharacterEncoding = "ascii" | "binary" | "ucs2" | "ucs-2";[m
[32m+[m[32m    type Encoding = BinaryToTextEncoding | CharacterEncoding | LegacyCharacterEncoding;[m
[32m+[m[32m    type ECDHKeyFormat = "compressed" | "uncompressed" | "hybrid";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `Hash` class is a utility for creating hash digests of data. It can be[m
[32m+[m[32m     * used in one of two ways:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * As a `stream` that is both readable and writable, where data is written[m
[32m+[m[32m     * to produce a computed hash digest on the readable side, or[m
[32m+[m[32m     * * Using the `hash.update()` and `hash.digest()` methods to produce the[m
[32m+[m[32m     * computed hash.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The {@link createHash} method is used to create `Hash` instances. `Hash`objects are not to be created directly using the `new` keyword.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using `Hash` objects as streams:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   createHash,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const hash = createHash('sha256');[m
[32m+[m[32m     *[m
[32m+[m[32m     * hash.on('readable', () => {[m
[32m+[m[32m     *   // Only one element is going to be produced by the[m
[32m+[m[32m     *   // hash stream.[m
[32m+[m[32m     *   const data = hash.read();[m
[32m+[m[32m     *   if (data) {[m
[32m+[m[32m     *     console.log(data.toString('hex'));[m
[32m+[m[32m     *     // Prints:[m
[32m+[m[32m     *     //   6a2da20943931e9834fc12cfe5bb47bbd9ae43489a30726962b576f4e3993e50[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * hash.write('some data to hash');[m
[32m+[m[32m     * hash.end();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using `Hash` and piped streams:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { createReadStream } from 'node:fs';[m
[32m+[m[32m     * import { stdout } from 'node:process';[m
[32m+[m[32m     * const { createHash } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const hash = createHash('sha256');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const input = createReadStream('test.js');[m
[32m+[m[32m     * input.pipe(hash).setEncoding('hex').pipe(stdout);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using the `hash.update()` and `hash.digest()` methods:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   createHash,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const hash = createHash('sha256');[m
[32m+[m[32m     *[m
[32m+[m[32m     * hash.update('some data to hash');[m
[32m+[m[32m     * console.log(hash.digest('hex'));[m
[32m+[m[32m     * // Prints:[m
[32m+[m[32m     * //   6a2da20943931e9834fc12cfe5bb47bbd9ae43489a30726962b576f4e3993e50[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.92[m
[32m+[m[32m     */[m
[32m+[m[32m    class Hash extends stream.Transform {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Creates a new `Hash` object that contains a deep copy of the internal state[m
[32m+[m[32m         * of the current `Hash` object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `options` argument controls stream behavior. For XOF hash[m
[32m+[m[32m         * functions such as `'shake256'`, the `outputLength` option can be used to[m
[32m+[m[32m         * specify the desired output length in bytes.[m
[32m+[m[32m         *[m
[32m+[m[32m         * An error is thrown when an attempt is made to copy the `Hash` object after[m
[32m+[m[32m         * its `hash.digest()` method has been called.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Calculate a rolling hash.[m
[32m+[m[32m         * const {[m
[32m+[m[32m         *   createHash,[m
[32m+[m[32m         * } = await import('node:crypto');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const hash = createHash('sha256');[m
[32m+[m[32m         *[m
[32m+[m[32m         * hash.update('one');[m
[32m+[m[32m         * console.log(hash.copy().digest('hex'));[m
[32m+[m[32m         *[m
[32m+[m[32m         * hash.update('two');[m
[32m+[m[32m         * console.log(hash.copy().digest('hex'));[m
[32m+[m[32m         *[m
[32m+[m[32m         * hash.update('three');[m
[32m+[m[32m         * console.log(hash.copy().digest('hex'));[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Etc.[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v13.1.0[m
[32m+[m[32m         * @param options `stream.transform` options[m
[32m+[m[32m         */[m
[32m+[m[32m        copy(options?: HashOptions): Hash;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Updates the hash content with the given `data`, the encoding of which[m
[32m+[m[32m         * is given in `inputEncoding`.[m
[32m+[m[32m         * If `encoding` is not provided, and the `data` is a string, an[m
[32m+[m[32m         * encoding of `'utf8'` is enforced. If `data` is a `Buffer`, `TypedArray`, or`DataView`, then `inputEncoding` is ignored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This can be called many times with new data as it is streamed.[m
[32m+[m[32m         * @since v0.1.92[m
[32m+[m[32m         * @param inputEncoding The `encoding` of the `data` string.[m
[32m+[m[32m         */[m
[32m+[m[32m        update(data: BinaryLike): Hash;[m
[32m+[m[32m        update(data: string, inputEncoding: Encoding): Hash;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calculates the digest of all of the data passed to be hashed (using the `hash.update()` method).[m
[32m+[m[32m         * If `encoding` is provided a string will be returned; otherwise[m
[32m+[m[32m         * a `Buffer` is returned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `Hash` object can not be used again after `hash.digest()` method has been[m
[32m+[m[32m         * called. Multiple calls will cause an error to be thrown.[m
[32m+[m[32m         * @since v0.1.92[m
[32m+[m[32m         * @param encoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        digest(): Buffer;[m
[32m+[m[32m        digest(encoding: BinaryToTextEncoding): string;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `Hmac` class is a utility for creating cryptographic HMAC digests. It can[m
[32m+[m[32m     * be used in one of two ways:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * As a `stream` that is both readable and writable, where data is written[m
[32m+[m[32m     * to produce a computed HMAC digest on the readable side, or[m
[32m+[m[32m     * * Using the `hmac.update()` and `hmac.digest()` methods to produce the[m
[32m+[m[32m     * computed HMAC digest.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The {@link createHmac} method is used to create `Hmac` instances. `Hmac`objects are not to be created directly using the `new` keyword.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using `Hmac` objects as streams:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   createHmac,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const hmac = createHmac('sha256', 'a secret');[m
[32m+[m[32m     *[m
[32m+[m[32m     * hmac.on('readable', () => {[m
[32m+[m[32m     *   // Only one element is going to be produced by the[m
[32m+[m[32m     *   // hash stream.[m
[32m+[m[32m     *   const data = hmac.read();[m
[32m+[m[32m     *   if (data) {[m
[32m+[m[32m     *     console.log(data.toString('hex'));[m
[32m+[m[32m     *     // Prints:[m
[32m+[m[32m     *     //   7fd04df92f636fd450bc841c9418e5825c17f33ad9c87c518115a45971f7f77e[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * hmac.write('some data to hash');[m
[32m+[m[32m     * hmac.end();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using `Hmac` and piped streams:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { createReadStream } from 'node:fs';[m
[32m+[m[32m     * import { stdout } from 'node:process';[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   createHmac,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const hmac = createHmac('sha256', 'a secret');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const input = createReadStream('test.js');[m
[32m+[m[32m     * input.pipe(hmac).pipe(stdout);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using the `hmac.update()` and `hmac.digest()` methods:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   createHmac,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const hmac = createHmac('sha256', 'a secret');[m
[32m+[m[32m     *[m
[32m+[m[32m     * hmac.update('some data to hash');[m
[32m+[m[32m     * console.log(hmac.digest('hex'));[m
[32m+[m[32m     * // Prints:[m
[32m+[m[32m     * //   7fd04df92f636fd450bc841c9418e5825c17f33ad9c87c518115a45971f7f77e[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.94[m
[32m+[m[32m     * @deprecated Since v20.13.0 Calling `Hmac` class directly with `Hmac()` or `new Hmac()` is deprecated due to being internals, not intended for public use. Please use the {@link createHmac} method to create Hmac instances.[m
[32m+[m[32m     */[m
[32m+[m[32m    class Hmac extends stream.Transform {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Updates the `Hmac` content with the given `data`, the encoding of which[m
[32m+[m[32m         * is given in `inputEncoding`.[m
[32m+[m[32m         * If `encoding` is not provided, and the `data` is a string, an[m
[32m+[m[32m         * encoding of `'utf8'` is enforced. If `data` is a `Buffer`, `TypedArray`, or`DataView`, then `inputEncoding` is ignored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This can be called many times with new data as it is streamed.[m
[32m+[m[32m         * @since v0.1.94[m
[32m+[m[32m         * @param inputEncoding The `encoding` of the `data` string.[m
[32m+[m[32m         */[m
[32m+[m[32m        update(data: BinaryLike): Hmac;[m
[32m+[m[32m        update(data: string, inputEncoding: Encoding): Hmac;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calculates the HMAC digest of all of the data passed using `hmac.update()`.[m
[32m+[m[32m         * If `encoding` is[m
[32m+[m[32m         * provided a string is returned; otherwise a `Buffer` is returned;[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `Hmac` object can not be used again after `hmac.digest()` has been[m
[32m+[m[32m         * called. Multiple calls to `hmac.digest()` will result in an error being thrown.[m
[32m+[m[32m         * @since v0.1.94[m
[32m+[m[32m         * @param encoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        digest(): Buffer;[m
[32m+[m[32m        digest(encoding: BinaryToTextEncoding): string;[m
[32m+[m[32m    }[m
[32m+[m[32m    type KeyObjectType = "secret" | "public" | "private";[m
[32m+[m[32m    interface KeyExportOptions<T extends KeyFormat> {[m
[32m+[m[32m        type: "pkcs1" | "spki" | "pkcs8" | "sec1";[m
[32m+[m[32m        format: T;[m
[32m+[m[32m        cipher?: string | undefined;[m
[32m+[m[32m        passphrase?: string | Buffer | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface JwkKeyExportOptions {[m
[32m+[m[32m        format: "jwk";[m
[32m+[m[32m    }[m
[32m+[m[32m    interface JsonWebKey {[m
[32m+[m[32m        crv?: string | undefined;[m
[32m+[m[32m        d?: string | undefined;[m
[32m+[m[32m        dp?: string | undefined;[m
[32m+[m[32m        dq?: string | undefined;[m
[32m+[m[32m        e?: string | undefined;[m
[32m+[m[32m        k?: string | undefined;[m
[32m+[m[32m        kty?: string | undefined;[m
[32m+[m[32m        n?: string | undefined;[m
[32m+[m[32m        p?: string | undefined;[m
[32m+[m[32m        q?: string | undefined;[m
[32m+[m[32m        qi?: string | undefined;[m
[32m+[m[32m        x?: string | undefined;[m
[32m+[m[32m        y?: string | undefined;[m
[32m+[m[32m        [key: string]: unknown;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface AsymmetricKeyDetails {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Key size in bits (RSA, DSA).[m
[32m+[m[32m         */[m
[32m+[m[32m        modulusLength?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Public exponent (RSA).[m
[32m+[m[32m         */[m
[32m+[m[32m        publicExponent?: bigint | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Name of the message digest (RSA-PSS).[m
[32m+[m[32m         */[m
[32m+[m[32m        hashAlgorithm?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Name of the message digest used by MGF1 (RSA-PSS).[m
[32m+[m[32m         */[m
[32m+[m[32m        mgf1HashAlgorithm?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Minimal salt length in bytes (RSA-PSS).[m
[32m+[m[32m         */[m
[32m+[m[32m        saltLength?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Size of q in bits (DSA).[m
[32m+[m[32m         */[m
[32m+[m[32m        divisorLength?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Name of the curve (EC).[m
[32m+[m[32m         */[m
[32m+[m[32m        namedCurve?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Node.js uses a `KeyObject` class to represent a symmetric or asymmetric key,[m
[32m+[m[32m     * and each kind of key exposes different functions. The {@link createSecretKey}, {@link createPublicKey} and {@link createPrivateKey} methods are used to create `KeyObject`instances. `KeyObject`[m
[32m+[m[32m     * objects are not to be created directly using the `new`keyword.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Most applications should consider using the new `KeyObject` API instead of[m
[32m+[m[32m     * passing keys as strings or `Buffer`s due to improved security features.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `KeyObject` instances can be passed to other threads via `postMessage()`.[m
[32m+[m[32m     * The receiver obtains a cloned `KeyObject`, and the `KeyObject` does not need to[m
[32m+[m[32m     * be listed in the `transferList` argument.[m
[32m+[m[32m     * @since v11.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class KeyObject {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Example: Converting a `CryptoKey` instance to a `KeyObject`:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { KeyObject } = await import('node:crypto');[m
[32m+[m[32m         * const { subtle } = globalThis.crypto;[m
[32m+[m[32m         *[m
[32m+[m[32m         * const key = await subtle.generateKey({[m
[32m+[m[32m         *   name: 'HMAC',[m
[32m+[m[32m         *   hash: 'SHA-256',[m
[32m+[m[32m         *   length: 256,[m
[32m+[m[32m         * }, true, ['sign', 'verify']);[m
[32m+[m[32m         *[m
[32m+[m[32m         * const keyObject = KeyObject.from(key);[m
[32m+[m[32m         * console.log(keyObject.symmetricKeySize);[m
[32m+[m[32m         * // Prints: 32 (symmetric key size in bytes)[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        static from(key: webcrypto.CryptoKey): KeyObject;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * For asymmetric keys, this property represents the type of the key. Supported key[m
[32m+[m[32m         * types are:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `'rsa'` (OID 1.2.840.113549.1.1.1)[m
[32m+[m[32m         * * `'rsa-pss'` (OID 1.2.840.113549.1.1.10)[m
[32m+[m[32m         * * `'dsa'` (OID 1.2.840.10040.4.1)[m
[32m+[m[32m         * * `'ec'` (OID 1.2.840.10045.2.1)[m
[32m+[m[32m         * * `'x25519'` (OID 1.3.101.110)[m
[32m+[m[32m         * * `'x448'` (OID 1.3.101.111)[m
[32m+[m[32m         * * `'ed25519'` (OID 1.3.101.112)[m
[32m+[m[32m         * * `'ed448'` (OID 1.3.101.113)[m
[32m+[m[32m         * * `'dh'` (OID 1.2.840.113549.1.3.1)[m
[32m+[m[32m         *[m
[32m+[m[32m         * This property is `undefined` for unrecognized `KeyObject` types and symmetric[m
[32m+[m[32m         * keys.[m
[32m+[m[32m         * @since v11.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        asymmetricKeyType?: KeyType | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * For asymmetric keys, this property represents the size of the embedded key in[m
[32m+[m[32m         * bytes. This property is `undefined` for symmetric keys.[m
[32m+[m[32m         */[m
[32m+[m[32m        asymmetricKeySize?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property exists only on asymmetric keys. Depending on the type of the key,[m
[32m+[m[32m         * this object contains information about the key. None of the information obtained[m
[32m+[m[32m         * through this property can be used to uniquely identify a key or to compromise[m
[32m+[m[32m         * the security of the key.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For RSA-PSS keys, if the key material contains a `RSASSA-PSS-params` sequence,[m
[32m+[m[32m         * the `hashAlgorithm`, `mgf1HashAlgorithm`, and `saltLength` properties will be[m
[32m+[m[32m         * set.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Other key details might be exposed via this API using additional attributes.[m
[32m+[m[32m         * @since v15.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        asymmetricKeyDetails?: AsymmetricKeyDetails | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * For symmetric keys, the following encoding options can be used:[m
[32m+[m[32m         *[m
[32m+[m[32m         * For public keys, the following encoding options can be used:[m
[32m+[m[32m         *[m
[32m+[m[32m         * For private keys, the following encoding options can be used:[m
[32m+[m[32m         *[m
[32m+[m[32m         * The result type depends on the selected encoding format, when PEM the[m
[32m+[m[32m         * result is a string, when DER it will be a buffer containing the data[m
[32m+[m[32m         * encoded as DER, when [JWK](https://tools.ietf.org/html/rfc7517) it will be an object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When [JWK](https://tools.ietf.org/html/rfc7517) encoding format was selected, all other encoding options are[m
[32m+[m[32m         * ignored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * PKCS#1, SEC1, and PKCS#8 type keys can be encrypted by using a combination of[m
[32m+[m[32m         * the `cipher` and `format` options. The PKCS#8 `type` can be used with any`format` to encrypt any key algorithm (RSA, EC, or DH) by specifying a`cipher`. PKCS#1 and SEC1 can only be[m
[32m+[m[32m         * encrypted by specifying a `cipher`when the PEM `format` is used. For maximum compatibility, use PKCS#8 for[m
[32m+[m[32m         * encrypted private keys. Since PKCS#8 defines its own[m
[32m+[m[32m         * encryption mechanism, PEM-level encryption is not supported when encrypting[m
[32m+[m[32m         * a PKCS#8 key. See [RFC 5208](https://www.rfc-editor.org/rfc/rfc5208.txt) for PKCS#8 encryption and [RFC 1421](https://www.rfc-editor.org/rfc/rfc1421.txt) for[m
[32m+[m[32m         * PKCS#1 and SEC1 encryption.[m
[32m+[m[32m         * @since v11.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        export(options: KeyExportOptions<"pem">): string | Buffer;[m
[32m+[m[32m        export(options?: KeyExportOptions<"der">): Buffer;[m
[32m+[m[32m        export(options?: JwkKeyExportOptions): JsonWebKey;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` or `false` depending on whether the keys have exactly the same[m
[32m+[m[32m         * type, value, and parameters. This method is not [constant time](https://en.wikipedia.org/wiki/Timing_attack).[m
[32m+[m[32m         * @since v17.7.0, v16.15.0[m
[32m+[m[32m         * @param otherKeyObject A `KeyObject` with which to compare `keyObject`.[m
[32m+[m[32m         */[m
[32m+[m[32m        equals(otherKeyObject: KeyObject): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * For secret keys, this property represents the size of the key in bytes. This[m
[32m+[m[32m         * property is `undefined` for asymmetric keys.[m
[32m+[m[32m         * @since v11.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        symmetricKeySize?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Depending on the type of this `KeyObject`, this property is either`'secret'` for secret (symmetric) keys, `'public'` for public (asymmetric) keys[m
[32m+[m[32m         * or `'private'` for private (asymmetric) keys.[m
[32m+[m[32m         * @since v11.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        type: KeyObjectType;[m
[32m+[m[32m    }[m
[32m+[m[32m    type CipherCCMTypes = "aes-128-ccm" | "aes-192-ccm" | "aes-256-ccm" | "chacha20-poly1305";[m
[32m+[m[32m    type CipherGCMTypes = "aes-128-gcm" | "aes-192-gcm" | "aes-256-gcm";[m
[32m+[m[32m    type CipherOCBTypes = "aes-128-ocb" | "aes-192-ocb" | "aes-256-ocb";[m
[32m+[m[32m    type BinaryLike = string | NodeJS.ArrayBufferView;[m
[32m+[m[32m    type CipherKey = BinaryLike | KeyObject;[m
[32m+[m[32m    interface CipherCCMOptions extends stream.TransformOptions {[m
[32m+[m[32m        authTagLength: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CipherGCMOptions extends stream.TransformOptions {[m
[32m+[m[32m        authTagLength?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CipherOCBOptions extends stream.TransformOptions {[m
[32m+[m[32m        authTagLength: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates and returns a `Cipher` object, with the given `algorithm`, `key` and[m
[32m+[m[32m     * initialization vector (`iv`).[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `options` argument controls stream behavior and is optional except when a[m
[32m+[m[32m     * cipher in CCM or OCB mode (e.g. `'aes-128-ccm'`) is used. In that case, the`authTagLength` option is required and specifies the length of the[m
[32m+[m[32m     * authentication tag in bytes, see `CCM mode`. In GCM mode, the `authTagLength`option is not required but can be used to set the length of the authentication[m
[32m+[m[32m     * tag that will be returned by `getAuthTag()` and defaults to 16 bytes.[m
[32m+[m[32m     * For `chacha20-poly1305`, the `authTagLength` option defaults to 16 bytes.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `algorithm` is dependent on OpenSSL, examples are `'aes192'`, etc. On[m
[32m+[m[32m     * recent OpenSSL releases, `openssl list -cipher-algorithms` will[m
[32m+[m[32m     * display the available cipher algorithms.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `key` is the raw key used by the `algorithm` and `iv` is an [initialization vector](https://en.wikipedia.org/wiki/Initialization_vector). Both arguments must be `'utf8'` encoded[m
[32m+[m[32m     * strings,`Buffers`, `TypedArray`, or `DataView`s. The `key` may optionally be[m
[32m+[m[32m     * a `KeyObject` of type `secret`. If the cipher does not need[m
[32m+[m[32m     * an initialization vector, `iv` may be `null`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When passing strings for `key` or `iv`, please consider `caveats when using strings as inputs to cryptographic APIs`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Initialization vectors should be unpredictable and unique; ideally, they will be[m
[32m+[m[32m     * cryptographically random. They do not have to be secret: IVs are typically just[m
[32m+[m[32m     * added to ciphertext messages unencrypted. It may sound contradictory that[m
[32m+[m[32m     * something has to be unpredictable and unique, but does not have to be secret;[m
[32m+[m[32m     * remember that an attacker must not be able to predict ahead of time what a[m
[32m+[m[32m     * given IV will be.[m
[32m+[m[32m     * @since v0.1.94[m
[32m+[m[32m     * @param options `stream.transform` options[m
[32m+[m[32m     */[m
[32m+[m[32m    function createCipheriv([m
[32m+[m[32m        algorithm: CipherCCMTypes,[m
[32m+[m[32m        key: CipherKey,[m
[32m+[m[32m        iv: BinaryLike,[m
[32m+[m[32m        options: CipherCCMOptions,[m
[32m+[m[32m    ): CipherCCM;[m
[32m+[m[32m    function createCipheriv([m
[32m+[m[32m        algorithm: CipherOCBTypes,[m
[32m+[m[32m        key: CipherKey,[m
[32m+[m[32m        iv: BinaryLike,[m
[32m+[m[32m        options: CipherOCBOptions,[m
[32m+[m[32m    ): CipherOCB;[m
[32m+[m[32m    function createCipheriv([m
[32m+[m[32m        algorithm: CipherGCMTypes,[m
[32m+[m[32m        key: CipherKey,[m
[32m+[m[32m        iv: BinaryLike,[m
[32m+[m[32m        options?: CipherGCMOptions,[m
[32m+[m[32m    ): CipherGCM;[m
[32m+[m[32m    function createCipheriv([m
[32m+[m[32m        algorithm: string,[m
[32m+[m[32m        key: CipherKey,[m
[32m+[m[32m        iv: BinaryLike | null,[m
[32m+[m[32m        options?: stream.TransformOptions,[m
[32m+[m[32m    ): Cipher;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Instances of the `Cipher` class are used to encrypt data. The class can be[m
[32m+[m[32m     * used in one of two ways:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * As a `stream` that is both readable and writable, where plain unencrypted[m
[32m+[m[32m     * data is written to produce encrypted data on the readable side, or[m
[32m+[m[32m     * * Using the `cipher.update()` and `cipher.final()` methods to produce[m
[32m+[m[32m     * the encrypted data.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The {@link createCipheriv} method is[m
[32m+[m[32m     * used to create `Cipher` instances. `Cipher` objects are not to be created[m
[32m+[m[32m     * directly using the `new` keyword.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using `Cipher` objects as streams:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   scrypt,[m
[32m+[m[32m     *   randomFill,[m
[32m+[m[32m     *   createCipheriv,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const algorithm = 'aes-192-cbc';[m
[32m+[m[32m     * const password = 'Password used to generate key';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // First, we'll generate the key. The key length is dependent on the algorithm.[m
[32m+[m[32m     * // In this case for aes192, it is 24 bytes (192 bits).[m
[32m+[m[32m     * scrypt(password, 'salt', 24, (err, key) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   // Then, we'll generate a random initialization vector[m
[32m+[m[32m     *   randomFill(new Uint8Array(16), (err, iv) => {[m
[32m+[m[32m     *     if (err) throw err;[m
[32m+[m[32m     *[m
[32m+[m[32m     *     // Once we have the key and iv, we can create and use the cipher...[m
[32m+[m[32m     *     const cipher = createCipheriv(algorithm, key, iv);[m
[32m+[m[32m     *[m
[32m+[m[32m     *     let encrypted = '';[m
[32m+[m[32m     *     cipher.setEncoding('hex');[m
[32m+[m[32m     *[m
[32m+[m[32m     *     cipher.on('data', (chunk) => encrypted += chunk);[m
[32m+[m[32m     *     cipher.on('end', () => console.log(encrypted));[m
[32m+[m[32m     *[m
[32m+[m[32m     *     cipher.write('some clear text data');[m
[32m+[m[32m     *     cipher.end();[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using `Cipher` and piped streams:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import {[m
[32m+[m[32m     *   createReadStream,[m
[32m+[m[32m     *   createWriteStream,[m
[32m+[m[32m     * } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * import {[m
[32m+[m[32m     *   pipeline,[m
[32m+[m[32m     * } from 'node:stream';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   scrypt,[m
[32m+[m[32m     *   randomFill,[m
[32m+[m[32m     *   createCipheriv,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const algorithm = 'aes-192-cbc';[m
[32m+[m[32m     * const password = 'Password used to generate key';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // First, we'll generate the key. The key length is dependent on the algorithm.[m
[32m+[m[32m     * // In this case for aes192, it is 24 bytes (192 bits).[m
[32m+[m[32m     * scrypt(password, 'salt', 24, (err, key) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   // Then, we'll generate a random initialization vector[m
[32m+[m[32m     *   randomFill(new Uint8Array(16), (err, iv) => {[m
[32m+[m[32m     *     if (err) throw err;[m
[32m+[m[32m     *[m
[32m+[m[32m     *     const cipher = createCipheriv(algorithm, key, iv);[m
[32m+[m[32m     *[m
[32m+[m[32m     *     const input = createReadStream('test.js');[m
[32m+[m[32m     *     const output = createWriteStream('test.enc');[m
[32m+[m[32m     *[m
[32m+[m[32m     *     pipeline(input, cipher, output, (err) => {[m
[32m+[m[32m     *       if (err) throw err;[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using the `cipher.update()` and `cipher.final()` methods:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   scrypt,[m
[32m+[m[32m     *   randomFill,[m
[32m+[m[32m     *   createCipheriv,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const algorithm = 'aes-192-cbc';[m
[32m+[m[32m     * const password = 'Password used to generate key';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // First, we'll generate the key. The key length is dependent on the algorithm.[m
[32m+[m[32m     * // In this case for aes192, it is 24 bytes (192 bits).[m
[32m+[m[32m     * scrypt(password, 'salt', 24, (err, key) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   // Then, we'll generate a random initialization vector[m
[32m+[m[32m     *   randomFill(new Uint8Array(16), (err, iv) => {[m
[32m+[m[32m     *     if (err) throw err;[m
[32m+[m[32m     *[m
[32m+[m[32m     *     const cipher = createCipheriv(algorithm, key, iv);[m
[32m+[m[32m     *[m
[32m+[m[32m     *     let encrypted = cipher.update('some clear text data', 'utf8', 'hex');[m
[32m+[m[32m     *     encrypted += cipher.final('hex');[m
[32m+[m[32m     *     console.log(encrypted);[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.94[m
[32m+[m[32m     */[m
[32m+[m[32m    class Cipher extends stream.Transform {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Updates the cipher with `data`. If the `inputEncoding` argument is given,[m
[32m+[m[32m         * the `data`argument is a string using the specified encoding. If the `inputEncoding`argument is not given, `data` must be a `Buffer`, `TypedArray`, or `DataView`. If `data` is a `Buffer`,[m
[32m+[m[32m         * `TypedArray`, or `DataView`, then `inputEncoding` is ignored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `outputEncoding` specifies the output format of the enciphered[m
[32m+[m[32m         * data. If the `outputEncoding`is specified, a string using the specified encoding is returned. If no`outputEncoding` is provided, a `Buffer` is returned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `cipher.update()` method can be called multiple times with new data until `cipher.final()` is called. Calling `cipher.update()` after `cipher.final()` will result in an error being[m
[32m+[m[32m         * thrown.[m
[32m+[m[32m         * @since v0.1.94[m
[32m+[m[32m         * @param inputEncoding The `encoding` of the data.[m
[32m+[m[32m         * @param outputEncoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        update(data: BinaryLike): Buffer;[m
[32m+[m[32m        update(data: string, inputEncoding: Encoding): Buffer;[m
[32m+[m[32m        update(data: NodeJS.ArrayBufferView, inputEncoding: undefined, outputEncoding: Encoding): string;[m
[32m+[m[32m        update(data: string, inputEncoding: Encoding | undefined, outputEncoding: Encoding): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Once the `cipher.final()` method has been called, the `Cipher` object can no[m
[32m+[m[32m         * longer be used to encrypt data. Attempts to call `cipher.final()` more than[m
[32m+[m[32m         * once will result in an error being thrown.[m
[32m+[m[32m         * @since v0.1.94[m
[32m+[m[32m         * @param outputEncoding The `encoding` of the return value.[m
[32m+[m[32m         * @return Any remaining enciphered contents. If `outputEncoding` is specified, a string is returned. If an `outputEncoding` is not provided, a {@link Buffer} is returned.[m
[32m+[m[32m         */[m
[32m+[m[32m        final(): Buffer;[m
[32m+[m[32m        final(outputEncoding: BufferEncoding): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When using block encryption algorithms, the `Cipher` class will automatically[m
[32m+[m[32m         * add padding to the input data to the appropriate block size. To disable the[m
[32m+[m[32m         * default padding call `cipher.setAutoPadding(false)`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When `autoPadding` is `false`, the length of the entire input data must be a[m
[32m+[m[32m         * multiple of the cipher's block size or `cipher.final()` will throw an error.[m
[32m+[m[32m         * Disabling automatic padding is useful for non-standard padding, for instance[m
[32m+[m[32m         * using `0x0` instead of PKCS padding.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `cipher.setAutoPadding()` method must be called before `cipher.final()`.[m
[32m+[m[32m         * @since v0.7.1[m
[32m+[m[32m         * @param [autoPadding=true][m
[32m+[m[32m         * @return for method chaining.[m
[32m+[m[32m         */[m
[32m+[m[32m        setAutoPadding(autoPadding?: boolean): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CipherCCM extends Cipher {[m
[32m+[m[32m        setAAD([m
[32m+[m[32m            buffer: NodeJS.ArrayBufferView,[m
[32m+[m[32m            options: {[m
[32m+[m[32m                plaintextLength: number;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        getAuthTag(): Buffer;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CipherGCM extends Cipher {[m
[32m+[m[32m        setAAD([m
[32m+[m[32m            buffer: NodeJS.ArrayBufferView,[m
[32m+[m[32m            options?: {[m
[32m+[m[32m                plaintextLength: number;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        getAuthTag(): Buffer;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CipherOCB extends Cipher {[m
[32m+[m[32m        setAAD([m
[32m+[m[32m            buffer: NodeJS.ArrayBufferView,[m
[32m+[m[32m            options?: {[m
[32m+[m[32m                plaintextLength: number;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        getAuthTag(): Buffer;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates and returns a `Decipher` object that uses the given `algorithm`, `key` and initialization vector (`iv`).[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `options` argument controls stream behavior and is optional except when a[m
[32m+[m[32m     * cipher in CCM or OCB mode (e.g. `'aes-128-ccm'`) is used. In that case, the `authTagLength` option is required and specifies the length of the[m
[32m+[m[32m     * authentication tag in bytes, see `CCM mode`. In GCM mode, the `authTagLength` option is not required but can be used to restrict accepted authentication tags[m
[32m+[m[32m     * to those with the specified length.[m
[32m+[m[32m     * For `chacha20-poly1305`, the `authTagLength` option defaults to 16 bytes.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `algorithm` is dependent on OpenSSL, examples are `'aes192'`, etc. On[m
[32m+[m[32m     * recent OpenSSL releases, `openssl list -cipher-algorithms` will[m
[32m+[m[32m     * display the available cipher algorithms.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `key` is the raw key used by the `algorithm` and `iv` is an [initialization vector](https://en.wikipedia.org/wiki/Initialization_vector). Both arguments must be `'utf8'` encoded[m
[32m+[m[32m     * strings,`Buffers`, `TypedArray`, or `DataView`s. The `key` may optionally be[m
[32m+[m[32m     * a `KeyObject` of type `secret`. If the cipher does not need[m
[32m+[m[32m     * an initialization vector, `iv` may be `null`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When passing strings for `key` or `iv`, please consider `caveats when using strings as inputs to cryptographic APIs`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Initialization vectors should be unpredictable and unique; ideally, they will be[m
[32m+[m[32m     * cryptographically random. They do not have to be secret: IVs are typically just[m
[32m+[m[32m     * added to ciphertext messages unencrypted. It may sound contradictory that[m
[32m+[m[32m     * something has to be unpredictable and unique, but does not have to be secret;[m
[32m+[m[32m     * remember that an attacker must not be able to predict ahead of time what a given[m
[32m+[m[32m     * IV will be.[m
[32m+[m[32m     * @since v0.1.94[m
[32m+[m[32m     * @param options `stream.transform` options[m
[32m+[m[32m     */[m
[32m+[m[32m    function createDecipheriv([m
[32m+[m[32m        algorithm: CipherCCMTypes,[m
[32m+[m[32m        key: CipherKey,[m
[32m+[m[32m        iv: BinaryLike,[m
[32m+[m[32m        options: CipherCCMOptions,[m
[32m+[m[32m    ): DecipherCCM;[m
[32m+[m[32m    function createDecipheriv([m
[32m+[m[32m        algorithm: CipherOCBTypes,[m
[32m+[m[32m        key: CipherKey,[m
[32m+[m[32m        iv: BinaryLike,[m
[32m+[m[32m        options: CipherOCBOptions,[m
[32m+[m[32m    ): DecipherOCB;[m
[32m+[m[32m    function createDecipheriv([m
[32m+[m[32m        algorithm: CipherGCMTypes,[m
[32m+[m[32m        key: CipherKey,[m
[32m+[m[32m        iv: BinaryLike,[m
[32m+[m[32m        options?: CipherGCMOptions,[m
[32m+[m[32m    ): DecipherGCM;[m
[32m+[m[32m    function createDecipheriv([m
[32m+[m[32m        algorithm: string,[m
[32m+[m[32m        key: CipherKey,[m
[32m+[m[32m        iv: BinaryLike | null,[m
[32m+[m[32m        options?: stream.TransformOptions,[m
[32m+[m[32m    ): Decipher;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Instances of the `Decipher` class are used to decrypt data. The class can be[m
[32m+[m[32m     * used in one of two ways:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * As a `stream` that is both readable and writable, where plain encrypted[m
[32m+[m[32m     * data is written to produce unencrypted data on the readable side, or[m
[32m+[m[32m     * * Using the `decipher.update()` and `decipher.final()` methods to[m
[32m+[m[32m     * produce the unencrypted data.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The {@link createDecipheriv} method is[m
[32m+[m[32m     * used to create `Decipher` instances. `Decipher` objects are not to be created[m
[32m+[m[32m     * directly using the `new` keyword.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using `Decipher` objects as streams:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   scryptSync,[m
[32m+[m[32m     *   createDecipheriv,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const algorithm = 'aes-192-cbc';[m
[32m+[m[32m     * const password = 'Password used to generate key';[m
[32m+[m[32m     * // Key length is dependent on the algorithm. In this case for aes192, it is[m
[32m+[m[32m     * // 24 bytes (192 bits).[m
[32m+[m[32m     * // Use the async `crypto.scrypt()` instead.[m
[32m+[m[32m     * const key = scryptSync(password, 'salt', 24);[m
[32m+[m[32m     * // The IV is usually passed along with the ciphertext.[m
[32m+[m[32m     * const iv = Buffer.alloc(16, 0); // Initialization vector.[m
[32m+[m[32m     *[m
[32m+[m[32m     * const decipher = createDecipheriv(algorithm, key, iv);[m
[32m+[m[32m     *[m
[32m+[m[32m     * let decrypted = '';[m
[32m+[m[32m     * decipher.on('readable', () => {[m
[32m+[m[32m     *   let chunk;[m
[32m+[m[32m     *   while (null !== (chunk = decipher.read())) {[m
[32m+[m[32m     *     decrypted += chunk.toString('utf8');[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * decipher.on('end', () => {[m
[32m+[m[32m     *   console.log(decrypted);[m
[32m+[m[32m     *   // Prints: some clear text data[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Encrypted with same algorithm, key and iv.[m
[32m+[m[32m     * const encrypted =[m
[32m+[m[32m     *   'e5f79c5915c02171eec6b212d5520d44480993d7d622a7c4c2da32f6efda0ffa';[m
[32m+[m[32m     * decipher.write(encrypted, 'hex');[m
[32m+[m[32m     * decipher.end();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using `Decipher` and piped streams:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import {[m
[32m+[m[32m     *   createReadStream,[m
[32m+[m[32m     *   createWriteStream,[m
[32m+[m[32m     * } from 'node:fs';[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   scryptSync,[m
[32m+[m[32m     *   createDecipheriv,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const algorithm = 'aes-192-cbc';[m
[32m+[m[32m     * const password = 'Password used to generate key';[m
[32m+[m[32m     * // Use the async `crypto.scrypt()` instead.[m
[32m+[m[32m     * const key = scryptSync(password, 'salt', 24);[m
[32m+[m[32m     * // The IV is usually passed along with the ciphertext.[m
[32m+[m[32m     * const iv = Buffer.alloc(16, 0); // Initialization vector.[m
[32m+[m[32m     *[m
[32m+[m[32m     * const decipher = createDecipheriv(algorithm, key, iv);[m
[32m+[m[32m     *[m
[32m+[m[32m     * const input = createReadStream('test.enc');[m
[32m+[m[32m     * const output = createWriteStream('test.js');[m
[32m+[m[32m     *[m
[32m+[m[32m     * input.pipe(decipher).pipe(output);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using the `decipher.update()` and `decipher.final()` methods:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   scryptSync,[m
[32m+[m[32m     *   createDecipheriv,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const algorithm = 'aes-192-cbc';[m
[32m+[m[32m     * const password = 'Password used to generate key';[m
[32m+[m[32m     * // Use the async `crypto.scrypt()` instead.[m
[32m+[m[32m     * const key = scryptSync(password, 'salt', 24);[m
[32m+[m[32m     * // The IV is usually passed along with the ciphertext.[m
[32m+[m[32m     * const iv = Buffer.alloc(16, 0); // Initialization vector.[m
[32m+[m[32m     *[m
[32m+[m[32m     * const decipher = createDecipheriv(algorithm, key, iv);[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Encrypted using same algorithm, key and iv.[m
[32m+[m[32m     * const encrypted =[m
[32m+[m[32m     *   'e5f79c5915c02171eec6b212d5520d44480993d7d622a7c4c2da32f6efda0ffa';[m
[32m+[m[32m     * let decrypted = decipher.update(encrypted, 'hex', 'utf8');[m
[32m+[m[32m     * decrypted += decipher.final('utf8');[m
[32m+[m[32m     * console.log(decrypted);[m
[32m+[m[32m     * // Prints: some clear text data[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.94[m
[32m+[m[32m     */[m
[32m+[m[32m    class Decipher extends stream.Transform {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Updates the decipher with `data`. If the `inputEncoding` argument is given,[m
[32m+[m[32m         * the `data` argument is a string using the specified encoding. If the `inputEncoding` argument is not given, `data` must be a `Buffer`. If `data` is a `Buffer` then `inputEncoding` is[m
[32m+[m[32m         * ignored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `outputEncoding` specifies the output format of the enciphered[m
[32m+[m[32m         * data. If the `outputEncoding` is specified, a string using the specified encoding is returned. If no `outputEncoding` is provided, a `Buffer` is returned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `decipher.update()` method can be called multiple times with new data until `decipher.final()` is called. Calling `decipher.update()` after `decipher.final()` will result in an error[m
[32m+[m[32m         * being thrown.[m
[32m+[m[32m         * @since v0.1.94[m
[32m+[m[32m         * @param inputEncoding The `encoding` of the `data` string.[m
[32m+[m[32m         * @param outputEncoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        update(data: NodeJS.ArrayBufferView): Buffer;[m
[32m+[m[32m        update(data: string, inputEncoding: Encoding): Buffer;[m
[32m+[m[32m        update(data: NodeJS.ArrayBufferView, inputEncoding: undefined, outputEncoding: Encoding): string;[m
[32m+[m[32m        update(data: string, inputEncoding: Encoding | undefined, outputEncoding: Encoding): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Once the `decipher.final()` method has been called, the `Decipher` object can[m
[32m+[m[32m         * no longer be used to decrypt data. Attempts to call `decipher.final()` more[m
[32m+[m[32m         * than once will result in an error being thrown.[m
[32m+[m[32m         * @since v0.1.94[m
[32m+[m[32m         * @param outputEncoding The `encoding` of the return value.[m
[32m+[m[32m         * @return Any remaining deciphered contents. If `outputEncoding` is specified, a string is returned. If an `outputEncoding` is not provided, a {@link Buffer} is returned.[m
[32m+[m[32m         */[m
[32m+[m[32m        final(): Buffer;[m
[32m+[m[32m        final(outputEncoding: BufferEncoding): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When data has been encrypted without standard block padding, calling `decipher.setAutoPadding(false)` will disable automatic padding to prevent `decipher.final()` from checking for and[m
[32m+[m[32m         * removing padding.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Turning auto padding off will only work if the input data's length is a[m
[32m+[m[32m         * multiple of the ciphers block size.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `decipher.setAutoPadding()` method must be called before `decipher.final()`.[m
[32m+[m[32m         * @since v0.7.1[m
[32m+[m[32m         * @param [autoPadding=true][m
[32m+[m[32m         * @return for method chaining.[m
[32m+[m[32m         */[m
[32m+[m[32m        setAutoPadding(auto_padding?: boolean): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface DecipherCCM extends Decipher {[m
[32m+[m[32m        setAuthTag(buffer: NodeJS.ArrayBufferView): this;[m
[32m+[m[32m        setAAD([m
[32m+[m[32m            buffer: NodeJS.ArrayBufferView,[m
[32m+[m[32m            options: {[m
[32m+[m[32m                plaintextLength: number;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface DecipherGCM extends Decipher {[m
[32m+[m[32m        setAuthTag(buffer: NodeJS.ArrayBufferView): this;[m
[32m+[m[32m        setAAD([m
[32m+[m[32m            buffer: NodeJS.ArrayBufferView,[m
[32m+[m[32m            options?: {[m
[32m+[m[32m                plaintextLength: number;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface DecipherOCB extends Decipher {[m
[32m+[m[32m        setAuthTag(buffer: NodeJS.ArrayBufferView): this;[m
[32m+[m[32m        setAAD([m
[32m+[m[32m            buffer: NodeJS.ArrayBufferView,[m
[32m+[m[32m            options?: {[m
[32m+[m[32m                plaintextLength: number;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface PrivateKeyInput {[m
[32m+[m[32m        key: string | Buffer;[m
[32m+[m[32m        format?: KeyFormat | undefined;[m
[32m+[m[32m        type?: "pkcs1" | "pkcs8" | "sec1" | undefined;[m
[32m+[m[32m        passphrase?: string | Buffer | undefined;[m
[32m+[m[32m        encoding?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface PublicKeyInput {[m
[32m+[m[32m        key: string | Buffer;[m
[32m+[m[32m        format?: KeyFormat | undefined;[m
[32m+[m[32m        type?: "pkcs1" | "spki" | undefined;[m
[32m+[m[32m        encoding?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously generates a new random secret key of the given `length`. The `type` will determine which validations will be performed on the `length`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   generateKey,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * generateKey('hmac', { length: 512 }, (err, key) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(key.export().toString('hex'));  // 46e..........620[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The size of a generated HMAC key should not exceed the block size of the[m
[32m+[m[32m     * underlying hash function. See {@link createHmac} for more information.[m
[32m+[m[32m     * @since v15.0.0[m
[32m+[m[32m     * @param type The intended use of the generated secret key. Currently accepted values are `'hmac'` and `'aes'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function generateKey([m
[32m+[m[32m        type: "hmac" | "aes",[m
[32m+[m[32m        options: {[m
[32m+[m[32m            length: number;[m
[32m+[m[32m        },[m
[32m+[m[32m        callback: (err: Error | null, key: KeyObject) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously generates a new random secret key of the given `length`. The `type` will determine which validations will be performed on the `length`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   generateKeySync,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const key = generateKeySync('hmac', { length: 512 });[m
[32m+[m[32m     * console.log(key.export().toString('hex'));  // e89..........41e[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The size of a generated HMAC key should not exceed the block size of the[m
[32m+[m[32m     * underlying hash function. See {@link createHmac} for more information.[m
[32m+[m[32m     * @since v15.0.0[m
[32m+[m[32m     * @param type The intended use of the generated secret key. Currently accepted values are `'hmac'` and `'aes'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function generateKeySync([m
[32m+[m[32m        type: "hmac" | "aes",[m
[32m+[m[32m        options: {[m
[32m+[m[32m            length: number;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): KeyObject;[m
[32m+[m[32m    interface JsonWebKeyInput {[m
[32m+[m[32m        key: JsonWebKey;[m
[32m+[m[32m        format: "jwk";[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates and returns a new key object containing a private key. If `key` is a[m
[32m+[m[32m     * string or `Buffer`, `format` is assumed to be `'pem'`; otherwise, `key` must be an object with the properties described above.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the private key is encrypted, a `passphrase` must be specified. The length[m
[32m+[m[32m     * of the passphrase is limited to 1024 bytes.[m
[32m+[m[32m     * @since v11.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function createPrivateKey(key: PrivateKeyInput | string | Buffer | JsonWebKeyInput): KeyObject;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates and returns a new key object containing a public key. If `key` is a[m
[32m+[m[32m     * string or `Buffer`, `format` is assumed to be `'pem'`; if `key` is a `KeyObject` with type `'private'`, the public key is derived from the given private key;[m
[32m+[m[32m     * otherwise, `key` must be an object with the properties described above.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the format is `'pem'`, the `'key'` may also be an X.509 certificate.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Because public keys can be derived from private keys, a private key may be[m
[32m+[m[32m     * passed instead of a public key. In that case, this function behaves as if {@link createPrivateKey} had been called, except that the type of the[m
[32m+[m[32m     * returned `KeyObject` will be `'public'` and that the private key cannot be[m
[32m+[m[32m     * extracted from the returned `KeyObject`. Similarly, if a `KeyObject` with type `'private'` is given, a new `KeyObject` with type `'public'` will be returned[m
[32m+[m[32m     * and it will be impossible to extract the private key from the returned object.[m
[32m+[m[32m     * @since v11.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function createPublicKey(key: PublicKeyInput | string | Buffer | KeyObject | JsonWebKeyInput): KeyObject;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates and returns a new key object containing a secret key for symmetric[m
[32m+[m[32m     * encryption or `Hmac`.[m
[32m+[m[32m     * @since v11.6.0[m
[32m+[m[32m     * @param encoding The string encoding when `key` is a string.[m
[32m+[m[32m     */[m
[32m+[m[32m    function createSecretKey(key: NodeJS.ArrayBufferView): KeyObject;[m
[32m+[m[32m    function createSecretKey(key: string, encoding: BufferEncoding): KeyObject;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates and returns a `Sign` object that uses the given `algorithm`. Use {@link getHashes} to obtain the names of the available digest algorithms.[m
[32m+[m[32m     * Optional `options` argument controls the `stream.Writable` behavior.[m
[32m+[m[32m     *[m
[32m+[m[32m     * In some cases, a `Sign` instance can be created using the name of a signature[m
[32m+[m[32m     * algorithm, such as `'RSA-SHA256'`, instead of a digest algorithm. This will use[m
[32m+[m[32m     * the corresponding digest algorithm. This does not work for all signature[m
[32m+[m[32m     * algorithms, such as `'ecdsa-with-SHA256'`, so it is best to always use digest[m
[32m+[m[32m     * algorithm names.[m
[32m+[m[32m     * @since v0.1.92[m
[32m+[m[32m     * @param options `stream.Writable` options[m
[32m+[m[32m     */[m
[32m+[m[32m    function createSign(algorithm: string, options?: stream.WritableOptions): Sign;[m
[32m+[m[32m    type DSAEncoding = "der" | "ieee-p1363";[m
[32m+[m[32m    interface SigningOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @see crypto.constants.RSA_PKCS1_PADDING[m
[32m+[m[32m         */[m
[32m+[m[32m        padding?: number | undefined;[m
[32m+[m[32m        saltLength?: number | undefined;[m
[32m+[m[32m        dsaEncoding?: DSAEncoding | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface SignPrivateKeyInput extends PrivateKeyInput, SigningOptions {}[m
[32m+[m[32m    interface SignKeyObjectInput extends SigningOptions {[m
[32m+[m[32m        key: KeyObject;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface SignJsonWebKeyInput extends JsonWebKeyInput, SigningOptions {}[m
[32m+[m[32m    interface VerifyPublicKeyInput extends PublicKeyInput, SigningOptions {}[m
[32m+[m[32m    interface VerifyKeyObjectInput extends SigningOptions {[m
[32m+[m[32m        key: KeyObject;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface VerifyJsonWebKeyInput extends JsonWebKeyInput, SigningOptions {}[m
[32m+[m[32m    type KeyLike = string | Buffer | KeyObject;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `Sign` class is a utility for generating signatures. It can be used in one[m
[32m+[m[32m     * of two ways:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * As a writable `stream`, where data to be signed is written and the `sign.sign()` method is used to generate and return the signature, or[m
[32m+[m[32m     * * Using the `sign.update()` and `sign.sign()` methods to produce the[m
[32m+[m[32m     * signature.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The {@link createSign} method is used to create `Sign` instances. The[m
[32m+[m[32m     * argument is the string name of the hash function to use. `Sign` objects are not[m
[32m+[m[32m     * to be created directly using the `new` keyword.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using `Sign` and `Verify` objects as streams:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   generateKeyPairSync,[m
[32m+[m[32m     *   createSign,[m
[32m+[m[32m     *   createVerify,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const { privateKey, publicKey } = generateKeyPairSync('ec', {[m
[32m+[m[32m     *   namedCurve: 'sect239k1',[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * const sign = createSign('SHA256');[m
[32m+[m[32m     * sign.write('some data to sign');[m
[32m+[m[32m     * sign.end();[m
[32m+[m[32m     * const signature = sign.sign(privateKey, 'hex');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const verify = createVerify('SHA256');[m
[32m+[m[32m     * verify.write('some data to sign');[m
[32m+[m[32m     * verify.end();[m
[32m+[m[32m     * console.log(verify.verify(publicKey, signature, 'hex'));[m
[32m+[m[32m     * // Prints: true[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example: Using the `sign.update()` and `verify.update()` methods:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   generateKeyPairSync,[m
[32m+[m[32m     *   createSign,[m
[32m+[m[32m     *   createVerify,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const { privateKey, publicKey } = generateKeyPairSync('rsa', {[m
[32m+[m[32m     *   modulusLength: 2048,[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * const sign = createSign('SHA256');[m
[32m+[m[32m     * sign.update('some data to sign');[m
[32m+[m[32m     * sign.end();[m
[32m+[m[32m     * const signature = sign.sign(privateKey);[m
[32m+[m[32m     *[m
[32m+[m[32m     * const verify = createVerify('SHA256');[m
[32m+[m[32m     * verify.update('some data to sign');[m
[32m+[m[32m     * verify.end();[m
[32m+[m[32m     * console.log(verify.verify(publicKey, signature));[m
[32m+[m[32m     * // Prints: true[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.92[m
[32m+[m[32m     */[m
[32m+[m[32m    class Sign extends stream.Writable {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Updates the `Sign` content with the given `data`, the encoding of which[m
[32m+[m[32m         * is given in `inputEncoding`.[m
[32m+[m[32m         * If `encoding` is not provided, and the `data` is a string, an[m
[32m+[m[32m         * encoding of `'utf8'` is enforced. If `data` is a `Buffer`, `TypedArray`, or`DataView`, then `inputEncoding` is ignored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This can be called many times with new data as it is streamed.[m
[32m+[m[32m         * @since v0.1.92[m
[32m+[m[32m         * @param inputEncoding The `encoding` of the `data` string.[m
[32m+[m[32m         */[m
[32m+[m[32m        update(data: BinaryLike): this;[m
[32m+[m[32m        update(data: string, inputEncoding: Encoding): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calculates the signature on all the data passed through using either `sign.update()` or `sign.write()`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `privateKey` is not a `KeyObject`, this function behaves as if `privateKey` had been passed to {@link createPrivateKey}. If it is an[m
[32m+[m[32m         * object, the following additional properties can be passed:[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `outputEncoding` is provided a string is returned; otherwise a `Buffer` is returned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `Sign` object can not be again used after `sign.sign()` method has been[m
[32m+[m[32m         * called. Multiple calls to `sign.sign()` will result in an error being thrown.[m
[32m+[m[32m         * @since v0.1.92[m
[32m+[m[32m         */[m
[32m+[m[32m        sign(privateKey: KeyLike | SignKeyObjectInput | SignPrivateKeyInput | SignJsonWebKeyInput): Buffer;[m
[32m+[m[32m        sign([m
[32m+[m[32m            privateKey: KeyLike | SignKeyObjectInput | SignPrivateKeyInput | SignJsonWebKeyInput,[m
[32m+[m[32m            outputFormat: BinaryToTextEncoding,[m
[32m+[m[32m        ): string;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates and returns a `Verify` object that uses the given algorithm.[m
[32m+[m[32m     * Use {@link getHashes} to obtain an array of names of the available[m
[32m+[m[32m     * signing algorithms. Optional `options` argument controls the `stream.Writable` behavior.[m
[32m+[m[32m     *[m
[32m+[m[32m     * In some cases, a `Verify` instance can be created using the name of a signature[m
[32m+[m[32m     * algorithm, such as `'RSA-SHA256'`, instead of a digest algorithm. This will use[m
[32m+[m[32m     * the corresponding digest algorithm. This does not work for all signature[m
[32m+[m[32m     * algorithms, such as `'ecdsa-with-SHA256'`, so it is best to always use digest[m
[32m+[m[32m     * algorithm names.[m
[32m+[m[32m     * @since v0.1.92[m
[32m+[m[32m     * @param options `stream.Writable` options[m
[32m+[m[32m     */[m
[32m+[m[32m    function createVerify(algorithm: string, options?: stream.WritableOptions): Verify;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `Verify` class is a utility for verifying signatures. It can be used in one[m
[32m+[m[32m     * of two ways:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * As a writable `stream` where written data is used to validate against the[m
[32m+[m[32m     * supplied signature, or[m
[32m+[m[32m     * * Using the `verify.update()` and `verify.verify()` methods to verify[m
[32m+[m[32m     * the signature.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The {@link createVerify} method is used to create `Verify` instances. `Verify` objects are not to be created directly using the `new` keyword.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See `Sign` for examples.[m
[32m+[m[32m     * @since v0.1.92[m
[32m+[m[32m     */[m
[32m+[m[32m    class Verify extends stream.Writable {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Updates the `Verify` content with the given `data`, the encoding of which[m
[32m+[m[32m         * is given in `inputEncoding`.[m
[32m+[m[32m         * If `inputEncoding` is not provided, and the `data` is a string, an[m
[32m+[m[32m         * encoding of `'utf8'` is enforced. If `data` is a `Buffer`, `TypedArray`, or `DataView`, then `inputEncoding` is ignored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This can be called many times with new data as it is streamed.[m
[32m+[m[32m         * @since v0.1.92[m
[32m+[m[32m         * @param inputEncoding The `encoding` of the `data` string.[m
[32m+[m[32m         */[m
[32m+[m[32m        update(data: BinaryLike): Verify;[m
[32m+[m[32m        update(data: string, inputEncoding: Encoding): Verify;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Verifies the provided data using the given `object` and `signature`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `object` is not a `KeyObject`, this function behaves as if `object` had been passed to {@link createPublicKey}. If it is an[m
[32m+[m[32m         * object, the following additional properties can be passed:[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `signature` argument is the previously calculated signature for the data, in[m
[32m+[m[32m         * the `signatureEncoding`.[m
[32m+[m[32m         * If a `signatureEncoding` is specified, the `signature` is expected to be a[m
[32m+[m[32m         * string; otherwise `signature` is expected to be a `Buffer`, `TypedArray`, or `DataView`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `verify` object can not be used again after `verify.verify()` has been[m
[32m+[m[32m         * called. Multiple calls to `verify.verify()` will result in an error being[m
[32m+[m[32m         * thrown.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Because public keys can be derived from private keys, a private key may[m
[32m+[m[32m         * be passed instead of a public key.[m
[32m+[m[32m         * @since v0.1.92[m
[32m+[m[32m         */[m
[32m+[m[32m        verify([m
[32m+[m[32m            object: KeyLike | VerifyKeyObjectInput | VerifyPublicKeyInput | VerifyJsonWebKeyInput,[m
[32m+[m[32m            signature: NodeJS.ArrayBufferView,[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        verify([m
[32m+[m[32m            object: KeyLike | VerifyKeyObjectInput | VerifyPublicKeyInput | VerifyJsonWebKeyInput,[m
[32m+[m[32m            signature: string,[m
[32m+[m[32m            signature_format?: BinaryToTextEncoding,[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a `DiffieHellman` key exchange object using the supplied `prime` and an[m
[32m+[m[32m     * optional specific `generator`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `generator` argument can be a number, string, or `Buffer`. If `generator` is not specified, the value `2` is used.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `primeEncoding` is specified, `prime` is expected to be a string; otherwise[m
[32m+[m[32m     * a `Buffer`, `TypedArray`, or `DataView` is expected.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `generatorEncoding` is specified, `generator` is expected to be a string;[m
[32m+[m[32m     * otherwise a number, `Buffer`, `TypedArray`, or `DataView` is expected.[m
[32m+[m[32m     * @since v0.11.12[m
[32m+[m[32m     * @param primeEncoding The `encoding` of the `prime` string.[m
[32m+[m[32m     * @param [generator=2][m
[32m+[m[32m     * @param generatorEncoding The `encoding` of the `generator` string.[m
[32m+[m[32m     */[m
[32m+[m[32m    function createDiffieHellman(primeLength: number, generator?: number): DiffieHellman;[m
[32m+[m[32m    function createDiffieHellman([m
[32m+[m[32m        prime: ArrayBuffer | NodeJS.ArrayBufferView,[m
[32m+[m[32m        generator?: number | ArrayBuffer | NodeJS.ArrayBufferView,[m
[32m+[m[32m    ): DiffieHellman;[m
[32m+[m[32m    function createDiffieHellman([m
[32m+[m[32m        prime: ArrayBuffer | NodeJS.ArrayBufferView,[m
[32m+[m[32m        generator: string,[m
[32m+[m[32m        generatorEncoding: BinaryToTextEncoding,[m
[32m+[m[32m    ): DiffieHellman;[m
[32m+[m[32m    function createDiffieHellman([m
[32m+[m[32m        prime: string,[m
[32m+[m[32m        primeEncoding: BinaryToTextEncoding,[m
[32m+[m[32m        generator?: number | ArrayBuffer | NodeJS.ArrayBufferView,[m
[32m+[m[32m    ): DiffieHellman;[m
[32m+[m[32m    function createDiffieHellman([m
[32m+[m[32m        prime: string,[m
[32m+[m[32m        primeEncoding: BinaryToTextEncoding,[m
[32m+[m[32m        generator: string,[m
[32m+[m[32m        generatorEncoding: BinaryToTextEncoding,[m
[32m+[m[32m    ): DiffieHellman;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `DiffieHellman` class is a utility for creating Diffie-Hellman key[m
[32m+[m[32m     * exchanges.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Instances of the `DiffieHellman` class can be created using the {@link createDiffieHellman} function.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import assert from 'node:assert';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   createDiffieHellman,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Generate Alice's keys...[m
[32m+[m[32m     * const alice = createDiffieHellman(2048);[m
[32m+[m[32m     * const aliceKey = alice.generateKeys();[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Generate Bob's keys...[m
[32m+[m[32m     * const bob = createDiffieHellman(alice.getPrime(), alice.getGenerator());[m
[32m+[m[32m     * const bobKey = bob.generateKeys();[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Exchange and generate the secret...[m
[32m+[m[32m     * const aliceSecret = alice.computeSecret(bobKey);[m
[32m+[m[32m     * const bobSecret = bob.computeSecret(aliceKey);[m
[32m+[m[32m     *[m
[32m+[m[32m     * // OK[m
[32m+[m[32m     * assert.strictEqual(aliceSecret.toString('hex'), bobSecret.toString('hex'));[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class DiffieHellman {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Generates private and public Diffie-Hellman key values unless they have been[m
[32m+[m[32m         * generated or computed already, and returns[m
[32m+[m[32m         * the public key in the specified `encoding`. This key should be[m
[32m+[m[32m         * transferred to the other party.[m
[32m+[m[32m         * If `encoding` is provided a string is returned; otherwise a `Buffer` is returned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This function is a thin wrapper around [`DH_generate_key()`](https://www.openssl.org/docs/man3.0/man3/DH_generate_key.html). In particular,[m
[32m+[m[32m         * once a private key has been generated or set, calling this function only updates[m
[32m+[m[32m         * the public key but does not generate a new private key.[m
[32m+[m[32m         * @since v0.5.0[m
[32m+[m[32m         * @param encoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        generateKeys(): Buffer;[m
[32m+[m[32m        generateKeys(encoding: BinaryToTextEncoding): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Computes the shared secret using `otherPublicKey` as the other[m
[32m+[m[32m         * party's public key and returns the computed shared secret. The supplied[m
[32m+[m[32m         * key is interpreted using the specified `inputEncoding`, and secret is[m
[32m+[m[32m         * encoded using specified `outputEncoding`.[m
[32m+[m[32m         * If the `inputEncoding` is not[m
[32m+[m[32m         * provided, `otherPublicKey` is expected to be a `Buffer`, `TypedArray`, or `DataView`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `outputEncoding` is given a string is returned; otherwise, a `Buffer` is returned.[m
[32m+[m[32m         * @since v0.5.0[m
[32m+[m[32m         * @param inputEncoding The `encoding` of an `otherPublicKey` string.[m
[32m+[m[32m         * @param outputEncoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        computeSecret(otherPublicKey: NodeJS.ArrayBufferView, inputEncoding?: null, outputEncoding?: null): Buffer;[m
[32m+[m[32m        computeSecret(otherPublicKey: string, inputEncoding: BinaryToTextEncoding, outputEncoding?: null): Buffer;[m
[32m+[m[32m        computeSecret([m
[32m+[m[32m            otherPublicKey: NodeJS.ArrayBufferView,[m
[32m+[m[32m            inputEncoding: null,[m
[32m+[m[32m            outputEncoding: BinaryToTextEncoding,[m
[32m+[m[32m        ): string;[m
[32m+[m[32m        computeSecret([m
[32m+[m[32m            otherPublicKey: string,[m
[32m+[m[32m            inputEncoding: BinaryToTextEncoding,[m
[32m+[m[32m            outputEncoding: BinaryToTextEncoding,[m
[32m+[m[32m        ): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the Diffie-Hellman prime in the specified `encoding`.[m
[32m+[m[32m         * If `encoding` is provided a string is[m
[32m+[m[32m         * returned; otherwise a `Buffer` is returned.[m
[32m+[m[32m         * @since v0.5.0[m
[32m+[m[32m         * @param encoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        getPrime(): Buffer;[m
[32m+[m[32m        getPrime(encoding: BinaryToTextEncoding): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the Diffie-Hellman generator in the specified `encoding`.[m
[32m+[m[32m         * If `encoding` is provided a string is[m
[32m+[m[32m         * returned; otherwise a `Buffer` is returned.[m
[32m+[m[32m         * @since v0.5.0[m
[32m+[m[32m         * @param encoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        getGenerator(): Buffer;[m
[32m+[m[32m        getGenerator(encoding: BinaryToTextEncoding): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the Diffie-Hellman public key in the specified `encoding`.[m
[32m+[m[32m         * If `encoding` is provided a[m
[32m+[m[32m         * string is returned; otherwise a `Buffer` is returned.[m
[32m+[m[32m         * @since v0.5.0[m
[32m+[m[32m         * @param encoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        getPublicKey(): Buffer;[m
[32m+[m[32m        getPublicKey(encoding: BinaryToTextEncoding): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the Diffie-Hellman private key in the specified `encoding`.[m
[32m+[m[32m         * If `encoding` is provided a[m
[32m+[m[32m         * string is returned; otherwise a `Buffer` is returned.[m
[32m+[m[32m         * @since v0.5.0[m
[32m+[m[32m         * @param encoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        getPrivateKey(): Buffer;[m
[32m+[m[32m        getPrivateKey(encoding: BinaryToTextEncoding): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the Diffie-Hellman public key. If the `encoding` argument is provided, `publicKey` is expected[m
[32m+[m[32m         * to be a string. If no `encoding` is provided, `publicKey` is expected[m
[32m+[m[32m         * to be a `Buffer`, `TypedArray`, or `DataView`.[m
[32m+[m[32m         * @since v0.5.0[m
[32m+[m[32m         * @param encoding The `encoding` of the `publicKey` string.[m
[32m+[m[32m         */[m
[32m+[m[32m        setPublicKey(publicKey: NodeJS.ArrayBufferView): void;[m
[32m+[m[32m        setPublicKey(publicKey: string, encoding: BufferEncoding): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the Diffie-Hellman private key. If the `encoding` argument is provided,`privateKey` is expected[m
[32m+[m[32m         * to be a string. If no `encoding` is provided, `privateKey` is expected[m
[32m+[m[32m         * to be a `Buffer`, `TypedArray`, or `DataView`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This function does not automatically compute the associated public key. Either `diffieHellman.setPublicKey()` or `diffieHellman.generateKeys()` can be[m
[32m+[m[32m         * used to manually provide the public key or to automatically derive it.[m
[32m+[m[32m         * @since v0.5.0[m
[32m+[m[32m         * @param encoding The `encoding` of the `privateKey` string.[m
[32m+[m[32m         */[m
[32m+[m[32m        setPrivateKey(privateKey: NodeJS.ArrayBufferView): void;[m
[32m+[m[32m        setPrivateKey(privateKey: string, encoding: BufferEncoding): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A bit field containing any warnings and/or errors resulting from a check[m
[32m+[m[32m         * performed during initialization of the `DiffieHellman` object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The following values are valid for this property (as defined in `node:constants` module):[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `DH_CHECK_P_NOT_SAFE_PRIME`[m
[32m+[m[32m         * * `DH_CHECK_P_NOT_PRIME`[m
[32m+[m[32m         * * `DH_UNABLE_TO_CHECK_GENERATOR`[m
[32m+[m[32m         * * `DH_NOT_SUITABLE_GENERATOR`[m
[32m+[m[32m         * @since v0.11.12[m
[32m+[m[32m         */[m
[32m+[m[32m        verifyError: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `DiffieHellmanGroup` class takes a well-known modp group as its argument.[m
[32m+[m[32m     * It works the same as `DiffieHellman`, except that it does not allow changing its keys after creation.[m
[32m+[m[32m     * In other words, it does not implement `setPublicKey()` or `setPrivateKey()` methods.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { createDiffieHellmanGroup } = await import('node:crypto');[m
[32m+[m[32m     * const dh = createDiffieHellmanGroup('modp1');[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * The name (e.g. `'modp1'`) is taken from [RFC 2412](https://www.rfc-editor.org/rfc/rfc2412.txt) (modp1 and 2) and [RFC 3526](https://www.rfc-editor.org/rfc/rfc3526.txt):[m
[32m+[m[32m     * ```bash[m
[32m+[m[32m     * $ perl -ne 'print "$1\n" if /"(modp\d+)"/' src/node_crypto_groups.h[m
[32m+[m[32m     * modp1  #  768 bits[m
[32m+[m[32m     * modp2  # 1024 bits[m
[32m+[m[32m     * modp5  # 1536 bits[m
[32m+[m[32m     * modp14 # 2048 bits[m
[32m+[m[32m     * modp15 # etc.[m
[32m+[m[32m     * modp16[m
[32m+[m[32m     * modp17[m
[32m+[m[32m     * modp18[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.7.5[m
[32m+[m[32m     */[m
[32m+[m[32m    const DiffieHellmanGroup: DiffieHellmanGroupConstructor;[m
[32m+[m[32m    interface DiffieHellmanGroupConstructor {[m
[32m+[m[32m        new(name: string): DiffieHellmanGroup;[m
[32m+[m[32m        (name: string): DiffieHellmanGroup;[m
[32m+[m[32m        readonly prototype: DiffieHellmanGroup;[m
[32m+[m[32m    }[m
[32m+[m[32m    type DiffieHellmanGroup = Omit<DiffieHellman, "setPublicKey" | "setPrivateKey">;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a predefined `DiffieHellmanGroup` key exchange object. The[m
[32m+[m[32m     * supported groups are listed in the documentation for `DiffieHellmanGroup`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The returned object mimics the interface of objects created by {@link createDiffieHellman}, but will not allow changing[m
[32m+[m[32m     * the keys (with `diffieHellman.setPublicKey()`, for example). The[m
[32m+[m[32m     * advantage of using this method is that the parties do not have to[m
[32m+[m[32m     * generate nor exchange a group modulus beforehand, saving both processor[m
[32m+[m[32m     * and communication time.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example (obtaining a shared secret):[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   getDiffieHellman,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     * const alice = getDiffieHellman('modp14');[m
[32m+[m[32m     * const bob = getDiffieHellman('modp14');[m
[32m+[m[32m     *[m
[32m+[m[32m     * alice.generateKeys();[m
[32m+[m[32m     * bob.generateKeys();[m
[32m+[m[32m     *[m
[32m+[m[32m     * const aliceSecret = alice.computeSecret(bob.getPublicKey(), null, 'hex');[m
[32m+[m[32m     * const bobSecret = bob.computeSecret(alice.getPublicKey(), null, 'hex');[m
[32m+[m[32m     *[m
[32m+[m[32m     * // aliceSecret and bobSecret should be the same[m
[32m+[m[32m     * console.log(aliceSecret === bobSecret);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.7.5[m
[32m+[m[32m     */[m
[32m+[m[32m    function getDiffieHellman(groupName: string): DiffieHellmanGroup;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An alias for {@link getDiffieHellman}[m
[32m+[m[32m     * @since v0.9.3[m
[32m+[m[32m     */[m
[32m+[m[32m    function createDiffieHellmanGroup(name: string): DiffieHellmanGroup;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Provides an asynchronous Password-Based Key Derivation Function 2 (PBKDF2)[m
[32m+[m[32m     * implementation. A selected HMAC digest algorithm specified by `digest` is[m
[32m+[m[32m     * applied to derive a key of the requested byte length (`keylen`) from the `password`, `salt` and `iterations`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The supplied `callback` function is called with two arguments: `err` and `derivedKey`. If an error occurs while deriving the key, `err` will be set;[m
[32m+[m[32m     * otherwise `err` will be `null`. By default, the successfully generated `derivedKey` will be passed to the callback as a `Buffer`. An error will be[m
[32m+[m[32m     * thrown if any of the input arguments specify invalid values or types.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `iterations` argument must be a number set as high as possible. The[m
[32m+[m[32m     * higher the number of iterations, the more secure the derived key will be,[m
[32m+[m[32m     * but will take a longer amount of time to complete.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `salt` should be as unique as possible. It is recommended that a salt is[m
[32m+[m[32m     * random and at least 16 bytes long. See [NIST SP 800-132](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf) for details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When passing strings for `password` or `salt`, please consider `caveats when using strings as inputs to cryptographic APIs`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   pbkdf2,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * pbkdf2('secret', 'salt', 100000, 64, 'sha512', (err, derivedKey) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(derivedKey.toString('hex'));  // '3745e48...08d59ae'[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * An array of supported digest functions can be retrieved using {@link getHashes}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This API uses libuv's threadpool, which can have surprising and[m
[32m+[m[32m     * negative performance implications for some applications; see the `UV_THREADPOOL_SIZE` documentation for more information.[m
[32m+[m[32m     * @since v0.5.5[m
[32m+[m[32m     */[m
[32m+[m[32m    function pbkdf2([m
[32m+[m[32m        password: BinaryLike,[m
[32m+[m[32m        salt: BinaryLike,[m
[32m+[m[32m        iterations: number,[m
[32m+[m[32m        keylen: number,[m
[32m+[m[32m        digest: string,[m
[32m+[m[32m        callback: (err: Error | null, derivedKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Provides a synchronous Password-Based Key Derivation Function 2 (PBKDF2)[m
[32m+[m[32m     * implementation. A selected HMAC digest algorithm specified by `digest` is[m
[32m+[m[32m     * applied to derive a key of the requested byte length (`keylen`) from the `password`, `salt` and `iterations`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If an error occurs an `Error` will be thrown, otherwise the derived key will be[m
[32m+[m[32m     * returned as a `Buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `iterations` argument must be a number set as high as possible. The[m
[32m+[m[32m     * higher the number of iterations, the more secure the derived key will be,[m
[32m+[m[32m     * but will take a longer amount of time to complete.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `salt` should be as unique as possible. It is recommended that a salt is[m
[32m+[m[32m     * random and at least 16 bytes long. See [NIST SP 800-132](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf) for details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When passing strings for `password` or `salt`, please consider `caveats when using strings as inputs to cryptographic APIs`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   pbkdf2Sync,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const key = pbkdf2Sync('secret', 'salt', 100000, 64, 'sha512');[m
[32m+[m[32m     * console.log(key.toString('hex'));  // '3745e48...08d59ae'[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * An array of supported digest functions can be retrieved using {@link getHashes}.[m
[32m+[m[32m     * @since v0.9.3[m
[32m+[m[32m     */[m
[32m+[m[32m    function pbkdf2Sync([m
[32m+[m[32m        password: BinaryLike,[m
[32m+[m[32m        salt: BinaryLike,[m
[32m+[m[32m        iterations: number,[m
[32m+[m[32m        keylen: number,[m
[32m+[m[32m        digest: string,[m
[32m+[m[32m    ): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates cryptographically strong pseudorandom data. The `size` argument[m
[32m+[m[32m     * is a number indicating the number of bytes to generate.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If a `callback` function is provided, the bytes are generated asynchronously[m
[32m+[m[32m     * and the `callback` function is invoked with two arguments: `err` and `buf`.[m
[32m+[m[32m     * If an error occurs, `err` will be an `Error` object; otherwise it is `null`. The `buf` argument is a `Buffer` containing the generated bytes.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * // Asynchronous[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   randomBytes,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * randomBytes(256, (err, buf) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(`${buf.length} bytes of random data: ${buf.toString('hex')}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `callback` function is not provided, the random bytes are generated[m
[32m+[m[32m     * synchronously and returned as a `Buffer`. An error will be thrown if[m
[32m+[m[32m     * there is a problem generating the bytes.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * // Synchronous[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   randomBytes,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const buf = randomBytes(256);[m
[32m+[m[32m     * console.log([m
[32m+[m[32m     *   `${buf.length} bytes of random data: ${buf.toString('hex')}`);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `crypto.randomBytes()` method will not complete until there is[m
[32m+[m[32m     * sufficient entropy available.[m
[32m+[m[32m     * This should normally never take longer than a few milliseconds. The only time[m
[32m+[m[32m     * when generating the random bytes may conceivably block for a longer period of[m
[32m+[m[32m     * time is right after boot, when the whole system is still low on entropy.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This API uses libuv's threadpool, which can have surprising and[m
[32m+[m[32m     * negative performance implications for some applications; see the `UV_THREADPOOL_SIZE` documentation for more information.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The asynchronous version of `crypto.randomBytes()` is carried out in a single[m
[32m+[m[32m     * threadpool request. To minimize threadpool task length variation, partition[m
[32m+[m[32m     * large `randomBytes` requests when doing so as part of fulfilling a client[m
[32m+[m[32m     * request.[m
[32m+[m[32m     * @since v0.5.8[m
[32m+[m[32m     * @param size The number of bytes to generate. The `size` must not be larger than `2**31 - 1`.[m
[32m+[m[32m     * @return if the `callback` function is not provided.[m
[32m+[m[32m     */[m
[32m+[m[32m    function randomBytes(size: number): Buffer;[m
[32m+[m[32m    function randomBytes(size: number, callback: (err: Error | null, buf: Buffer) => void): void;[m
[32m+[m[32m    function pseudoRandomBytes(size: number): Buffer;[m
[32m+[m[32m    function pseudoRandomBytes(size: number, callback: (err: Error | null, buf: Buffer) => void): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Return a random integer `n` such that `min <= n < max`.  This[m
[32m+[m[32m     * implementation avoids [modulo bias](https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#Modulo_bias).[m
[32m+[m[32m     *[m
[32m+[m[32m     * The range (`max - min`) must be less than 2**48. `min` and `max` must[m
[32m+[m[32m     * be [safe integers](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger).[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `callback` function is not provided, the random integer is[m
[32m+[m[32m     * generated synchronously.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * // Asynchronous[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   randomInt,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * randomInt(3, (err, n) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(`Random number chosen from (0, 1, 2): ${n}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * // Synchronous[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   randomInt,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const n = randomInt(3);[m
[32m+[m[32m     * console.log(`Random number chosen from (0, 1, 2): ${n}`);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * // With `min` argument[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   randomInt,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const n = randomInt(1, 7);[m
[32m+[m[32m     * console.log(`The dice rolled: ${n}`);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v14.10.0, v12.19.0[m
[32m+[m[32m     * @param [min=0] Start of random range (inclusive).[m
[32m+[m[32m     * @param max End of random range (exclusive).[m
[32m+[m[32m     * @param callback `function(err, n) {}`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function randomInt(max: number): number;[m
[32m+[m[32m    function randomInt(min: number, max: number): number;[m
[32m+[m[32m    function randomInt(max: number, callback: (err: Error | null, value: number) => void): void;[m
[32m+[m[32m    function randomInt(min: number, max: number, callback: (err: Error | null, value: number) => void): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous version of {@link randomFill}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     * const { randomFillSync } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const buf = Buffer.alloc(10);[m
[32m+[m[32m     * console.log(randomFillSync(buf).toString('hex'));[m
[32m+[m[32m     *[m
[32m+[m[32m     * randomFillSync(buf, 5);[m
[32m+[m[32m     * console.log(buf.toString('hex'));[m
[32m+[m[32m     *[m
[32m+[m[32m     * // The above is equivalent to the following:[m
[32m+[m[32m     * randomFillSync(buf, 5, 5);[m
[32m+[m[32m     * console.log(buf.toString('hex'));[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Any `ArrayBuffer`, `TypedArray` or `DataView` instance may be passed as`buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     * const { randomFillSync } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const a = new Uint32Array(10);[m
[32m+[m[32m     * console.log(Buffer.from(randomFillSync(a).buffer,[m
[32m+[m[32m     *                         a.byteOffset, a.byteLength).toString('hex'));[m
[32m+[m[32m     *[m
[32m+[m[32m     * const b = new DataView(new ArrayBuffer(10));[m
[32m+[m[32m     * console.log(Buffer.from(randomFillSync(b).buffer,[m
[32m+[m[32m     *                         b.byteOffset, b.byteLength).toString('hex'));[m
[32m+[m[32m     *[m
[32m+[m[32m     * const c = new ArrayBuffer(10);[m
[32m+[m[32m     * console.log(Buffer.from(randomFillSync(c)).toString('hex'));[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v7.10.0, v6.13.0[m
[32m+[m[32m     * @param buffer Must be supplied. The size of the provided `buffer` must not be larger than `2**31 - 1`.[m
[32m+[m[32m     * @param [offset=0][m
[32m+[m[32m     * @param [size=buffer.length - offset][m
[32m+[m[32m     * @return The object passed as `buffer` argument.[m
[32m+[m[32m     */[m
[32m+[m[32m    function randomFillSync<T extends NodeJS.ArrayBufferView>(buffer: T, offset?: number, size?: number): T;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This function is similar to {@link randomBytes} but requires the first[m
[32m+[m[32m     * argument to be a `Buffer` that will be filled. It also[m
[32m+[m[32m     * requires that a callback is passed in.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `callback` function is not provided, an error will be thrown.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     * const { randomFill } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const buf = Buffer.alloc(10);[m
[32m+[m[32m     * randomFill(buf, (err, buf) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(buf.toString('hex'));[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * randomFill(buf, 5, (err, buf) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(buf.toString('hex'));[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * // The above is equivalent to the following:[m
[32m+[m[32m     * randomFill(buf, 5, 5, (err, buf) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(buf.toString('hex'));[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Any `ArrayBuffer`, `TypedArray`, or `DataView` instance may be passed as `buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * While this includes instances of `Float32Array` and `Float64Array`, this[m
[32m+[m[32m     * function should not be used to generate random floating-point numbers. The[m
[32m+[m[32m     * result may contain `+Infinity`, `-Infinity`, and `NaN`, and even if the array[m
[32m+[m[32m     * contains finite numbers only, they are not drawn from a uniform random[m
[32m+[m[32m     * distribution and have no meaningful lower or upper bounds.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     * const { randomFill } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const a = new Uint32Array(10);[m
[32m+[m[32m     * randomFill(a, (err, buf) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength)[m
[32m+[m[32m     *     .toString('hex'));[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * const b = new DataView(new ArrayBuffer(10));[m
[32m+[m[32m     * randomFill(b, (err, buf) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength)[m
[32m+[m[32m     *     .toString('hex'));[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * const c = new ArrayBuffer(10);[m
[32m+[m[32m     * randomFill(c, (err, buf) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(Buffer.from(buf).toString('hex'));[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * This API uses libuv's threadpool, which can have surprising and[m
[32m+[m[32m     * negative performance implications for some applications; see the `UV_THREADPOOL_SIZE` documentation for more information.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The asynchronous version of `crypto.randomFill()` is carried out in a single[m
[32m+[m[32m     * threadpool request. To minimize threadpool task length variation, partition[m
[32m+[m[32m     * large `randomFill` requests when doing so as part of fulfilling a client[m
[32m+[m[32m     * request.[m
[32m+[m[32m     * @since v7.10.0, v6.13.0[m
[32m+[m[32m     * @param buffer Must be supplied. The size of the provided `buffer` must not be larger than `2**31 - 1`.[m
[32m+[m[32m     * @param [offset=0][m
[32m+[m[32m     * @param [size=buffer.length - offset][m
[32m+[m[32m     * @param callback `function(err, buf) {}`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function randomFill<T extends NodeJS.ArrayBufferView>([m
[32m+[m[32m        buffer: T,[m
[32m+[m[32m        callback: (err: Error | null, buf: T) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function randomFill<T extends NodeJS.ArrayBufferView>([m
[32m+[m[32m        buffer: T,[m
[32m+[m[32m        offset: number,[m
[32m+[m[32m        callback: (err: Error | null, buf: T) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function randomFill<T extends NodeJS.ArrayBufferView>([m
[32m+[m[32m        buffer: T,[m
[32m+[m[32m        offset: number,[m
[32m+[m[32m        size: number,[m
[32m+[m[32m        callback: (err: Error | null, buf: T) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    interface ScryptOptions {[m
[32m+[m[32m        cost?: number | undefined;[m
[32m+[m[32m        blockSize?: number | undefined;[m
[32m+[m[32m        parallelization?: number | undefined;[m
[32m+[m[32m        N?: number | undefined;[m
[32m+[m[32m        r?: number | undefined;[m
[32m+[m[32m        p?: number | undefined;[m
[32m+[m[32m        maxmem?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Provides an asynchronous [scrypt](https://en.wikipedia.org/wiki/Scrypt) implementation. Scrypt is a password-based[m
[32m+[m[32m     * key derivation function that is designed to be expensive computationally and[m
[32m+[m[32m     * memory-wise in order to make brute-force attacks unrewarding.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `salt` should be as unique as possible. It is recommended that a salt is[m
[32m+[m[32m     * random and at least 16 bytes long. See [NIST SP 800-132](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf) for details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When passing strings for `password` or `salt`, please consider `caveats when using strings as inputs to cryptographic APIs`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `callback` function is called with two arguments: `err` and `derivedKey`. `err` is an exception object when key derivation fails, otherwise `err` is `null`. `derivedKey` is passed to the[m
[32m+[m[32m     * callback as a `Buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * An exception is thrown when any of the input arguments specify invalid values[m
[32m+[m[32m     * or types.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   scrypt,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Using the factory defaults.[m
[32m+[m[32m     * scrypt('password', 'salt', 64, (err, derivedKey) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(derivedKey.toString('hex'));  // '3745e48...08d59ae'[m
[32m+[m[32m     * });[m
[32m+[m[32m     * // Using a custom N parameter. Must be a power of two.[m
[32m+[m[32m     * scrypt('password', 'salt', 64, { N: 1024 }, (err, derivedKey) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(derivedKey.toString('hex'));  // '3745e48...aa39b34'[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function scrypt([m
[32m+[m[32m        password: BinaryLike,[m
[32m+[m[32m        salt: BinaryLike,[m
[32m+[m[32m        keylen: number,[m
[32m+[m[32m        callback: (err: Error | null, derivedKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function scrypt([m
[32m+[m[32m        password: BinaryLike,[m
[32m+[m[32m        salt: BinaryLike,[m
[32m+[m[32m        keylen: number,[m
[32m+[m[32m        options: ScryptOptions,[m
[32m+[m[32m        callback: (err: Error | null, derivedKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Provides a synchronous [scrypt](https://en.wikipedia.org/wiki/Scrypt) implementation. Scrypt is a password-based[m
[32m+[m[32m     * key derivation function that is designed to be expensive computationally and[m
[32m+[m[32m     * memory-wise in order to make brute-force attacks unrewarding.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `salt` should be as unique as possible. It is recommended that a salt is[m
[32m+[m[32m     * random and at least 16 bytes long. See [NIST SP 800-132](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf) for details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When passing strings for `password` or `salt`, please consider `caveats when using strings as inputs to cryptographic APIs`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * An exception is thrown when key derivation fails, otherwise the derived key is[m
[32m+[m[32m     * returned as a `Buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * An exception is thrown when any of the input arguments specify invalid values[m
[32m+[m[32m     * or types.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   scryptSync,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     * // Using the factory defaults.[m
[32m+[m[32m     *[m
[32m+[m[32m     * const key1 = scryptSync('password', 'salt', 64);[m
[32m+[m[32m     * console.log(key1.toString('hex'));  // '3745e48...08d59ae'[m
[32m+[m[32m     * // Using a custom N parameter. Must be a power of two.[m
[32m+[m[32m     * const key2 = scryptSync('password', 'salt', 64, { N: 1024 });[m
[32m+[m[32m     * console.log(key2.toString('hex'));  // '3745e48...aa39b34'[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function scryptSync(password: BinaryLike, salt: BinaryLike, keylen: number, options?: ScryptOptions): Buffer;[m
[32m+[m[32m    interface RsaPublicKey {[m
[32m+[m[32m        key: KeyLike;[m
[32m+[m[32m        padding?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface RsaPrivateKey {[m
[32m+[m[32m        key: KeyLike;[m
[32m+[m[32m        passphrase?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default 'sha1'[m
[32m+[m[32m         */[m
[32m+[m[32m        oaepHash?: string | undefined;[m
[32m+[m[32m        oaepLabel?: NodeJS.TypedArray | undefined;[m
[32m+[m[32m        padding?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Encrypts the content of `buffer` with `key` and returns a new `Buffer` with encrypted content. The returned data can be decrypted using[m
[32m+[m[32m     * the corresponding private key, for example using {@link privateDecrypt}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `key` is not a `KeyObject`, this function behaves as if `key` had been passed to {@link createPublicKey}. If it is an[m
[32m+[m[32m     * object, the `padding` property can be passed. Otherwise, this function uses `RSA_PKCS1_OAEP_PADDING`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Because RSA public keys can be derived from private keys, a private key may[m
[32m+[m[32m     * be passed instead of a public key.[m
[32m+[m[32m     * @since v0.11.14[m
[32m+[m[32m     */[m
[32m+[m[32m    function publicEncrypt(key: RsaPublicKey | RsaPrivateKey | KeyLike, buffer: NodeJS.ArrayBufferView): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Decrypts `buffer` with `key`.`buffer` was previously encrypted using[m
[32m+[m[32m     * the corresponding private key, for example using {@link privateEncrypt}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `key` is not a `KeyObject`, this function behaves as if `key` had been passed to {@link createPublicKey}. If it is an[m
[32m+[m[32m     * object, the `padding` property can be passed. Otherwise, this function uses `RSA_PKCS1_PADDING`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Because RSA public keys can be derived from private keys, a private key may[m
[32m+[m[32m     * be passed instead of a public key.[m
[32m+[m[32m     * @since v1.1.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function publicDecrypt(key: RsaPublicKey | RsaPrivateKey | KeyLike, buffer: NodeJS.ArrayBufferView): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Decrypts `buffer` with `privateKey`. `buffer` was previously encrypted using[m
[32m+[m[32m     * the corresponding public key, for example using {@link publicEncrypt}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `privateKey` is not a `KeyObject`, this function behaves as if `privateKey` had been passed to {@link createPrivateKey}. If it is an[m
[32m+[m[32m     * object, the `padding` property can be passed. Otherwise, this function uses `RSA_PKCS1_OAEP_PADDING`.[m
[32m+[m[32m     * @since v0.11.14[m
[32m+[m[32m     */[m
[32m+[m[32m    function privateDecrypt(privateKey: RsaPrivateKey | KeyLike, buffer: NodeJS.ArrayBufferView): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Encrypts `buffer` with `privateKey`. The returned data can be decrypted using[m
[32m+[m[32m     * the corresponding public key, for example using {@link publicDecrypt}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `privateKey` is not a `KeyObject`, this function behaves as if `privateKey` had been passed to {@link createPrivateKey}. If it is an[m
[32m+[m[32m     * object, the `padding` property can be passed. Otherwise, this function uses `RSA_PKCS1_PADDING`.[m
[32m+[m[32m     * @since v1.1.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function privateEncrypt(privateKey: RsaPrivateKey | KeyLike, buffer: NodeJS.ArrayBufferView): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   getCiphers,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * console.log(getCiphers()); // ['aes-128-cbc', 'aes-128-ccm', ...][m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.9.3[m
[32m+[m[32m     * @return An array with the names of the supported cipher algorithms.[m
[32m+[m[32m     */[m
[32m+[m[32m    function getCiphers(): string[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   getCurves,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * console.log(getCurves()); // ['Oakley-EC2N-3', 'Oakley-EC2N-4', ...][m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v2.3.0[m
[32m+[m[32m     * @return An array with the names of the supported elliptic curves.[m
[32m+[m[32m     */[m
[32m+[m[32m    function getCurves(): string[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return `1` if and only if a FIPS compliant crypto provider is currently in use, `0` otherwise. A future semver-major release may change the return type of this API to a {boolean}.[m
[32m+[m[32m     */[m
[32m+[m[32m    function getFips(): 1 | 0;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Enables the FIPS compliant crypto provider in a FIPS-enabled Node.js build.[m
[32m+[m[32m     * Throws an error if FIPS mode is not available.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @param bool `true` to enable FIPS mode.[m
[32m+[m[32m     */[m
[32m+[m[32m    function setFips(bool: boolean): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   getHashes,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * console.log(getHashes()); // ['DSA', 'DSA-SHA', 'DSA-SHA1', ...][m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.9.3[m
[32m+[m[32m     * @return An array of the names of the supported hash algorithms, such as `'RSA-SHA256'`. Hash algorithms are also called "digest" algorithms.[m
[32m+[m[32m     */[m
[32m+[m[32m    function getHashes(): string[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `ECDH` class is a utility for creating Elliptic Curve Diffie-Hellman (ECDH)[m
[32m+[m[32m     * key exchanges.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Instances of the `ECDH` class can be created using the {@link createECDH} function.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import assert from 'node:assert';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   createECDH,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Generate Alice's keys...[m
[32m+[m[32m     * const alice = createECDH('secp521r1');[m
[32m+[m[32m     * const aliceKey = alice.generateKeys();[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Generate Bob's keys...[m
[32m+[m[32m     * const bob = createECDH('secp521r1');[m
[32m+[m[32m     * const bobKey = bob.generateKeys();[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Exchange and generate the secret...[m
[32m+[m[32m     * const aliceSecret = alice.computeSecret(bobKey);[m
[32m+[m[32m     * const bobSecret = bob.computeSecret(aliceKey);[m
[32m+[m[32m     *[m
[32m+[m[32m     * assert.strictEqual(aliceSecret.toString('hex'), bobSecret.toString('hex'));[m
[32m+[m[32m     * // OK[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.11.14[m
[32m+[m[32m     */[m
[32m+[m[32m    class ECDH {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Converts the EC Diffie-Hellman public key specified by `key` and `curve` to the[m
[32m+[m[32m         * format specified by `format`. The `format` argument specifies point encoding[m
[32m+[m[32m         * and can be `'compressed'`, `'uncompressed'` or `'hybrid'`. The supplied key is[m
[32m+[m[32m         * interpreted using the specified `inputEncoding`, and the returned key is encoded[m
[32m+[m[32m         * using the specified `outputEncoding`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Use {@link getCurves} to obtain a list of available curve names.[m
[32m+[m[32m         * On recent OpenSSL releases, `openssl ecparam -list_curves` will also display[m
[32m+[m[32m         * the name and description of each available elliptic curve.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `format` is not specified the point will be returned in `'uncompressed'` format.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `inputEncoding` is not provided, `key` is expected to be a `Buffer`, `TypedArray`, or `DataView`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example (uncompressing a key):[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const {[m
[32m+[m[32m         *   createECDH,[m
[32m+[m[32m         *   ECDH,[m
[32m+[m[32m         * } = await import('node:crypto');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const ecdh = createECDH('secp256k1');[m
[32m+[m[32m         * ecdh.generateKeys();[m
[32m+[m[32m         *[m
[32m+[m[32m         * const compressedKey = ecdh.getPublicKey('hex', 'compressed');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const uncompressedKey = ECDH.convertKey(compressedKey,[m
[32m+[m[32m         *                                         'secp256k1',[m
[32m+[m[32m         *                                         'hex',[m
[32m+[m[32m         *                                         'hex',[m
[32m+[m[32m         *                                         'uncompressed');[m
[32m+[m[32m         *[m
[32m+[m[32m         * // The converted key and the uncompressed public key should be the same[m
[32m+[m[32m         * console.log(uncompressedKey === ecdh.getPublicKey('hex'));[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @param inputEncoding The `encoding` of the `key` string.[m
[32m+[m[32m         * @param outputEncoding The `encoding` of the return value.[m
[32m+[m[32m         * @param [format='uncompressed'][m
[32m+[m[32m         */[m
[32m+[m[32m        static convertKey([m
[32m+[m[32m            key: BinaryLike,[m
[32m+[m[32m            curve: string,[m
[32m+[m[32m            inputEncoding?: BinaryToTextEncoding,[m
[32m+[m[32m            outputEncoding?: "latin1" | "hex" | "base64" | "base64url",[m
[32m+[m[32m            format?: "uncompressed" | "compressed" | "hybrid",[m
[32m+[m[32m        ): Buffer | string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Generates private and public EC Diffie-Hellman key values, and returns[m
[32m+[m[32m         * the public key in the specified `format` and `encoding`. This key should be[m
[32m+[m[32m         * transferred to the other party.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `format` argument specifies point encoding and can be `'compressed'` or `'uncompressed'`. If `format` is not specified, the point will be returned in`'uncompressed'` format.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `encoding` is provided a string is returned; otherwise a `Buffer` is returned.[m
[32m+[m[32m         * @since v0.11.14[m
[32m+[m[32m         * @param encoding The `encoding` of the return value.[m
[32m+[m[32m         * @param [format='uncompressed'][m
[32m+[m[32m         */[m
[32m+[m[32m        generateKeys(): Buffer;[m
[32m+[m[32m        generateKeys(encoding: BinaryToTextEncoding, format?: ECDHKeyFormat): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Computes the shared secret using `otherPublicKey` as the other[m
[32m+[m[32m         * party's public key and returns the computed shared secret. The supplied[m
[32m+[m[32m         * key is interpreted using specified `inputEncoding`, and the returned secret[m
[32m+[m[32m         * is encoded using the specified `outputEncoding`.[m
[32m+[m[32m         * If the `inputEncoding` is not[m
[32m+[m[32m         * provided, `otherPublicKey` is expected to be a `Buffer`, `TypedArray`, or `DataView`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `outputEncoding` is given a string will be returned; otherwise a `Buffer` is returned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `ecdh.computeSecret` will throw an`ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY` error when `otherPublicKey` lies outside of the elliptic curve. Since `otherPublicKey` is[m
[32m+[m[32m         * usually supplied from a remote user over an insecure network,[m
[32m+[m[32m         * be sure to handle this exception accordingly.[m
[32m+[m[32m         * @since v0.11.14[m
[32m+[m[32m         * @param inputEncoding The `encoding` of the `otherPublicKey` string.[m
[32m+[m[32m         * @param outputEncoding The `encoding` of the return value.[m
[32m+[m[32m         */[m
[32m+[m[32m        computeSecret(otherPublicKey: NodeJS.ArrayBufferView): Buffer;[m
[32m+[m[32m        computeSecret(otherPublicKey: string, inputEncoding: BinaryToTextEncoding): Buffer;[m
[32m+[m[32m        computeSecret(otherPublicKey: NodeJS.ArrayBufferView, outputEncoding: BinaryToTextEncoding): string;[m
[32m+[m[32m        computeSecret([m
[32m+[m[32m            otherPublicKey: string,[m
[32m+[m[32m            inputEncoding: BinaryToTextEncoding,[m
[32m+[m[32m            outputEncoding: BinaryToTextEncoding,[m
[32m+[m[32m        ): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `encoding` is specified, a string is returned; otherwise a `Buffer` is[m
[32m+[m[32m         * returned.[m
[32m+[m[32m         * @since v0.11.14[m
[32m+[m[32m         * @param encoding The `encoding` of the return value.[m
[32m+[m[32m         * @return The EC Diffie-Hellman in the specified `encoding`.[m
[32m+[m[32m         */[m
[32m+[m[32m        getPrivateKey(): Buffer;[m
[32m+[m[32m        getPrivateKey(encoding: BinaryToTextEncoding): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `format` argument specifies point encoding and can be `'compressed'` or `'uncompressed'`. If `format` is not specified the point will be returned in`'uncompressed'` format.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `encoding` is specified, a string is returned; otherwise a `Buffer` is[m
[32m+[m[32m         * returned.[m
[32m+[m[32m         * @since v0.11.14[m
[32m+[m[32m         * @param encoding The `encoding` of the return value.[m
[32m+[m[32m         * @param [format='uncompressed'][m
[32m+[m[32m         * @return The EC Diffie-Hellman public key in the specified `encoding` and `format`.[m
[32m+[m[32m         */[m
[32m+[m[32m        getPublicKey(encoding?: null, format?: ECDHKeyFormat): Buffer;[m
[32m+[m[32m        getPublicKey(encoding: BinaryToTextEncoding, format?: ECDHKeyFormat): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the EC Diffie-Hellman private key.[m
[32m+[m[32m         * If `encoding` is provided, `privateKey` is expected[m
[32m+[m[32m         * to be a string; otherwise `privateKey` is expected to be a `Buffer`, `TypedArray`, or `DataView`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `privateKey` is not valid for the curve specified when the `ECDH` object was[m
[32m+[m[32m         * created, an error is thrown. Upon setting the private key, the associated[m
[32m+[m[32m         * public point (key) is also generated and set in the `ECDH` object.[m
[32m+[m[32m         * @since v0.11.14[m
[32m+[m[32m         * @param encoding The `encoding` of the `privateKey` string.[m
[32m+[m[32m         */[m
[32m+[m[32m        setPrivateKey(privateKey: NodeJS.ArrayBufferView): void;[m
[32m+[m[32m        setPrivateKey(privateKey: string, encoding: BinaryToTextEncoding): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates an Elliptic Curve Diffie-Hellman (`ECDH`) key exchange object using a[m
[32m+[m[32m     * predefined curve specified by the `curveName` string. Use {@link getCurves} to obtain a list of available curve names. On recent[m
[32m+[m[32m     * OpenSSL releases, `openssl ecparam -list_curves` will also display the name[m
[32m+[m[32m     * and description of each available elliptic curve.[m
[32m+[m[32m     * @since v0.11.14[m
[32m+[m[32m     */[m
[32m+[m[32m    function createECDH(curveName: string): ECDH;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This function compares the underlying bytes that represent the given `ArrayBuffer`, `TypedArray`, or `DataView` instances using a constant-time[m
[32m+[m[32m     * algorithm.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This function does not leak timing information that[m
[32m+[m[32m     * would allow an attacker to guess one of the values. This is suitable for[m
[32m+[m[32m     * comparing HMAC digests or secret values like authentication cookies or [capability urls](https://www.w3.org/TR/capability-urls/).[m
[32m+[m[32m     *[m
[32m+[m[32m     * `a` and `b` must both be `Buffer`s, `TypedArray`s, or `DataView`s, and they[m
[32m+[m[32m     * must have the same byte length. An error is thrown if `a` and `b` have[m
[32m+[m[32m     * different byte lengths.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If at least one of `a` and `b` is a `TypedArray` with more than one byte per[m
[32m+[m[32m     * entry, such as `Uint16Array`, the result will be computed using the platform[m
[32m+[m[32m     * byte order.[m
[32m+[m[32m     *[m
[32m+[m[32m     * **When both of the inputs are `Float32Array`s or `Float64Array`s, this function might return unexpected results due to IEEE 754**[m
[32m+[m[32m     * **encoding of floating-point numbers. In particular, neither `x === y` nor `Object.is(x, y)` implies that the byte representations of two floating-point**[m
[32m+[m[32m     * **numbers `x` and `y` are equal.**[m
[32m+[m[32m     *[m
[32m+[m[32m     * Use of `crypto.timingSafeEqual` does not guarantee that the _surrounding_ code[m
[32m+[m[32m     * is timing-safe. Care should be taken to ensure that the surrounding code does[m
[32m+[m[32m     * not introduce timing vulnerabilities.[m
[32m+[m[32m     * @since v6.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function timingSafeEqual(a: NodeJS.ArrayBufferView, b: NodeJS.ArrayBufferView): boolean;[m
[32m+[m[32m    type KeyType = "rsa" | "rsa-pss" | "dsa" | "ec" | "ed25519" | "ed448" | "x25519" | "x448";[m
[32m+[m[32m    type KeyFormat = "pem" | "der" | "jwk";[m
[32m+[m[32m    interface BasePrivateKeyEncodingOptions<T extends KeyFormat> {[m
[32m+[m[32m        format: T;[m
[32m+[m[32m        cipher?: string | undefined;[m
[32m+[m[32m        passphrase?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface KeyPairKeyObjectResult {[m
[32m+[m[32m        publicKey: KeyObject;[m
[32m+[m[32m        privateKey: KeyObject;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ED25519KeyPairKeyObjectOptions {}[m
[32m+[m[32m    interface ED448KeyPairKeyObjectOptions {}[m
[32m+[m[32m    interface X25519KeyPairKeyObjectOptions {}[m
[32m+[m[32m    interface X448KeyPairKeyObjectOptions {}[m
[32m+[m[32m    interface ECKeyPairKeyObjectOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Name of the curve to use[m
[32m+[m[32m         */[m
[32m+[m[32m        namedCurve: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Must be `'named'` or `'explicit'`. Default: `'named'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        paramEncoding?: "explicit" | "named" | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface RSAKeyPairKeyObjectOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Key size in bits[m
[32m+[m[32m         */[m
[32m+[m[32m        modulusLength: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Public exponent[m
[32m+[m[32m         * @default 0x10001[m
[32m+[m[32m         */[m
[32m+[m[32m        publicExponent?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface RSAPSSKeyPairKeyObjectOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Key size in bits[m
[32m+[m[32m         */[m
[32m+[m[32m        modulusLength: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Public exponent[m
[32m+[m[32m         * @default 0x10001[m
[32m+[m[32m         */[m
[32m+[m[32m        publicExponent?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Name of the message digest[m
[32m+[m[32m         */[m
[32m+[m[32m        hashAlgorithm?: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Name of the message digest used by MGF1[m
[32m+[m[32m         */[m
[32m+[m[32m        mgf1HashAlgorithm?: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Minimal salt length in bytes[m
[32m+[m[32m         */[m
[32m+[m[32m        saltLength?: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface DSAKeyPairKeyObjectOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Key size in bits[m
[32m+[m[32m         */[m
[32m+[m[32m        modulusLength: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Size of q in bits[m
[32m+[m[32m         */[m
[32m+[m[32m        divisorLength: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface RSAKeyPairOptions<PubF extends KeyFormat, PrivF extends KeyFormat> {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Key size in bits[m
[32m+[m[32m         */[m
[32m+[m[32m        modulusLength: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Public exponent[m
[32m+[m[32m         * @default 0x10001[m
[32m+[m[32m         */[m
[32m+[m[32m        publicExponent?: number | undefined;[m
[32m+[m[32m        publicKeyEncoding: {[m
[32m+[m[32m            type: "pkcs1" | "spki";[m
[32m+[m[32m            format: PubF;[m
[32m+[m[32m        };[m
[32m+[m[32m        privateKeyEncoding: BasePrivateKeyEncodingOptions<PrivF> & {[m
[32m+[m[32m            type: "pkcs1" | "pkcs8";[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    interface RSAPSSKeyPairOptions<PubF extends KeyFormat, PrivF extends KeyFormat> {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Key size in bits[m
[32m+[m[32m         */[m
[32m+[m[32m        modulusLength: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Public exponent[m
[32m+[m[32m         * @default 0x10001[m
[32m+[m[32m         */[m
[32m+[m[32m        publicExponent?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Name of the message digest[m
[32m+[m[32m         */[m
[32m+[m[32m        hashAlgorithm?: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Name of the message digest used by MGF1[m
[32m+[m[32m         */[m
[32m+[m[32m        mgf1HashAlgorithm?: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Minimal salt length in bytes[m
[32m+[m[32m         */[m
[32m+[m[32m        saltLength?: string;[m
[32m+[m[32m        publicKeyEncoding: {[m
[32m+[m[32m            type: "spki";[m
[32m+[m[32m            format: PubF;[m
[32m+[m[32m        };[m
[32m+[m[32m        privateKeyEncoding: BasePrivateKeyEncodingOptions<PrivF> & {[m
[32m+[m[32m            type: "pkcs8";[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    interface DSAKeyPairOptions<PubF extends KeyFormat, PrivF extends KeyFormat> {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Key size in bits[m
[32m+[m[32m         */[m
[32m+[m[32m        modulusLength: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Size of q in bits[m
[32m+[m[32m         */[m
[32m+[m[32m        divisorLength: number;[m
[32m+[m[32m        publicKeyEncoding: {[m
[32m+[m[32m            type: "spki";[m
[32m+[m[32m            format: PubF;[m
[32m+[m[32m        };[m
[32m+[m[32m        privateKeyEncoding: BasePrivateKeyEncodingOptions<PrivF> & {[m
[32m+[m[32m            type: "pkcs8";[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ECKeyPairOptions<PubF extends KeyFormat, PrivF extends KeyFormat> extends ECKeyPairKeyObjectOptions {[m
[32m+[m[32m        publicKeyEncoding: {[m
[32m+[m[32m            type: "pkcs1" | "spki";[m
[32m+[m[32m            format: PubF;[m
[32m+[m[32m        };[m
[32m+[m[32m        privateKeyEncoding: BasePrivateKeyEncodingOptions<PrivF> & {[m
[32m+[m[32m            type: "sec1" | "pkcs8";[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ED25519KeyPairOptions<PubF extends KeyFormat, PrivF extends KeyFormat> {[m
[32m+[m[32m        publicKeyEncoding: {[m
[32m+[m[32m            type: "spki";[m
[32m+[m[32m            format: PubF;[m
[32m+[m[32m        };[m
[32m+[m[32m        privateKeyEncoding: BasePrivateKeyEncodingOptions<PrivF> & {[m
[32m+[m[32m            type: "pkcs8";[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ED448KeyPairOptions<PubF extends KeyFormat, PrivF extends KeyFormat> {[m
[32m+[m[32m        publicKeyEncoding: {[m
[32m+[m[32m            type: "spki";[m
[32m+[m[32m            format: PubF;[m
[32m+[m[32m        };[m
[32m+[m[32m        privateKeyEncoding: BasePrivateKeyEncodingOptions<PrivF> & {[m
[32m+[m[32m            type: "pkcs8";[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    interface X25519KeyPairOptions<PubF extends KeyFormat, PrivF extends KeyFormat> {[m
[32m+[m[32m        publicKeyEncoding: {[m
[32m+[m[32m            type: "spki";[m
[32m+[m[32m            format: PubF;[m
[32m+[m[32m        };[m
[32m+[m[32m        privateKeyEncoding: BasePrivateKeyEncodingOptions<PrivF> & {[m
[32m+[m[32m            type: "pkcs8";[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    interface X448KeyPairOptions<PubF extends KeyFormat, PrivF extends KeyFormat> {[m
[32m+[m[32m        publicKeyEncoding: {[m
[32m+[m[32m            type: "spki";[m
[32m+[m[32m            format: PubF;[m
[32m+[m[32m        };[m
[32m+[m[32m        privateKeyEncoding: BasePrivateKeyEncodingOptions<PrivF> & {[m
[32m+[m[32m            type: "pkcs8";[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    interface KeyPairSyncResult<T1 extends string | Buffer, T2 extends string | Buffer> {[m
[32m+[m[32m        publicKey: T1;[m
[32m+[m[32m        privateKey: T2;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates a new asymmetric key pair of the given `type`. RSA, RSA-PSS, DSA, EC,[m
[32m+[m[32m     * Ed25519, Ed448, X25519, X448, and DH are currently supported.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If a `publicKeyEncoding` or `privateKeyEncoding` was specified, this function[m
[32m+[m[32m     * behaves as if `keyObject.export()` had been called on its result. Otherwise,[m
[32m+[m[32m     * the respective part of the key is returned as a `KeyObject`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When encoding public keys, it is recommended to use `'spki'`. When encoding[m
[32m+[m[32m     * private keys, it is recommended to use `'pkcs8'` with a strong passphrase,[m
[32m+[m[32m     * and to keep the passphrase confidential.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   generateKeyPairSync,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   publicKey,[m
[32m+[m[32m     *   privateKey,[m
[32m+[m[32m     * } = generateKeyPairSync('rsa', {[m
[32m+[m[32m     *   modulusLength: 4096,[m
[32m+[m[32m     *   publicKeyEncoding: {[m
[32m+[m[32m     *     type: 'spki',[m
[32m+[m[32m     *     format: 'pem',[m
[32m+[m[32m     *   },[m
[32m+[m[32m     *   privateKeyEncoding: {[m
[32m+[m[32m     *     type: 'pkcs8',[m
[32m+[m[32m     *     format: 'pem',[m
[32m+[m[32m     *     cipher: 'aes-256-cbc',[m
[32m+[m[32m     *     passphrase: 'top secret',[m
[32m+[m[32m     *   },[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The return value `{ publicKey, privateKey }` represents the generated key pair.[m
[32m+[m[32m     * When PEM encoding was selected, the respective key will be a string, otherwise[m
[32m+[m[32m     * it will be a buffer containing the data encoded as DER.[m
[32m+[m[32m     * @since v10.12.0[m
[32m+[m[32m     * @param type Must be `'rsa'`, `'rsa-pss'`, `'dsa'`, `'ec'`, `'ed25519'`, `'ed448'`, `'x25519'`, `'x448'`, or `'dh'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "rsa",[m
[32m+[m[32m        options: RSAKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "rsa",[m
[32m+[m[32m        options: RSAKeyPairOptions<"pem", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "rsa",[m
[32m+[m[32m        options: RSAKeyPairOptions<"der", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "rsa",[m
[32m+[m[32m        options: RSAKeyPairOptions<"der", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync(type: "rsa", options: RSAKeyPairKeyObjectOptions): KeyPairKeyObjectResult;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "rsa-pss",[m
[32m+[m[32m        options: RSAPSSKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "rsa-pss",[m
[32m+[m[32m        options: RSAPSSKeyPairOptions<"pem", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "rsa-pss",[m
[32m+[m[32m        options: RSAPSSKeyPairOptions<"der", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "rsa-pss",[m
[32m+[m[32m        options: RSAPSSKeyPairOptions<"der", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync(type: "rsa-pss", options: RSAPSSKeyPairKeyObjectOptions): KeyPairKeyObjectResult;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "dsa",[m
[32m+[m[32m        options: DSAKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "dsa",[m
[32m+[m[32m        options: DSAKeyPairOptions<"pem", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "dsa",[m
[32m+[m[32m        options: DSAKeyPairOptions<"der", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "dsa",[m
[32m+[m[32m        options: DSAKeyPairOptions<"der", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync(type: "dsa", options: DSAKeyPairKeyObjectOptions): KeyPairKeyObjectResult;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ec",[m
[32m+[m[32m        options: ECKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ec",[m
[32m+[m[32m        options: ECKeyPairOptions<"pem", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ec",[m
[32m+[m[32m        options: ECKeyPairOptions<"der", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ec",[m
[32m+[m[32m        options: ECKeyPairOptions<"der", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync(type: "ec", options: ECKeyPairKeyObjectOptions): KeyPairKeyObjectResult;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ed25519",[m
[32m+[m[32m        options: ED25519KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ed25519",[m
[32m+[m[32m        options: ED25519KeyPairOptions<"pem", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ed25519",[m
[32m+[m[32m        options: ED25519KeyPairOptions<"der", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ed25519",[m
[32m+[m[32m        options: ED25519KeyPairOptions<"der", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync(type: "ed25519", options?: ED25519KeyPairKeyObjectOptions): KeyPairKeyObjectResult;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ed448",[m
[32m+[m[32m        options: ED448KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ed448",[m
[32m+[m[32m        options: ED448KeyPairOptions<"pem", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ed448",[m
[32m+[m[32m        options: ED448KeyPairOptions<"der", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "ed448",[m
[32m+[m[32m        options: ED448KeyPairOptions<"der", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync(type: "ed448", options?: ED448KeyPairKeyObjectOptions): KeyPairKeyObjectResult;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "x25519",[m
[32m+[m[32m        options: X25519KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "x25519",[m
[32m+[m[32m        options: X25519KeyPairOptions<"pem", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "x25519",[m
[32m+[m[32m        options: X25519KeyPairOptions<"der", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "x25519",[m
[32m+[m[32m        options: X25519KeyPairOptions<"der", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync(type: "x25519", options?: X25519KeyPairKeyObjectOptions): KeyPairKeyObjectResult;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "x448",[m
[32m+[m[32m        options: X448KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "x448",[m
[32m+[m[32m        options: X448KeyPairOptions<"pem", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<string, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "x448",[m
[32m+[m[32m        options: X448KeyPairOptions<"der", "pem">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, string>;[m
[32m+[m[32m    function generateKeyPairSync([m
[32m+[m[32m        type: "x448",[m
[32m+[m[32m        options: X448KeyPairOptions<"der", "der">,[m
[32m+[m[32m    ): KeyPairSyncResult<Buffer, Buffer>;[m
[32m+[m[32m    function generateKeyPairSync(type: "x448", options?: X448KeyPairKeyObjectOptions): KeyPairKeyObjectResult;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates a new asymmetric key pair of the given `type`. RSA, RSA-PSS, DSA, EC,[m
[32m+[m[32m     * Ed25519, Ed448, X25519, X448, and DH are currently supported.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If a `publicKeyEncoding` or `privateKeyEncoding` was specified, this function[m
[32m+[m[32m     * behaves as if `keyObject.export()` had been called on its result. Otherwise,[m
[32m+[m[32m     * the respective part of the key is returned as a `KeyObject`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is recommended to encode public keys as `'spki'` and private keys as `'pkcs8'` with encryption for long-term storage:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   generateKeyPair,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * generateKeyPair('rsa', {[m
[32m+[m[32m     *   modulusLength: 4096,[m
[32m+[m[32m     *   publicKeyEncoding: {[m
[32m+[m[32m     *     type: 'spki',[m
[32m+[m[32m     *     format: 'pem',[m
[32m+[m[32m     *   },[m
[32m+[m[32m     *   privateKeyEncoding: {[m
[32m+[m[32m     *     type: 'pkcs8',[m
[32m+[m[32m     *     format: 'pem',[m
[32m+[m[32m     *     cipher: 'aes-256-cbc',[m
[32m+[m[32m     *     passphrase: 'top secret',[m
[32m+[m[32m     *   },[m
[32m+[m[32m     * }, (err, publicKey, privateKey) => {[m
[32m+[m[32m     *   // Handle errors and use the generated key pair.[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * On completion, `callback` will be called with `err` set to `undefined` and `publicKey` / `privateKey` representing the generated key pair.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If this method is invoked as its `util.promisify()` ed version, it returns[m
[32m+[m[32m     * a `Promise` for an `Object` with `publicKey` and `privateKey` properties.[m
[32m+[m[32m     * @since v10.12.0[m
[32m+[m[32m     * @param type Must be `'rsa'`, `'rsa-pss'`, `'dsa'`, `'ec'`, `'ed25519'`, `'ed448'`, `'x25519'`, `'x448'`, or `'dh'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "rsa",[m
[32m+[m[32m        options: RSAKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "rsa",[m
[32m+[m[32m        options: RSAKeyPairOptions<"pem", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "rsa",[m
[32m+[m[32m        options: RSAKeyPairOptions<"der", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "rsa",[m
[32m+[m[32m        options: RSAKeyPairOptions<"der", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "rsa",[m
[32m+[m[32m        options: RSAKeyPairKeyObjectOptions,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: KeyObject, privateKey: KeyObject) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "rsa-pss",[m
[32m+[m[32m        options: RSAPSSKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "rsa-pss",[m
[32m+[m[32m        options: RSAPSSKeyPairOptions<"pem", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "rsa-pss",[m
[32m+[m[32m        options: RSAPSSKeyPairOptions<"der", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "rsa-pss",[m
[32m+[m[32m        options: RSAPSSKeyPairOptions<"der", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "rsa-pss",[m
[32m+[m[32m        options: RSAPSSKeyPairKeyObjectOptions,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: KeyObject, privateKey: KeyObject) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "dsa",[m
[32m+[m[32m        options: DSAKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "dsa",[m
[32m+[m[32m        options: DSAKeyPairOptions<"pem", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "dsa",[m
[32m+[m[32m        options: DSAKeyPairOptions<"der", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "dsa",[m
[32m+[m[32m        options: DSAKeyPairOptions<"der", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "dsa",[m
[32m+[m[32m        options: DSAKeyPairKeyObjectOptions,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: KeyObject, privateKey: KeyObject) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ec",[m
[32m+[m[32m        options: ECKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ec",[m
[32m+[m[32m        options: ECKeyPairOptions<"pem", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ec",[m
[32m+[m[32m        options: ECKeyPairOptions<"der", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ec",[m
[32m+[m[32m        options: ECKeyPairOptions<"der", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ec",[m
[32m+[m[32m        options: ECKeyPairKeyObjectOptions,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: KeyObject, privateKey: KeyObject) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ed25519",[m
[32m+[m[32m        options: ED25519KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ed25519",[m
[32m+[m[32m        options: ED25519KeyPairOptions<"pem", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ed25519",[m
[32m+[m[32m        options: ED25519KeyPairOptions<"der", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ed25519",[m
[32m+[m[32m        options: ED25519KeyPairOptions<"der", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ed25519",[m
[32m+[m[32m        options: ED25519KeyPairKeyObjectOptions | undefined,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: KeyObject, privateKey: KeyObject) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ed448",[m
[32m+[m[32m        options: ED448KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ed448",[m
[32m+[m[32m        options: ED448KeyPairOptions<"pem", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ed448",[m
[32m+[m[32m        options: ED448KeyPairOptions<"der", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ed448",[m
[32m+[m[32m        options: ED448KeyPairOptions<"der", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "ed448",[m
[32m+[m[32m        options: ED448KeyPairKeyObjectOptions | undefined,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: KeyObject, privateKey: KeyObject) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "x25519",[m
[32m+[m[32m        options: X25519KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "x25519",[m
[32m+[m[32m        options: X25519KeyPairOptions<"pem", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "x25519",[m
[32m+[m[32m        options: X25519KeyPairOptions<"der", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "x25519",[m
[32m+[m[32m        options: X25519KeyPairOptions<"der", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "x25519",[m
[32m+[m[32m        options: X25519KeyPairKeyObjectOptions | undefined,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: KeyObject, privateKey: KeyObject) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "x448",[m
[32m+[m[32m        options: X448KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "x448",[m
[32m+[m[32m        options: X448KeyPairOptions<"pem", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: string, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "x448",[m
[32m+[m[32m        options: X448KeyPairOptions<"der", "pem">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "x448",[m
[32m+[m[32m        options: X448KeyPairOptions<"der", "der">,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: Buffer, privateKey: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generateKeyPair([m
[32m+[m[32m        type: "x448",[m
[32m+[m[32m        options: X448KeyPairKeyObjectOptions | undefined,[m
[32m+[m[32m        callback: (err: Error | null, publicKey: KeyObject, privateKey: KeyObject) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    namespace generateKeyPair {[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "rsa",[m
[32m+[m[32m            options: RSAKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "rsa",[m
[32m+[m[32m            options: RSAKeyPairOptions<"pem", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "rsa",[m
[32m+[m[32m            options: RSAKeyPairOptions<"der", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "rsa",[m
[32m+[m[32m            options: RSAKeyPairOptions<"der", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__(type: "rsa", options: RSAKeyPairKeyObjectOptions): Promise<KeyPairKeyObjectResult>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "rsa-pss",[m
[32m+[m[32m            options: RSAPSSKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "rsa-pss",[m
[32m+[m[32m            options: RSAPSSKeyPairOptions<"pem", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "rsa-pss",[m
[32m+[m[32m            options: RSAPSSKeyPairOptions<"der", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "rsa-pss",[m
[32m+[m[32m            options: RSAPSSKeyPairOptions<"der", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "rsa-pss",[m
[32m+[m[32m            options: RSAPSSKeyPairKeyObjectOptions,[m
[32m+[m[32m        ): Promise<KeyPairKeyObjectResult>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "dsa",[m
[32m+[m[32m            options: DSAKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "dsa",[m
[32m+[m[32m            options: DSAKeyPairOptions<"pem", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "dsa",[m
[32m+[m[32m            options: DSAKeyPairOptions<"der", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "dsa",[m
[32m+[m[32m            options: DSAKeyPairOptions<"der", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__(type: "dsa", options: DSAKeyPairKeyObjectOptions): Promise<KeyPairKeyObjectResult>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ec",[m
[32m+[m[32m            options: ECKeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ec",[m
[32m+[m[32m            options: ECKeyPairOptions<"pem", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ec",[m
[32m+[m[32m            options: ECKeyPairOptions<"der", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ec",[m
[32m+[m[32m            options: ECKeyPairOptions<"der", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__(type: "ec", options: ECKeyPairKeyObjectOptions): Promise<KeyPairKeyObjectResult>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ed25519",[m
[32m+[m[32m            options: ED25519KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ed25519",[m
[32m+[m[32m            options: ED25519KeyPairOptions<"pem", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ed25519",[m
[32m+[m[32m            options: ED25519KeyPairOptions<"der", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ed25519",[m
[32m+[m[32m            options: ED25519KeyPairOptions<"der", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ed25519",[m
[32m+[m[32m            options?: ED25519KeyPairKeyObjectOptions,[m
[32m+[m[32m        ): Promise<KeyPairKeyObjectResult>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ed448",[m
[32m+[m[32m            options: ED448KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ed448",[m
[32m+[m[32m            options: ED448KeyPairOptions<"pem", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ed448",[m
[32m+[m[32m            options: ED448KeyPairOptions<"der", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "ed448",[m
[32m+[m[32m            options: ED448KeyPairOptions<"der", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__(type: "ed448", options?: ED448KeyPairKeyObjectOptions): Promise<KeyPairKeyObjectResult>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "x25519",[m
[32m+[m[32m            options: X25519KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "x25519",[m
[32m+[m[32m            options: X25519KeyPairOptions<"pem", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "x25519",[m
[32m+[m[32m            options: X25519KeyPairOptions<"der", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "x25519",[m
[32m+[m[32m            options: X25519KeyPairOptions<"der", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "x25519",[m
[32m+[m[32m            options?: X25519KeyPairKeyObjectOptions,[m
[32m+[m[32m        ): Promise<KeyPairKeyObjectResult>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "x448",[m
[32m+[m[32m            options: X448KeyPairOptions<"pem", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "x448",[m
[32m+[m[32m            options: X448KeyPairOptions<"pem", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: string;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "x448",[m
[32m+[m[32m            options: X448KeyPairOptions<"der", "pem">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            type: "x448",[m
[32m+[m[32m            options: X448KeyPairOptions<"der", "der">,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            publicKey: Buffer;[m
[32m+[m[32m            privateKey: Buffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__(type: "x448", options?: X448KeyPairKeyObjectOptions): Promise<KeyPairKeyObjectResult>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Calculates and returns the signature for `data` using the given private key and[m
[32m+[m[32m     * algorithm. If `algorithm` is `null` or `undefined`, then the algorithm is[m
[32m+[m[32m     * dependent upon the key type (especially Ed25519 and Ed448).[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `key` is not a `KeyObject`, this function behaves as if `key` had been[m
[32m+[m[32m     * passed to {@link createPrivateKey}. If it is an object, the following[m
[32m+[m[32m     * additional properties can be passed:[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `callback` function is provided this function uses libuv's threadpool.[m
[32m+[m[32m     * @since v12.0.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function sign([m
[32m+[m[32m        algorithm: string | null | undefined,[m
[32m+[m[32m        data: NodeJS.ArrayBufferView,[m
[32m+[m[32m        key: KeyLike | SignKeyObjectInput | SignPrivateKeyInput | SignJsonWebKeyInput,[m
[32m+[m[32m    ): Buffer;[m
[32m+[m[32m    function sign([m
[32m+[m[32m        algorithm: string | null | undefined,[m
[32m+[m[32m        data: NodeJS.ArrayBufferView,[m
[32m+[m[32m        key: KeyLike | SignKeyObjectInput | SignPrivateKeyInput | SignJsonWebKeyInput,[m
[32m+[m[32m        callback: (error: Error | null, data: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Verifies the given signature for `data` using the given key and algorithm. If `algorithm` is `null` or `undefined`, then the algorithm is dependent upon the[m
[32m+[m[32m     * key type (especially Ed25519 and Ed448).[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `key` is not a `KeyObject`, this function behaves as if `key` had been[m
[32m+[m[32m     * passed to {@link createPublicKey}. If it is an object, the following[m
[32m+[m[32m     * additional properties can be passed:[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `signature` argument is the previously calculated signature for the `data`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Because public keys can be derived from private keys, a private key or a public[m
[32m+[m[32m     * key may be passed for `key`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `callback` function is provided this function uses libuv's threadpool.[m
[32m+[m[32m     * @since v12.0.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function verify([m
[32m+[m[32m        algorithm: string | null | undefined,[m
[32m+[m[32m        data: NodeJS.ArrayBufferView,[m
[32m+[m[32m        key: KeyLike | VerifyKeyObjectInput | VerifyPublicKeyInput | VerifyJsonWebKeyInput,[m
[32m+[m[32m        signature: NodeJS.ArrayBufferView,[m
[32m+[m[32m    ): boolean;[m
[32m+[m[32m    function verify([m
[32m+[m[32m        algorithm: string | null | undefined,[m
[32m+[m[32m        data: NodeJS.ArrayBufferView,[m
[32m+[m[32m        key: KeyLike | VerifyKeyObjectInput | VerifyPublicKeyInput | VerifyJsonWebKeyInput,[m
[32m+[m[32m        signature: NodeJS.ArrayBufferView,[m
[32m+[m[32m        callback: (error: Error | null, result: boolean) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Computes the Diffie-Hellman secret based on a `privateKey` and a `publicKey`.[m
[32m+[m[32m     * Both keys must have the same `asymmetricKeyType`, which must be one of `'dh'` (for Diffie-Hellman), `'ec'` (for ECDH), `'x448'`, or `'x25519'` (for ECDH-ES).[m
[32m+[m[32m     * @since v13.9.0, v12.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function diffieHellman(options: { privateKey: KeyObject; publicKey: KeyObject }): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A utility for creating one-shot hash digests of data. It can be faster than the object-based `crypto.createHash()` when hashing a smaller amount of data[m
[32m+[m[32m     * (<= 5MB) that's readily available. If the data can be big or if it is streamed, it's still recommended to use `crypto.createHash()` instead. The `algorithm`[m
[32m+[m[32m     * is dependent on the available algorithms supported by the version of OpenSSL on the platform. Examples are `'sha256'`, `'sha512'`, etc. On recent releases[m
[32m+[m[32m     * of OpenSSL, `openssl list -digest-algorithms` will display the available digest algorithms.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const crypto = require('node:crypto');[m
[32m+[m[32m     * const { Buffer } = require('node:buffer');[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Hashing a string and return the result as a hex-encoded string.[m
[32m+[m[32m     * const string = 'Node.js';[m
[32m+[m[32m     * // 10b3493287f831e81a438811a1ffba01f8cec4b7[m
[32m+[m[32m     * console.log(crypto.hash('sha1', string));[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Encode a base64-encoded string into a Buffer, hash it and return[m
[32m+[m[32m     * // the result as a buffer.[m
[32m+[m[32m     * const base64 = 'Tm9kZS5qcw==';[m
[32m+[m[32m     * // <Buffer 10 b3 49 32 87 f8 31 e8 1a 43 88 11 a1 ff ba 01 f8 ce c4 b7>[m
[32m+[m[32m     * console.log(crypto.hash('sha1', Buffer.from(base64, 'base64'), 'buffer'));[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v21.7.0, v20.12.0[m
[32m+[m[32m     * @param data When `data` is a string, it will be encoded as UTF-8 before being hashed. If a different input encoding is desired for a string input, user[m
[32m+[m[32m     *             could encode the string into a `TypedArray` using either `TextEncoder` or `Buffer.from()` and passing the encoded `TypedArray` into this API instead.[m
[32m+[m[32m     * @param [outputEncoding='hex'] [Encoding](https://nodejs.org/docs/latest-v22.x/api/buffer.html#buffers-and-character-encodings) used to encode the returned digest.[m
[32m+[m[32m     */[m
[32m+[m[32m    function hash(algorithm: string, data: BinaryLike, outputEncoding?: BinaryToTextEncoding): string;[m
[32m+[m[32m    function hash(algorithm: string, data: BinaryLike, outputEncoding: "buffer"): Buffer;[m
[32m+[m[32m    function hash([m
[32m+[m[32m        algorithm: string,[m
[32m+[m[32m        data: BinaryLike,[m
[32m+[m[32m        outputEncoding?: BinaryToTextEncoding | "buffer",[m
[32m+[m[32m    ): string | Buffer;[m
[32m+[m[32m    type CipherMode = "cbc" | "ccm" | "cfb" | "ctr" | "ecb" | "gcm" | "ocb" | "ofb" | "stream" | "wrap" | "xts";[m
[32m+[m[32m    interface CipherInfoOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A test key length.[m
[32m+[m[32m         */[m
[32m+[m[32m        keyLength?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A test IV length.[m
[32m+[m[32m         */[m
[32m+[m[32m        ivLength?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CipherInfo {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The name of the cipher.[m
[32m+[m[32m         */[m
[32m+[m[32m        name: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The nid of the cipher.[m
[32m+[m[32m         */[m
[32m+[m[32m        nid: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The block size of the cipher in bytes.[m
[32m+[m[32m         * This property is omitted when mode is 'stream'.[m
[32m+[m[32m         */[m
[32m+[m[32m        blockSize?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The expected or default initialization vector length in bytes.[m
[32m+[m[32m         * This property is omitted if the cipher does not use an initialization vector.[m
[32m+[m[32m         */[m
[32m+[m[32m        ivLength?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The expected or default key length in bytes.[m
[32m+[m[32m         */[m
[32m+[m[32m        keyLength: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The cipher mode.[m
[32m+[m[32m         */[m
[32m+[m[32m        mode: CipherMode;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns information about a given cipher.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Some ciphers accept variable length keys and initialization vectors. By default,[m
[32m+[m[32m     * the `crypto.getCipherInfo()` method will return the default values for these[m
[32m+[m[32m     * ciphers. To test if a given key length or iv length is acceptable for given[m
[32m+[m[32m     * cipher, use the `keyLength` and `ivLength` options. If the given values are[m
[32m+[m[32m     * unacceptable, `undefined` will be returned.[m
[32m+[m[32m     * @since v15.0.0[m
[32m+[m[32m     * @param nameOrNid The name or nid of the cipher to query.[m
[32m+[m[32m     */[m
[32m+[m[32m    function getCipherInfo(nameOrNid: string | number, options?: CipherInfoOptions): CipherInfo | undefined;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * HKDF is a simple key derivation function defined in RFC 5869\. The given `ikm`, `salt` and `info` are used with the `digest` to derive a key of `keylen` bytes.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The supplied `callback` function is called with two arguments: `err` and `derivedKey`. If an errors occurs while deriving the key, `err` will be set;[m
[32m+[m[32m     * otherwise `err` will be `null`. The successfully generated `derivedKey` will[m
[32m+[m[32m     * be passed to the callback as an [ArrayBuffer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer). An error will be thrown if any[m
[32m+[m[32m     * of the input arguments specify invalid values or types.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   hkdf,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * hkdf('sha512', 'key', 'salt', 'info', 64, (err, derivedKey) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(Buffer.from(derivedKey).toString('hex'));  // '24156e2...5391653'[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v15.0.0[m
[32m+[m[32m     * @param digest The digest algorithm to use.[m
[32m+[m[32m     * @param ikm The input keying material. Must be provided but can be zero-length.[m
[32m+[m[32m     * @param salt The salt value. Must be provided but can be zero-length.[m
[32m+[m[32m     * @param info Additional info value. Must be provided but can be zero-length, and cannot be more than 1024 bytes.[m
[32m+[m[32m     * @param keylen The length of the key to generate. Must be greater than 0. The maximum allowable value is `255` times the number of bytes produced by the selected digest function (e.g. `sha512`[m
[32m+[m[32m     * generates 64-byte hashes, making the maximum HKDF output 16320 bytes).[m
[32m+[m[32m     */[m
[32m+[m[32m    function hkdf([m
[32m+[m[32m        digest: string,[m
[32m+[m[32m        irm: BinaryLike | KeyObject,[m
[32m+[m[32m        salt: BinaryLike,[m
[32m+[m[32m        info: BinaryLike,[m
[32m+[m[32m        keylen: number,[m
[32m+[m[32m        callback: (err: Error | null, derivedKey: ArrayBuffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Provides a synchronous HKDF key derivation function as defined in RFC 5869\. The[m
[32m+[m[32m     * given `ikm`, `salt` and `info` are used with the `digest` to derive a key of `keylen` bytes.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The successfully generated `derivedKey` will be returned as an [ArrayBuffer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer).[m
[32m+[m[32m     *[m
[32m+[m[32m     * An error will be thrown if any of the input arguments specify invalid values or[m
[32m+[m[32m     * types, or if the derived key cannot be generated.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     * const {[m
[32m+[m[32m     *   hkdfSync,[m
[32m+[m[32m     * } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const derivedKey = hkdfSync('sha512', 'key', 'salt', 'info', 64);[m
[32m+[m[32m     * console.log(Buffer.from(derivedKey).toString('hex'));  // '24156e2...5391653'[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v15.0.0[m
[32m+[m[32m     * @param digest The digest algorithm to use.[m
[32m+[m[32m     * @param ikm The input keying material. Must be provided but can be zero-length.[m
[32m+[m[32m     * @param salt The salt value. Must be provided but can be zero-length.[m
[32m+[m[32m     * @param info Additional info value. Must be provided but can be zero-length, and cannot be more than 1024 bytes.[m
[32m+[m[32m     * @param keylen The length of the key to generate. Must be greater than 0. The maximum allowable value is `255` times the number of bytes produced by the selected digest function (e.g. `sha512`[m
[32m+[m[32m     * generates 64-byte hashes, making the maximum HKDF output 16320 bytes).[m
[32m+[m[32m     */[m
[32m+[m[32m    function hkdfSync([m
[32m+[m[32m        digest: string,[m
[32m+[m[32m        ikm: BinaryLike | KeyObject,[m
[32m+[m[32m        salt: BinaryLike,[m
[32m+[m[32m        info: BinaryLike,[m
[32m+[m[32m        keylen: number,[m
[32m+[m[32m    ): ArrayBuffer;[m
[32m+[m[32m    interface SecureHeapUsage {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The total allocated secure heap size as specified using the `--secure-heap=n` command-line flag.[m
[32m+[m[32m         */[m
[32m+[m[32m        total: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The minimum allocation from the secure heap as specified using the `--secure-heap-min` command-line flag.[m
[32m+[m[32m         */[m
[32m+[m[32m        min: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The total number of bytes currently allocated from the secure heap.[m
[32m+[m[32m         */[m
[32m+[m[32m        used: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The calculated ratio of `used` to `total` allocated bytes.[m
[32m+[m[32m         */[m
[32m+[m[32m        utilization: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v15.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function secureHeapUsed(): SecureHeapUsage;[m
[32m+[m[32m    interface RandomUUIDOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * By default, to improve performance,[m
[32m+[m[32m         * Node.js will pre-emptively generate and persistently cache enough[m
[32m+[m[32m         * random data to generate up to 128 random UUIDs. To generate a UUID[m
[32m+[m[32m         * without using the cache, set `disableEntropyCache` to `true`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @default `false`[m
[32m+[m[32m         */[m
[32m+[m[32m        disableEntropyCache?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    type UUID = `${string}-${string}-${string}-${string}-${string}`;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates a random [RFC 4122](https://www.rfc-editor.org/rfc/rfc4122.txt) version 4 UUID. The UUID is generated using a[m
[32m+[m[32m     * cryptographic pseudorandom number generator.[m
[32m+[m[32m     * @since v15.6.0, v14.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function randomUUID(options?: RandomUUIDOptions): UUID;[m
[32m+[m[32m    interface X509CheckOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default 'always'[m
[32m+[m[32m         */[m
[32m+[m[32m        subject?: "always" | "default" | "never";[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default true[m
[32m+[m[32m         */[m
[32m+[m[32m        wildcards?: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default true[m
[32m+[m[32m         */[m
[32m+[m[32m        partialWildcards?: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        multiLabelWildcards?: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        singleLabelSubdomains?: boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Encapsulates an X509 certificate and provides read-only access to[m
[32m+[m[32m     * its information.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { X509Certificate } = await import('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const x509 = new X509Certificate('{... pem encoded cert ...}');[m
[32m+[m[32m     *[m
[32m+[m[32m     * console.log(x509.subject);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v15.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class X509Certificate {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Will be \`true\` if this is a Certificate Authority (CA) certificate.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly ca: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The SHA-1 fingerprint of this certificate.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Because SHA-1 is cryptographically broken and because the security of SHA-1 is[m
[32m+[m[32m         * significantly worse than that of algorithms that are commonly used to sign[m
[32m+[m[32m         * certificates, consider using `x509.fingerprint256` instead.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly fingerprint: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The SHA-256 fingerprint of this certificate.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly fingerprint256: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The SHA-512 fingerprint of this certificate.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Because computing the SHA-256 fingerprint is usually faster and because it is[m
[32m+[m[32m         * only half the size of the SHA-512 fingerprint, `x509.fingerprint256` may be[m
[32m+[m[32m         * a better choice. While SHA-512 presumably provides a higher level of security in[m
[32m+[m[32m         * general, the security of SHA-256 matches that of most algorithms that are[m
[32m+[m[32m         * commonly used to sign certificates.[m
[32m+[m[32m         * @since v17.2.0, v16.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly fingerprint512: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The complete subject of this certificate.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly subject: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The subject alternative name specified for this certificate.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This is a comma-separated list of subject alternative names. Each entry begins[m
[32m+[m[32m         * with a string identifying the kind of the subject alternative name followed by[m
[32m+[m[32m         * a colon and the value associated with the entry.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Earlier versions of Node.js incorrectly assumed that it is safe to split this[m
[32m+[m[32m         * property at the two-character sequence `', '` (see [CVE-2021-44532](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44532)). However,[m
[32m+[m[32m         * both malicious and legitimate certificates can contain subject alternative names[m
[32m+[m[32m         * that include this sequence when represented as a string.[m
[32m+[m[32m         *[m
[32m+[m[32m         * After the prefix denoting the type of the entry, the remainder of each entry[m
[32m+[m[32m         * might be enclosed in quotes to indicate that the value is a JSON string literal.[m
[32m+[m[32m         * For backward compatibility, Node.js only uses JSON string literals within this[m
[32m+[m[32m         * property when necessary to avoid ambiguity. Third-party code should be prepared[m
[32m+[m[32m         * to handle both possible entry formats.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly subjectAltName: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A textual representation of the certificate's authority information access[m
[32m+[m[32m         * extension.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This is a line feed separated list of access descriptions. Each line begins with[m
[32m+[m[32m         * the access method and the kind of the access location, followed by a colon and[m
[32m+[m[32m         * the value associated with the access location.[m
[32m+[m[32m         *[m
[32m+[m[32m         * After the prefix denoting the access method and the kind of the access location,[m
[32m+[m[32m         * the remainder of each line might be enclosed in quotes to indicate that the[m
[32m+[m[32m         * value is a JSON string literal. For backward compatibility, Node.js only uses[m
[32m+[m[32m         * JSON string literals within this property when necessary to avoid ambiguity.[m
[32m+[m[32m         * Third-party code should be prepared to handle both possible entry formats.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly infoAccess: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An array detailing the key usages for this certificate.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly keyUsage: string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The issuer identification included in this certificate.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly issuer: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The issuer certificate or `undefined` if the issuer certificate is not[m
[32m+[m[32m         * available.[m
[32m+[m[32m         * @since v15.9.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly issuerCertificate?: X509Certificate | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The public key `KeyObject` for this certificate.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly publicKey: KeyObject;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A `Buffer` containing the DER encoding of this certificate.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly raw: Buffer;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The serial number of this certificate.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Serial numbers are assigned by certificate authorities and do not uniquely[m
[32m+[m[32m         * identify certificates. Consider using `x509.fingerprint256` as a unique[m
[32m+[m[32m         * identifier instead.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly serialNumber: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The date/time from which this certificate is considered valid.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly validFrom: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The date/time until which this certificate is considered valid.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly validTo: string;[m
[32m+[m[32m        constructor(buffer: BinaryLike);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Checks whether the certificate matches the given email address.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `'subject'` option is undefined or set to `'default'`, the certificate[m
[32m+[m[32m         * subject is only considered if the subject alternative name extension either does[m
[32m+[m[32m         * not exist or does not contain any email addresses.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `'subject'` option is set to `'always'` and if the subject alternative[m
[32m+[m[32m         * name extension either does not exist or does not contain a matching email[m
[32m+[m[32m         * address, the certificate subject is considered.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `'subject'` option is set to `'never'`, the certificate subject is never[m
[32m+[m[32m         * considered, even if the certificate contains no subject alternative names.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         * @return Returns `email` if the certificate matches, `undefined` if it does not.[m
[32m+[m[32m         */[m
[32m+[m[32m        checkEmail(email: string, options?: Pick<X509CheckOptions, "subject">): string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Checks whether the certificate matches the given host name.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the certificate matches the given host name, the matching subject name is[m
[32m+[m[32m         * returned. The returned name might be an exact match (e.g., `foo.example.com`)[m
[32m+[m[32m         * or it might contain wildcards (e.g., `*.example.com`). Because host name[m
[32m+[m[32m         * comparisons are case-insensitive, the returned subject name might also differ[m
[32m+[m[32m         * from the given `name` in capitalization.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `'subject'` option is undefined or set to `'default'`, the certificate[m
[32m+[m[32m         * subject is only considered if the subject alternative name extension either does[m
[32m+[m[32m         * not exist or does not contain any DNS names. This behavior is consistent with [RFC 2818](https://www.rfc-editor.org/rfc/rfc2818.txt) ("HTTP Over TLS").[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `'subject'` option is set to `'always'` and if the subject alternative[m
[32m+[m[32m         * name extension either does not exist or does not contain a matching DNS name,[m
[32m+[m[32m         * the certificate subject is considered.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `'subject'` option is set to `'never'`, the certificate subject is never[m
[32m+[m[32m         * considered, even if the certificate contains no subject alternative names.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         * @return Returns a subject name that matches `name`, or `undefined` if no subject name matches `name`.[m
[32m+[m[32m         */[m
[32m+[m[32m        checkHost(name: string, options?: X509CheckOptions): string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Checks whether the certificate matches the given IP address (IPv4 or IPv6).[m
[32m+[m[32m         *[m
[32m+[m[32m         * Only [RFC 5280](https://www.rfc-editor.org/rfc/rfc5280.txt) `iPAddress` subject alternative names are considered, and they[m
[32m+[m[32m         * must match the given `ip` address exactly. Other subject alternative names as[m
[32m+[m[32m         * well as the subject field of the certificate are ignored.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         * @return Returns `ip` if the certificate matches, `undefined` if it does not.[m
[32m+[m[32m         */[m
[32m+[m[32m        checkIP(ip: string): string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Checks whether this certificate was issued by the given `otherCert`.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        checkIssued(otherCert: X509Certificate): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Checks whether the public key for this certificate is consistent with[m
[32m+[m[32m         * the given private key.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         * @param privateKey A private key.[m
[32m+[m[32m         */[m
[32m+[m[32m        checkPrivateKey(privateKey: KeyObject): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * There is no standard JSON encoding for X509 certificates. The`toJSON()` method returns a string containing the PEM encoded[m
[32m+[m[32m         * certificate.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        toJSON(): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns information about this certificate using the legacy `certificate object` encoding.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        toLegacyObject(): PeerCertificate;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the PEM-encoded certificate.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        toString(): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Verifies that this certificate was signed by the given public key.[m
[32m+[m[32m         * Does not perform any other validation checks on the certificate.[m
[32m+[m[32m         * @since v15.6.0[m
[32m+[m[32m         * @param publicKey A public key.[m
[32m+[m[32m         */[m
[32m+[m[32m        verify(publicKey: KeyObject): boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    type LargeNumberLike = NodeJS.ArrayBufferView | SharedArrayBuffer | ArrayBuffer | bigint;[m
[32m+[m[32m    interface GeneratePrimeOptions {[m
[32m+[m[32m        add?: LargeNumberLike | undefined;[m
[32m+[m[32m        rem?: LargeNumberLike | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        safe?: boolean | undefined;[m
[32m+[m[32m        bigint?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface GeneratePrimeOptionsBigInt extends GeneratePrimeOptions {[m
[32m+[m[32m        bigint: true;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface GeneratePrimeOptionsArrayBuffer extends GeneratePrimeOptions {[m
[32m+[m[32m        bigint?: false | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates a pseudorandom prime of `size` bits.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options.safe` is `true`, the prime will be a safe prime -- that is, `(prime - 1) / 2` will also be a prime.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `options.add` and `options.rem` parameters can be used to enforce additional[m
[32m+[m[32m     * requirements, e.g., for Diffie-Hellman:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * If `options.add` and `options.rem` are both set, the prime will satisfy the[m
[32m+[m[32m     * condition that `prime % add = rem`.[m
[32m+[m[32m     * * If only `options.add` is set and `options.safe` is not `true`, the prime will[m
[32m+[m[32m     * satisfy the condition that `prime % add = 1`.[m
[32m+[m[32m     * * If only `options.add` is set and `options.safe` is set to `true`, the prime[m
[32m+[m[32m     * will instead satisfy the condition that `prime % add = 3`. This is necessary[m
[32m+[m[32m     * because `prime % add = 1` for `options.add > 2` would contradict the condition[m
[32m+[m[32m     * enforced by `options.safe`.[m
[32m+[m[32m     * * `options.rem` is ignored if `options.add` is not given.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Both `options.add` and `options.rem` must be encoded as big-endian sequences[m
[32m+[m[32m     * if given as an `ArrayBuffer`, `SharedArrayBuffer`, `TypedArray`, `Buffer`, or `DataView`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * By default, the prime is encoded as a big-endian sequence of octets[m
[32m+[m[32m     * in an [ArrayBuffer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer). If the `bigint` option is `true`, then a[m
[32m+[m[32m     * [bigint](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt) is provided.[m
[32m+[m[32m     * @since v15.8.0[m
[32m+[m[32m     * @param size The size (in bits) of the prime to generate.[m
[32m+[m[32m     */[m
[32m+[m[32m    function generatePrime(size: number, callback: (err: Error | null, prime: ArrayBuffer) => void): void;[m
[32m+[m[32m    function generatePrime([m
[32m+[m[32m        size: number,[m
[32m+[m[32m        options: GeneratePrimeOptionsBigInt,[m
[32m+[m[32m        callback: (err: Error | null, prime: bigint) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generatePrime([m
[32m+[m[32m        size: number,[m
[32m+[m[32m        options: GeneratePrimeOptionsArrayBuffer,[m
[32m+[m[32m        callback: (err: Error | null, prime: ArrayBuffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    function generatePrime([m
[32m+[m[32m        size: number,[m
[32m+[m[32m        options: GeneratePrimeOptions,[m
[32m+[m[32m        callback: (err: Error | null, prime: ArrayBuffer | bigint) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Generates a pseudorandom prime of `size` bits.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options.safe` is `true`, the prime will be a safe prime -- that is, `(prime - 1) / 2` will also be a prime.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `options.add` and `options.rem` parameters can be used to enforce additional[m
[32m+[m[32m     * requirements, e.g., for Diffie-Hellman:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * If `options.add` and `options.rem` are both set, the prime will satisfy the[m
[32m+[m[32m     * condition that `prime % add = rem`.[m
[32m+[m[32m     * * If only `options.add` is set and `options.safe` is not `true`, the prime will[m
[32m+[m[32m     * satisfy the condition that `prime % add = 1`.[m
[32m+[m[32m     * * If only `options.add` is set and `options.safe` is set to `true`, the prime[m
[32m+[m[32m     * will instead satisfy the condition that `prime % add = 3`. This is necessary[m
[32m+[m[32m     * because `prime % add = 1` for `options.add > 2` would contradict the condition[m
[32m+[m[32m     * enforced by `options.safe`.[m
[32m+[m[32m     * * `options.rem` is ignored if `options.add` is not given.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Both `options.add` and `options.rem` must be encoded as big-endian sequences[m
[32m+[m[32m     * if given as an `ArrayBuffer`, `SharedArrayBuffer`, `TypedArray`, `Buffer`, or `DataView`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * By default, the prime is encoded as a big-endian sequence of octets[m
[32m+[m[32m     * in an [ArrayBuffer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer). If the `bigint` option is `true`, then a[m
[32m+[m[32m     * [bigint](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt) is provided.[m
[32m+[m[32m     * @since v15.8.0[m
[32m+[m[32m     * @param size The size (in bits) of the prime to generate.[m
[32m+[m[32m     */[m
[32m+[m[32m    function generatePrimeSync(size: number): ArrayBuffer;[m
[32m+[m[32m    function generatePrimeSync(size: number, options: GeneratePrimeOptionsBigInt): bigint;[m
[32m+[m[32m    function generatePrimeSync(size: number, options: GeneratePrimeOptionsArrayBuffer): ArrayBuffer;[m
[32m+[m[32m    function generatePrimeSync(size: number, options: GeneratePrimeOptions): ArrayBuffer | bigint;[m
[32m+[m[32m    interface CheckPrimeOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of Miller-Rabin probabilistic primality iterations to perform.[m
[32m+[m[32m         * When the value is 0 (zero), a number of checks is used that yields a false positive rate of at most `2**-64` for random input.[m
[32m+[m[32m         * Care must be used when selecting a number of checks.[m
[32m+[m[32m         * Refer to the OpenSSL documentation for the BN_is_prime_ex function nchecks options for more details.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         */[m
[32m+[m[32m        checks?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Checks the primality of the `candidate`.[m
[32m+[m[32m     * @since v15.8.0[m
[32m+[m[32m     * @param candidate A possible prime encoded as a sequence of big endian octets of arbitrary length.[m
[32m+[m[32m     */[m
[32m+[m[32m    function checkPrime(value: LargeNumberLike, callback: (err: Error | null, result: boolean) => void): void;[m
[32m+[m[32m    function checkPrime([m
[32m+[m[32m        value: LargeNumberLike,[m
[32m+[m[32m        options: CheckPrimeOptions,[m
[32m+[m[32m        callback: (err: Error | null, result: boolean) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Checks the primality of the `candidate`.[m
[32m+[m[32m     * @since v15.8.0[m
[32m+[m[32m     * @param candidate A possible prime encoded as a sequence of big endian octets of arbitrary length.[m
[32m+[m[32m     * @return `true` if the candidate is a prime with an error probability less than `0.25 ** options.checks`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function checkPrimeSync(candidate: LargeNumberLike, options?: CheckPrimeOptions): boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Load and set the `engine` for some or all OpenSSL functions (selected by flags).[m
[32m+[m[32m     *[m
[32m+[m[32m     * `engine` could be either an id or a path to the engine's shared library.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `flags` argument uses `ENGINE_METHOD_ALL` by default. The `flags` is a bit field taking one of or a mix of the following flags (defined in `crypto.constants`):[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_RSA`[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_DSA`[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_DH`[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_RAND`[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_EC`[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_CIPHERS`[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_DIGESTS`[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_PKEY_METHS`[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_PKEY_ASN1_METHS`[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_ALL`[m
[32m+[m[32m     * * `crypto.constants.ENGINE_METHOD_NONE`[m
[32m+[m[32m     * @since v0.11.11[m
[32m+[m[32m     * @param flags[m
[32m+[m[32m     */[m
[32m+[m[32m    function setEngine(engine: string, flags?: number): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A convenient alias for {@link webcrypto.getRandomValues}. This[m
[32m+[m[32m     * implementation is not compliant with the Web Crypto spec, to write[m
[32m+[m[32m     * web-compatible code use {@link webcrypto.getRandomValues} instead.[m
[32m+[m[32m     * @since v17.4.0[m
[32m+[m[32m     * @return Returns `typedArray`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function getRandomValues<T extends webcrypto.BufferSource>(typedArray: T): T;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A convenient alias for `crypto.webcrypto.subtle`.[m
[32m+[m[32m     * @since v17.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    const subtle: webcrypto.SubtleCrypto;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An implementation of the Web Crypto API standard.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the {@link https://nodejs.org/docs/latest/api/webcrypto.html Web Crypto API documentation} for details.[m
[32m+[m[32m     * @since v15.0.0[m
[32m+[m[32m     */[m
[32m+[m[32m    const webcrypto: webcrypto.Crypto;[m
[32m+[m[32m    namespace webcrypto {[m
[32m+[m[32m        type BufferSource = ArrayBufferView | ArrayBuffer;[m
[32m+[m[32m        type KeyFormat = "jwk" | "pkcs8" | "raw" | "spki";[m
[32m+[m[32m        type KeyType = "private" | "public" | "secret";[m
[32m+[m[32m        type KeyUsage =[m
[32m+[m[32m            | "decrypt"[m
[32m+[m[32m            | "deriveBits"[m
[32m+[m[32m            | "deriveKey"[m
[32m+[m[32m            | "encrypt"[m
[32m+[m[32m            | "sign"[m
[32m+[m[32m            | "unwrapKey"[m
[32m+[m[32m            | "verify"[m
[32m+[m[32m            | "wrapKey";[m
[32m+[m[32m        type AlgorithmIdentifier = Algorithm | string;[m
[32m+[m[32m        type HashAlgorithmIdentifier = AlgorithmIdentifier;[m
[32m+[m[32m        type NamedCurve = string;[m
[32m+[m[32m        type BigInteger = Uint8Array;[m
[32m+[m[32m        interface AesCbcParams extends Algorithm {[m
[32m+[m[32m            iv: BufferSource;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface AesCtrParams extends Algorithm {[m
[32m+[m[32m            counter: BufferSource;[m
[32m+[m[32m            length: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface AesDerivedKeyParams extends Algorithm {[m
[32m+[m[32m            length: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface AesGcmParams extends Algorithm {[m
[32m+[m[32m            additionalData?: BufferSource;[m
[32m+[m[32m            iv: BufferSource;[m
[32m+[m[32m            tagLength?: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface AesKeyAlgorithm extends KeyAlgorithm {[m
[32m+[m[32m            length: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface AesKeyGenParams extends Algorithm {[m
[32m+[m[32m            length: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface Algorithm {[m
[32m+[m[32m            name: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EcKeyAlgorithm extends KeyAlgorithm {[m
[32m+[m[32m            namedCurve: NamedCurve;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EcKeyGenParams extends Algorithm {[m
[32m+[m[32m            namedCurve: NamedCurve;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EcKeyImportParams extends Algorithm {[m
[32m+[m[32m            namedCurve: NamedCurve;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EcdhKeyDeriveParams extends Algorithm {[m
[32m+[m[32m            public: CryptoKey;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EcdsaParams extends Algorithm {[m
[32m+[m[32m            hash: HashAlgorithmIdentifier;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface Ed448Params extends Algorithm {[m
[32m+[m[32m            context?: BufferSource;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface HkdfParams extends Algorithm {[m
[32m+[m[32m            hash: HashAlgorithmIdentifier;[m
[32m+[m[32m            info: BufferSource;[m
[32m+[m[32m            salt: BufferSource;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface HmacImportParams extends Algorithm {[m
[32m+[m[32m            hash: HashAlgorithmIdentifier;[m
[32m+[m[32m            length?: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface HmacKeyAlgorithm extends KeyAlgorithm {[m
[32m+[m[32m            hash: KeyAlgorithm;[m
[32m+[m[32m            length: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface HmacKeyGenParams extends Algorithm {[m
[32m+[m[32m            hash: HashAlgorithmIdentifier;[m
[32m+[m[32m            length?: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface JsonWebKey {[m
[32m+[m[32m            alg?: string;[m
[32m+[m[32m            crv?: string;[m
[32m+[m[32m            d?: string;[m
[32m+[m[32m            dp?: string;[m
[32m+[m[32m            dq?: string;[m
[32m+[m[32m            e?: string;[m
[32m+[m[32m            ext?: boolean;[m
[32m+[m[32m            k?: string;[m
[32m+[m[32m            key_ops?: string[];[m
[32m+[m[32m            kty?: string;[m
[32m+[m[32m            n?: string;[m
[32m+[m[32m            oth?: RsaOtherPrimesInfo[];[m
[32m+[m[32m            p?: string;[m
[32m+[m[32m            q?: string;[m
[32m+[m[32m            qi?: string;[m
[32m+[m[32m            use?: string;[m
[32m+[m[32m            x?: string;[m
[32m+[m[32m            y?: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface KeyAlgorithm {[m
[32m+[m[32m            name: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface Pbkdf2Params extends Algorithm {[m
[32m+[m[32m            hash: HashAlgorithmIdentifier;[m
[32m+[m[32m            iterations: number;[m
[32m+[m[32m            salt: BufferSource;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RsaHashedImportParams extends Algorithm {[m
[32m+[m[32m            hash: HashAlgorithmIdentifier;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RsaHashedKeyAlgorithm extends RsaKeyAlgorithm {[m
[32m+[m[32m            hash: KeyAlgorithm;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RsaHashedKeyGenParams extends RsaKeyGenParams {[m
[32m+[m[32m            hash: HashAlgorithmIdentifier;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RsaKeyAlgorithm extends KeyAlgorithm {[m
[32m+[m[32m            modulusLength: number;[m
[32m+[m[32m            publicExponent: BigInteger;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RsaKeyGenParams extends Algorithm {[m
[32m+[m[32m            modulusLength: number;[m
[32m+[m[32m            publicExponent: BigInteger;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RsaOaepParams extends Algorithm {[m
[32m+[m[32m            label?: BufferSource;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RsaOtherPrimesInfo {[m
[32m+[m[32m            d?: string;[m
[32m+[m[32m            r?: string;[m
[32m+[m[32m            t?: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RsaPssParams extends Algorithm {[m
[32m+[m[32m            saltLength: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calling `require('node:crypto').webcrypto` returns an instance of the `Crypto` class.[m
[32m+[m[32m         * `Crypto` is a singleton that provides access to the remainder of the crypto API.[m
[32m+[m[32m         * @since v15.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        interface Crypto {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Provides access to the `SubtleCrypto` API.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly subtle: SubtleCrypto;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Generates cryptographically strong random values.[m
[32m+[m[32m             * The given `typedArray` is filled with random values, and a reference to `typedArray` is returned.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The given `typedArray` must be an integer-based instance of {@link NodeJS.TypedArray}, i.e. `Float32Array` and `Float64Array` are not accepted.[m
[32m+[m[32m             *[m
[32m+[m[32m             * An error will be thrown if the given `typedArray` is larger than 65,536 bytes.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            getRandomValues<T extends Exclude<NodeJS.TypedArray, Float32Array | Float64Array>>(typedArray: T): T;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Generates a random {@link https://www.rfc-editor.org/rfc/rfc4122.txt RFC 4122} version 4 UUID.[m
[32m+[m[32m             * The UUID is generated using a cryptographic pseudorandom number generator.[m
[32m+[m[32m             * @since v16.7.0[m
[32m+[m[32m             */[m
[32m+[m[32m            randomUUID(): UUID;[m
[32m+[m[32m            CryptoKey: CryptoKeyConstructor;[m
[32m+[m[32m        }[m
[32m+[m[32m        // This constructor throws ILLEGAL_CONSTRUCTOR so it should not be newable.[m
[32m+[m[32m        interface CryptoKeyConstructor {[m
[32m+[m[32m            /** Illegal constructor */[m
[32m+[m[32m            (_: { readonly _: unique symbol }): never; // Allows instanceof to work but not be callable by the user.[m
[32m+[m[32m            readonly length: 0;[m
[32m+[m[32m            readonly name: "CryptoKey";[m
[32m+[m[32m            readonly prototype: CryptoKey;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v15.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        interface CryptoKey {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * An object detailing the algorithm for which the key can be used along with additional algorithm-specific parameters.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly algorithm: KeyAlgorithm;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * When `true`, the {@link CryptoKey} can be extracted using either `subtleCrypto.exportKey()` or `subtleCrypto.wrapKey()`.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly extractable: boolean;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A string identifying whether the key is a symmetric (`'secret'`) or asymmetric (`'private'` or `'public'`) key.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly type: KeyType;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * An array of strings identifying the operations for which the key may be used.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The possible usages are:[m
[32m+[m[32m             * - `'encrypt'` - The key may be used to encrypt data.[m
[32m+[m[32m             * - `'decrypt'` - The key may be used to decrypt data.[m
[32m+[m[32m             * - `'sign'` - The key may be used to generate digital signatures.[m
[32m+[m[32m             * - `'verify'` - The key may be used to verify digital signatures.[m
[32m+[m[32m             * - `'deriveKey'` - The key may be used to derive a new key.[m
[32m+[m[32m             * - `'deriveBits'` - The key may be used to derive bits.[m
[32m+[m[32m             * - `'wrapKey'` - The key may be used to wrap another key.[m
[32m+[m[32m             * - `'unwrapKey'` - The key may be used to unwrap another key.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Valid key usages depend on the key algorithm (identified by `cryptokey.algorithm.name`).[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly usages: KeyUsage[];[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `CryptoKeyPair` is a simple dictionary object with `publicKey` and `privateKey` properties, representing an asymmetric key pair.[m
[32m+[m[32m         * @since v15.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        interface CryptoKeyPair {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A {@link CryptoKey} whose type will be `'private'`.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            privateKey: CryptoKey;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A {@link CryptoKey} whose type will be `'public'`.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            publicKey: CryptoKey;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v15.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        interface SubtleCrypto {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Using the method and parameters specified in `algorithm` and the keying material provided by `key`,[m
[32m+[m[32m             * `subtle.decrypt()` attempts to decipher the provided `data`. If successful,[m
[32m+[m[32m             * the returned promise will be resolved with an `<ArrayBuffer>` containing the plaintext result.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The algorithms currently supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'RSA-OAEP'`[m
[32m+[m[32m             * - `'AES-CTR'`[m
[32m+[m[32m             * - `'AES-CBC'`[m
[32m+[m[32m             * - `'AES-GCM'`[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            decrypt([m
[32m+[m[32m                algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams,[m
[32m+[m[32m                key: CryptoKey,[m
[32m+[m[32m                data: BufferSource,[m
[32m+[m[32m            ): Promise<ArrayBuffer>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Using the method and parameters specified in `algorithm` and the keying material provided by `baseKey`,[m
[32m+[m[32m             * `subtle.deriveBits()` attempts to generate `length` bits.[m
[32m+[m[32m             * The Node.js implementation requires that when `length` is a number it must be multiple of `8`.[m
[32m+[m[32m             * When `length` is `null` the maximum number of bits for a given algorithm is generated. This is allowed[m
[32m+[m[32m             * for the `'ECDH'`, `'X25519'`, and `'X448'` algorithms.[m
[32m+[m[32m             * If successful, the returned promise will be resolved with an `<ArrayBuffer>` containing the generated data.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The algorithms currently supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'ECDH'`[m
[32m+[m[32m             * - `'X25519'`[m
[32m+[m[32m             * - `'X448'`[m
[32m+[m[32m             * - `'HKDF'`[m
[32m+[m[32m             * - `'PBKDF2'`[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            deriveBits(algorithm: EcdhKeyDeriveParams, baseKey: CryptoKey, length: number | null): Promise<ArrayBuffer>;[m
[32m+[m[32m            deriveBits([m
[32m+[m[32m                algorithm: AlgorithmIdentifier | HkdfParams | Pbkdf2Params,[m
[32m+[m[32m                baseKey: CryptoKey,[m
[32m+[m[32m                length: number,[m
[32m+[m[32m            ): Promise<ArrayBuffer>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Using the method and parameters specified in `algorithm`, and the keying material provided by `baseKey`,[m
[32m+[m[32m             * `subtle.deriveKey()` attempts to generate a new <CryptoKey>` based on the method and parameters in `derivedKeyAlgorithm`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Calling `subtle.deriveKey()` is equivalent to calling `subtle.deriveBits()` to generate raw keying material,[m
[32m+[m[32m             * then passing the result into the `subtle.importKey()` method using the `deriveKeyAlgorithm`, `extractable`, and `keyUsages` parameters as input.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The algorithms currently supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'ECDH'`[m
[32m+[m[32m             * - `'X25519'`[m
[32m+[m[32m             * - `'X448'`[m
[32m+[m[32m             * - `'HKDF'`[m
[32m+[m[32m             * - `'PBKDF2'`[m
[32m+[m[32m             * @param keyUsages See {@link https://nodejs.org/docs/latest/api/webcrypto.html#cryptokeyusages Key usages}.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            deriveKey([m
[32m+[m[32m                algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params,[m
[32m+[m[32m                baseKey: CryptoKey,[m
[32m+[m[32m                derivedKeyAlgorithm:[m
[32m+[m[32m                    | AlgorithmIdentifier[m
[32m+[m[32m                    | AesDerivedKeyParams[m
[32m+[m[32m                    | HmacImportParams[m
[32m+[m[32m                    | HkdfParams[m
[32m+[m[32m                    | Pbkdf2Params,[m
[32m+[m[32m                extractable: boolean,[m
[32m+[m[32m                keyUsages: readonly KeyUsage[],[m
[32m+[m[32m            ): Promise<CryptoKey>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Using the method identified by `algorithm`, `subtle.digest()` attempts to generate a digest of `data`.[m
[32m+[m[32m             * If successful, the returned promise is resolved with an `<ArrayBuffer>` containing the computed digest.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `algorithm` is provided as a `<string>`, it must be one of:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'SHA-1'`[m
[32m+[m[32m             * - `'SHA-256'`[m
[32m+[m[32m             * - `'SHA-384'`[m
[32m+[m[32m             * - `'SHA-512'`[m
[32m+[m[32m             *[m
[32m+[m[32m             * If `algorithm` is provided as an `<Object>`, it must have a `name` property whose value is one of the above.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            digest(algorithm: AlgorithmIdentifier, data: BufferSource): Promise<ArrayBuffer>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Using the method and parameters specified by `algorithm` and the keying material provided by `key`,[m
[32m+[m[32m             * `subtle.encrypt()` attempts to encipher `data`. If successful,[m
[32m+[m[32m             * the returned promise is resolved with an `<ArrayBuffer>` containing the encrypted result.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The algorithms currently supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'RSA-OAEP'`[m
[32m+[m[32m             * - `'AES-CTR'`[m
[32m+[m[32m             * - `'AES-CBC'`[m
[32m+[m[32m             * - `'AES-GCM'`[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            encrypt([m
[32m+[m[32m                algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams,[m
[32m+[m[32m                key: CryptoKey,[m
[32m+[m[32m                data: BufferSource,[m
[32m+[m[32m            ): Promise<ArrayBuffer>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exports the given key into the specified format, if supported.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If the `<CryptoKey>` is not extractable, the returned promise will reject.[m
[32m+[m[32m             *[m
[32m+[m[32m             * When `format` is either `'pkcs8'` or `'spki'` and the export is successful,[m
[32m+[m[32m             * the returned promise will be resolved with an `<ArrayBuffer>` containing the exported key data.[m
[32m+[m[32m             *[m
[32m+[m[32m             * When `format` is `'jwk'` and the export is successful, the returned promise will be resolved with a[m
[32m+[m[32m             * JavaScript object conforming to the {@link https://tools.ietf.org/html/rfc7517 JSON Web Key} specification.[m
[32m+[m[32m             * @param format Must be one of `'raw'`, `'pkcs8'`, `'spki'`, or `'jwk'`.[m
[32m+[m[32m             * @returns `<Promise>` containing `<ArrayBuffer>`.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            exportKey(format: "jwk", key: CryptoKey): Promise<JsonWebKey>;[m
[32m+[m[32m            exportKey(format: Exclude<KeyFormat, "jwk">, key: CryptoKey): Promise<ArrayBuffer>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Using the method and parameters provided in `algorithm`,[m
[32m+[m[32m             * `subtle.generateKey()` attempts to generate new keying material.[m
[32m+[m[32m             * Depending the method used, the method may generate either a single `<CryptoKey>` or a `<CryptoKeyPair>`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The `<CryptoKeyPair>` (public and private key) generating algorithms supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'RSASSA-PKCS1-v1_5'`[m
[32m+[m[32m             * - `'RSA-PSS'`[m
[32m+[m[32m             * - `'RSA-OAEP'`[m
[32m+[m[32m             * - `'ECDSA'`[m
[32m+[m[32m             * - `'Ed25519'`[m
[32m+[m[32m             * - `'Ed448'`[m
[32m+[m[32m             * - `'ECDH'`[m
[32m+[m[32m             * - `'X25519'`[m
[32m+[m[32m             * - `'X448'`[m
[32m+[m[32m             * The `<CryptoKey>` (secret key) generating algorithms supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'HMAC'`[m
[32m+[m[32m             * - `'AES-CTR'`[m
[32m+[m[32m             * - `'AES-CBC'`[m
[32m+[m[32m             * - `'AES-GCM'`[m
[32m+[m[32m             * - `'AES-KW'`[m
[32m+[m[32m             * @param keyUsages See {@link https://nodejs.org/docs/latest/api/webcrypto.html#cryptokeyusages Key usages}.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            generateKey([m
[32m+[m[32m                algorithm: RsaHashedKeyGenParams | EcKeyGenParams,[m
[32m+[m[32m                extractable: boolean,[m
[32m+[m[32m                keyUsages: readonly KeyUsage[],[m
[32m+[m[32m            ): Promise<CryptoKeyPair>;[m
[32m+[m[32m            generateKey([m
[32m+[m[32m                algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params,[m
[32m+[m[32m                extractable: boolean,[m
[32m+[m[32m                keyUsages: readonly KeyUsage[],[m
[32m+[m[32m            ): Promise<CryptoKey>;[m
[32m+[m[32m            generateKey([m
[32m+[m[32m                algorithm: AlgorithmIdentifier,[m
[32m+[m[32m                extractable: boolean,[m
[32m+[m[32m                keyUsages: KeyUsage[],[m
[32m+[m[32m            ): Promise<CryptoKeyPair | CryptoKey>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The `subtle.importKey()` method attempts to interpret the provided `keyData` as the given `format`[m
[32m+[m[32m             * to create a `<CryptoKey>` instance using the provided `algorithm`, `extractable`, and `keyUsages` arguments.[m
[32m+[m[32m             * If the import is successful, the returned promise will be resolved with the created `<CryptoKey>`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If importing a `'PBKDF2'` key, `extractable` must be `false`.[m
[32m+[m[32m             * @param format Must be one of `'raw'`, `'pkcs8'`, `'spki'`, or `'jwk'`.[m
[32m+[m[32m             * @param keyUsages See {@link https://nodejs.org/docs/latest/api/webcrypto.html#cryptokeyusages Key usages}.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            importKey([m
[32m+[m[32m                format: "jwk",[m
[32m+[m[32m                keyData: JsonWebKey,[m
[32m+[m[32m                algorithm:[m
[32m+[m[32m                    | AlgorithmIdentifier[m
[32m+[m[32m                    | RsaHashedImportParams[m
[32m+[m[32m                    | EcKeyImportParams[m
[32m+[m[32m                    | HmacImportParams[m
[32m+[m[32m                    | AesKeyAlgorithm,[m
[32m+[m[32m                extractable: boolean,[m
[32m+[m[32m                keyUsages: readonly KeyUsage[],[m
[32m+[m[32m            ): Promise<CryptoKey>;[m
[32m+[m[32m            importKey([m
[32m+[m[32m                format: Exclude<KeyFormat, "jwk">,[m
[32m+[m[32m                keyData: BufferSource,[m
[32m+[m[32m                algorithm:[m
[32m+[m[32m                    | AlgorithmIdentifier[m
[32m+[m[32m                    | RsaHashedImportParams[m
[32m+[m[32m                    | EcKeyImportParams[m
[32m+[m[32m                    | HmacImportParams[m
[32m+[m[32m                    | AesKeyAlgorithm,[m
[32m+[m[32m                extractable: boolean,[m
[32m+[m[32m                keyUsages: KeyUsage[],[m
[32m+[m[32m            ): Promise<CryptoKey>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Using the method and parameters given by `algorithm` and the keying material provided by `key`,[m
[32m+[m[32m             * `subtle.sign()` attempts to generate a cryptographic signature of `data`. If successful,[m
[32m+[m[32m             * the returned promise is resolved with an `<ArrayBuffer>` containing the generated signature.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The algorithms currently supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'RSASSA-PKCS1-v1_5'`[m
[32m+[m[32m             * - `'RSA-PSS'`[m
[32m+[m[32m             * - `'ECDSA'`[m
[32m+[m[32m             * - `'Ed25519'`[m
[32m+[m[32m             * - `'Ed448'`[m
[32m+[m[32m             * - `'HMAC'`[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            sign([m
[32m+[m[32m                algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams | Ed448Params,[m
[32m+[m[32m                key: CryptoKey,[m
[32m+[m[32m                data: BufferSource,[m
[32m+[m[32m            ): Promise<ArrayBuffer>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * In cryptography, "wrapping a key" refers to exporting and then encrypting the keying material.[m
[32m+[m[32m             * The `subtle.unwrapKey()` method attempts to decrypt a wrapped key and create a `<CryptoKey>` instance.[m
[32m+[m[32m             * It is equivalent to calling `subtle.decrypt()` first on the encrypted key data (using the `wrappedKey`, `unwrapAlgo`, and `unwrappingKey` arguments as input)[m
[32m+[m[32m             * then passing the results in to the `subtle.importKey()` method using the `unwrappedKeyAlgo`, `extractable`, and `keyUsages` arguments as inputs.[m
[32m+[m[32m             * If successful, the returned promise is resolved with a `<CryptoKey>` object.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The wrapping algorithms currently supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'RSA-OAEP'`[m
[32m+[m[32m             * - `'AES-CTR'`[m
[32m+[m[32m             * - `'AES-CBC'`[m
[32m+[m[32m             * - `'AES-GCM'`[m
[32m+[m[32m             * - `'AES-KW'`[m
[32m+[m[32m             *[m
[32m+[m[32m             * The unwrapped key algorithms supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'RSASSA-PKCS1-v1_5'`[m
[32m+[m[32m             * - `'RSA-PSS'`[m
[32m+[m[32m             * - `'RSA-OAEP'`[m
[32m+[m[32m             * - `'ECDSA'`[m
[32m+[m[32m             * - `'Ed25519'`[m
[32m+[m[32m             * - `'Ed448'`[m
[32m+[m[32m             * - `'ECDH'`[m
[32m+[m[32m             * - `'X25519'`[m
[32m+[m[32m             * - `'X448'`[m
[32m+[m[32m             * - `'HMAC'`[m
[32m+[m[32m             * - `'AES-CTR'`[m
[32m+[m[32m             * - `'AES-CBC'`[m
[32m+[m[32m             * - `'AES-GCM'`[m
[32m+[m[32m             * - `'AES-KW'`[m
[32m+[m[32m             * @param format Must be one of `'raw'`, `'pkcs8'`, `'spki'`, or `'jwk'`.[m
[32m+[m[32m             * @param keyUsages See {@link https://nodejs.org/docs/latest/api/webcrypto.html#cryptokeyusages Key usages}.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            unwrapKey([m
[32m+[m[32m                format: KeyFormat,[m
[32m+[m[32m                wrappedKey: BufferSource,[m
[32m+[m[32m                unwrappingKey: CryptoKey,[m
[32m+[m[32m                unwrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams,[m
[32m+[m[32m                unwrappedKeyAlgorithm:[m
[32m+[m[32m                    | AlgorithmIdentifier[m
[32m+[m[32m                    | RsaHashedImportParams[m
[32m+[m[32m                    | EcKeyImportParams[m
[32m+[m[32m                    | HmacImportParams[m
[32m+[m[32m                    | AesKeyAlgorithm,[m
[32m+[m[32m                extractable: boolean,[m
[32m+[m[32m                keyUsages: KeyUsage[],[m
[32m+[m[32m            ): Promise<CryptoKey>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Using the method and parameters given in `algorithm` and the keying material provided by `key`,[m
[32m+[m[32m             * `subtle.verify()` attempts to verify that `signature` is a valid cryptographic signature of `data`.[m
[32m+[m[32m             * The returned promise is resolved with either `true` or `false`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The algorithms currently supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'RSASSA-PKCS1-v1_5'`[m
[32m+[m[32m             * - `'RSA-PSS'`[m
[32m+[m[32m             * - `'ECDSA'`[m
[32m+[m[32m             * - `'Ed25519'`[m
[32m+[m[32m             * - `'Ed448'`[m
[32m+[m[32m             * - `'HMAC'`[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            verify([m
[32m+[m[32m                algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams | Ed448Params,[m
[32m+[m[32m                key: CryptoKey,[m
[32m+[m[32m                signature: BufferSource,[m
[32m+[m[32m                data: BufferSource,[m
[32m+[m[32m            ): Promise<boolean>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * In cryptography, "wrapping a key" refers to exporting and then encrypting the keying material.[m
[32m+[m[32m             * The `subtle.wrapKey()` method exports the keying material into the format identified by `format`,[m
[32m+[m[32m             * then encrypts it using the method and parameters specified by `wrapAlgo` and the keying material provided by `wrappingKey`.[m
[32m+[m[32m             * It is the equivalent to calling `subtle.exportKey()` using `format` and `key` as the arguments,[m
[32m+[m[32m             * then passing the result to the `subtle.encrypt()` method using `wrappingKey` and `wrapAlgo` as inputs.[m
[32m+[m[32m             * If successful, the returned promise will be resolved with an `<ArrayBuffer>` containing the encrypted key data.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The wrapping algorithms currently supported include:[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `'RSA-OAEP'`[m
[32m+[m[32m             * - `'AES-CTR'`[m
[32m+[m[32m             * - `'AES-CBC'`[m
[32m+[m[32m             * - `'AES-GCM'`[m
[32m+[m[32m             * - `'AES-KW'`[m
[32m+[m[32m             * @param format Must be one of `'raw'`, `'pkcs8'`, `'spki'`, or `'jwk'`.[m
[32m+[m[32m             * @since v15.0.0[m
[32m+[m[32m             */[m
[32m+[m[32m            wrapKey([m
[32m+[m[32m                format: KeyFormat,[m
[32m+[m[32m                key: CryptoKey,[m
[32m+[m[32m                wrappingKey: CryptoKey,[m
[32m+[m[32m                wrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams,[m
[32m+[m[32m            ): Promise<ArrayBuffer>;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    global {[m
[32m+[m[32m        var crypto: typeof globalThis extends {[m
[32m+[m[32m            crypto: infer T;[m
[32m+[m[32m            onmessage: any;[m
[32m+[m[32m        } ? T[m
[32m+[m[32m            : webcrypto.Crypto;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:crypto" {[m
[32m+[m[32m    export * from "crypto";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/dgram.d.ts b/node_modules/@types/node/dgram.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..8c2ac9b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/dgram.d.ts[m
[36m@@ -0,0 +1,596 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:dgram` module provides an implementation of UDP datagram sockets.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import dgram from 'node:dgram';[m
[32m+[m[32m *[m
[32m+[m[32m * const server = dgram.createSocket('udp4');[m
[32m+[m[32m *[m
[32m+[m[32m * server.on('error', (err) => {[m
[32m+[m[32m *   console.error(`server error:\n${err.stack}`);[m
[32m+[m[32m *   server.close();[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * server.on('message', (msg, rinfo) => {[m
[32m+[m[32m *   console.log(`server got: ${msg} from ${rinfo.address}:${rinfo.port}`);[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * server.on('listening', () => {[m
[32m+[m[32m *   const address = server.address();[m
[32m+[m[32m *   console.log(`server listening ${address.address}:${address.port}`);[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * server.bind(41234);[m
[32m+[m[32m * // Prints: server listening 0.0.0.0:41234[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/dgram.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "dgram" {[m
[32m+[m[32m    import { AddressInfo } from "node:net";[m
[32m+[m[32m    import * as dns from "node:dns";[m
[32m+[m[32m    import { Abortable, EventEmitter } from "node:events";[m
[32m+[m[32m    interface RemoteInfo {[m
[32m+[m[32m        address: string;[m
[32m+[m[32m        family: "IPv4" | "IPv6";[m
[32m+[m[32m        port: number;[m
[32m+[m[32m        size: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface BindOptions {[m
[32m+[m[32m        port?: number | undefined;[m
[32m+[m[32m        address?: string | undefined;[m
[32m+[m[32m        exclusive?: boolean | undefined;[m
[32m+[m[32m        fd?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    type SocketType = "udp4" | "udp6";[m
[32m+[m[32m    interface SocketOptions extends Abortable {[m
[32m+[m[32m        type: SocketType;[m
[32m+[m[32m        reuseAddr?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        ipv6Only?: boolean | undefined;[m
[32m+[m[32m        recvBufferSize?: number | undefined;[m
[32m+[m[32m        sendBufferSize?: number | undefined;[m
[32m+[m[32m        lookup?:[m
[32m+[m[32m            | (([m
[32m+[m[32m                hostname: string,[m
[32m+[m[32m                options: dns.LookupOneOptions,[m
[32m+[m[32m                callback: (err: NodeJS.ErrnoException | null, address: string, family: number) => void,[m
[32m+[m[32m            ) => void)[m
[32m+[m[32m            | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a `dgram.Socket` object. Once the socket is created, calling `socket.bind()` will instruct the socket to begin listening for datagram[m
[32m+[m[32m     * messages. When `address` and `port` are not passed to `socket.bind()` the[m
[32m+[m[32m     * method will bind the socket to the "all interfaces" address on a random port[m
[32m+[m[32m     * (it does the right thing for both `udp4` and `udp6` sockets). The bound address[m
[32m+[m[32m     * and port can be retrieved using `socket.address().address` and `socket.address().port`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `signal` option is enabled, calling `.abort()` on the corresponding `AbortController` is similar to calling `.close()` on the socket:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const controller = new AbortController();[m
[32m+[m[32m     * const { signal } = controller;[m
[32m+[m[32m     * const server = dgram.createSocket({ type: 'udp4', signal });[m
[32m+[m[32m     * server.on('message', (msg, rinfo) => {[m
[32m+[m[32m     *   console.log(`server got: ${msg} from ${rinfo.address}:${rinfo.port}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * // Later, when you want to close the server.[m
[32m+[m[32m     * controller.abort();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.11.13[m
[32m+[m[32m     * @param options Available options are:[m
[32m+[m[32m     * @param callback Attached as a listener for `'message'` events. Optional.[m
[32m+[m[32m     */[m
[32m+[m[32m    function createSocket(type: SocketType, callback?: (msg: Buffer, rinfo: RemoteInfo) => void): Socket;[m
[32m+[m[32m    function createSocket(options: SocketOptions, callback?: (msg: Buffer, rinfo: RemoteInfo) => void): Socket;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Encapsulates the datagram functionality.[m
[32m+[m[32m     *[m
[32m+[m[32m     * New instances of `dgram.Socket` are created using {@link createSocket}.[m
[32m+[m[32m     * The `new` keyword is not to be used to create `dgram.Socket` instances.[m
[32m+[m[32m     * @since v0.1.99[m
[32m+[m[32m     */[m
[32m+[m[32m    class Socket extends EventEmitter {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Tells the kernel to join a multicast group at the given `multicastAddress` and `multicastInterface` using the `IP_ADD_MEMBERSHIP` socket option. If the `multicastInterface` argument is not[m
[32m+[m[32m         * specified, the operating system will choose[m
[32m+[m[32m         * one interface and will add membership to it. To add membership to every[m
[32m+[m[32m         * available interface, call `addMembership` multiple times, once per interface.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When called on an unbound socket, this method will implicitly bind to a random[m
[32m+[m[32m         * port, listening on all interfaces.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When sharing a UDP socket across multiple `cluster` workers, the`socket.addMembership()` function must be called only once or an`EADDRINUSE` error will occur:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import cluster from 'node:cluster';[m
[32m+[m[32m         * import dgram from 'node:dgram';[m
[32m+[m[32m         *[m
[32m+[m[32m         * if (cluster.isPrimary) {[m
[32m+[m[32m         *   cluster.fork(); // Works ok.[m
[32m+[m[32m         *   cluster.fork(); // Fails with EADDRINUSE.[m
[32m+[m[32m         * } else {[m
[32m+[m[32m         *   const s = dgram.createSocket('udp4');[m
[32m+[m[32m         *   s.bind(1234, () => {[m
[32m+[m[32m         *     s.addMembership('224.0.0.114');[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.6.9[m
[32m+[m[32m         */[m
[32m+[m[32m        addMembership(multicastAddress: string, multicastInterface?: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns an object containing the address information for a socket.[m
[32m+[m[32m         * For UDP sockets, this object will contain `address`, `family`, and `port` properties.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method throws `EBADF` if called on an unbound socket.[m
[32m+[m[32m         * @since v0.1.99[m
[32m+[m[32m         */[m
[32m+[m[32m        address(): AddressInfo;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * For UDP sockets, causes the `dgram.Socket` to listen for datagram[m
[32m+[m[32m         * messages on a named `port` and optional `address`. If `port` is not[m
[32m+[m[32m         * specified or is `0`, the operating system will attempt to bind to a[m
[32m+[m[32m         * random port. If `address` is not specified, the operating system will[m
[32m+[m[32m         * attempt to listen on all addresses. Once binding is complete, a `'listening'` event is emitted and the optional `callback` function is[m
[32m+[m[32m         * called.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Specifying both a `'listening'` event listener and passing a `callback` to the `socket.bind()` method is not harmful but not very[m
[32m+[m[32m         * useful.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A bound datagram socket keeps the Node.js process running to receive[m
[32m+[m[32m         * datagram messages.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If binding fails, an `'error'` event is generated. In rare case (e.g.[m
[32m+[m[32m         * attempting to bind with a closed socket), an `Error` may be thrown.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example of a UDP server listening on port 41234:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import dgram from 'node:dgram';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const server = dgram.createSocket('udp4');[m
[32m+[m[32m         *[m
[32m+[m[32m         * server.on('error', (err) => {[m
[32m+[m[32m         *   console.error(`server error:\n${err.stack}`);[m
[32m+[m[32m         *   server.close();[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * server.on('message', (msg, rinfo) => {[m
[32m+[m[32m         *   console.log(`server got: ${msg} from ${rinfo.address}:${rinfo.port}`);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * server.on('listening', () => {[m
[32m+[m[32m         *   const address = server.address();[m
[32m+[m[32m         *   console.log(`server listening ${address.address}:${address.port}`);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * server.bind(41234);[m
[32m+[m[32m         * // Prints: server listening 0.0.0.0:41234[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.1.99[m
[32m+[m[32m         * @param callback with no parameters. Called when binding is complete.[m
[32m+[m[32m         */[m
[32m+[m[32m        bind(port?: number, address?: string, callback?: () => void): this;[m
[32m+[m[32m        bind(port?: number, callback?: () => void): this;[m
[32m+[m[32m        bind(callback?: () => void): this;[m
[32m+[m[32m        bind(options: BindOptions, callback?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Close the underlying socket and stop listening for data on it. If a callback is[m
[32m+[m[32m         * provided, it is added as a listener for the `'close'` event.[m
[32m+[m[32m         * @since v0.1.99[m
[32m+[m[32m         * @param callback Called when the socket has been closed.[m
[32m+[m[32m         */[m
[32m+[m[32m        close(callback?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Associates the `dgram.Socket` to a remote address and port. Every[m
[32m+[m[32m         * message sent by this handle is automatically sent to that destination. Also,[m
[32m+[m[32m         * the socket will only receive messages from that remote peer.[m
[32m+[m[32m         * Trying to call `connect()` on an already connected socket will result[m
[32m+[m[32m         * in an `ERR_SOCKET_DGRAM_IS_CONNECTED` exception. If `address` is not[m
[32m+[m[32m         * provided, `'127.0.0.1'` (for `udp4` sockets) or `'::1'` (for `udp6` sockets)[m
[32m+[m[32m         * will be used by default. Once the connection is complete, a `'connect'` event[m
[32m+[m[32m         * is emitted and the optional `callback` function is called. In case of failure,[m
[32m+[m[32m         * the `callback` is called or, failing this, an `'error'` event is emitted.[m
[32m+[m[32m         * @since v12.0.0[m
[32m+[m[32m         * @param callback Called when the connection is completed or on error.[m
[32m+[m[32m         */[m
[32m+[m[32m        connect(port: number, address?: string, callback?: () => void): void;[m
[32m+[m[32m        connect(port: number, callback: () => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A synchronous function that disassociates a connected `dgram.Socket` from[m
[32m+[m[32m         * its remote address. Trying to call `disconnect()` on an unbound or already[m
[32m+[m[32m         * disconnected socket will result in an `ERR_SOCKET_DGRAM_NOT_CONNECTED` exception.[m
[32m+[m[32m         * @since v12.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        disconnect(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Instructs the kernel to leave a multicast group at `multicastAddress` using the `IP_DROP_MEMBERSHIP` socket option. This method is automatically called by the[m
[32m+[m[32m         * kernel when the socket is closed or the process terminates, so most apps will[m
[32m+[m[32m         * never have reason to call this.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `multicastInterface` is not specified, the operating system will attempt to[m
[32m+[m[32m         * drop membership on all valid interfaces.[m
[32m+[m[32m         * @since v0.6.9[m
[32m+[m[32m         */[m
[32m+[m[32m        dropMembership(multicastAddress: string, multicastInterface?: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method throws `ERR_SOCKET_BUFFER_SIZE` if called on an unbound socket.[m
[32m+[m[32m         * @since v8.7.0[m
[32m+[m[32m         * @return the `SO_RCVBUF` socket receive buffer size in bytes.[m
[32m+[m[32m         */[m
[32m+[m[32m        getRecvBufferSize(): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method throws `ERR_SOCKET_BUFFER_SIZE` if called on an unbound socket.[m
[32m+[m[32m         * @since v8.7.0[m
[32m+[m[32m         * @return the `SO_SNDBUF` socket send buffer size in bytes.[m
[32m+[m[32m         */[m
[32m+[m[32m        getSendBufferSize(): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v18.8.0, v16.19.0[m
[32m+[m[32m         * @return Number of bytes queued for sending.[m
[32m+[m[32m         */[m
[32m+[m[32m        getSendQueueSize(): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v18.8.0, v16.19.0[m
[32m+[m[32m         * @return Number of send requests currently in the queue awaiting to be processed.[m
[32m+[m[32m         */[m
[32m+[m[32m        getSendQueueCount(): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * By default, binding a socket will cause it to block the Node.js process from[m
[32m+[m[32m         * exiting as long as the socket is open. The `socket.unref()` method can be used[m
[32m+[m[32m         * to exclude the socket from the reference counting that keeps the Node.js[m
[32m+[m[32m         * process active. The `socket.ref()` method adds the socket back to the reference[m
[32m+[m[32m         * counting and restores the default behavior.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling `socket.ref()` multiples times will have no additional effect.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `socket.ref()` method returns a reference to the socket so calls can be[m
[32m+[m[32m         * chained.[m
[32m+[m[32m         * @since v0.9.1[m
[32m+[m[32m         */[m
[32m+[m[32m        ref(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns an object containing the `address`, `family`, and `port` of the remote[m
[32m+[m[32m         * endpoint. This method throws an `ERR_SOCKET_DGRAM_NOT_CONNECTED` exception[m
[32m+[m[32m         * if the socket is not connected.[m
[32m+[m[32m         * @since v12.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        remoteAddress(): AddressInfo;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Broadcasts a datagram on the socket.[m
[32m+[m[32m         * For connectionless sockets, the destination `port` and `address` must be[m
[32m+[m[32m         * specified. Connected sockets, on the other hand, will use their associated[m
[32m+[m[32m         * remote endpoint, so the `port` and `address` arguments must not be set.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `msg` argument contains the message to be sent.[m
[32m+[m[32m         * Depending on its type, different behavior can apply. If `msg` is a `Buffer`,[m
[32m+[m[32m         * any `TypedArray` or a `DataView`,[m
[32m+[m[32m         * the `offset` and `length` specify the offset within the `Buffer` where the[m
[32m+[m[32m         * message begins and the number of bytes in the message, respectively.[m
[32m+[m[32m         * If `msg` is a `String`, then it is automatically converted to a `Buffer` with `'utf8'` encoding. With messages that[m
[32m+[m[32m         * contain multi-byte characters, `offset` and `length` will be calculated with[m
[32m+[m[32m         * respect to `byte length` and not the character position.[m
[32m+[m[32m         * If `msg` is an array, `offset` and `length` must not be specified.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `address` argument is a string. If the value of `address` is a host name,[m
[32m+[m[32m         * DNS will be used to resolve the address of the host. If `address` is not[m
[32m+[m[32m         * provided or otherwise nullish, `'127.0.0.1'` (for `udp4` sockets) or `'::1'` (for `udp6` sockets) will be used by default.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the socket has not been previously bound with a call to `bind`, the socket[m
[32m+[m[32m         * is assigned a random port number and is bound to the "all interfaces" address[m
[32m+[m[32m         * (`'0.0.0.0'` for `udp4` sockets, `'::0'` for `udp6` sockets.)[m
[32m+[m[32m         *[m
[32m+[m[32m         * An optional `callback` function may be specified to as a way of reporting[m
[32m+[m[32m         * DNS errors or for determining when it is safe to reuse the `buf` object.[m
[32m+[m[32m         * DNS lookups delay the time to send for at least one tick of the[m
[32m+[m[32m         * Node.js event loop.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The only way to know for sure that the datagram has been sent is by using a `callback`. If an error occurs and a `callback` is given, the error will be[m
[32m+[m[32m         * passed as the first argument to the `callback`. If a `callback` is not given,[m
[32m+[m[32m         * the error is emitted as an `'error'` event on the `socket` object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Offset and length are optional but both _must_ be set if either are used.[m
[32m+[m[32m         * They are supported only when the first argument is a `Buffer`, a `TypedArray`,[m
[32m+[m[32m         * or a `DataView`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method throws `ERR_SOCKET_BAD_PORT` if called on an unbound socket.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example of sending a UDP packet to a port on `localhost`;[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import dgram from 'node:dgram';[m
[32m+[m[32m         * import { Buffer } from 'node:buffer';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const message = Buffer.from('Some bytes');[m
[32m+[m[32m         * const client = dgram.createSocket('udp4');[m
[32m+[m[32m         * client.send(message, 41234, 'localhost', (err) => {[m
[32m+[m[32m         *   client.close();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example of sending a UDP packet composed of multiple buffers to a port on`127.0.0.1`;[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import dgram from 'node:dgram';[m
[32m+[m[32m         * import { Buffer } from 'node:buffer';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const buf1 = Buffer.from('Some ');[m
[32m+[m[32m         * const buf2 = Buffer.from('bytes');[m
[32m+[m[32m         * const client = dgram.createSocket('udp4');[m
[32m+[m[32m         * client.send([buf1, buf2], 41234, (err) => {[m
[32m+[m[32m         *   client.close();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Sending multiple buffers might be faster or slower depending on the[m
[32m+[m[32m         * application and operating system. Run benchmarks to[m
[32m+[m[32m         * determine the optimal strategy on a case-by-case basis. Generally speaking,[m
[32m+[m[32m         * however, sending multiple buffers is faster.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example of sending a UDP packet using a socket connected to a port on `localhost`:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import dgram from 'node:dgram';[m
[32m+[m[32m         * import { Buffer } from 'node:buffer';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const message = Buffer.from('Some bytes');[m
[32m+[m[32m         * const client = dgram.createSocket('udp4');[m
[32m+[m[32m         * client.connect(41234, 'localhost', (err) => {[m
[32m+[m[32m         *   client.send(message, (err) => {[m
[32m+[m[32m         *     client.close();[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.1.99[m
[32m+[m[32m         * @param msg Message to be sent.[m
[32m+[m[32m         * @param offset Offset in the buffer where the message starts.[m
[32m+[m[32m         * @param length Number of bytes in the message.[m
[32m+[m[32m         * @param port Destination port.[m
[32m+[m[32m         * @param address Destination host name or IP address.[m
[32m+[m[32m         * @param callback Called when the message has been sent.[m
[32m+[m[32m         */[m
[32m+[m[32m        send([m
[32m+[m[32m            msg: string | Uint8Array | readonly any[],[m
[32m+[m[32m            port?: number,[m
[32m+[m[32m            address?: string,[m
[32m+[m[32m            callback?: (error: Error | null, bytes: number) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        send([m
[32m+[m[32m            msg: string | Uint8Array | readonly any[],[m
[32m+[m[32m            port?: number,[m
[32m+[m[32m            callback?: (error: Error | null, bytes: number) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        send([m
[32m+[m[32m            msg: string | Uint8Array | readonly any[],[m
[32m+[m[32m            callback?: (error: Error | null, bytes: number) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        send([m
[32m+[m[32m            msg: string | Uint8Array,[m
[32m+[m[32m            offset: number,[m
[32m+[m[32m            length: number,[m
[32m+[m[32m            port?: number,[m
[32m+[m[32m            address?: string,[m
[32m+[m[32m            callback?: (error: Error | null, bytes: number) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        send([m
[32m+[m[32m            msg: string | Uint8Array,[m
[32m+[m[32m            offset: number,[m
[32m+[m[32m            length: number,[m
[32m+[m[32m            port?: number,[m
[32m+[m[32m            callback?: (error: Error | null, bytes: number) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        send([m
[32m+[m[32m            msg: string | Uint8Array,[m
[32m+[m[32m            offset: number,[m
[32m+[m[32m            length: number,[m
[32m+[m[32m            callback?: (error: Error | null, bytes: number) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets or clears the `SO_BROADCAST` socket option. When set to `true`, UDP[m
[32m+[m[32m         * packets may be sent to a local interface's broadcast address.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method throws `EBADF` if called on an unbound socket.[m
[32m+[m[32m         * @since v0.6.9[m
[32m+[m[32m         */[m
[32m+[m[32m        setBroadcast(flag: boolean): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * _All references to scope in this section are referring to [IPv6 Zone Indices](https://en.wikipedia.org/wiki/IPv6_address#Scoped_literal_IPv6_addresses), which are defined by [RFC[m
[32m+[m[32m         * 4007](https://tools.ietf.org/html/rfc4007). In string form, an IP_[m
[32m+[m[32m         * _with a scope index is written as `'IP%scope'` where scope is an interface name_[m
[32m+[m[32m         * _or interface number._[m
[32m+[m[32m         *[m
[32m+[m[32m         * Sets the default outgoing multicast interface of the socket to a chosen[m
[32m+[m[32m         * interface or back to system interface selection. The `multicastInterface` must[m
[32m+[m[32m         * be a valid string representation of an IP from the socket's family.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For IPv4 sockets, this should be the IP configured for the desired physical[m
[32m+[m[32m         * interface. All packets sent to multicast on the socket will be sent on the[m
[32m+[m[32m         * interface determined by the most recent successful use of this call.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For IPv6 sockets, `multicastInterface` should include a scope to indicate the[m
[32m+[m[32m         * interface as in the examples that follow. In IPv6, individual `send` calls can[m
[32m+[m[32m         * also use explicit scope in addresses, so only packets sent to a multicast[m
[32m+[m[32m         * address without specifying an explicit scope are affected by the most recent[m
[32m+[m[32m         * successful use of this call.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method throws `EBADF` if called on an unbound socket.[m
[32m+[m[32m         *[m
[32m+[m[32m         * #### Example: IPv6 outgoing multicast interface[m
[32m+[m[32m         *[m
[32m+[m[32m         * On most systems, where scope format uses the interface name:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const socket = dgram.createSocket('udp6');[m
[32m+[m[32m         *[m
[32m+[m[32m         * socket.bind(1234, () => {[m
[32m+[m[32m         *   socket.setMulticastInterface('::%eth1');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * On Windows, where scope format uses an interface number:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const socket = dgram.createSocket('udp6');[m
[32m+[m[32m         *[m
[32m+[m[32m         * socket.bind(1234, () => {[m
[32m+[m[32m         *   socket.setMulticastInterface('::%2');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * #### Example: IPv4 outgoing multicast interface[m
[32m+[m[32m         *[m
[32m+[m[32m         * All systems use an IP of the host on the desired physical interface:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const socket = dgram.createSocket('udp4');[m
[32m+[m[32m         *[m
[32m+[m[32m         * socket.bind(1234, () => {[m
[32m+[m[32m         *   socket.setMulticastInterface('10.0.0.2');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setMulticastInterface(multicastInterface: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets or clears the `IP_MULTICAST_LOOP` socket option. When set to `true`,[m
[32m+[m[32m         * multicast packets will also be received on the local interface.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method throws `EBADF` if called on an unbound socket.[m
[32m+[m[32m         * @since v0.3.8[m
[32m+[m[32m         */[m
[32m+[m[32m        setMulticastLoopback(flag: boolean): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the `IP_MULTICAST_TTL` socket option. While TTL generally stands for[m
[32m+[m[32m         * "Time to Live", in this context it specifies the number of IP hops that a[m
[32m+[m[32m         * packet is allowed to travel through, specifically for multicast traffic. Each[m
[32m+[m[32m         * router or gateway that forwards a packet decrements the TTL. If the TTL is[m
[32m+[m[32m         * decremented to 0 by a router, it will not be forwarded.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `ttl` argument may be between 0 and 255\. The default on most systems is `1`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method throws `EBADF` if called on an unbound socket.[m
[32m+[m[32m         * @since v0.3.8[m
[32m+[m[32m         */[m
[32m+[m[32m        setMulticastTTL(ttl: number): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the `SO_RCVBUF` socket option. Sets the maximum socket receive buffer[m
[32m+[m[32m         * in bytes.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method throws `ERR_SOCKET_BUFFER_SIZE` if called on an unbound socket.[m
[32m+[m[32m         * @since v8.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setRecvBufferSize(size: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the `SO_SNDBUF` socket option. Sets the maximum socket send buffer[m
[32m+[m[32m         * in bytes.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method throws `ERR_SOCKET_BUFFER_SIZE` if called on an unbound socket.[m
[32m+[m[32m         * @since v8.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setSendBufferSize(size: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the `IP_TTL` socket option. While TTL generally stands for "Time to Live",[m
[32m+[m[32m         * in this context it specifies the number of IP hops that a packet is allowed to[m
[32m+[m[32m         * travel through. Each router or gateway that forwards a packet decrements the[m
[32m+[m[32m         * TTL. If the TTL is decremented to 0 by a router, it will not be forwarded.[m
[32m+[m[32m         * Changing TTL values is typically done for network probes or when multicasting.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `ttl` argument may be between 1 and 255\. The default on most systems[m
[32m+[m[32m         * is 64.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method throws `EBADF` if called on an unbound socket.[m
[32m+[m[32m         * @since v0.1.101[m
[32m+[m[32m         */[m
[32m+[m[32m        setTTL(ttl: number): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * By default, binding a socket will cause it to block the Node.js process from[m
[32m+[m[32m         * exiting as long as the socket is open. The `socket.unref()` method can be used[m
[32m+[m[32m         * to exclude the socket from the reference counting that keeps the Node.js[m
[32m+[m[32m         * process active, allowing the process to exit even if the socket is still[m
[32m+[m[32m         * listening.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling `socket.unref()` multiple times will have no additional effect.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `socket.unref()` method returns a reference to the socket so calls can be[m
[32m+[m[32m         * chained.[m
[32m+[m[32m         * @since v0.9.1[m
[32m+[m[32m         */[m
[32m+[m[32m        unref(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Tells the kernel to join a source-specific multicast channel at the given `sourceAddress` and `groupAddress`, using the `multicastInterface` with the `IP_ADD_SOURCE_MEMBERSHIP` socket[m
[32m+[m[32m         * option. If the `multicastInterface` argument[m
[32m+[m[32m         * is not specified, the operating system will choose one interface and will add[m
[32m+[m[32m         * membership to it. To add membership to every available interface, call `socket.addSourceSpecificMembership()` multiple times, once per interface.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When called on an unbound socket, this method will implicitly bind to a random[m
[32m+[m[32m         * port, listening on all interfaces.[m
[32m+[m[32m         * @since v13.1.0, v12.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        addSourceSpecificMembership(sourceAddress: string, groupAddress: string, multicastInterface?: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Instructs the kernel to leave a source-specific multicast channel at the given `sourceAddress` and `groupAddress` using the `IP_DROP_SOURCE_MEMBERSHIP` socket option. This method is[m
[32m+[m[32m         * automatically called by the kernel when the[m
[32m+[m[32m         * socket is closed or the process terminates, so most apps will never have[m
[32m+[m[32m         * reason to call this.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `multicastInterface` is not specified, the operating system will attempt to[m
[32m+[m[32m         * drop membership on all valid interfaces.[m
[32m+[m[32m         * @since v13.1.0, v12.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        dropSourceSpecificMembership(sourceAddress: string, groupAddress: string, multicastInterface?: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         * 1. close[m
[32m+[m[32m         * 2. connect[m
[32m+[m[32m         * 3. error[m
[32m+[m[32m         * 4. listening[m
[32m+[m[32m         * 5. message[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "connect", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "message", listener: (msg: Buffer, rinfo: RemoteInfo) => void): this;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "connect"): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: "listening"): boolean;[m
[32m+[m[32m        emit(event: "message", msg: Buffer, rinfo: RemoteInfo): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "connect", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "listening", listener: () => void): this;[m
[32m+[m[32m        on(event: "message", listener: (msg: Buffer, rinfo: RemoteInfo) => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "connect", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "listening", listener: () => void): this;[m
[32m+[m[32m        once(event: "message", listener: (msg: Buffer, rinfo: RemoteInfo) => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "connect", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "message", listener: (msg: Buffer, rinfo: RemoteInfo) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "connect", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "message", listener: (msg: Buffer, rinfo: RemoteInfo) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calls `socket.close()` and returns a promise that fulfills when the socket has closed.[m
[32m+[m[32m         * @since v20.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        [Symbol.asyncDispose](): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:dgram" {[m
[32m+[m[32m    export * from "dgram";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/diagnostics_channel.d.ts b/node_modules/@types/node/diagnostics_channel.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..180acba[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/diagnostics_channel.d.ts[m
[36m@@ -0,0 +1,554 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:diagnostics_channel` module provides an API to create named channels[m
[32m+[m[32m * to report arbitrary message data for diagnostics purposes.[m
[32m+[m[32m *[m
[32m+[m[32m * It can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * It is intended that a module writer wanting to report diagnostics messages[m
[32m+[m[32m * will create one or many top-level channels to report messages through.[m
[32m+[m[32m * Channels may also be acquired at runtime but it is not encouraged[m
[32m+[m[32m * due to the additional overhead of doing so. Channels may be exported for[m
[32m+[m[32m * convenience, but as long as the name is known it can be acquired anywhere.[m
[32m+[m[32m *[m
[32m+[m[32m * If you intend for your module to produce diagnostics data for others to[m
[32m+[m[32m * consume it is recommended that you include documentation of what named[m
[32m+[m[32m * channels are used along with the shape of the message data. Channel names[m
[32m+[m[32m * should generally include the module name to avoid collisions with data from[m
[32m+[m[32m * other modules.[m
[32m+[m[32m * @since v15.1.0, v14.17.0[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/diagnostics_channel.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "diagnostics_channel" {[m
[32m+[m[32m    import { AsyncLocalStorage } from "node:async_hooks";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Check if there are active subscribers to the named channel. This is helpful if[m
[32m+[m[32m     * the message you want to send might be expensive to prepare.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This API is optional but helpful when trying to publish messages from very[m
[32m+[m[32m     * performance-sensitive code.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m     *[m
[32m+[m[32m     * if (diagnostics_channel.hasSubscribers('my-channel')) {[m
[32m+[m[32m     *   // There are subscribers, prepare and publish message[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v15.1.0, v14.17.0[m
[32m+[m[32m     * @param name The channel name[m
[32m+[m[32m     * @return If there are active subscribers[m
[32m+[m[32m     */[m
[32m+[m[32m    function hasSubscribers(name: string | symbol): boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This is the primary entry-point for anyone wanting to publish to a named[m
[32m+[m[32m     * channel. It produces a channel object which is optimized to reduce overhead at[m
[32m+[m[32m     * publish time as much as possible.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const channel = diagnostics_channel.channel('my-channel');[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v15.1.0, v14.17.0[m
[32m+[m[32m     * @param name The channel name[m
[32m+[m[32m     * @return The named channel object[m
[32m+[m[32m     */[m
[32m+[m[32m    function channel(name: string | symbol): Channel;[m
[32m+[m[32m    type ChannelListener = (message: unknown, name: string | symbol) => void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register a message handler to subscribe to this channel. This message handler[m
[32m+[m[32m     * will be run synchronously whenever a message is published to the channel. Any[m
[32m+[m[32m     * errors thrown in the message handler will trigger an `'uncaughtException'`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m     *[m
[32m+[m[32m     * diagnostics_channel.subscribe('my-channel', (message, name) => {[m
[32m+[m[32m     *   // Received data[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v18.7.0, v16.17.0[m
[32m+[m[32m     * @param name The channel name[m
[32m+[m[32m     * @param onMessage The handler to receive channel messages[m
[32m+[m[32m     */[m
[32m+[m[32m    function subscribe(name: string | symbol, onMessage: ChannelListener): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Remove a message handler previously registered to this channel with {@link subscribe}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m     *[m
[32m+[m[32m     * function onMessage(message, name) {[m
[32m+[m[32m     *   // Received data[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * diagnostics_channel.subscribe('my-channel', onMessage);[m
[32m+[m[32m     *[m
[32m+[m[32m     * diagnostics_channel.unsubscribe('my-channel', onMessage);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v18.7.0, v16.17.0[m
[32m+[m[32m     * @param name The channel name[m
[32m+[m[32m     * @param onMessage The previous subscribed handler to remove[m
[32m+[m[32m     * @return `true` if the handler was found, `false` otherwise.[m
[32m+[m[32m     */[m
[32m+[m[32m    function unsubscribe(name: string | symbol, onMessage: ChannelListener): boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a `TracingChannel` wrapper for the given `TracingChannel Channels`. If a name is given, the corresponding tracing[m
[32m+[m[32m     * channels will be created in the form of `tracing:${name}:${eventType}` where `eventType` corresponds to the types of `TracingChannel Channels`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const channelsByName = diagnostics_channel.tracingChannel('my-channel');[m
[32m+[m[32m     *[m
[32m+[m[32m     * // or...[m
[32m+[m[32m     *[m
[32m+[m[32m     * const channelsByCollection = diagnostics_channel.tracingChannel({[m
[32m+[m[32m     *   start: diagnostics_channel.channel('tracing:my-channel:start'),[m
[32m+[m[32m     *   end: diagnostics_channel.channel('tracing:my-channel:end'),[m
[32m+[m[32m     *   asyncStart: diagnostics_channel.channel('tracing:my-channel:asyncStart'),[m
[32m+[m[32m     *   asyncEnd: diagnostics_channel.channel('tracing:my-channel:asyncEnd'),[m
[32m+[m[32m     *   error: diagnostics_channel.channel('tracing:my-channel:error'),[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v19.9.0[m
[32m+[m[32m     * @experimental[m
[32m+[m[32m     * @param nameOrChannels Channel name or object containing all the `TracingChannel Channels`[m
[32m+[m[32m     * @return Collection of channels to trace with[m
[32m+[m[32m     */[m
[32m+[m[32m    function tracingChannel<[m
[32m+[m[32m        StoreType = unknown,[m
[32m+[m[32m        ContextType extends object = StoreType extends object ? StoreType : object,[m
[32m+[m[32m    >([m
[32m+[m[32m        nameOrChannels: string | TracingChannelCollection<StoreType, ContextType>,[m
[32m+[m[32m    ): TracingChannel<StoreType, ContextType>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The class `Channel` represents an individual named channel within the data[m
[32m+[m[32m     * pipeline. It is used to track subscribers and to publish messages when there[m
[32m+[m[32m     * are subscribers present. It exists as a separate object to avoid channel[m
[32m+[m[32m     * lookups at publish time, enabling very fast publish speeds and allowing[m
[32m+[m[32m     * for heavy use while incurring very minimal cost. Channels are created with {@link channel}, constructing a channel directly[m
[32m+[m[32m     * with `new Channel(name)` is not supported.[m
[32m+[m[32m     * @since v15.1.0, v14.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class Channel<StoreType = unknown, ContextType = StoreType> {[m
[32m+[m[32m        readonly name: string | symbol;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Check if there are active subscribers to this channel. This is helpful if[m
[32m+[m[32m         * the message you want to send might be expensive to prepare.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This API is optional but helpful when trying to publish messages from very[m
[32m+[m[32m         * performance-sensitive code.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channel = diagnostics_channel.channel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * if (channel.hasSubscribers) {[m
[32m+[m[32m         *   // There are subscribers, prepare and publish message[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.1.0, v14.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly hasSubscribers: boolean;[m
[32m+[m[32m        private constructor(name: string | symbol);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Publish a message to any subscribers to the channel. This will trigger[m
[32m+[m[32m         * message handlers synchronously so they will execute within the same context.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channel = diagnostics_channel.channel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * channel.publish({[m
[32m+[m[32m         *   some: 'message',[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.1.0, v14.17.0[m
[32m+[m[32m         * @param message The message to send to the channel subscribers[m
[32m+[m[32m         */[m
[32m+[m[32m        publish(message: unknown): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Register a message handler to subscribe to this channel. This message handler[m
[32m+[m[32m         * will be run synchronously whenever a message is published to the channel. Any[m
[32m+[m[32m         * errors thrown in the message handler will trigger an `'uncaughtException'`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channel = diagnostics_channel.channel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * channel.subscribe((message, name) => {[m
[32m+[m[32m         *   // Received data[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.1.0, v14.17.0[m
[32m+[m[32m         * @deprecated Since v18.7.0,v16.17.0 - Use {@link subscribe(name, onMessage)}[m
[32m+[m[32m         * @param onMessage The handler to receive channel messages[m
[32m+[m[32m         */[m
[32m+[m[32m        subscribe(onMessage: ChannelListener): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Remove a message handler previously registered to this channel with `channel.subscribe(onMessage)`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channel = diagnostics_channel.channel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * function onMessage(message, name) {[m
[32m+[m[32m         *   // Received data[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * channel.subscribe(onMessage);[m
[32m+[m[32m         *[m
[32m+[m[32m         * channel.unsubscribe(onMessage);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.1.0, v14.17.0[m
[32m+[m[32m         * @deprecated Since v18.7.0,v16.17.0 - Use {@link unsubscribe(name, onMessage)}[m
[32m+[m[32m         * @param onMessage The previous subscribed handler to remove[m
[32m+[m[32m         * @return `true` if the handler was found, `false` otherwise.[m
[32m+[m[32m         */[m
[32m+[m[32m        unsubscribe(onMessage: ChannelListener): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When `channel.runStores(context, ...)` is called, the given context data[m
[32m+[m[32m         * will be applied to any store bound to the channel. If the store has already been[m
[32m+[m[32m         * bound the previous `transform` function will be replaced with the new one.[m
[32m+[m[32m         * The `transform` function may be omitted to set the given context data as the[m
[32m+[m[32m         * context directly.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         * import { AsyncLocalStorage } from 'node:async_hooks';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const store = new AsyncLocalStorage();[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channel = diagnostics_channel.channel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * channel.bindStore(store, (data) => {[m
[32m+[m[32m         *   return { data };[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @param store The store to which to bind the context data[m
[32m+[m[32m         * @param transform Transform context data before setting the store context[m
[32m+[m[32m         */[m
[32m+[m[32m        bindStore(store: AsyncLocalStorage<StoreType>, transform?: (context: ContextType) => StoreType): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Remove a message handler previously registered to this channel with `channel.bindStore(store)`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         * import { AsyncLocalStorage } from 'node:async_hooks';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const store = new AsyncLocalStorage();[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channel = diagnostics_channel.channel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * channel.bindStore(store);[m
[32m+[m[32m         * channel.unbindStore(store);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @param store The store to unbind from the channel.[m
[32m+[m[32m         * @return `true` if the store was found, `false` otherwise.[m
[32m+[m[32m         */[m
[32m+[m[32m        unbindStore(store: any): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Applies the given data to any AsyncLocalStorage instances bound to the channel[m
[32m+[m[32m         * for the duration of the given function, then publishes to the channel within[m
[32m+[m[32m         * the scope of that data is applied to the stores.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If a transform function was given to `channel.bindStore(store)` it will be[m
[32m+[m[32m         * applied to transform the message data before it becomes the context value for[m
[32m+[m[32m         * the store. The prior storage context is accessible from within the transform[m
[32m+[m[32m         * function in cases where context linking is required.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The context applied to the store should be accessible in any async code which[m
[32m+[m[32m         * continues from execution which began during the given function, however[m
[32m+[m[32m         * there are some situations in which `context loss` may occur.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         * import { AsyncLocalStorage } from 'node:async_hooks';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const store = new AsyncLocalStorage();[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channel = diagnostics_channel.channel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * channel.bindStore(store, (message) => {[m
[32m+[m[32m         *   const parent = store.getStore();[m
[32m+[m[32m         *   return new Span(message, parent);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * channel.runStores({ some: 'message' }, () => {[m
[32m+[m[32m         *   store.getStore(); // Span({ some: 'message' })[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @param context Message to send to subscribers and bind to stores[m
[32m+[m[32m         * @param fn Handler to run within the entered storage context[m
[32m+[m[32m         * @param thisArg The receiver to be used for the function call.[m
[32m+[m[32m         * @param args Optional arguments to pass to the function.[m
[32m+[m[32m         */[m
[32m+[m[32m        runStores(): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface TracingChannelSubscribers<ContextType extends object> {[m
[32m+[m[32m        start: (message: ContextType) => void;[m
[32m+[m[32m        end: ([m
[32m+[m[32m            message: ContextType & {[m
[32m+[m[32m                error?: unknown;[m
[32m+[m[32m                result?: unknown;[m
[32m+[m[32m            },[m
[32m+[m[32m        ) => void;[m
[32m+[m[32m        asyncStart: ([m
[32m+[m[32m            message: ContextType & {[m
[32m+[m[32m                error?: unknown;[m
[32m+[m[32m                result?: unknown;[m
[32m+[m[32m            },[m
[32m+[m[32m        ) => void;[m
[32m+[m[32m        asyncEnd: ([m
[32m+[m[32m            message: ContextType & {[m
[32m+[m[32m                error?: unknown;[m
[32m+[m[32m                result?: unknown;[m
[32m+[m[32m            },[m
[32m+[m[32m        ) => void;[m
[32m+[m[32m        error: ([m
[32m+[m[32m            message: ContextType & {[m
[32m+[m[32m                error: unknown;[m
[32m+[m[32m            },[m
[32m+[m[32m        ) => void;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface TracingChannelCollection<StoreType = unknown, ContextType = StoreType> {[m
[32m+[m[32m        start: Channel<StoreType, ContextType>;[m
[32m+[m[32m        end: Channel<StoreType, ContextType>;[m
[32m+[m[32m        asyncStart: Channel<StoreType, ContextType>;[m
[32m+[m[32m        asyncEnd: Channel<StoreType, ContextType>;[m
[32m+[m[32m        error: Channel<StoreType, ContextType>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The class `TracingChannel` is a collection of `TracingChannel Channels` which[m
[32m+[m[32m     * together express a single traceable action. It is used to formalize and[m
[32m+[m[32m     * simplify the process of producing events for tracing application flow. {@link tracingChannel} is used to construct a `TracingChannel`. As with `Channel` it is recommended to create and reuse a[m
[32m+[m[32m     * single `TracingChannel` at the top-level of the file rather than creating them[m
[32m+[m[32m     * dynamically.[m
[32m+[m[32m     * @since v19.9.0[m
[32m+[m[32m     * @experimental[m
[32m+[m[32m     */[m
[32m+[m[32m    class TracingChannel<StoreType = unknown, ContextType extends object = {}> implements TracingChannelCollection {[m
[32m+[m[32m        start: Channel<StoreType, ContextType>;[m
[32m+[m[32m        end: Channel<StoreType, ContextType>;[m
[32m+[m[32m        asyncStart: Channel<StoreType, ContextType>;[m
[32m+[m[32m        asyncEnd: Channel<StoreType, ContextType>;[m
[32m+[m[32m        error: Channel<StoreType, ContextType>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Helper to subscribe a collection of functions to the corresponding channels.[m
[32m+[m[32m         * This is the same as calling `channel.subscribe(onMessage)` on each channel[m
[32m+[m[32m         * individually.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channels = diagnostics_channel.tracingChannel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * channels.subscribe({[m
[32m+[m[32m         *   start(message) {[m
[32m+[m[32m         *     // Handle start message[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   end(message) {[m
[32m+[m[32m         *     // Handle end message[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   asyncStart(message) {[m
[32m+[m[32m         *     // Handle asyncStart message[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   asyncEnd(message) {[m
[32m+[m[32m         *     // Handle asyncEnd message[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   error(message) {[m
[32m+[m[32m         *     // Handle error message[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @param subscribers Set of `TracingChannel Channels` subscribers[m
[32m+[m[32m         */[m
[32m+[m[32m        subscribe(subscribers: TracingChannelSubscribers<ContextType>): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Helper to unsubscribe a collection of functions from the corresponding channels.[m
[32m+[m[32m         * This is the same as calling `channel.unsubscribe(onMessage)` on each channel[m
[32m+[m[32m         * individually.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channels = diagnostics_channel.tracingChannel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * channels.unsubscribe({[m
[32m+[m[32m         *   start(message) {[m
[32m+[m[32m         *     // Handle start message[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   end(message) {[m
[32m+[m[32m         *     // Handle end message[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   asyncStart(message) {[m
[32m+[m[32m         *     // Handle asyncStart message[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   asyncEnd(message) {[m
[32m+[m[32m         *     // Handle asyncEnd message[m
[32m+[m[32m         *   },[m
[32m+[m[32m         *   error(message) {[m
[32m+[m[32m         *     // Handle error message[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @param subscribers Set of `TracingChannel Channels` subscribers[m
[32m+[m[32m         * @return `true` if all handlers were successfully unsubscribed, and `false` otherwise.[m
[32m+[m[32m         */[m
[32m+[m[32m        unsubscribe(subscribers: TracingChannelSubscribers<ContextType>): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Trace a synchronous function call. This will always produce a `start event` and `end event` around the execution and may produce an `error event` if the given function throws an error.[m
[32m+[m[32m         * This will run the given function using `channel.runStores(context, ...)` on the `start` channel which ensures all[m
[32m+[m[32m         * events should have any bound stores set to match this trace context.[m
[32m+[m[32m         *[m
[32m+[m[32m         * To ensure only correct trace graphs are formed, events will only be published if subscribers are present prior to starting the trace. Subscriptions[m
[32m+[m[32m         * which are added after the trace begins will not receive future events from that trace, only future traces will be seen.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channels = diagnostics_channel.tracingChannel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * channels.traceSync(() => {[m
[32m+[m[32m         *   // Do something[m
[32m+[m[32m         * }, {[m
[32m+[m[32m         *   some: 'thing',[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @param fn Function to wrap a trace around[m
[32m+[m[32m         * @param context Shared object to correlate events through[m
[32m+[m[32m         * @param thisArg The receiver to be used for the function call[m
[32m+[m[32m         * @param args Optional arguments to pass to the function[m
[32m+[m[32m         * @return The return value of the given function[m
[32m+[m[32m         */[m
[32m+[m[32m        traceSync<ThisArg = any, Args extends any[] = any[]>([m
[32m+[m[32m            fn: (this: ThisArg, ...args: Args) => any,[m
[32m+[m[32m            context?: ContextType,[m
[32m+[m[32m            thisArg?: ThisArg,[m
[32m+[m[32m            ...args: Args[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Trace a promise-returning function call. This will always produce a `start event` and `end event` around the synchronous portion of the[m
[32m+[m[32m         * function execution, and will produce an `asyncStart event` and `asyncEnd event` when a promise continuation is reached. It may also[m
[32m+[m[32m         * produce an `error event` if the given function throws an error or the[m
[32m+[m[32m         * returned promise rejects. This will run the given function using `channel.runStores(context, ...)` on the `start` channel which ensures all[m
[32m+[m[32m         * events should have any bound stores set to match this trace context.[m
[32m+[m[32m         *[m
[32m+[m[32m         * To ensure only correct trace graphs are formed, events will only be published if subscribers are present prior to starting the trace. Subscriptions[m
[32m+[m[32m         * which are added after the trace begins will not receive future events from that trace, only future traces will be seen.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channels = diagnostics_channel.tracingChannel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * channels.tracePromise(async () => {[m
[32m+[m[32m         *   // Do something[m
[32m+[m[32m         * }, {[m
[32m+[m[32m         *   some: 'thing',[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @param fn Promise-returning function to wrap a trace around[m
[32m+[m[32m         * @param context Shared object to correlate trace events through[m
[32m+[m[32m         * @param thisArg The receiver to be used for the function call[m
[32m+[m[32m         * @param args Optional arguments to pass to the function[m
[32m+[m[32m         * @return Chained from promise returned by the given function[m
[32m+[m[32m         */[m
[32m+[m[32m        tracePromise<ThisArg = any, Args extends any[] = any[]>([m
[32m+[m[32m            fn: (this: ThisArg, ...args: Args) => Promise<any>,[m
[32m+[m[32m            context?: ContextType,[m
[32m+[m[32m            thisArg?: ThisArg,[m
[32m+[m[32m            ...args: Args[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Trace a callback-receiving function call. This will always produce a `start event` and `end event` around the synchronous portion of the[m
[32m+[m[32m         * function execution, and will produce a `asyncStart event` and `asyncEnd event` around the callback execution. It may also produce an `error event` if the given function throws an error or[m
[32m+[m[32m         * the returned[m
[32m+[m[32m         * promise rejects. This will run the given function using `channel.runStores(context, ...)` on the `start` channel which ensures all[m
[32m+[m[32m         * events should have any bound stores set to match this trace context.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `position` will be -1 by default to indicate the final argument should[m
[32m+[m[32m         * be used as the callback.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channels = diagnostics_channel.tracingChannel('my-channel');[m
[32m+[m[32m         *[m
[32m+[m[32m         * channels.traceCallback((arg1, callback) => {[m
[32m+[m[32m         *   // Do something[m
[32m+[m[32m         *   callback(null, 'result');[m
[32m+[m[32m         * }, 1, {[m
[32m+[m[32m         *   some: 'thing',[m
[32m+[m[32m         * }, thisArg, arg1, callback);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The callback will also be run with `channel.runStores(context, ...)` which[m
[32m+[m[32m         * enables context loss recovery in some cases.[m
[32m+[m[32m         *[m
[32m+[m[32m         * To ensure only correct trace graphs are formed, events will only be published if subscribers are present prior to starting the trace. Subscriptions[m
[32m+[m[32m         * which are added after the trace begins will not receive future events from that trace, only future traces will be seen.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import diagnostics_channel from 'node:diagnostics_channel';[m
[32m+[m[32m         * import { AsyncLocalStorage } from 'node:async_hooks';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const channels = diagnostics_channel.tracingChannel('my-channel');[m
[32m+[m[32m         * const myStore = new AsyncLocalStorage();[m
[32m+[m[32m         *[m
[32m+[m[32m         * // The start channel sets the initial store data to something[m
[32m+[m[32m         * // and stores that store data value on the trace context object[m
[32m+[m[32m         * channels.start.bindStore(myStore, (data) => {[m
[32m+[m[32m         *   const span = new Span(data);[m
[32m+[m[32m         *   data.span = span;[m
[32m+[m[32m         *   return span;[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Then asyncStart can restore from that data it stored previously[m
[32m+[m[32m         * channels.asyncStart.bindStore(myStore, (data) => {[m
[32m+[m[32m         *   return data.span;[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @param fn callback using function to wrap a trace around[m
[32m+[m[32m         * @param position Zero-indexed argument position of expected callback[m
[32m+[m[32m         * @param context Shared object to correlate trace events through[m
[32m+[m[32m         * @param thisArg The receiver to be used for the function call[m
[32m+[m[32m         * @param args Optional arguments to pass to the function[m
[32m+[m[32m         * @return The return value of the given function[m
[32m+[m[32m         */[m
[32m+[m[32m        traceCallback<Fn extends (this: any, ...args: any) => any>([m
[32m+[m[32m            fn: Fn,[m
[32m+[m[32m            position: number | undefined,[m
[32m+[m[32m            context: ContextType | undefined,[m
[32m+[m[32m            thisArg: any,[m
[32m+[m[32m            ...args: Parameters<Fn>[m
[32m+[m[32m        ): void;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:diagnostics_channel" {[m
[32m+[m[32m    export * from "diagnostics_channel";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/dns.d.ts b/node_modules/@types/node/dns.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..5dfb5e2[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/dns.d.ts[m
[36m@@ -0,0 +1,865 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:dns` module enables name resolution. For example, use it to look up IP[m
[32m+[m[32m * addresses of host names.[m
[32m+[m[32m *[m
[32m+[m[32m * Although named for the [Domain Name System (DNS)](https://en.wikipedia.org/wiki/Domain_Name_System), it does not always use the[m
[32m+[m[32m * DNS protocol for lookups. {@link lookup} uses the operating system[m
[32m+[m[32m * facilities to perform name resolution. It may not need to perform any network[m
[32m+[m[32m * communication. To perform name resolution the way other applications on the same[m
[32m+[m[32m * system do, use {@link lookup}.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const dns = require('node:dns');[m
[32m+[m[32m *[m
[32m+[m[32m * dns.lookup('example.org', (err, address, family) => {[m
[32m+[m[32m *   console.log('address: %j family: IPv%s', address, family);[m
[32m+[m[32m * });[m
[32m+[m[32m * // address: "93.184.216.34" family: IPv4[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * All other functions in the `node:dns` module connect to an actual DNS server to[m
[32m+[m[32m * perform name resolution. They will always use the network to perform DNS[m
[32m+[m[32m * queries. These functions do not use the same set of configuration files used by {@link lookup} (e.g. `/etc/hosts`). Use these functions to always perform[m
[32m+[m[32m * DNS queries, bypassing other name-resolution facilities.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const dns = require('node:dns');[m
[32m+[m[32m *[m
[32m+[m[32m * dns.resolve4('archive.org', (err, addresses) => {[m
[32m+[m[32m *   if (err) throw err;[m
[32m+[m[32m *[m
[32m+[m[32m *   console.log(`addresses: ${JSON.stringify(addresses)}`);[m
[32m+[m[32m *[m
[32m+[m[32m *   addresses.forEach((a) => {[m
[32m+[m[32m *     dns.reverse(a, (err, hostnames) => {[m
[32m+[m[32m *       if (err) {[m
[32m+[m[32m *         throw err;[m
[32m+[m[32m *       }[m
[32m+[m[32m *       console.log(`reverse for ${a}: ${JSON.stringify(hostnames)}`);[m
[32m+[m[32m *     });[m
[32m+[m[32m *   });[m
[32m+[m[32m * });[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * See the [Implementation considerations section](https://nodejs.org/docs/latest-v22.x/api/dns.html#implementation-considerations) for more information.[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/dns.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "dns" {[m
[32m+[m[32m    import * as dnsPromises from "node:dns/promises";[m
[32m+[m[32m    // Supported getaddrinfo flags.[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Limits returned address types to the types of non-loopback addresses configured on the system. For example, IPv4 addresses are[m
[32m+[m[32m     * only returned if the current system has at least one IPv4 address configured.[m
[32m+[m[32m     */[m
[32m+[m[32m    export const ADDRCONFIG: number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If the IPv6 family was specified, but no IPv6 addresses were found, then return IPv4 mapped IPv6 addresses. It is not supported[m
[32m+[m[32m     * on some operating systems (e.g. FreeBSD 10.1).[m
[32m+[m[32m     */[m
[32m+[m[32m    export const V4MAPPED: number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If `dns.V4MAPPED` is specified, return resolved IPv6 addresses as[m
[32m+[m[32m     * well as IPv4 mapped IPv6 addresses.[m
[32m+[m[32m     */[m
[32m+[m[32m    export const ALL: number;[m
[32m+[m[32m    export interface LookupOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The record family. Must be `4`, `6`, or `0`. For backward compatibility reasons, `'IPv4'` and `'IPv6'` are interpreted[m
[32m+[m[32m         * as `4` and `6` respectively. The value 0 indicates that either an IPv4 or IPv6 address is returned. If the value `0` is used[m
[32m+[m[32m         * with `{ all: true } (see below)`, both IPv4 and IPv6 addresses are returned.[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         */[m
[32m+[m[32m        family?: number | "IPv4" | "IPv6" | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * One or more [supported `getaddrinfo`](https://nodejs.org/docs/latest-v22.x/api/dns.html#supported-getaddrinfo-flags) flags. Multiple flags may be[m
[32m+[m[32m         * passed by bitwise `OR`ing their values.[m
[32m+[m[32m         */[m
[32m+[m[32m        hints?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When `true`, the callback returns all resolved addresses in an array. Otherwise, returns a single address.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        all?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When `verbatim`, the resolved addresses are return unsorted. When `ipv4first`, the resolved addresses are sorted[m
[32m+[m[32m         * by placing IPv4 addresses before IPv6 addresses. When `ipv6first`, the resolved addresses are sorted by placing IPv6[m
[32m+[m[32m         * addresses before IPv4 addresses. Default value is configurable using[m
[32m+[m[32m         * {@link setDefaultResultOrder} or [`--dns-result-order`](https://nodejs.org/docs/latest-v22.x/api/cli.html#--dns-result-orderorder).[m
[32m+[m[32m         * @default `verbatim` (addresses are not reordered)[m
[32m+[m[32m         * @since v22.1.0[m
[32m+[m[32m         */[m
[32m+[m[32m        order?: "ipv4first" | "ipv6first" | "verbatim" | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When `true`, the callback receives IPv4 and IPv6 addresses in the order the DNS resolver returned them. When `false`, IPv4[m
[32m+[m[32m         * addresses are placed before IPv6 addresses. This option will be deprecated in favor of `order`. When both are specified,[m
[32m+[m[32m         * `order` has higher precedence. New code should only use `order`. Default value is configurable using {@link setDefaultResultOrder}[m
[32m+[m[32m         * @default true (addresses are not reordered)[m
[32m+[m[32m         * @deprecated Please use `order` option[m
[32m+[m[32m         */[m
[32m+[m[32m        verbatim?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface LookupOneOptions extends LookupOptions {[m
[32m+[m[32m        all?: false | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface LookupAllOptions extends LookupOptions {[m
[32m+[m[32m        all: true;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface LookupAddress {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A string representation of an IPv4 or IPv6 address.[m
[32m+[m[32m         */[m
[32m+[m[32m        address: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `4` or `6`, denoting the family of `address`, or `0` if the address is not an IPv4 or IPv6 address. `0` is a likely indicator of a[m
[32m+[m[32m         * bug in the name resolution service used by the operating system.[m
[32m+[m[32m         */[m
[32m+[m[32m        family: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Resolves a host name (e.g. `'nodejs.org'`) into the first found A (IPv4) or[m
[32m+[m[32m     * AAAA (IPv6) record. All `option` properties are optional. If `options` is an[m
[32m+[m[32m     * integer, then it must be `4` or `6` – if `options` is `0` or not provided, then[m
[32m+[m[32m     * IPv4 and IPv6 addresses are both returned if found.[m
[32m+[m[32m     *[m
[32m+[m[32m     * With the `all` option set to `true`, the arguments for `callback` change to `(err, addresses)`, with `addresses` being an array of objects with the[m
[32m+[m[32m     * properties `address` and `family`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On error, `err` is an `Error` object, where `err.code` is the error code.[m
[32m+[m[32m     * Keep in mind that `err.code` will be set to `'ENOTFOUND'` not only when[m
[32m+[m[32m     * the host name does not exist but also when the lookup fails in other ways[m
[32m+[m[32m     * such as no available file descriptors.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `dns.lookup()` does not necessarily have anything to do with the DNS protocol.[m
[32m+[m[32m     * The implementation uses an operating system facility that can associate names[m
[32m+[m[32m     * with addresses and vice versa. This implementation can have subtle but[m
[32m+[m[32m     * important consequences on the behavior of any Node.js program. Please take some[m
[32m+[m[32m     * time to consult the [Implementation considerations section](https://nodejs.org/docs/latest-v22.x/api/dns.html#implementation-considerations)[m
[32m+[m[32m     * before using `dns.lookup()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example usage:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const dns = require('node:dns');[m
[32m+[m[32m     * const options = {[m
[32m+[m[32m     *   family: 6,[m
[32m+[m[32m     *   hints: dns.ADDRCONFIG | dns.V4MAPPED,[m
[32m+[m[32m     * };[m
[32m+[m[32m     * dns.lookup('example.com', options, (err, address, family) =>[m
[32m+[m[32m     *   console.log('address: %j family: IPv%s', address, family));[m
[32m+[m[32m     * // address: "2606:2800:220:1:248:1893:25c8:1946" family: IPv6[m
[32m+[m[32m     *[m
[32m+[m[32m     * // When options.all is true, the result will be an Array.[m
[32m+[m[32m     * options.all = true;[m
[32m+[m[32m     * dns.lookup('example.com', options, (err, addresses) =>[m
[32m+[m[32m     *   console.log('addresses: %j', addresses));[m
[32m+[m[32m     * // addresses: [{"address":"2606:2800:220:1:248:1893:25c8:1946","family":6}][m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If this method is invoked as its [util.promisify()](https://nodejs.org/docs/latest-v22.x/api/util.html#utilpromisifyoriginal) ed[m
[32m+[m[32m     * version, and `all` is not set to `true`, it returns a `Promise` for an `Object` with `address` and `family` properties.[m
[32m+[m[32m     * @since v0.1.90[m
[32m+[m[32m     */[m
[32m+[m[32m    export function lookup([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        family: number,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, address: string, family: number) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function lookup([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        options: LookupOneOptions,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, address: string, family: number) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function lookup([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        options: LookupAllOptions,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: LookupAddress[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function lookup([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        options: LookupOptions,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, address: string | LookupAddress[], family: number) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function lookup([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, address: string, family: number) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace lookup {[m
[32m+[m[32m        function __promisify__(hostname: string, options: LookupAllOptions): Promise<LookupAddress[]>;[m
[32m+[m[32m        function __promisify__(hostname: string, options?: LookupOneOptions | number): Promise<LookupAddress>;[m
[32m+[m[32m        function __promisify__(hostname: string, options: LookupOptions): Promise<LookupAddress | LookupAddress[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Resolves the given `address` and `port` into a host name and service using[m
[32m+[m[32m     * the operating system's underlying `getnameinfo` implementation.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `address` is not a valid IP address, a `TypeError` will be thrown.[m
[32m+[m[32m     * The `port` will be coerced to a number. If it is not a legal port, a `TypeError` will be thrown.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On an error, `err` is an [`Error`](https://nodejs.org/docs/latest-v22.x/api/errors.html#class-error) object,[m
[32m+[m[32m     * where `err.code` is the error code.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const dns = require('node:dns');[m
[32m+[m[32m     * dns.lookupService('127.0.0.1', 22, (err, hostname, service) => {[m
[32m+[m[32m     *   console.log(hostname, service);[m
[32m+[m[32m     *   // Prints: localhost ssh[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If this method is invoked as its [util.promisify()](https://nodejs.org/docs/latest-v22.x/api/util.html#utilpromisifyoriginal) ed[m
[32m+[m[32m     * version, it returns a `Promise` for an `Object` with `hostname` and `service` properties.[m
[32m+[m[32m     * @since v0.11.14[m
[32m+[m[32m     */[m
[32m+[m[32m    export function lookupService([m
[32m+[m[32m        address: string,[m
[32m+[m[32m        port: number,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, hostname: string, service: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace lookupService {[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            address: string,[m
[32m+[m[32m            port: number,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            hostname: string;[m
[32m+[m[32m            service: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ResolveOptions {[m
[32m+[m[32m        ttl: boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ResolveWithTtlOptions extends ResolveOptions {[m
[32m+[m[32m        ttl: true;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface RecordWithTtl {[m
[32m+[m[32m        address: string;[m
[32m+[m[32m        ttl: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /** @deprecated Use `AnyARecord` or `AnyAaaaRecord` instead. */[m
[32m+[m[32m    export type AnyRecordWithTtl = AnyARecord | AnyAaaaRecord;[m
[32m+[m[32m    export interface AnyARecord extends RecordWithTtl {[m
[32m+[m[32m        type: "A";[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface AnyAaaaRecord extends RecordWithTtl {[m
[32m+[m[32m        type: "AAAA";[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface CaaRecord {[m
[32m+[m[32m        critical: number;[m
[32m+[m[32m        issue?: string | undefined;[m
[32m+[m[32m        issuewild?: string | undefined;[m
[32m+[m[32m        iodef?: string | undefined;[m
[32m+[m[32m        contactemail?: string | undefined;[m
[32m+[m[32m        contactphone?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface MxRecord {[m
[32m+[m[32m        priority: number;[m
[32m+[m[32m        exchange: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface AnyMxRecord extends MxRecord {[m
[32m+[m[32m        type: "MX";[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface NaptrRecord {[m
[32m+[m[32m        flags: string;[m
[32m+[m[32m        service: string;[m
[32m+[m[32m        regexp: string;[m
[32m+[m[32m        replacement: string;[m
[32m+[m[32m        order: number;[m
[32m+[m[32m        preference: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface AnyNaptrRecord extends NaptrRecord {[m
[32m+[m[32m        type: "NAPTR";[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface SoaRecord {[m
[32m+[m[32m        nsname: string;[m
[32m+[m[32m        hostmaster: string;[m
[32m+[m[32m        serial: number;[m
[32m+[m[32m        refresh: number;[m
[32m+[m[32m        retry: number;[m
[32m+[m[32m        expire: number;[m
[32m+[m[32m        minttl: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface AnySoaRecord extends SoaRecord {[m
[32m+[m[32m        type: "SOA";[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface SrvRecord {[m
[32m+[m[32m        priority: number;[m
[32m+[m[32m        weight: number;[m
[32m+[m[32m        port: number;[m
[32m+[m[32m        name: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface AnySrvRecord extends SrvRecord {[m
[32m+[m[32m        type: "SRV";[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface AnyTxtRecord {[m
[32m+[m[32m        type: "TXT";[m
[32m+[m[32m        entries: string[];[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface AnyNsRecord {[m
[32m+[m[32m        type: "NS";[m
[32m+[m[32m        value: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface AnyPtrRecord {[m
[32m+[m[32m        type: "PTR";[m
[32m+[m[32m        value: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface AnyCnameRecord {[m
[32m+[m[32m        type: "CNAME";[m
[32m+[m[32m        value: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    export type AnyRecord =[m
[32m+[m[32m        | AnyARecord[m
[32m+[m[32m        | AnyAaaaRecord[m
[32m+[m[32m        | AnyCnameRecord[m
[32m+[m[32m        | AnyMxRecord[m
[32m+[m[32m        | AnyNaptrRecord[m
[32m+[m[32m        | AnyNsRecord[m
[32m+[m[32m        | AnyPtrRecord[m
[32m+[m[32m        | AnySoaRecord[m
[32m+[m[32m        | AnySrvRecord[m
[32m+[m[32m        | AnyTxtRecord;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve a host name (e.g. `'nodejs.org'`) into an array[m
[32m+[m[32m     * of the resource records. The `callback` function has arguments `(err, records)`. When successful, `records` will be an array of resource[m
[32m+[m[32m     * records. The type and structure of individual results varies based on `rrtype`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * <omitted>[m
[32m+[m[32m     *[m
[32m+[m[32m     * On error, `err` is an [`Error`](https://nodejs.org/docs/latest-v22.x/api/errors.html#class-error) object,[m
[32m+[m[32m     * where `err.code` is one of the `DNS error codes`.[m
[32m+[m[32m     * @since v0.1.27[m
[32m+[m[32m     * @param hostname Host name to resolve.[m
[32m+[m[32m     * @param [rrtype='A'] Resource record type.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "A",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "AAAA",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "ANY",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: AnyRecord[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "CNAME",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "MX",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: MxRecord[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "NAPTR",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: NaptrRecord[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "NS",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "PTR",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "SOA",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: SoaRecord) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "SRV",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: SrvRecord[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: "TXT",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[][]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: string,[m
[32m+[m[32m        callback: ([m
[32m+[m[32m            err: NodeJS.ErrnoException | null,[m
[32m+[m[32m            addresses: string[] | MxRecord[] | NaptrRecord[] | SoaRecord | SrvRecord[] | string[][] | AnyRecord[],[m
[32m+[m[32m        ) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolve {[m
[32m+[m[32m        function __promisify__(hostname: string, rrtype?: "A" | "AAAA" | "CNAME" | "NS" | "PTR"): Promise<string[]>;[m
[32m+[m[32m        function __promisify__(hostname: string, rrtype: "ANY"): Promise<AnyRecord[]>;[m
[32m+[m[32m        function __promisify__(hostname: string, rrtype: "MX"): Promise<MxRecord[]>;[m
[32m+[m[32m        function __promisify__(hostname: string, rrtype: "NAPTR"): Promise<NaptrRecord[]>;[m
[32m+[m[32m        function __promisify__(hostname: string, rrtype: "SOA"): Promise<SoaRecord>;[m
[32m+[m[32m        function __promisify__(hostname: string, rrtype: "SRV"): Promise<SrvRecord[]>;[m
[32m+[m[32m        function __promisify__(hostname: string, rrtype: "TXT"): Promise<string[][]>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            hostname: string,[m
[32m+[m[32m            rrtype: string,[m
[32m+[m[32m        ): Promise<string[] | MxRecord[] | NaptrRecord[] | SoaRecord | SrvRecord[] | string[][] | AnyRecord[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve a IPv4 addresses (`A` records) for the `hostname`. The `addresses` argument passed to the `callback` function[m
[32m+[m[32m     * will contain an array of IPv4 addresses (e.g.`['74.125.79.104', '74.125.79.105', '74.125.79.106']`).[m
[32m+[m[32m     * @since v0.1.16[m
[32m+[m[32m     * @param hostname Host name to resolve.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolve4([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve4([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        options: ResolveWithTtlOptions,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: RecordWithTtl[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve4([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        options: ResolveOptions,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[] | RecordWithTtl[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolve4 {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<string[]>;[m
[32m+[m[32m        function __promisify__(hostname: string, options: ResolveWithTtlOptions): Promise<RecordWithTtl[]>;[m
[32m+[m[32m        function __promisify__(hostname: string, options?: ResolveOptions): Promise<string[] | RecordWithTtl[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve IPv6 addresses (`AAAA` records) for the `hostname`. The `addresses` argument passed to the `callback` function[m
[32m+[m[32m     * will contain an array of IPv6 addresses.[m
[32m+[m[32m     * @since v0.1.16[m
[32m+[m[32m     * @param hostname Host name to resolve.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolve6([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve6([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        options: ResolveWithTtlOptions,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: RecordWithTtl[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function resolve6([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        options: ResolveOptions,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[] | RecordWithTtl[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolve6 {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<string[]>;[m
[32m+[m[32m        function __promisify__(hostname: string, options: ResolveWithTtlOptions): Promise<RecordWithTtl[]>;[m
[32m+[m[32m        function __promisify__(hostname: string, options?: ResolveOptions): Promise<string[] | RecordWithTtl[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve `CNAME` records for the `hostname`. The `addresses` argument passed to the `callback` function[m
[32m+[m[32m     * will contain an array of canonical name records available for the `hostname` (e.g. `['bar.example.com']`).[m
[32m+[m[32m     * @since v0.3.2[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolveCname([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolveCname {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<string[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve `CAA` records for the `hostname`. The `addresses` argument passed to the `callback` function[m
[32m+[m[32m     * will contain an array of certification authority authorization records[m
[32m+[m[32m     * available for the `hostname` (e.g. `[{critical: 0, iodef: 'mailto:pki@example.com'}, {critical: 128, issue: 'pki.example.com'}]`).[m
[32m+[m[32m     * @since v15.0.0, v14.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolveCaa([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, records: CaaRecord[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolveCaa {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<CaaRecord[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve mail exchange records (`MX` records) for the `hostname`. The `addresses` argument passed to the `callback` function will[m
[32m+[m[32m     * contain an array of objects containing both a `priority` and `exchange` property (e.g. `[{priority: 10, exchange: 'mx.example.com'}, ...]`).[m
[32m+[m[32m     * @since v0.1.27[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolveMx([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: MxRecord[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolveMx {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<MxRecord[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve regular expression-based records (`NAPTR` records) for the `hostname`. The `addresses` argument passed to the `callback` function will contain an array of[m
[32m+[m[32m     * objects with the following properties:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `flags`[m
[32m+[m[32m     * * `service`[m
[32m+[m[32m     * * `regexp`[m
[32m+[m[32m     * * `replacement`[m
[32m+[m[32m     * * `order`[m
[32m+[m[32m     * * `preference`[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * {[m
[32m+[m[32m     *   flags: 's',[m
[32m+[m[32m     *   service: 'SIP+D2U',[m
[32m+[m[32m     *   regexp: '',[m
[32m+[m[32m     *   replacement: '_sip._udp.example.com',[m
[32m+[m[32m     *   order: 30,[m
[32m+[m[32m     *   preference: 100[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.9.12[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolveNaptr([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: NaptrRecord[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolveNaptr {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<NaptrRecord[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve name server records (`NS` records) for the `hostname`. The `addresses` argument passed to the `callback` function will[m
[32m+[m[32m     * contain an array of name server records available for `hostname` (e.g. `['ns1.example.com', 'ns2.example.com']`).[m
[32m+[m[32m     * @since v0.1.90[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolveNs([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolveNs {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<string[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve pointer records (`PTR` records) for the `hostname`. The `addresses` argument passed to the `callback` function will[m
[32m+[m[32m     * be an array of strings containing the reply records.[m
[32m+[m[32m     * @since v6.0.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolvePtr([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolvePtr {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<string[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve a start of authority record (`SOA` record) for[m
[32m+[m[32m     * the `hostname`. The `address` argument passed to the `callback` function will[m
[32m+[m[32m     * be an object with the following properties:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `nsname`[m
[32m+[m[32m     * * `hostmaster`[m
[32m+[m[32m     * * `serial`[m
[32m+[m[32m     * * `refresh`[m
[32m+[m[32m     * * `retry`[m
[32m+[m[32m     * * `expire`[m
[32m+[m[32m     * * `minttl`[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * {[m
[32m+[m[32m     *   nsname: 'ns.example.com',[m
[32m+[m[32m     *   hostmaster: 'root.example.com',[m
[32m+[m[32m     *   serial: 2013101809,[m
[32m+[m[32m     *   refresh: 10000,[m
[32m+[m[32m     *   retry: 2400,[m
[32m+[m[32m     *   expire: 604800,[m
[32m+[m[32m     *   minttl: 3600[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.11.10[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolveSoa([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, address: SoaRecord) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolveSoa {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<SoaRecord>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve service records (`SRV` records) for the `hostname`. The `addresses` argument passed to the `callback` function will[m
[32m+[m[32m     * be an array of objects with the following properties:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `priority`[m
[32m+[m[32m     * * `weight`[m
[32m+[m[32m     * * `port`[m
[32m+[m[32m     * * `name`[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * {[m
[32m+[m[32m     *   priority: 10,[m
[32m+[m[32m     *   weight: 5,[m
[32m+[m[32m     *   port: 21223,[m
[32m+[m[32m     *   name: 'service.example.com'[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.27[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolveSrv([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: SrvRecord[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolveSrv {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<SrvRecord[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve text queries (`TXT` records) for the `hostname`. The `records` argument passed to the `callback` function is a[m
[32m+[m[32m     * two-dimensional array of the text records available for `hostname` (e.g.`[ ['v=spf1 ip4:0.0.0.0 ', '~all' ] ]`). Each sub-array contains TXT chunks of[m
[32m+[m[32m     * one record. Depending on the use case, these could be either joined together or[m
[32m+[m[32m     * treated separately.[m
[32m+[m[32m     * @since v0.1.27[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolveTxt([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: string[][]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolveTxt {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<string[][]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve all records (also known as `ANY` or `*` query).[m
[32m+[m[32m     * The `ret` argument passed to the `callback` function will be an array containing[m
[32m+[m[32m     * various types of records. Each object has a property `type` that indicates the[m
[32m+[m[32m     * type of the current record. And depending on the `type`, additional properties[m
[32m+[m[32m     * will be present on the object:[m
[32m+[m[32m     *[m
[32m+[m[32m     * <omitted>[m
[32m+[m[32m     *[m
[32m+[m[32m     * Here is an example of the `ret` object passed to the callback:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * [ { type: 'A', address: '127.0.0.1', ttl: 299 },[m
[32m+[m[32m     *   { type: 'CNAME', value: 'example.com' },[m
[32m+[m[32m     *   { type: 'MX', exchange: 'alt4.aspmx.l.example.com', priority: 50 },[m
[32m+[m[32m     *   { type: 'NS', value: 'ns1.example.com' },[m
[32m+[m[32m     *   { type: 'TXT', entries: [ 'v=spf1 include:_spf.example.com ~all' ] },[m
[32m+[m[32m     *   { type: 'SOA',[m
[32m+[m[32m     *     nsname: 'ns1.example.com',[m
[32m+[m[32m     *     hostmaster: 'admin.example.com',[m
[32m+[m[32m     *     serial: 156696742,[m
[32m+[m[32m     *     refresh: 900,[m
[32m+[m[32m     *     retry: 900,[m
[32m+[m[32m     *     expire: 1800,[m
[32m+[m[32m     *     minttl: 60 } ][m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * DNS server operators may choose not to respond to `ANY` queries. It may be better to call individual methods like {@link resolve4}, {@link resolveMx}, and so on. For more details, see[m
[32m+[m[32m     * [RFC 8482](https://tools.ietf.org/html/rfc8482).[m
[32m+[m[32m     */[m
[32m+[m[32m    export function resolveAny([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, addresses: AnyRecord[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace resolveAny {[m
[32m+[m[32m        function __promisify__(hostname: string): Promise<AnyRecord[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Performs a reverse DNS query that resolves an IPv4 or IPv6 address to an[m
[32m+[m[32m     * array of host names.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On error, `err` is an [`Error`](https://nodejs.org/docs/latest-v22.x/api/errors.html#class-error) object, where `err.code` is[m
[32m+[m[32m     * one of the [DNS error codes](https://nodejs.org/docs/latest-v22.x/api/dns.html#error-codes).[m
[32m+[m[32m     * @since v0.1.16[m
[32m+[m[32m     */[m
[32m+[m[32m    export function reverse([m
[32m+[m[32m        ip: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, hostnames: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get the default value for `order` in {@link lookup} and [`dnsPromises.lookup()`](https://nodejs.org/docs/latest-v22.x/api/dns.html#dnspromiseslookuphostname-options).[m
[32m+[m[32m     * The value could be:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `ipv4first`: for `order` defaulting to `ipv4first`.[m
[32m+[m[32m     * * `ipv6first`: for `order` defaulting to `ipv6first`.[m
[32m+[m[32m     * * `verbatim`: for `order` defaulting to `verbatim`.[m
[32m+[m[32m     * @since v18.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function getDefaultResultOrder(): "ipv4first" | "ipv6first" | "verbatim";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sets the IP address and port of servers to be used when performing DNS[m
[32m+[m[32m     * resolution. The `servers` argument is an array of [RFC 5952](https://tools.ietf.org/html/rfc5952#section-6) formatted[m
[32m+[m[32m     * addresses. If the port is the IANA default DNS port (53) it can be omitted.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * dns.setServers([[m
[32m+[m[32m     *   '4.4.4.4',[m
[32m+[m[32m     *   '[2001:4860:4860::8888]',[m
[32m+[m[32m     *   '4.4.4.4:1053',[m
[32m+[m[32m     *   '[2001:4860:4860::8888]:1053',[m
[32m+[m[32m     * ]);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * An error will be thrown if an invalid address is provided.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `dns.setServers()` method must not be called while a DNS query is in[m
[32m+[m[32m     * progress.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The {@link setServers} method affects only {@link resolve}, `dns.resolve*()` and {@link reverse} (and specifically _not_ {@link lookup}).[m
[32m+[m[32m     *[m
[32m+[m[32m     * This method works much like [resolve.conf](https://man7.org/linux/man-pages/man5/resolv.conf.5.html).[m
[32m+[m[32m     * That is, if attempting to resolve with the first server provided results in a `NOTFOUND` error, the `resolve()` method will _not_ attempt to resolve with[m
[32m+[m[32m     * subsequent servers provided. Fallback DNS servers will only be used if the[m
[32m+[m[32m     * earlier ones time out or result in some other error.[m
[32m+[m[32m     * @since v0.11.3[m
[32m+[m[32m     * @param servers array of [RFC 5952](https://datatracker.ietf.org/doc/html/rfc5952#section-6) formatted addresses[m
[32m+[m[32m     */[m
[32m+[m[32m    export function setServers(servers: readonly string[]): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns an array of IP address strings, formatted according to [RFC 5952](https://tools.ietf.org/html/rfc5952#section-6),[m
[32m+[m[32m     * that are currently configured for DNS resolution. A string will include a port[m
[32m+[m[32m     * section if a custom port is used.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * [[m
[32m+[m[32m     *   '4.4.4.4',[m
[32m+[m[32m     *   '2001:4860:4860::8888',[m
[32m+[m[32m     *   '4.4.4.4:1053',[m
[32m+[m[32m     *   '[2001:4860:4860::8888]:1053',[m
[32m+[m[32m     * ][m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.11.3[m
[32m+[m[32m     */[m
[32m+[m[32m    export function getServers(): string[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Set the default value of `order` in {@link lookup} and [`dnsPromises.lookup()`](https://nodejs.org/docs/latest-v22.x/api/dns.html#dnspromiseslookuphostname-options).[m
[32m+[m[32m     * The value could be:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `ipv4first`: sets default `order` to `ipv4first`.[m
[32m+[m[32m     * * `ipv6first`: sets default `order` to `ipv6first`.[m
[32m+[m[32m     * * `verbatim`: sets default `order` to `verbatim`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The default is `verbatim` and {@link setDefaultResultOrder} have higher[m
[32m+[m[32m     * priority than [`--dns-result-order`](https://nodejs.org/docs/latest-v22.x/api/cli.html#--dns-result-orderorder). When using[m
[32m+[m[32m     * [worker threads](https://nodejs.org/docs/latest-v22.x/api/worker_threads.html), {@link setDefaultResultOrder} from the main[m
[32m+[m[32m     * thread won't affect the default dns orders in workers.[m
[32m+[m[32m     * @since v16.4.0, v14.18.0[m
[32m+[m[32m     * @param order must be `'ipv4first'`, `'ipv6first'` or `'verbatim'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function setDefaultResultOrder(order: "ipv4first" | "ipv6first" | "verbatim"): void;[m
[32m+[m[32m    // Error codes[m
[32m+[m[32m    export const NODATA: "ENODATA";[m
[32m+[m[32m    export const FORMERR: "EFORMERR";[m
[32m+[m[32m    export const SERVFAIL: "ESERVFAIL";[m
[32m+[m[32m    export const NOTFOUND: "ENOTFOUND";[m
[32m+[m[32m    export const NOTIMP: "ENOTIMP";[m
[32m+[m[32m    export const REFUSED: "EREFUSED";[m
[32m+[m[32m    export const BADQUERY: "EBADQUERY";[m
[32m+[m[32m    export const BADNAME: "EBADNAME";[m
[32m+[m[32m    export const BADFAMILY: "EBADFAMILY";[m
[32m+[m[32m    export const BADRESP: "EBADRESP";[m
[32m+[m[32m    export const CONNREFUSED: "ECONNREFUSED";[m
[32m+[m[32m    export const TIMEOUT: "ETIMEOUT";[m
[32m+[m[32m    export const EOF: "EOF";[m
[32m+[m[32m    export const FILE: "EFILE";[m
[32m+[m[32m    export const NOMEM: "ENOMEM";[m
[32m+[m[32m    export const DESTRUCTION: "EDESTRUCTION";[m
[32m+[m[32m    export const BADSTR: "EBADSTR";[m
[32m+[m[32m    export const BADFLAGS: "EBADFLAGS";[m
[32m+[m[32m    export const NONAME: "ENONAME";[m
[32m+[m[32m    export const BADHINTS: "EBADHINTS";[m
[32m+[m[32m    export const NOTINITIALIZED: "ENOTINITIALIZED";[m
[32m+[m[32m    export const LOADIPHLPAPI: "ELOADIPHLPAPI";[m
[32m+[m[32m    export const ADDRGETNETWORKPARAMS: "EADDRGETNETWORKPARAMS";[m
[32m+[m[32m    export const CANCELLED: "ECANCELLED";[m
[32m+[m[32m    export interface ResolverOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Query timeout in milliseconds, or `-1` to use the default timeout.[m
[32m+[m[32m         */[m
[32m+[m[32m        timeout?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of tries the resolver will try contacting each name server before giving up.[m
[32m+[m[32m         * @default 4[m
[32m+[m[32m         */[m
[32m+[m[32m        tries?: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An independent resolver for DNS requests.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Creating a new resolver uses the default server settings. Setting[m
[32m+[m[32m     * the servers used for a resolver using [`resolver.setServers()`](https://nodejs.org/docs/latest-v22.x/api/dns.html#dnssetserversservers) does not affect[m
[32m+[m[32m     * other resolvers:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { Resolver } = require('node:dns');[m
[32m+[m[32m     * const resolver = new Resolver();[m
[32m+[m[32m     * resolver.setServers(['4.4.4.4']);[m
[32m+[m[32m     *[m
[32m+[m[32m     * // This request will use the server at 4.4.4.4, independent of global settings.[m
[32m+[m[32m     * resolver.resolve4('example.org', (err, addresses) => {[m
[32m+[m[32m     *   // ...[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The following methods from the `node:dns` module are available:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `resolver.getServers()`[m
[32m+[m[32m     * * `resolver.resolve()`[m
[32m+[m[32m     * * `resolver.resolve4()`[m
[32m+[m[32m     * * `resolver.resolve6()`[m
[32m+[m[32m     * * `resolver.resolveAny()`[m
[32m+[m[32m     * * `resolver.resolveCaa()`[m
[32m+[m[32m     * * `resolver.resolveCname()`[m
[32m+[m[32m     * * `resolver.resolveMx()`[m
[32m+[m[32m     * * `resolver.resolveNaptr()`[m
[32m+[m[32m     * * `resolver.resolveNs()`[m
[32m+[m[32m     * * `resolver.resolvePtr()`[m
[32m+[m[32m     * * `resolver.resolveSoa()`[m
[32m+[m[32m     * * `resolver.resolveSrv()`[m
[32m+[m[32m     * * `resolver.resolveTxt()`[m
[32m+[m[32m     * * `resolver.reverse()`[m
[32m+[m[32m     * * `resolver.setServers()`[m
[32m+[m[32m     * @since v8.3.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export class Resolver {[m
[32m+[m[32m        constructor(options?: ResolverOptions);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Cancel all outstanding DNS queries made by this resolver. The corresponding[m
[32m+[m[32m         * callbacks will be called with an error with code `ECANCELLED`.[m
[32m+[m[32m         * @since v8.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        cancel(): void;[m
[32m+[m[32m        getServers: typeof getServers;[m
[32m+[m[32m        resolve: typeof resolve;[m
[32m+[m[32m        resolve4: typeof resolve4;[m
[32m+[m[32m        resolve6: typeof resolve6;[m
[32m+[m[32m        resolveAny: typeof resolveAny;[m
[32m+[m[32m        resolveCaa: typeof resolveCaa;[m
[32m+[m[32m        resolveCname: typeof resolveCname;[m
[32m+[m[32m        resolveMx: typeof resolveMx;[m
[32m+[m[32m        resolveNaptr: typeof resolveNaptr;[m
[32m+[m[32m        resolveNs: typeof resolveNs;[m
[32m+[m[32m        resolvePtr: typeof resolvePtr;[m
[32m+[m[32m        resolveSoa: typeof resolveSoa;[m
[32m+[m[32m        resolveSrv: typeof resolveSrv;[m
[32m+[m[32m        resolveTxt: typeof resolveTxt;[m
[32m+[m[32m        reverse: typeof reverse;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The resolver instance will send its requests from the specified IP address.[m
[32m+[m[32m         * This allows programs to specify outbound interfaces when used on multi-homed[m
[32m+[m[32m         * systems.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If a v4 or v6 address is not specified, it is set to the default and the[m
[32m+[m[32m         * operating system will choose a local address automatically.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The resolver will use the v4 local address when making requests to IPv4 DNS[m
[32m+[m[32m         * servers, and the v6 local address when making requests to IPv6 DNS servers.[m
[32m+[m[32m         * The `rrtype` of resolution requests has no impact on the local address used.[m
[32m+[m[32m         * @since v15.1.0, v14.17.0[m
[32m+[m[32m         * @param [ipv4='0.0.0.0'] A string representation of an IPv4 address.[m
[32m+[m[32m         * @param [ipv6='::0'] A string representation of an IPv6 address.[m
[32m+[m[32m         */[m
[32m+[m[32m        setLocalAddress(ipv4?: string, ipv6?: string): void;[m
[32m+[m[32m        setServers: typeof setServers;[m
[32m+[m[32m    }[m
[32m+[m[32m    export { dnsPromises as promises };[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:dns" {[m
[32m+[m[32m    export * from "dns";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/dns/promises.d.ts b/node_modules/@types/node/dns/promises.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..cb4c03b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/dns/promises.d.ts[m
[36m@@ -0,0 +1,476 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `dns.promises` API provides an alternative set of asynchronous DNS methods[m
[32m+[m[32m * that return `Promise` objects rather than using callbacks. The API is accessible[m
[32m+[m[32m * via `require('node:dns').promises` or `require('node:dns/promises')`.[m
[32m+[m[32m * @since v10.6.0[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "dns/promises" {[m
[32m+[m[32m    import {[m
[32m+[m[32m        AnyRecord,[m
[32m+[m[32m        CaaRecord,[m
[32m+[m[32m        LookupAddress,[m
[32m+[m[32m        LookupAllOptions,[m
[32m+[m[32m        LookupOneOptions,[m
[32m+[m[32m        LookupOptions,[m
[32m+[m[32m        MxRecord,[m
[32m+[m[32m        NaptrRecord,[m
[32m+[m[32m        RecordWithTtl,[m
[32m+[m[32m        ResolveOptions,[m
[32m+[m[32m        ResolverOptions,[m
[32m+[m[32m        ResolveWithTtlOptions,[m
[32m+[m[32m        SoaRecord,[m
[32m+[m[32m        SrvRecord,[m
[32m+[m[32m    } from "node:dns";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns an array of IP address strings, formatted according to [RFC 5952](https://tools.ietf.org/html/rfc5952#section-6),[m
[32m+[m[32m     * that are currently configured for DNS resolution. A string will include a port[m
[32m+[m[32m     * section if a custom port is used.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * [[m
[32m+[m[32m     *   '4.4.4.4',[m
[32m+[m[32m     *   '2001:4860:4860::8888',[m
[32m+[m[32m     *   '4.4.4.4:1053',[m
[32m+[m[32m     *   '[2001:4860:4860::8888]:1053',[m
[32m+[m[32m     * ][m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function getServers(): string[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Resolves a host name (e.g. `'nodejs.org'`) into the first found A (IPv4) or[m
[32m+[m[32m     * AAAA (IPv6) record. All `option` properties are optional. If `options` is an[m
[32m+[m[32m     * integer, then it must be `4` or `6` – if `options` is not provided, then IPv4[m
[32m+[m[32m     * and IPv6 addresses are both returned if found.[m
[32m+[m[32m     *[m
[32m+[m[32m     * With the `all` option set to `true`, the `Promise` is resolved with `addresses` being an array of objects with the properties `address` and `family`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On error, the `Promise` is rejected with an [`Error`](https://nodejs.org/docs/latest-v20.x/api/errors.html#class-error) object, where `err.code` is the error code.[m
[32m+[m[32m     * Keep in mind that `err.code` will be set to `'ENOTFOUND'` not only when[m
[32m+[m[32m     * the host name does not exist but also when the lookup fails in other ways[m
[32m+[m[32m     * such as no available file descriptors.[m
[32m+[m[32m     *[m
[32m+[m[32m     * [`dnsPromises.lookup()`](https://nodejs.org/docs/latest-v20.x/api/dns.html#dnspromiseslookuphostname-options) does not necessarily have anything to do with the DNS[m
[32m+[m[32m     * protocol. The implementation uses an operating system facility that can[m
[32m+[m[32m     * associate names with addresses and vice versa. This implementation can have[m
[32m+[m[32m     * subtle but important consequences on the behavior of any Node.js program. Please[m
[32m+[m[32m     * take some time to consult the [Implementation considerations section](https://nodejs.org/docs/latest-v20.x/api/dns.html#implementation-considerations) before[m
[32m+[m[32m     * using `dnsPromises.lookup()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example usage:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const dns = require('node:dns');[m
[32m+[m[32m     * const dnsPromises = dns.promises;[m
[32m+[m[32m     * const options = {[m
[32m+[m[32m     *   family: 6,[m
[32m+[m[32m     *   hints: dns.ADDRCONFIG | dns.V4MAPPED,[m
[32m+[m[32m     * };[m
[32m+[m[32m     *[m
[32m+[m[32m     * dnsPromises.lookup('example.com', options).then((result) => {[m
[32m+[m[32m     *   console.log('address: %j family: IPv%s', result.address, result.family);[m
[32m+[m[32m     *   // address: "2606:2800:220:1:248:1893:25c8:1946" family: IPv6[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * // When options.all is true, the result will be an Array.[m
[32m+[m[32m     * options.all = true;[m
[32m+[m[32m     * dnsPromises.lookup('example.com', options).then((result) => {[m
[32m+[m[32m     *   console.log('addresses: %j', result);[m
[32m+[m[32m     *   // addresses: [{"address":"2606:2800:220:1:248:1893:25c8:1946","family":6}][m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function lookup(hostname: string, family: number): Promise<LookupAddress>;[m
[32m+[m[32m    function lookup(hostname: string, options: LookupOneOptions): Promise<LookupAddress>;[m
[32m+[m[32m    function lookup(hostname: string, options: LookupAllOptions): Promise<LookupAddress[]>;[m
[32m+[m[32m    function lookup(hostname: string, options: LookupOptions): Promise<LookupAddress | LookupAddress[]>;[m
[32m+[m[32m    function lookup(hostname: string): Promise<LookupAddress>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Resolves the given `address` and `port` into a host name and service using[m
[32m+[m[32m     * the operating system's underlying `getnameinfo` implementation.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `address` is not a valid IP address, a `TypeError` will be thrown.[m
[32m+[m[32m     * The `port` will be coerced to a number. If it is not a legal port, a `TypeError` will be thrown.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On error, the `Promise` is rejected with an [`Error`](https://nodejs.org/docs/latest-v20.x/api/errors.html#class-error) object, where `err.code` is the error code.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const dnsPromises = require('node:dns').promises;[m
[32m+[m[32m     * dnsPromises.lookupService('127.0.0.1', 22).then((result) => {[m
[32m+[m[32m     *   console.log(result.hostname, result.service);[m
[32m+[m[32m     *   // Prints: localhost ssh[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function lookupService([m
[32m+[m[32m        address: string,[m
[32m+[m[32m        port: number,[m
[32m+[m[32m    ): Promise<{[m
[32m+[m[32m        hostname: string;[m
[32m+[m[32m        service: string;[m
[32m+[m[32m    }>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve a host name (e.g. `'nodejs.org'`) into an array[m
[32m+[m[32m     * of the resource records. When successful, the `Promise` is resolved with an[m
[32m+[m[32m     * array of resource records. The type and structure of individual results vary[m
[32m+[m[32m     * based on `rrtype`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * <omitted>[m
[32m+[m[32m     *[m
[32m+[m[32m     * On error, the `Promise` is rejected with an [`Error`](https://nodejs.org/docs/latest-v20.x/api/errors.html#class-error) object, where `err.code`[m
[32m+[m[32m     * is one of the [DNS error codes](https://nodejs.org/docs/latest-v20.x/api/dns.html#error-codes).[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     * @param hostname Host name to resolve.[m
[32m+[m[32m     * @param [rrtype='A'] Resource record type.[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolve(hostname: string): Promise<string[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "A"): Promise<string[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "AAAA"): Promise<string[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "ANY"): Promise<AnyRecord[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "CAA"): Promise<CaaRecord[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "CNAME"): Promise<string[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "MX"): Promise<MxRecord[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "NAPTR"): Promise<NaptrRecord[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "NS"): Promise<string[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "PTR"): Promise<string[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "SOA"): Promise<SoaRecord>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "SRV"): Promise<SrvRecord[]>;[m
[32m+[m[32m    function resolve(hostname: string, rrtype: "TXT"): Promise<string[][]>;[m
[32m+[m[32m    function resolve([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        rrtype: string,[m
[32m+[m[32m    ): Promise<string[] | MxRecord[] | NaptrRecord[] | SoaRecord | SrvRecord[] | string[][] | AnyRecord[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve IPv4 addresses (`A` records) for the `hostname`. On success, the `Promise` is resolved with an array of IPv4[m
[32m+[m[32m     * addresses (e.g. `['74.125.79.104', '74.125.79.105', '74.125.79.106']`).[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     * @param hostname Host name to resolve.[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolve4(hostname: string): Promise<string[]>;[m
[32m+[m[32m    function resolve4(hostname: string, options: ResolveWithTtlOptions): Promise<RecordWithTtl[]>;[m
[32m+[m[32m    function resolve4(hostname: string, options: ResolveOptions): Promise<string[] | RecordWithTtl[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve IPv6 addresses (`AAAA` records) for the `hostname`. On success, the `Promise` is resolved with an array of IPv6[m
[32m+[m[32m     * addresses.[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     * @param hostname Host name to resolve.[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolve6(hostname: string): Promise<string[]>;[m
[32m+[m[32m    function resolve6(hostname: string, options: ResolveWithTtlOptions): Promise<RecordWithTtl[]>;[m
[32m+[m[32m    function resolve6(hostname: string, options: ResolveOptions): Promise<string[] | RecordWithTtl[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve all records (also known as `ANY` or `*` query).[m
[32m+[m[32m     * On success, the `Promise` is resolved with an array containing various types of[m
[32m+[m[32m     * records. Each object has a property `type` that indicates the type of the[m
[32m+[m[32m     * current record. And depending on the `type`, additional properties will be[m
[32m+[m[32m     * present on the object:[m
[32m+[m[32m     *[m
[32m+[m[32m     * <omitted>[m
[32m+[m[32m     *[m
[32m+[m[32m     * Here is an example of the result object:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * [ { type: 'A', address: '127.0.0.1', ttl: 299 },[m
[32m+[m[32m     *   { type: 'CNAME', value: 'example.com' },[m
[32m+[m[32m     *   { type: 'MX', exchange: 'alt4.aspmx.l.example.com', priority: 50 },[m
[32m+[m[32m     *   { type: 'NS', value: 'ns1.example.com' },[m
[32m+[m[32m     *   { type: 'TXT', entries: [ 'v=spf1 include:_spf.example.com ~all' ] },[m
[32m+[m[32m     *   { type: 'SOA',[m
[32m+[m[32m     *     nsname: 'ns1.example.com',[m
[32m+[m[32m     *     hostmaster: 'admin.example.com',[m
[32m+[m[32m     *     serial: 156696742,[m
[32m+[m[32m     *     refresh: 900,[m
[32m+[m[32m     *     retry: 900,[m
[32m+[m[32m     *     expire: 1800,[m
[32m+[m[32m     *     minttl: 60 } ][m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolveAny(hostname: string): Promise<AnyRecord[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve `CAA` records for the `hostname`. On success,[m
[32m+[m[32m     * the `Promise` is resolved with an array of objects containing available[m
[32m+[m[32m     * certification authority authorization records available for the `hostname` (e.g. `[{critical: 0, iodef: 'mailto:pki@example.com'},{critical: 128, issue: 'pki.example.com'}]`).[m
[32m+[m[32m     * @since v15.0.0, v14.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolveCaa(hostname: string): Promise<CaaRecord[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve `CNAME` records for the `hostname`. On success,[m
[32m+[m[32m     * the `Promise` is resolved with an array of canonical name records available for[m
[32m+[m[32m     * the `hostname` (e.g. `['bar.example.com']`).[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolveCname(hostname: string): Promise<string[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve mail exchange records (`MX` records) for the `hostname`. On success, the `Promise` is resolved with an array of objects[m
[32m+[m[32m     * containing both a `priority` and `exchange` property (e.g.`[{priority: 10, exchange: 'mx.example.com'}, ...]`).[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolveMx(hostname: string): Promise<MxRecord[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve regular expression-based records (`NAPTR` records) for the `hostname`. On success, the `Promise` is resolved with an array[m
[32m+[m[32m     * of objects with the following properties:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `flags`[m
[32m+[m[32m     * * `service`[m
[32m+[m[32m     * * `regexp`[m
[32m+[m[32m     * * `replacement`[m
[32m+[m[32m     * * `order`[m
[32m+[m[32m     * * `preference`[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * {[m
[32m+[m[32m     *   flags: 's',[m
[32m+[m[32m     *   service: 'SIP+D2U',[m
[32m+[m[32m     *   regexp: '',[m
[32m+[m[32m     *   replacement: '_sip._udp.example.com',[m
[32m+[m[32m     *   order: 30,[m
[32m+[m[32m     *   preference: 100[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolveNaptr(hostname: string): Promise<NaptrRecord[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve name server records (`NS` records) for the `hostname`. On success, the `Promise` is resolved with an array of name server[m
[32m+[m[32m     * records available for `hostname` (e.g.`['ns1.example.com', 'ns2.example.com']`).[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolveNs(hostname: string): Promise<string[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve pointer records (`PTR` records) for the `hostname`. On success, the `Promise` is resolved with an array of strings[m
[32m+[m[32m     * containing the reply records.[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolvePtr(hostname: string): Promise<string[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve a start of authority record (`SOA` record) for[m
[32m+[m[32m     * the `hostname`. On success, the `Promise` is resolved with an object with the[m
[32m+[m[32m     * following properties:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `nsname`[m
[32m+[m[32m     * * `hostmaster`[m
[32m+[m[32m     * * `serial`[m
[32m+[m[32m     * * `refresh`[m
[32m+[m[32m     * * `retry`[m
[32m+[m[32m     * * `expire`[m
[32m+[m[32m     * * `minttl`[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * {[m
[32m+[m[32m     *   nsname: 'ns.example.com',[m
[32m+[m[32m     *   hostmaster: 'root.example.com',[m
[32m+[m[32m     *   serial: 2013101809,[m
[32m+[m[32m     *   refresh: 10000,[m
[32m+[m[32m     *   retry: 2400,[m
[32m+[m[32m     *   expire: 604800,[m
[32m+[m[32m     *   minttl: 3600[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolveSoa(hostname: string): Promise<SoaRecord>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve service records (`SRV` records) for the `hostname`. On success, the `Promise` is resolved with an array of objects with[m
[32m+[m[32m     * the following properties:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `priority`[m
[32m+[m[32m     * * `weight`[m
[32m+[m[32m     * * `port`[m
[32m+[m[32m     * * `name`[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * {[m
[32m+[m[32m     *   priority: 10,[m
[32m+[m[32m     *   weight: 5,[m
[32m+[m[32m     *   port: 21223,[m
[32m+[m[32m     *   name: 'service.example.com'[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolveSrv(hostname: string): Promise<SrvRecord[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Uses the DNS protocol to resolve text queries (`TXT` records) for the `hostname`. On success, the `Promise` is resolved with a two-dimensional array[m
[32m+[m[32m     * of the text records available for `hostname` (e.g.`[ ['v=spf1 ip4:0.0.0.0 ', '~all' ] ]`). Each sub-array contains TXT chunks of[m
[32m+[m[32m     * one record. Depending on the use case, these could be either joined together or[m
[32m+[m[32m     * treated separately.[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function resolveTxt(hostname: string): Promise<string[][]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Performs a reverse DNS query that resolves an IPv4 or IPv6 address to an[m
[32m+[m[32m     * array of host names.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On error, the `Promise` is rejected with an [`Error`](https://nodejs.org/docs/latest-v20.x/api/errors.html#class-error) object, where `err.code`[m
[32m+[m[32m     * is one of the [DNS error codes](https://nodejs.org/docs/latest-v20.x/api/dns.html#error-codes).[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function reverse(ip: string): Promise<string[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get the default value for `verbatim` in {@link lookup} and [dnsPromises.lookup()](https://nodejs.org/docs/latest-v20.x/api/dns.html#dnspromiseslookuphostname-options).[m
[32m+[m[32m     * The value could be:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `ipv4first`: for `verbatim` defaulting to `false`.[m
[32m+[m[32m     * * `verbatim`: for `verbatim` defaulting to `true`.[m
[32m+[m[32m     * @since v20.1.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function getDefaultResultOrder(): "ipv4first" | "verbatim";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sets the IP address and port of servers to be used when performing DNS[m
[32m+[m[32m     * resolution. The `servers` argument is an array of [RFC 5952](https://tools.ietf.org/html/rfc5952#section-6) formatted[m
[32m+[m[32m     * addresses. If the port is the IANA default DNS port (53) it can be omitted.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * dnsPromises.setServers([[m
[32m+[m[32m     *   '4.4.4.4',[m
[32m+[m[32m     *   '[2001:4860:4860::8888]',[m
[32m+[m[32m     *   '4.4.4.4:1053',[m
[32m+[m[32m     *   '[2001:4860:4860::8888]:1053',[m
[32m+[m[32m     * ]);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * An error will be thrown if an invalid address is provided.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `dnsPromises.setServers()` method must not be called while a DNS query is in[m
[32m+[m[32m     * progress.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This method works much like [resolve.conf](https://man7.org/linux/man-pages/man5/resolv.conf.5.html).[m
[32m+[m[32m     * That is, if attempting to resolve with the first server provided results in a `NOTFOUND` error, the `resolve()` method will _not_ attempt to resolve with[m
[32m+[m[32m     * subsequent servers provided. Fallback DNS servers will only be used if the[m
[32m+[m[32m     * earlier ones time out or result in some other error.[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     * @param servers array of `RFC 5952` formatted addresses[m
[32m+[m[32m     */[m
[32m+[m[32m    function setServers(servers: readonly string[]): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Set the default value of `order` in `dns.lookup()` and `{@link lookup}`. The value could be:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `ipv4first`: sets default `order` to `ipv4first`.[m
[32m+[m[32m     * * `ipv6first`: sets default `order` to `ipv6first`.[m
[32m+[m[32m     * * `verbatim`: sets default `order` to `verbatim`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The default is `verbatim` and [dnsPromises.setDefaultResultOrder()](https://nodejs.org/docs/latest-v20.x/api/dns.html#dnspromisessetdefaultresultorderorder)[m
[32m+[m[32m     * have higher priority than [`--dns-result-order`](https://nodejs.org/docs/latest-v20.x/api/cli.html#--dns-result-orderorder).[m
[32m+[m[32m     * When using [worker threads](https://nodejs.org/docs/latest-v20.x/api/worker_threads.html), [`dnsPromises.setDefaultResultOrder()`](https://nodejs.org/docs/latest-v20.x/api/dns.html#dnspromisessetdefaultresultorderorder)[m
[32m+[m[32m     * from the main thread won't affect the default dns orders in workers.[m
[32m+[m[32m     * @since v16.4.0, v14.18.0[m
[32m+[m[32m     * @param order must be `'ipv4first'`, `'ipv6first'` or `'verbatim'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function setDefaultResultOrder(order: "ipv4first" | "ipv6first" | "verbatim"): void;[m
[32m+[m[32m    // Error codes[m
[32m+[m[32m    const NODATA: "ENODATA";[m
[32m+[m[32m    const FORMERR: "EFORMERR";[m
[32m+[m[32m    const SERVFAIL: "ESERVFAIL";[m
[32m+[m[32m    const NOTFOUND: "ENOTFOUND";[m
[32m+[m[32m    const NOTIMP: "ENOTIMP";[m
[32m+[m[32m    const REFUSED: "EREFUSED";[m
[32m+[m[32m    const BADQUERY: "EBADQUERY";[m
[32m+[m[32m    const BADNAME: "EBADNAME";[m
[32m+[m[32m    const BADFAMILY: "EBADFAMILY";[m
[32m+[m[32m    const BADRESP: "EBADRESP";[m
[32m+[m[32m    const CONNREFUSED: "ECONNREFUSED";[m
[32m+[m[32m    const TIMEOUT: "ETIMEOUT";[m
[32m+[m[32m    const EOF: "EOF";[m
[32m+[m[32m    const FILE: "EFILE";[m
[32m+[m[32m    const NOMEM: "ENOMEM";[m
[32m+[m[32m    const DESTRUCTION: "EDESTRUCTION";[m
[32m+[m[32m    const BADSTR: "EBADSTR";[m
[32m+[m[32m    const BADFLAGS: "EBADFLAGS";[m
[32m+[m[32m    const NONAME: "ENONAME";[m
[32m+[m[32m    const BADHINTS: "EBADHINTS";[m
[32m+[m[32m    const NOTINITIALIZED: "ENOTINITIALIZED";[m
[32m+[m[32m    const LOADIPHLPAPI: "ELOADIPHLPAPI";[m
[32m+[m[32m    const ADDRGETNETWORKPARAMS: "EADDRGETNETWORKPARAMS";[m
[32m+[m[32m    const CANCELLED: "ECANCELLED";[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An independent resolver for DNS requests.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Creating a new resolver uses the default server settings. Setting[m
[32m+[m[32m     * the servers used for a resolver using [`resolver.setServers()`](https://nodejs.org/docs/latest-v20.x/api/dns.html#dnspromisessetserversservers) does not affect[m
[32m+[m[32m     * other resolvers:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { Resolver } = require('node:dns').promises;[m
[32m+[m[32m     * const resolver = new Resolver();[m
[32m+[m[32m     * resolver.setServers(['4.4.4.4']);[m
[32m+[m[32m     *[m
[32m+[m[32m     * // This request will use the server at 4.4.4.4, independent of global settings.[m
[32m+[m[32m     * resolver.resolve4('example.org').then((addresses) => {[m
[32m+[m[32m     *   // ...[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Alternatively, the same code can be written using async-await style.[m
[32m+[m[32m     * (async function() {[m
[32m+[m[32m     *   const addresses = await resolver.resolve4('example.org');[m
[32m+[m[32m     * })();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The following methods from the `dnsPromises` API are available:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `resolver.getServers()`[m
[32m+[m[32m     * * `resolver.resolve()`[m
[32m+[m[32m     * * `resolver.resolve4()`[m
[32m+[m[32m     * * `resolver.resolve6()`[m
[32m+[m[32m     * * `resolver.resolveAny()`[m
[32m+[m[32m     * * `resolver.resolveCaa()`[m
[32m+[m[32m     * * `resolver.resolveCname()`[m
[32m+[m[32m     * * `resolver.resolveMx()`[m
[32m+[m[32m     * * `resolver.resolveNaptr()`[m
[32m+[m[32m     * * `resolver.resolveNs()`[m
[32m+[m[32m     * * `resolver.resolvePtr()`[m
[32m+[m[32m     * * `resolver.resolveSoa()`[m
[32m+[m[32m     * * `resolver.resolveSrv()`[m
[32m+[m[32m     * * `resolver.resolveTxt()`[m
[32m+[m[32m     * * `resolver.reverse()`[m
[32m+[m[32m     * * `resolver.setServers()`[m
[32m+[m[32m     * @since v10.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class Resolver {[m
[32m+[m[32m        constructor(options?: ResolverOptions);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Cancel all outstanding DNS queries made by this resolver. The corresponding[m
[32m+[m[32m         * callbacks will be called with an error with code `ECANCELLED`.[m
[32m+[m[32m         * @since v8.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        cancel(): void;[m
[32m+[m[32m        getServers: typeof getServers;[m
[32m+[m[32m        resolve: typeof resolve;[m
[32m+[m[32m        resolve4: typeof resolve4;[m
[32m+[m[32m        resolve6: typeof resolve6;[m
[32m+[m[32m        resolveAny: typeof resolveAny;[m
[32m+[m[32m        resolveCaa: typeof resolveCaa;[m
[32m+[m[32m        resolveCname: typeof resolveCname;[m
[32m+[m[32m        resolveMx: typeof resolveMx;[m
[32m+[m[32m        resolveNaptr: typeof resolveNaptr;[m
[32m+[m[32m        resolveNs: typeof resolveNs;[m
[32m+[m[32m        resolvePtr: typeof resolvePtr;[m
[32m+[m[32m        resolveSoa: typeof resolveSoa;[m
[32m+[m[32m        resolveSrv: typeof resolveSrv;[m
[32m+[m[32m        resolveTxt: typeof resolveTxt;[m
[32m+[m[32m        reverse: typeof reverse;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The resolver instance will send its requests from the specified IP address.[m
[32m+[m[32m         * This allows programs to specify outbound interfaces when used on multi-homed[m
[32m+[m[32m         * systems.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If a v4 or v6 address is not specified, it is set to the default and the[m
[32m+[m[32m         * operating system will choose a local address automatically.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The resolver will use the v4 local address when making requests to IPv4 DNS[m
[32m+[m[32m         * servers, and the v6 local address when making requests to IPv6 DNS servers.[m
[32m+[m[32m         * The `rrtype` of resolution requests has no impact on the local address used.[m
[32m+[m[32m         * @since v15.1.0, v14.17.0[m
[32m+[m[32m         * @param [ipv4='0.0.0.0'] A string representation of an IPv4 address.[m
[32m+[m[32m         * @param [ipv6='::0'] A string representation of an IPv6 address.[m
[32m+[m[32m         */[m
[32m+[m[32m        setLocalAddress(ipv4?: string, ipv6?: string): void;[m
[32m+[m[32m        setServers: typeof setServers;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:dns/promises" {[m
[32m+[m[32m    export * from "dns/promises";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/dom-events.d.ts b/node_modules/@types/node/dom-events.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..f47f71d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/dom-events.d.ts[m
[36m@@ -0,0 +1,124 @@[m
[32m+[m[32mexport {}; // Don't export anything![m
[32m+[m
[32m+[m[32m//// DOM-like Events[m
[32m+[m[32m// NB: The Event / EventTarget / EventListener implementations below were copied[m
[32m+[m[32m// from lib.dom.d.ts, then edited to reflect Node's documentation at[m
[32m+[m[32m// https://nodejs.org/api/events.html#class-eventtarget.[m
[32m+[m[32m// Please read that link to understand important implementation differences.[m
[32m+[m
[32m+[m[32m// This conditional type will be the existing global Event in a browser, or[m
[32m+[m[32m// the copy below in a Node environment.[m
[32m+[m[32mtype __Event = typeof globalThis extends { onmessage: any; Event: any } ? {}[m
[32m+[m[32m    : {[m
[32m+[m[32m        /** This is not used in Node.js and is provided purely for completeness. */[m
[32m+[m[32m        readonly bubbles: boolean;[m
[32m+[m[32m        /** Alias for event.stopPropagation(). This is not used in Node.js and is provided purely for completeness. */[m
[32m+[m[32m        cancelBubble: () => void;[m
[32m+[m[32m        /** True if the event was created with the cancelable option */[m
[32m+[m[32m        readonly cancelable: boolean;[m
[32m+[m[32m        /** This is not used in Node.js and is provided purely for completeness. */[m
[32m+[m[32m        readonly composed: boolean;[m
[32m+[m[32m        /** Returns an array containing the current EventTarget as the only entry or empty if the event is not being dispatched. This is not used in Node.js and is provided purely for completeness. */[m
[32m+[m[32m        composedPath(): [EventTarget?];[m
[32m+[m[32m        /** Alias for event.target. */[m
[32m+[m[32m        readonly currentTarget: EventTarget | null;[m
[32m+[m[32m        /** Is true if cancelable is true and event.preventDefault() has been called. */[m
[32m+[m[32m        readonly defaultPrevented: boolean;[m
[32m+[m[32m        /** This is not used in Node.js and is provided purely for completeness. */[m
[32m+[m[32m        readonly eventPhase: 0 | 2;[m
[32m+[m[32m        /** The `AbortSignal` "abort" event is emitted with `isTrusted` set to `true`. The value is `false` in all other cases. */[m
[32m+[m[32m        readonly isTrusted: boolean;[m
[32m+[m[32m        /** Sets the `defaultPrevented` property to `true` if `cancelable` is `true`. */[m
[32m+[m[32m        preventDefault(): void;[m
[32m+[m[32m        /** This is not used in Node.js and is provided purely for completeness. */[m
[32m+[m[32m        returnValue: boolean;[m
[32m+[m[32m        /** Alias for event.target. */[m
[32m+[m[32m        readonly srcElement: EventTarget | null;[m
[32m+[m[32m        /** Stops the invocation of event listeners after the current one completes. */[m
[32m+[m[32m        stopImmediatePropagation(): void;[m
[32m+[m[32m        /** This is not used in Node.js and is provided purely for completeness. */[m
[32m+[m[32m        stopPropagation(): void;[m
[32m+[m[32m        /** The `EventTarget` dispatching the event */[m
[32m+[m[32m        readonly target: EventTarget | null;[m
[32m+[m[32m        /** The millisecond timestamp when the Event object was created. */[m
[32m+[m[32m        readonly timeStamp: number;[m
[32m+[m[32m        /** Returns the type of event, e.g. "click", "hashchange", or "submit". */[m
[32m+[m[32m        readonly type: string;[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m// See comment above explaining conditional type[m
[32m+[m[32mtype __EventTarget = typeof globalThis extends { onmessage: any; EventTarget: any } ? {}[m
[32m+[m[32m    : {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Adds a new handler for the `type` event. Any given `listener` is added only once per `type` and per `capture` option value.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `once` option is true, the `listener` is removed after the next time a `type` event is dispatched.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `capture` option is not used by Node.js in any functional way other than tracking registered event listeners per the `EventTarget` specification.[m
[32m+[m[32m         * Specifically, the `capture` option is used as part of the key when registering a `listener`.[m
[32m+[m[32m         * Any individual `listener` may be added once with `capture = false`, and once with `capture = true`.[m
[32m+[m[32m         */[m
[32m+[m[32m        addEventListener([m
[32m+[m[32m            type: string,[m
[32m+[m[32m            listener: EventListener | EventListenerObject,[m
[32m+[m[32m            options?: AddEventListenerOptions | boolean,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        /** Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise. */[m
[32m+[m[32m        dispatchEvent(event: Event): boolean;[m
[32m+[m[32m        /** Removes the event listener in target's event listener list with the same type, callback, and options. */[m
[32m+[m[32m        removeEventListener([m
[32m+[m[32m            type: string,[m
[32m+[m[32m            listener: EventListener | EventListenerObject,[m
[32m+[m[32m            options?: EventListenerOptions | boolean,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32minterface EventInit {[m
[32m+[m[32m    bubbles?: boolean;[m
[32m+[m[32m    cancelable?: boolean;[m
[32m+[m[32m    composed?: boolean;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minterface EventListenerOptions {[m
[32m+[m[32m    /** Not directly used by Node.js. Added for API completeness. Default: `false`. */[m
[32m+[m[32m    capture?: boolean;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minterface AddEventListenerOptions extends EventListenerOptions {[m
[32m+[m[32m    /** When `true`, the listener is automatically removed when it is first invoked. Default: `false`. */[m
[32m+[m[32m    once?: boolean;[m
[32m+[m[32m    /** When `true`, serves as a hint that the listener will not call the `Event` object's `preventDefault()` method. Default: false. */[m
[32m+[m[32m    passive?: boolean;[m
[32m+[m[32m    /** The listener will be removed when the given AbortSignal object's `abort()` method is called. */[m
[32m+[m[32m    signal?: AbortSignal;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minterface EventListener {[m
[32m+[m[32m    (evt: Event): void;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minterface EventListenerObject {[m
[32m+[m[32m    handleEvent(object: Event): void;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mimport {} from "events"; // Make this an ambient declaration[m
[32m+[m[32mdeclare global {[m
[32m+[m[32m    /** An event which takes place in the DOM. */[m
[32m+[m[32m    interface Event extends __Event {}[m
[32m+[m[32m    var Event: typeof globalThis extends { onmessage: any; Event: infer T } ? T[m
[32m+[m[32m        : {[m
[32m+[m[32m            prototype: __Event;[m
[32m+[m[32m            new(type: string, eventInitDict?: EventInit): __Event;[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * EventTarget is a DOM interface implemented by objects that can[m
[32m+[m[32m     * receive events and may have listeners for them.[m
[32m+[m[32m     */[m
[32m+[m[32m    interface EventTarget extends __EventTarget {}[m
[32m+[m[32m    var EventTarget: typeof globalThis extends { onmessage: any; EventTarget: infer T } ? T[m
[32m+[m[32m        : {[m
[32m+[m[32m            prototype: __EventTarget;[m
[32m+[m[32m            new(): __EventTarget;[m
[32m+[m[32m        };[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/domain.d.ts b/node_modules/@types/node/domain.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..a93998d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/domain.d.ts[m
[36m@@ -0,0 +1,170 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * **This module is pending deprecation.** Once a replacement API has been[m
[32m+[m[32m * finalized, this module will be fully deprecated. Most developers should[m
[32m+[m[32m * **not** have cause to use this module. Users who absolutely must have[m
[32m+[m[32m * the functionality that domains provide may rely on it for the time being[m
[32m+[m[32m * but should expect to have to migrate to a different solution[m
[32m+[m[32m * in the future.[m
[32m+[m[32m *[m
[32m+[m[32m * Domains provide a way to handle multiple different IO operations as a[m
[32m+[m[32m * single group. If any of the event emitters or callbacks registered to a[m
[32m+[m[32m * domain emit an `'error'` event, or throw an error, then the domain object[m
[32m+[m[32m * will be notified, rather than losing the context of the error in the `process.on('uncaughtException')` handler, or causing the program to[m
[32m+[m[32m * exit immediately with an error code.[m
[32m+[m[32m * @deprecated Since v1.4.2 - Deprecated[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/domain.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "domain" {[m
[32m+[m[32m    import EventEmitter = require("node:events");[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `Domain` class encapsulates the functionality of routing errors and[m
[32m+[m[32m     * uncaught exceptions to the active `Domain` object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * To handle the errors that it catches, listen to its `'error'` event.[m
[32m+[m[32m     */[m
[32m+[m[32m    class Domain extends EventEmitter {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An array of timers and event emitters that have been explicitly added[m
[32m+[m[32m         * to the domain.[m
[32m+[m[32m         */[m
[32m+[m[32m        members: Array<EventEmitter | NodeJS.Timer>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `enter()` method is plumbing used by the `run()`, `bind()`, and `intercept()` methods to set the active domain. It sets `domain.active` and `process.domain` to the domain, and implicitly[m
[32m+[m[32m         * pushes the domain onto the domain[m
[32m+[m[32m         * stack managed by the domain module (see {@link exit} for details on the[m
[32m+[m[32m         * domain stack). The call to `enter()` delimits the beginning of a chain of[m
[32m+[m[32m         * asynchronous calls and I/O operations bound to a domain.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling `enter()` changes only the active domain, and does not alter the domain[m
[32m+[m[32m         * itself. `enter()` and `exit()` can be called an arbitrary number of times on a[m
[32m+[m[32m         * single domain.[m
[32m+[m[32m         */[m
[32m+[m[32m        enter(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `exit()` method exits the current domain, popping it off the domain stack.[m
[32m+[m[32m         * Any time execution is going to switch to the context of a different chain of[m
[32m+[m[32m         * asynchronous calls, it's important to ensure that the current domain is exited.[m
[32m+[m[32m         * The call to `exit()` delimits either the end of or an interruption to the chain[m
[32m+[m[32m         * of asynchronous calls and I/O operations bound to a domain.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If there are multiple, nested domains bound to the current execution context, `exit()` will exit any domains nested within this domain.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling `exit()` changes only the active domain, and does not alter the domain[m
[32m+[m[32m         * itself. `enter()` and `exit()` can be called an arbitrary number of times on a[m
[32m+[m[32m         * single domain.[m
[32m+[m[32m         */[m
[32m+[m[32m        exit(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Run the supplied function in the context of the domain, implicitly[m
[32m+[m[32m         * binding all event emitters, timers, and low-level requests that are[m
[32m+[m[32m         * created in that context. Optionally, arguments can be passed to[m
[32m+[m[32m         * the function.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This is the most basic way to use a domain.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const domain = require('node:domain');[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         * const d = domain.create();[m
[32m+[m[32m         * d.on('error', (er) => {[m
[32m+[m[32m         *   console.error('Caught error!', er);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * d.run(() => {[m
[32m+[m[32m         *   process.nextTick(() => {[m
[32m+[m[32m         *     setTimeout(() => { // Simulating some various async stuff[m
[32m+[m[32m         *       fs.open('non-existent file', 'r', (er, fd) => {[m
[32m+[m[32m         *         if (er) throw er;[m
[32m+[m[32m         *         // proceed...[m
[32m+[m[32m         *       });[m
[32m+[m[32m         *     }, 100);[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * In this example, the `d.on('error')` handler will be triggered, rather[m
[32m+[m[32m         * than crashing the program.[m
[32m+[m[32m         */[m
[32m+[m[32m        run<T>(fn: (...args: any[]) => T, ...args: any[]): T;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Explicitly adds an emitter to the domain. If any event handlers called by[m
[32m+[m[32m         * the emitter throw an error, or if the emitter emits an `'error'` event, it[m
[32m+[m[32m         * will be routed to the domain's `'error'` event, just like with implicit[m
[32m+[m[32m         * binding.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This also works with timers that are returned from `setInterval()` and `setTimeout()`. If their callback function throws, it will be caught by[m
[32m+[m[32m         * the domain `'error'` handler.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the Timer or `EventEmitter` was already bound to a domain, it is removed[m
[32m+[m[32m         * from that one, and bound to this one instead.[m
[32m+[m[32m         * @param emitter emitter or timer to be added to the domain[m
[32m+[m[32m         */[m
[32m+[m[32m        add(emitter: EventEmitter | NodeJS.Timer): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The opposite of {@link add}. Removes domain handling from the[m
[32m+[m[32m         * specified emitter.[m
[32m+[m[32m         * @param emitter emitter or timer to be removed from the domain[m
[32m+[m[32m         */[m
[32m+[m[32m        remove(emitter: EventEmitter | NodeJS.Timer): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The returned function will be a wrapper around the supplied callback[m
[32m+[m[32m         * function. When the returned function is called, any errors that are[m
[32m+[m[32m         * thrown will be routed to the domain's `'error'` event.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const d = domain.create();[m
[32m+[m[32m         *[m
[32m+[m[32m         * function readSomeFile(filename, cb) {[m
[32m+[m[32m         *   fs.readFile(filename, 'utf8', d.bind((er, data) => {[m
[32m+[m[32m         *     // If this throws, it will also be passed to the domain.[m
[32m+[m[32m         *     return cb(er, data ? JSON.parse(data) : null);[m
[32m+[m[32m         *   }));[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * d.on('error', (er) => {[m
[32m+[m[32m         *   // An error occurred somewhere. If we throw it now, it will crash the program[m
[32m+[m[32m         *   // with the normal line number and stack message.[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @param callback The callback function[m
[32m+[m[32m         * @return The bound function[m
[32m+[m[32m         */[m
[32m+[m[32m        bind<T extends Function>(callback: T): T;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method is almost identical to {@link bind}. However, in[m
[32m+[m[32m         * addition to catching thrown errors, it will also intercept `Error` objects sent as the first argument to the function.[m
[32m+[m[32m         *[m
[32m+[m[32m         * In this way, the common `if (err) return callback(err);` pattern can be replaced[m
[32m+[m[32m         * with a single error handler in a single place.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const d = domain.create();[m
[32m+[m[32m         *[m
[32m+[m[32m         * function readSomeFile(filename, cb) {[m
[32m+[m[32m         *   fs.readFile(filename, 'utf8', d.intercept((data) => {[m
[32m+[m[32m         *     // Note, the first argument is never passed to the[m
[32m+[m[32m         *     // callback since it is assumed to be the 'Error' argument[m
[32m+[m[32m         *     // and thus intercepted by the domain.[m
[32m+[m[32m         *[m
[32m+[m[32m         *     // If this throws, it will also be passed to the domain[m
[32m+[m[32m         *     // so the error-handling logic can be moved to the 'error'[m
[32m+[m[32m         *     // event on the domain instead of being repeated throughout[m
[32m+[m[32m         *     // the program.[m
[32m+[m[32m         *     return cb(null, JSON.parse(data));[m
[32m+[m[32m         *   }));[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * d.on('error', (er) => {[m
[32m+[m[32m         *   // An error occurred somewhere. If we throw it now, it will crash the program[m
[32m+[m[32m         *   // with the normal line number and stack message.[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @param callback The callback function[m
[32m+[m[32m         * @return The intercepted function[m
[32m+[m[32m         */[m
[32m+[m[32m        intercept<T extends Function>(callback: T): T;[m
[32m+[m[32m    }[m
[32m+[m[32m    function create(): Domain;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:domain" {[m
[32m+[m[32m    export * from "domain";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/events.d.ts b/node_modules/@types/node/events.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..2aeb7f2[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/events.d.ts[m
[36m@@ -0,0 +1,931 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * Much of the Node.js core API is built around an idiomatic asynchronous[m
[32m+[m[32m * event-driven architecture in which certain kinds of objects (called "emitters")[m
[32m+[m[32m * emit named events that cause `Function` objects ("listeners") to be called.[m
[32m+[m[32m *[m
[32m+[m[32m * For instance: a `net.Server` object emits an event each time a peer[m
[32m+[m[32m * connects to it; a `fs.ReadStream` emits an event when the file is opened;[m
[32m+[m[32m * a `stream` emits an event whenever data is available to be read.[m
[32m+[m[32m *[m
[32m+[m[32m * All objects that emit events are instances of the `EventEmitter` class. These[m
[32m+[m[32m * objects expose an `eventEmitter.on()` function that allows one or more[m
[32m+[m[32m * functions to be attached to named events emitted by the object. Typically,[m
[32m+[m[32m * event names are camel-cased strings but any valid JavaScript property key[m
[32m+[m[32m * can be used.[m
[32m+[m[32m *[m
[32m+[m[32m * When the `EventEmitter` object emits an event, all of the functions attached[m
[32m+[m[32m * to that specific event are called _synchronously_. Any values returned by the[m
[32m+[m[32m * called listeners are _ignored_ and discarded.[m
[32m+[m[32m *[m
[32m+[m[32m * The following example shows a simple `EventEmitter` instance with a single[m
[32m+[m[32m * listener. The `eventEmitter.on()` method is used to register listeners, while[m
[32m+[m[32m * the `eventEmitter.emit()` method is used to trigger the event.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import { EventEmitter } from 'node:events';[m
[32m+[m[32m *[m
[32m+[m[32m * class MyEmitter extends EventEmitter {}[m
[32m+[m[32m *[m
[32m+[m[32m * const myEmitter = new MyEmitter();[m
[32m+[m[32m * myEmitter.on('event', () => {[m
[32m+[m[32m *   console.log('an event occurred!');[m
[32m+[m[32m * });[m
[32m+[m[32m * myEmitter.emit('event');[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/events.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "events" {[m
[32m+[m[32m    import { AsyncResource, AsyncResourceOptions } from "node:async_hooks";[m
[32m+[m[32m    // NOTE: This class is in the docs but is **not actually exported** by Node.[m
[32m+[m[32m    // If https://github.com/nodejs/node/issues/39903 gets resolved and Node[m
[32m+[m[32m    // actually starts exporting the class, uncomment below.[m
[32m+[m[32m    // import { EventListener, EventListenerObject } from '__dom-events';[m
[32m+[m[32m    // /** The NodeEventTarget is a Node.js-specific extension to EventTarget that emulates a subset of the EventEmitter API. */[m
[32m+[m[32m    // interface NodeEventTarget extends EventTarget {[m
[32m+[m[32m    //     /**[m
[32m+[m[32m    //      * Node.js-specific extension to the `EventTarget` class that emulates the equivalent `EventEmitter` API.[m
[32m+[m[32m    //      * The only difference between `addListener()` and `addEventListener()` is that addListener() will return a reference to the EventTarget.[m
[32m+[m[32m    //      */[m
[32m+[m[32m    //     addListener(type: string, listener: EventListener | EventListenerObject, options?: { once: boolean }): this;[m
[32m+[m[32m    //     /** Node.js-specific extension to the `EventTarget` class that returns an array of event `type` names for which event listeners are registered. */[m
[32m+[m[32m    //     eventNames(): string[];[m
[32m+[m[32m    //     /** Node.js-specific extension to the `EventTarget` class that returns the number of event listeners registered for the `type`. */[m
[32m+[m[32m    //     listenerCount(type: string): number;[m
[32m+[m[32m    //     /** Node.js-specific alias for `eventTarget.removeListener()`. */[m
[32m+[m[32m    //     off(type: string, listener: EventListener | EventListenerObject): this;[m
[32m+[m[32m    //     /** Node.js-specific alias for `eventTarget.addListener()`. */[m
[32m+[m[32m    //     on(type: string, listener: EventListener | EventListenerObject, options?: { once: boolean }): this;[m
[32m+[m[32m    //     /** Node.js-specific extension to the `EventTarget` class that adds a `once` listener for the given event `type`. This is equivalent to calling `on` with the `once` option set to `true`. */[m
[32m+[m[32m    //     once(type: string, listener: EventListener | EventListenerObject): this;[m
[32m+[m[32m    //     /**[m
[32m+[m[32m    //      * Node.js-specific extension to the `EventTarget` class.[m
[32m+[m[32m    //      * If `type` is specified, removes all registered listeners for `type`,[m
[32m+[m[32m    //      * otherwise removes all registered listeners.[m
[32m+[m[32m    //      */[m
[32m+[m[32m    //     removeAllListeners(type: string): this;[m
[32m+[m[32m    //     /**[m
[32m+[m[32m    //      * Node.js-specific extension to the `EventTarget` class that removes the listener for the given `type`.[m
[32m+[m[32m    //      * The only difference between `removeListener()` and `removeEventListener()` is that `removeListener()` will return a reference to the `EventTarget`.[m
[32m+[m[32m    //      */[m
[32m+[m[32m    //     removeListener(type: string, listener: EventListener | EventListenerObject): this;[m
[32m+[m[32m    // }[m
[32m+[m[32m    interface EventEmitterOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enables automatic capturing of promise rejection.[m
[32m+[m[32m         */[m
[32m+[m[32m        captureRejections?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface StaticEventEmitterOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Can be used to cancel awaiting events.[m
[32m+[m[32m         */[m
[32m+[m[32m        signal?: AbortSignal | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface StaticEventEmitterIteratorOptions extends StaticEventEmitterOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Names of events that will end the iteration.[m
[32m+[m[32m         */[m
[32m+[m[32m        close?: string[] | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high watermark. The emitter is paused every time the size of events being buffered is higher than it.[m
[32m+[m[32m         * Supported only on emitters implementing `pause()` and `resume()` methods.[m
[32m+[m[32m         * @default Number.MAX_SAFE_INTEGER[m
[32m+[m[32m         */[m
[32m+[m[32m        highWaterMark?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The low watermark. The emitter is resumed every time the size of events being buffered is lower than it.[m
[32m+[m[32m         * Supported only on emitters implementing `pause()` and `resume()` methods.[m
[32m+[m[32m         * @default 1[m
[32m+[m[32m         */[m
[32m+[m[32m        lowWaterMark?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface EventEmitter<T extends EventMap<T> = DefaultEventMap> extends NodeJS.EventEmitter<T> {}[m
[32m+[m[32m    type EventMap<T> = Record<keyof T, any[]> | DefaultEventMap;[m
[32m+[m[32m    type DefaultEventMap = [never];[m
[32m+[m[32m    type AnyRest = [...args: any[]];[m
[32m+[m[32m    type Args<K, T> = T extends DefaultEventMap ? AnyRest : ([m
[32m+[m[32m        K extends keyof T ? T[K] : never[m
[32m+[m[32m    );[m
[32m+[m[32m    type Key<K, T> = T extends DefaultEventMap ? string | symbol : K | keyof T;[m
[32m+[m[32m    type Key2<K, T> = T extends DefaultEventMap ? string | symbol : K & keyof T;[m
[32m+[m[32m    type Listener<K, T, F> = T extends DefaultEventMap ? F : ([m
[32m+[m[32m        K extends keyof T ? ([m
[32m+[m[32m                T[K] extends unknown[] ? (...args: T[K]) => void : never[m
[32m+[m[32m            )[m
[32m+[m[32m            : never[m
[32m+[m[32m    );[m
[32m+[m[32m    type Listener1<K, T> = Listener<K, T, (...args: any[]) => void>;[m
[32m+[m[32m    type Listener2<K, T> = Listener<K, T, Function>;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `EventEmitter` class is defined and exposed by the `node:events` module:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { EventEmitter } from 'node:events';[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * All `EventEmitter`s emit the event `'newListener'` when new listeners are[m
[32m+[m[32m     * added and `'removeListener'` when existing listeners are removed.[m
[32m+[m[32m     *[m
[32m+[m[32m     * It supports the following option:[m
[32m+[m[32m     * @since v0.1.26[m
[32m+[m[32m     */[m
[32m+[m[32m    class EventEmitter<T extends EventMap<T> = DefaultEventMap> {[m
[32m+[m[32m        constructor(options?: EventEmitterOptions);[m
[32m+[m
[32m+[m[32m        [EventEmitter.captureRejectionSymbol]?<K>(error: Error, event: Key<K, T>, ...args: Args<K, T>): void;[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given[m
[32m+[m[32m         * event or that is rejected if the `EventEmitter` emits `'error'` while waiting.[m
[32m+[m[32m         * The `Promise` will resolve with an array of all the arguments emitted to the[m
[32m+[m[32m         * given event.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event[m
[32m+[m[32m         * semantics and does not listen to the `'error'` event.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { once, EventEmitter } from 'node:events';[m
[32m+[m[32m         * import process from 'node:process';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const ee = new EventEmitter();[m
[32m+[m[32m         *[m
[32m+[m[32m         * process.nextTick(() => {[m
[32m+[m[32m         *   ee.emit('myevent', 42);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * const [value] = await once(ee, 'myevent');[m
[32m+[m[32m         * console.log(value);[m
[32m+[m[32m         *[m
[32m+[m[32m         * const err = new Error('kaboom');[m
[32m+[m[32m         * process.nextTick(() => {[m
[32m+[m[32m         *   ee.emit('error', err);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * try {[m
[32m+[m[32m         *   await once(ee, 'myevent');[m
[32m+[m[32m         * } catch (err) {[m
[32m+[m[32m         *   console.error('error happened', err);[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The special handling of the `'error'` event is only used when `events.once()` is used to wait for another event. If `events.once()` is used to wait for the[m
[32m+[m[32m         * '`error'` event itself, then it is treated as any other kind of event without[m
[32m+[m[32m         * special handling:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { EventEmitter, once } from 'node:events';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const ee = new EventEmitter();[m
[32m+[m[32m         *[m
[32m+[m[32m         * once(ee, 'error')[m
[32m+[m[32m         *   .then(([err]) => console.log('ok', err.message))[m
[32m+[m[32m         *   .catch((err) => console.error('error', err.message));[m
[32m+[m[32m         *[m
[32m+[m[32m         * ee.emit('error', new Error('boom'));[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Prints: ok boom[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * An `AbortSignal` can be used to cancel waiting for the event:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { EventEmitter, once } from 'node:events';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const ee = new EventEmitter();[m
[32m+[m[32m         * const ac = new AbortController();[m
[32m+[m[32m         *[m
[32m+[m[32m         * async function foo(emitter, event, signal) {[m
[32m+[m[32m         *   try {[m
[32m+[m[32m         *     await once(emitter, event, { signal });[m
[32m+[m[32m         *     console.log('event emitted!');[m
[32m+[m[32m         *   } catch (error) {[m
[32m+[m[32m         *     if (error.name === 'AbortError') {[m
[32m+[m[32m         *       console.error('Waiting for the event was canceled!');[m
[32m+[m[32m         *     } else {[m
[32m+[m[32m         *       console.error('There was an error', error.message);[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * foo(ee, 'foo', ac.signal);[m
[32m+[m[32m         * ac.abort(); // Abort waiting for the event[m
[32m+[m[32m         * ee.emit('foo'); // Prints: Waiting for the event was canceled![m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v11.13.0, v10.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        static once([m
[32m+[m[32m            emitter: NodeJS.EventEmitter,[m
[32m+[m[32m            eventName: string | symbol,[m
[32m+[m[32m            options?: StaticEventEmitterOptions,[m
[32m+[m[32m        ): Promise<any[]>;[m
[32m+[m[32m        static once(emitter: EventTarget, eventName: string, options?: StaticEventEmitterOptions): Promise<any[]>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { on, EventEmitter } from 'node:events';[m
[32m+[m[32m         * import process from 'node:process';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const ee = new EventEmitter();[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Emit later on[m
[32m+[m[32m         * process.nextTick(() => {[m
[32m+[m[32m         *   ee.emit('foo', 'bar');[m
[32m+[m[32m         *   ee.emit('foo', 42);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * for await (const event of on(ee, 'foo')) {[m
[32m+[m[32m         *   // The execution of this inner block is synchronous and it[m
[32m+[m[32m         *   // processes one event at a time (even with await). Do not use[m
[32m+[m[32m         *   // if concurrent execution is required.[m
[32m+[m[32m         *   console.log(event); // prints ['bar'] [42][m
[32m+[m[32m         * }[m
[32m+[m[32m         * // Unreachable here[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Returns an `AsyncIterator` that iterates `eventName` events. It will throw[m
[32m+[m[32m         * if the `EventEmitter` emits `'error'`. It removes all listeners when[m
[32m+[m[32m         * exiting the loop. The `value` returned by each iteration is an array[m
[32m+[m[32m         * composed of the emitted event arguments.[m
[32m+[m[32m         *[m
[32m+[m[32m         * An `AbortSignal` can be used to cancel waiting on events:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { on, EventEmitter } from 'node:events';[m
[32m+[m[32m         * import process from 'node:process';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const ac = new AbortController();[m
[32m+[m[32m         *[m
[32m+[m[32m         * (async () => {[m
[32m+[m[32m         *   const ee = new EventEmitter();[m
[32m+[m[32m         *[m
[32m+[m[32m         *   // Emit later on[m
[32m+[m[32m         *   process.nextTick(() => {[m
[32m+[m[32m         *     ee.emit('foo', 'bar');[m
[32m+[m[32m         *     ee.emit('foo', 42);[m
[32m+[m[32m         *   });[m
[32m+[m[32m         *[m
[32m+[m[32m         *   for await (const event of on(ee, 'foo', { signal: ac.signal })) {[m
[32m+[m[32m         *     // The execution of this inner block is synchronous and it[m
[32m+[m[32m         *     // processes one event at a time (even with await). Do not use[m
[32m+[m[32m         *     // if concurrent execution is required.[m
[32m+[m[32m         *     console.log(event); // prints ['bar'] [42][m
[32m+[m[32m         *   }[m
[32m+[m[32m         *   // Unreachable here[m
[32m+[m[32m         * })();[m
[32m+[m[32m         *[m
[32m+[m[32m         * process.nextTick(() => ac.abort());[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Use the `close` option to specify an array of event names that will end the iteration:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { on, EventEmitter } from 'node:events';[m
[32m+[m[32m         * import process from 'node:process';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const ee = new EventEmitter();[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Emit later on[m
[32m+[m[32m         * process.nextTick(() => {[m
[32m+[m[32m         *   ee.emit('foo', 'bar');[m
[32m+[m[32m         *   ee.emit('foo', 42);[m
[32m+[m[32m         *   ee.emit('close');[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * for await (const event of on(ee, 'foo', { close: ['close'] })) {[m
[32m+[m[32m         *   console.log(event); // prints ['bar'] [42][m
[32m+[m[32m         * }[m
[32m+[m[32m         * // the loop will exit after 'close' is emitted[m
[32m+[m[32m         * console.log('done'); // prints 'done'[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v13.6.0, v12.16.0[m
[32m+[m[32m         * @return An `AsyncIterator` that iterates `eventName` events emitted by the `emitter`[m
[32m+[m[32m         */[m
[32m+[m[32m        static on([m
[32m+[m[32m            emitter: NodeJS.EventEmitter,[m
[32m+[m[32m            eventName: string | symbol,[m
[32m+[m[32m            options?: StaticEventEmitterIteratorOptions,[m
[32m+[m[32m        ): AsyncIterableIterator<any[]>;[m
[32m+[m[32m        static on([m
[32m+[m[32m            emitter: EventTarget,[m
[32m+[m[32m            eventName: string,[m
[32m+[m[32m            options?: StaticEventEmitterIteratorOptions,[m
[32m+[m[32m        ): AsyncIterableIterator<any[]>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A class method that returns the number of listeners for the given `eventName` registered on the given `emitter`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { EventEmitter, listenerCount } from 'node:events';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const myEmitter = new EventEmitter();[m
[32m+[m[32m         * myEmitter.on('event', () => {});[m
[32m+[m[32m         * myEmitter.on('event', () => {});[m
[32m+[m[32m         * console.log(listenerCount(myEmitter, 'event'));[m
[32m+[m[32m         * // Prints: 2[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.9.12[m
[32m+[m[32m         * @deprecated Since v3.2.0 - Use `listenerCount` instead.[m
[32m+[m[32m         * @param emitter The emitter to query[m
[32m+[m[32m         * @param eventName The event name[m
[32m+[m[32m         */[m
[32m+[m[32m        static listenerCount(emitter: NodeJS.EventEmitter, eventName: string | symbol): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a copy of the array of listeners for the event named `eventName`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For `EventEmitter`s this behaves exactly the same as calling `.listeners` on[m
[32m+[m[32m         * the emitter.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For `EventTarget`s this is the only way to get the event listeners for the[m
[32m+[m[32m         * event target. This is useful for debugging and diagnostic purposes.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { getEventListeners, EventEmitter } from 'node:events';[m
[32m+[m[32m         *[m
[32m+[m[32m         * {[m
[32m+[m[32m         *   const ee = new EventEmitter();[m
[32m+[m[32m         *   const listener = () => console.log('Events are fun');[m
[32m+[m[32m         *   ee.on('foo', listener);[m
[32m+[m[32m         *   console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ][m
[32m+[m[32m         * }[m
[32m+[m[32m         * {[m
[32m+[m[32m         *   const et = new EventTarget();[m
[32m+[m[32m         *   const listener = () => console.log('Events are fun');[m
[32m+[m[32m         *   et.addEventListener('foo', listener);[m
[32m+[m[32m         *   console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ][m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.2.0, v14.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        static getEventListeners(emitter: EventTarget | NodeJS.EventEmitter, name: string | symbol): Function[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the currently set max amount of listeners.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For `EventEmitter`s this behaves exactly the same as calling `.getMaxListeners` on[m
[32m+[m[32m         * the emitter.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For `EventTarget`s this is the only way to get the max event listeners for the[m
[32m+[m[32m         * event target. If the number of event handlers on a single EventTarget exceeds[m
[32m+[m[32m         * the max set, the EventTarget will print a warning.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';[m
[32m+[m[32m         *[m
[32m+[m[32m         * {[m
[32m+[m[32m         *   const ee = new EventEmitter();[m
[32m+[m[32m         *   console.log(getMaxListeners(ee)); // 10[m
[32m+[m[32m         *   setMaxListeners(11, ee);[m
[32m+[m[32m         *   console.log(getMaxListeners(ee)); // 11[m
[32m+[m[32m         * }[m
[32m+[m[32m         * {[m
[32m+[m[32m         *   const et = new EventTarget();[m
[32m+[m[32m         *   console.log(getMaxListeners(et)); // 10[m
[32m+[m[32m         *   setMaxListeners(11, et);[m
[32m+[m[32m         *   console.log(getMaxListeners(et)); // 11[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         */[m
[32m+[m[32m        static getMaxListeners(emitter: EventTarget | NodeJS.EventEmitter): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { setMaxListeners, EventEmitter } from 'node:events';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const target = new EventTarget();[m
[32m+[m[32m         * const emitter = new EventEmitter();[m
[32m+[m[32m         *[m
[32m+[m[32m         * setMaxListeners(5, target, emitter);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.4.0[m
[32m+[m[32m         * @param n A non-negative number. The maximum number of listeners per `EventTarget` event.[m
[32m+[m[32m         * @param eventsTargets Zero or more {EventTarget} or {EventEmitter} instances. If none are specified, `n` is set as the default max for all newly created {EventTarget} and {EventEmitter}[m
[32m+[m[32m         * objects.[m
[32m+[m[32m         */[m
[32m+[m[32m        static setMaxListeners(n?: number, ...eventTargets: Array<EventTarget | NodeJS.EventEmitter>): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Listens once to the `abort` event on the provided `signal`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Listening to the `abort` event on abort signals is unsafe and may[m
[32m+[m[32m         * lead to resource leaks since another third party with the signal can[m
[32m+[m[32m         * call `e.stopImmediatePropagation()`. Unfortunately Node.js cannot change[m
[32m+[m[32m         * this since it would violate the web standard. Additionally, the original[m
[32m+[m[32m         * API makes it easy to forget to remove listeners.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This API allows safely using `AbortSignal`s in Node.js APIs by solving these[m
[32m+[m[32m         * two issues by listening to the event such that `stopImmediatePropagation` does[m
[32m+[m[32m         * not prevent the listener from running.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Returns a disposable so that it may be unsubscribed from more easily.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { addAbortListener } from 'node:events';[m
[32m+[m[32m         *[m
[32m+[m[32m         * function example(signal) {[m
[32m+[m[32m         *   let disposable;[m
[32m+[m[32m         *   try {[m
[32m+[m[32m         *     signal.addEventListener('abort', (e) => e.stopImmediatePropagation());[m
[32m+[m[32m         *     disposable = addAbortListener(signal, (e) => {[m
[32m+[m[32m         *       // Do something when signal is aborted.[m
[32m+[m[32m         *     });[m
[32m+[m[32m         *   } finally {[m
[32m+[m[32m         *     disposable?.[Symbol.dispose]();[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v20.5.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         * @return Disposable that removes the `abort` listener.[m
[32m+[m[32m         */[m
[32m+[m[32m        static addAbortListener(signal: AbortSignal, resource: (event: Event) => void): Disposable;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This symbol shall be used to install a listener for only monitoring `'error'` events. Listeners installed using this symbol are called before the regular `'error'` listeners are called.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Installing a listener using this symbol does not change the behavior once an `'error'` event is emitted. Therefore, the process will still crash if no[m
[32m+[m[32m         * regular `'error'` listener is installed.[m
[32m+[m[32m         * @since v13.6.0, v12.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        static readonly errorMonitor: unique symbol;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Value: `Symbol.for('nodejs.rejection')`[m
[32m+[m[32m         *[m
[32m+[m[32m         * See how to write a custom `rejection handler`.[m
[32m+[m[32m         * @since v13.4.0, v12.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        static readonly captureRejectionSymbol: unique symbol;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)[m
[32m+[m[32m         *[m
[32m+[m[32m         * Change the default `captureRejections` option on all new `EventEmitter` objects.[m
[32m+[m[32m         * @since v13.4.0, v12.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        static captureRejections: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * By default, a maximum of `10` listeners can be registered for any single[m
[32m+[m[32m         * event. This limit can be changed for individual `EventEmitter` instances[m
[32m+[m[32m         * using the `emitter.setMaxListeners(n)` method. To change the default[m
[32m+[m[32m         * for _all_`EventEmitter` instances, the `events.defaultMaxListeners` property[m
[32m+[m[32m         * can be used. If this value is not a positive number, a `RangeError` is thrown.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Take caution when setting the `events.defaultMaxListeners` because the[m
[32m+[m[32m         * change affects _all_ `EventEmitter` instances, including those created before[m
[32m+[m[32m         * the change is made. However, calling `emitter.setMaxListeners(n)` still has[m
[32m+[m[32m         * precedence over `events.defaultMaxListeners`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This is not a hard limit. The `EventEmitter` instance will allow[m
[32m+[m[32m         * more listeners to be added but will output a trace warning to stderr indicating[m
[32m+[m[32m         * that a "possible EventEmitter memory leak" has been detected. For any single[m
[32m+[m[32m         * `EventEmitter`, the `emitter.getMaxListeners()` and `emitter.setMaxListeners()` methods can be used to[m
[32m+[m[32m         * temporarily avoid this warning:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { EventEmitter } from 'node:events';[m
[32m+[m[32m         * const emitter = new EventEmitter();[m
[32m+[m[32m         * emitter.setMaxListeners(emitter.getMaxListeners() + 1);[m
[32m+[m[32m         * emitter.once('event', () => {[m
[32m+[m[32m         *   // do stuff[m
[32m+[m[32m         *   emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `--trace-warnings` command-line flag can be used to display the[m
[32m+[m[32m         * stack trace for such warnings.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The emitted warning can be inspected with `process.on('warning')` and will[m
[32m+[m[32m         * have the additional `emitter`, `type`, and `count` properties, referring to[m
[32m+[m[32m         * the event emitter instance, the event's name and the number of attached[m
[32m+[m[32m         * listeners, respectively.[m
[32m+[m[32m         * Its `name` property is set to `'MaxListenersExceededWarning'`.[m
[32m+[m[32m         * @since v0.11.2[m
[32m+[m[32m         */[m
[32m+[m[32m        static defaultMaxListeners: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    import internal = require("node:events");[m
[32m+[m[32m    namespace EventEmitter {[m
[32m+[m[32m        // Should just be `export { EventEmitter }`, but that doesn't work in TypeScript 3.4[m
[32m+[m[32m        export { internal as EventEmitter };[m
[32m+[m[32m        export interface Abortable {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * When provided the corresponding `AbortController` can be used to cancel an asynchronous action.[m
[32m+[m[32m             */[m
[32m+[m[32m            signal?: AbortSignal | undefined;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        export interface EventEmitterReferencingAsyncResource extends AsyncResource {[m
[32m+[m[32m            readonly eventEmitter: EventEmitterAsyncResource;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        export interface EventEmitterAsyncResourceOptions extends AsyncResourceOptions, EventEmitterOptions {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The type of async event, this is required when instantiating `EventEmitterAsyncResource`[m
[32m+[m[32m             * directly rather than as a child class.[m
[32m+[m[32m             * @default new.target.name if instantiated as a child class.[m
[32m+[m[32m             */[m
[32m+[m[32m            name?: string;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Integrates `EventEmitter` with `AsyncResource` for `EventEmitter`s that[m
[32m+[m[32m         * require manual async tracking. Specifically, all events emitted by instances[m
[32m+[m[32m         * of `events.EventEmitterAsyncResource` will run within its `async context`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { EventEmitterAsyncResource, EventEmitter } from 'node:events';[m
[32m+[m[32m         * import { notStrictEqual, strictEqual } from 'node:assert';[m
[32m+[m[32m         * import { executionAsyncId, triggerAsyncId } from 'node:async_hooks';[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Async tracking tooling will identify this as 'Q'.[m
[32m+[m[32m         * const ee1 = new EventEmitterAsyncResource({ name: 'Q' });[m
[32m+[m[32m         *[m
[32m+[m[32m         * // 'foo' listeners will run in the EventEmitters async context.[m
[32m+[m[32m         * ee1.on('foo', () => {[m
[32m+[m[32m         *   strictEqual(executionAsyncId(), ee1.asyncId);[m
[32m+[m[32m         *   strictEqual(triggerAsyncId(), ee1.triggerAsyncId);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * const ee2 = new EventEmitter();[m
[32m+[m[32m         *[m
[32m+[m[32m         * // 'foo' listeners on ordinary EventEmitters that do not track async[m
[32m+[m[32m         * // context, however, run in the same async context as the emit().[m
[32m+[m[32m         * ee2.on('foo', () => {[m
[32m+[m[32m         *   notStrictEqual(executionAsyncId(), ee2.asyncId);[m
[32m+[m[32m         *   notStrictEqual(triggerAsyncId(), ee2.triggerAsyncId);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * Promise.resolve().then(() => {[m
[32m+[m[32m         *   ee1.emit('foo');[m
[32m+[m[32m         *   ee2.emit('foo');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `EventEmitterAsyncResource` class has the same methods and takes the[m
[32m+[m[32m         * same options as `EventEmitter` and `AsyncResource` themselves.[m
[32m+[m[32m         * @since v17.4.0, v16.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        export class EventEmitterAsyncResource extends EventEmitter {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @param options Only optional in child class.[m
[32m+[m[32m             */[m
[32m+[m[32m            constructor(options?: EventEmitterAsyncResourceOptions);[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Call all `destroy` hooks. This should only ever be called once. An error will[m
[32m+[m[32m             * be thrown if it is called more than once. This **must** be manually called. If[m
[32m+[m[32m             * the resource is left to be collected by the GC then the `destroy` hooks will[m
[32m+[m[32m             * never be called.[m
[32m+[m[32m             */[m
[32m+[m[32m            emitDestroy(): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The unique `asyncId` assigned to the resource.[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly asyncId: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The same triggerAsyncId that is passed to the AsyncResource constructor.[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly triggerAsyncId: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The returned `AsyncResource` object has an additional `eventEmitter` property[m
[32m+[m[32m             * that provides a reference to this `EventEmitterAsyncResource`.[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly asyncResource: EventEmitterReferencingAsyncResource;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    global {[m
[32m+[m[32m        namespace NodeJS {[m
[32m+[m[32m            interface EventEmitter<T extends EventMap<T> = DefaultEventMap> {[m
[32m+[m[32m                [EventEmitter.captureRejectionSymbol]?<K>(error: Error, event: Key<K, T>, ...args: Args<K, T>): void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Alias for `emitter.on(eventName, listener)`.[m
[32m+[m[32m                 * @since v0.1.26[m
[32m+[m[32m                 */[m
[32m+[m[32m                addListener<K>(eventName: Key<K, T>, listener: Listener1<K, T>): this;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Adds the `listener` function to the end of the listeners array for the event[m
[32m+[m[32m                 * named `eventName`. No checks are made to see if the `listener` has already[m
[32m+[m[32m                 * been added. Multiple calls passing the same combination of `eventName` and[m
[32m+[m[32m                 * `listener` will result in the `listener` being added, and called, multiple times.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * server.on('connection', (stream) => {[m
[32m+[m[32m                 *   console.log('someone connected!');[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Returns a reference to the `EventEmitter`, so that calls can be chained.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * By default, event listeners are invoked in the order they are added. The `emitter.prependListener()` method can be used as an alternative to add the[m
[32m+[m[32m                 * event listener to the beginning of the listeners array.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { EventEmitter } from 'node:events';[m
[32m+[m[32m                 * const myEE = new EventEmitter();[m
[32m+[m[32m                 * myEE.on('foo', () => console.log('a'));[m
[32m+[m[32m                 * myEE.prependListener('foo', () => console.log('b'));[m
[32m+[m[32m                 * myEE.emit('foo');[m
[32m+[m[32m                 * // Prints:[m
[32m+[m[32m                 * //   b[m
[32m+[m[32m                 * //   a[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.1.101[m
[32m+[m[32m                 * @param eventName The name of the event.[m
[32m+[m[32m                 * @param listener The callback function[m
[32m+[m[32m                 */[m
[32m+[m[32m                on<K>(eventName: Key<K, T>, listener: Listener1<K, T>): this;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Adds a **one-time** `listener` function for the event named `eventName`. The[m
[32m+[m[32m                 * next time `eventName` is triggered, this listener is removed and then invoked.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * server.once('connection', (stream) => {[m
[32m+[m[32m                 *   console.log('Ah, we have our first user!');[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Returns a reference to the `EventEmitter`, so that calls can be chained.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * By default, event listeners are invoked in the order they are added. The `emitter.prependOnceListener()` method can be used as an alternative to add the[m
[32m+[m[32m                 * event listener to the beginning of the listeners array.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { EventEmitter } from 'node:events';[m
[32m+[m[32m                 * const myEE = new EventEmitter();[m
[32m+[m[32m                 * myEE.once('foo', () => console.log('a'));[m
[32m+[m[32m                 * myEE.prependOnceListener('foo', () => console.log('b'));[m
[32m+[m[32m                 * myEE.emit('foo');[m
[32m+[m[32m                 * // Prints:[m
[32m+[m[32m                 * //   b[m
[32m+[m[32m                 * //   a[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.3.0[m
[32m+[m[32m                 * @param eventName The name of the event.[m
[32m+[m[32m                 * @param listener The callback function[m
[32m+[m[32m                 */[m
[32m+[m[32m                once<K>(eventName: Key<K, T>, listener: Listener1<K, T>): this;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Removes the specified `listener` from the listener array for the event named `eventName`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * const callback = (stream) => {[m
[32m+[m[32m                 *   console.log('someone connected!');[m
[32m+[m[32m                 * };[m
[32m+[m[32m                 * server.on('connection', callback);[m
[32m+[m[32m                 * // ...[m
[32m+[m[32m                 * server.removeListener('connection', callback);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * `removeListener()` will remove, at most, one instance of a listener from the[m
[32m+[m[32m                 * listener array. If any single listener has been added multiple times to the[m
[32m+[m[32m                 * listener array for the specified `eventName`, then `removeListener()` must be[m
[32m+[m[32m                 * called multiple times to remove each instance.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Once an event is emitted, all listeners attached to it at the[m
[32m+[m[32m                 * time of emitting are called in order. This implies that any `removeListener()` or `removeAllListeners()` calls _after_ emitting and _before_ the last listener finishes execution[m
[32m+[m[32m                 * will not remove them from`emit()` in progress. Subsequent events behave as expected.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { EventEmitter } from 'node:events';[m
[32m+[m[32m                 * class MyEmitter extends EventEmitter {}[m
[32m+[m[32m                 * const myEmitter = new MyEmitter();[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * const callbackA = () => {[m
[32m+[m[32m                 *   console.log('A');[m
[32m+[m[32m                 *   myEmitter.removeListener('event', callbackB);[m
[32m+[m[32m                 * };[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * const callbackB = () => {[m
[32m+[m[32m                 *   console.log('B');[m
[32m+[m[32m                 * };[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * myEmitter.on('event', callbackA);[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * myEmitter.on('event', callbackB);[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // callbackA removes listener callbackB but it will still be called.[m
[32m+[m[32m                 * // Internal listener array at time of emit [callbackA, callbackB][m
[32m+[m[32m                 * myEmitter.emit('event');[m
[32m+[m[32m                 * // Prints:[m
[32m+[m[32m                 * //   A[m
[32m+[m[32m                 * //   B[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // callbackB is now removed.[m
[32m+[m[32m                 * // Internal listener array [callbackA][m
[32m+[m[32m                 * myEmitter.emit('event');[m
[32m+[m[32m                 * // Prints:[m
[32m+[m[32m                 * //   A[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Because listeners are managed using an internal array, calling this will[m
[32m+[m[32m                 * change the position indices of any listener registered _after_ the listener[m
[32m+[m[32m                 * being removed. This will not impact the order in which listeners are called,[m
[32m+[m[32m                 * but it means that any copies of the listener array as returned by[m
[32m+[m[32m                 * the `emitter.listeners()` method will need to be recreated.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * When a single function has been added as a handler multiple times for a single[m
[32m+[m[32m                 * event (as in the example below), `removeListener()` will remove the most[m
[32m+[m[32m                 * recently added instance. In the example the `once('ping')` listener is removed:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { EventEmitter } from 'node:events';[m
[32m+[m[32m                 * const ee = new EventEmitter();[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * function pong() {[m
[32m+[m[32m                 *   console.log('pong');[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ee.on('ping', pong);[m
[32m+[m[32m                 * ee.once('ping', pong);[m
[32m+[m[32m                 * ee.removeListener('ping', pong);[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ee.emit('ping');[m
[32m+[m[32m                 * ee.emit('ping');[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Returns a reference to the `EventEmitter`, so that calls can be chained.[m
[32m+[m[32m                 * @since v0.1.26[m
[32m+[m[32m                 */[m
[32m+[m[32m                removeListener<K>(eventName: Key<K, T>, listener: Listener1<K, T>): this;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Alias for `emitter.removeListener()`.[m
[32m+[m[32m                 * @since v10.0.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                off<K>(eventName: Key<K, T>, listener: Listener1<K, T>): this;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Removes all listeners, or those of the specified `eventName`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * It is bad practice to remove listeners added elsewhere in the code,[m
[32m+[m[32m                 * particularly when the `EventEmitter` instance was created by some other[m
[32m+[m[32m                 * component or module (e.g. sockets or file streams).[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Returns a reference to the `EventEmitter`, so that calls can be chained.[m
[32m+[m[32m                 * @since v0.1.26[m
[32m+[m[32m                 */[m
[32m+[m[32m                removeAllListeners(eventName?: Key<unknown, T>): this;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * By default `EventEmitter`s will print a warning if more than `10` listeners are[m
[32m+[m[32m                 * added for a particular event. This is a useful default that helps finding[m
[32m+[m[32m                 * memory leaks. The `emitter.setMaxListeners()` method allows the limit to be[m
[32m+[m[32m                 * modified for this specific `EventEmitter` instance. The value can be set to `Infinity` (or `0`) to indicate an unlimited number of listeners.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Returns a reference to the `EventEmitter`, so that calls can be chained.[m
[32m+[m[32m                 * @since v0.3.5[m
[32m+[m[32m                 */[m
[32m+[m[32m                setMaxListeners(n: number): this;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Returns the current max listener value for the `EventEmitter` which is either[m
[32m+[m[32m                 * set by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.[m
[32m+[m[32m                 * @since v1.0.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                getMaxListeners(): number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Returns a copy of the array of listeners for the event named `eventName`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * server.on('connection', (stream) => {[m
[32m+[m[32m                 *   console.log('someone connected!');[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * console.log(util.inspect(server.listeners('connection')));[m
[32m+[m[32m                 * // Prints: [ [Function] ][m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.1.26[m
[32m+[m[32m                 */[m
[32m+[m[32m                listeners<K>(eventName: Key<K, T>): Array<Listener2<K, T>>;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Returns a copy of the array of listeners for the event named `eventName`,[m
[32m+[m[32m                 * including any wrappers (such as those created by `.once()`).[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { EventEmitter } from 'node:events';[m
[32m+[m[32m                 * const emitter = new EventEmitter();[m
[32m+[m[32m                 * emitter.once('log', () => console.log('log once'));[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // Returns a new Array with a function `onceWrapper` which has a property[m
[32m+[m[32m                 * // `listener` which contains the original listener bound above[m
[32m+[m[32m                 * const listeners = emitter.rawListeners('log');[m
[32m+[m[32m                 * const logFnWrapper = listeners[0];[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // Logs "log once" to the console and does not unbind the `once` event[m
[32m+[m[32m                 * logFnWrapper.listener();[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // Logs "log once" to the console and removes the listener[m
[32m+[m[32m                 * logFnWrapper();[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * emitter.on('log', () => console.log('log persistently'));[m
[32m+[m[32m                 * // Will return a new Array with a single function bound by `.on()` above[m
[32m+[m[32m                 * const newListeners = emitter.rawListeners('log');[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // Logs "log persistently" twice[m
[32m+[m[32m                 * newListeners[0]();[m
[32m+[m[32m                 * emitter.emit('log');[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v9.4.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                rawListeners<K>(eventName: Key<K, T>): Array<Listener2<K, T>>;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Synchronously calls each of the listeners registered for the event named `eventName`, in the order they were registered, passing the supplied arguments[m
[32m+[m[32m                 * to each.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Returns `true` if the event had listeners, `false` otherwise.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { EventEmitter } from 'node:events';[m
[32m+[m[32m                 * const myEmitter = new EventEmitter();[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // First listener[m
[32m+[m[32m                 * myEmitter.on('event', function firstListener() {[m
[32m+[m[32m                 *   console.log('Helloooo! first listener');[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * // Second listener[m
[32m+[m[32m                 * myEmitter.on('event', function secondListener(arg1, arg2) {[m
[32m+[m[32m                 *   console.log(`event with parameters ${arg1}, ${arg2} in second listener`);[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * // Third listener[m
[32m+[m[32m                 * myEmitter.on('event', function thirdListener(...args) {[m
[32m+[m[32m                 *   const parameters = args.join(', ');[m
[32m+[m[32m                 *   console.log(`event with parameters ${parameters} in third listener`);[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(myEmitter.listeners('event'));[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * myEmitter.emit('event', 1, 2, 3, 4, 5);[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // Prints:[m
[32m+[m[32m                 * // [[m
[32m+[m[32m                 * //   [Function: firstListener],[m
[32m+[m[32m                 * //   [Function: secondListener],[m
[32m+[m[32m                 * //   [Function: thirdListener][m
[32m+[m[32m                 * // ][m
[32m+[m[32m                 * // Helloooo! first listener[m
[32m+[m[32m                 * // event with parameters 1, 2 in second listener[m
[32m+[m[32m                 * // event with parameters 1, 2, 3, 4, 5 in third listener[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.1.26[m
[32m+[m[32m                 */[m
[32m+[m[32m                emit<K>(eventName: Key<K, T>, ...args: Args<K, T>): boolean;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Returns the number of listeners listening for the event named `eventName`.[m
[32m+[m[32m                 * If `listener` is provided, it will return how many times the listener is found[m
[32m+[m[32m                 * in the list of the listeners of the event.[m
[32m+[m[32m                 * @since v3.2.0[m
[32m+[m[32m                 * @param eventName The name of the event being listened for[m
[32m+[m[32m                 * @param listener The event handler function[m
[32m+[m[32m                 */[m
[32m+[m[32m                listenerCount<K>(eventName: Key<K, T>, listener?: Listener2<K, T>): number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Adds the `listener` function to the _beginning_ of the listeners array for the[m
[32m+[m[32m                 * event named `eventName`. No checks are made to see if the `listener` has[m
[32m+[m[32m                 * already been added. Multiple calls passing the same combination of `eventName`[m
[32m+[m[32m                 * and `listener` will result in the `listener` being added, and called, multiple times.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * server.prependListener('connection', (stream) => {[m
[32m+[m[32m                 *   console.log('someone connected!');[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Returns a reference to the `EventEmitter`, so that calls can be chained.[m
[32m+[m[32m                 * @since v6.0.0[m
[32m+[m[32m                 * @param eventName The name of the event.[m
[32m+[m[32m                 * @param listener The callback function[m
[32m+[m[32m                 */[m
[32m+[m[32m                prependListener<K>(eventName: Key<K, T>, listener: Listener1<K, T>): this;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Adds a **one-time**`listener` function for the event named `eventName` to the _beginning_ of the listeners array. The next time `eventName` is triggered, this[m
[32m+[m[32m                 * listener is removed, and then invoked.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * server.prependOnceListener('connection', (stream) => {[m
[32m+[m[32m                 *   console.log('Ah, we have our first user!');[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Returns a reference to the `EventEmitter`, so that calls can be chained.[m
[32m+[m[32m                 * @since v6.0.0[m
[32m+[m[32m                 * @param eventName The name of the event.[m
[32m+[m[32m                 * @param listener The callback function[m
[32m+[m[32m                 */[m
[32m+[m[32m                prependOnceListener<K>(eventName: Key<K, T>, listener: Listener1<K, T>): this;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Returns an array listing the events for which the emitter has registered[m
[32m+[m[32m                 * listeners. The values in the array are strings or `Symbol`s.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { EventEmitter } from 'node:events';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * const myEE = new EventEmitter();[m
[32m+[m[32m                 * myEE.on('foo', () => {});[m
[32m+[m[32m                 * myEE.on('bar', () => {});[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * const sym = Symbol('symbol');[m
[32m+[m[32m                 * myEE.on(sym, () => {});[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(myEE.eventNames());[m
[32m+[m[32m                 * // Prints: [ 'foo', 'bar', Symbol(symbol) ][m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v6.0.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                eventNames(): Array<(string | symbol) & Key2<unknown, T>>;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    export = EventEmitter;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:events" {[m
[32m+[m[32m    import events = require("events");[m
[32m+[m[32m    export = events;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/fs.d.ts b/node_modules/@types/node/fs.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..a36c0a7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/fs.d.ts[m
[36m@@ -0,0 +1,4390 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:fs` module enables interacting with the file system in a[m
[32m+[m[32m * way modeled on standard POSIX functions.[m
[32m+[m[32m *[m
[32m+[m[32m * To use the promise-based APIs:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import * as fs from 'node:fs/promises';[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * To use the callback and sync APIs:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import * as fs from 'node:fs';[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * All file system operations have synchronous, callback, and promise-based[m
[32m+[m[32m * forms, and are accessible using both CommonJS syntax and ES6 Modules (ESM).[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/fs.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "fs" {[m
[32m+[m[32m    import * as stream from "node:stream";[m
[32m+[m[32m    import { Abortable, EventEmitter } from "node:events";[m
[32m+[m[32m    import { URL } from "node:url";[m
[32m+[m[32m    import * as promises from "node:fs/promises";[m
[32m+[m[32m    export { promises };[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Valid types for path values in "fs".[m
[32m+[m[32m     */[m
[32m+[m[32m    export type PathLike = string | Buffer | URL;[m
[32m+[m[32m    export type PathOrFileDescriptor = PathLike | number;[m
[32m+[m[32m    export type TimeLike = string | number | Date;[m
[32m+[m[32m    export type NoParamCallback = (err: NodeJS.ErrnoException | null) => void;[m
[32m+[m[32m    export type BufferEncodingOption =[m
[32m+[m[32m        | "buffer"[m
[32m+[m[32m        | {[m
[32m+[m[32m            encoding: "buffer";[m
[32m+[m[32m        };[m
[32m+[m[32m    export interface ObjectEncodingOptions {[m
[32m+[m[32m        encoding?: BufferEncoding | null | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export type EncodingOption = ObjectEncodingOptions | BufferEncoding | undefined | null;[m
[32m+[m[32m    export type OpenMode = number | string;[m
[32m+[m[32m    export type Mode = number | string;[m
[32m+[m[32m    export interface StatsBase<T> {[m
[32m+[m[32m        isFile(): boolean;[m
[32m+[m[32m        isDirectory(): boolean;[m
[32m+[m[32m        isBlockDevice(): boolean;[m
[32m+[m[32m        isCharacterDevice(): boolean;[m
[32m+[m[32m        isSymbolicLink(): boolean;[m
[32m+[m[32m        isFIFO(): boolean;[m
[32m+[m[32m        isSocket(): boolean;[m
[32m+[m[32m        dev: T;[m
[32m+[m[32m        ino: T;[m
[32m+[m[32m        mode: T;[m
[32m+[m[32m        nlink: T;[m
[32m+[m[32m        uid: T;[m
[32m+[m[32m        gid: T;[m
[32m+[m[32m        rdev: T;[m
[32m+[m[32m        size: T;[m
[32m+[m[32m        blksize: T;[m
[32m+[m[32m        blocks: T;[m
[32m+[m[32m        atimeMs: T;[m
[32m+[m[32m        mtimeMs: T;[m
[32m+[m[32m        ctimeMs: T;[m
[32m+[m[32m        birthtimeMs: T;[m
[32m+[m[32m        atime: Date;[m
[32m+[m[32m        mtime: Date;[m
[32m+[m[32m        ctime: Date;[m
[32m+[m[32m        birthtime: Date;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface Stats extends StatsBase<number> {}[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A `fs.Stats` object provides information about a file.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Objects returned from {@link stat}, {@link lstat}, {@link fstat}, and[m
[32m+[m[32m     * their synchronous counterparts are of this type.[m
[32m+[m[32m     * If `bigint` in the `options` passed to those methods is true, the numeric values[m
[32m+[m[32m     * will be `bigint` instead of `number`, and the object will contain additional[m
[32m+[m[32m     * nanosecond-precision properties suffixed with `Ns`. `Stat` objects are not to be created directly using the `new` keyword.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```console[m
[32m+[m[32m     * Stats {[m
[32m+[m[32m     *   dev: 2114,[m
[32m+[m[32m     *   ino: 48064969,[m
[32m+[m[32m     *   mode: 33188,[m
[32m+[m[32m     *   nlink: 1,[m
[32m+[m[32m     *   uid: 85,[m
[32m+[m[32m     *   gid: 100,[m
[32m+[m[32m     *   rdev: 0,[m
[32m+[m[32m     *   size: 527,[m
[32m+[m[32m     *   blksize: 4096,[m
[32m+[m[32m     *   blocks: 8,[m
[32m+[m[32m     *   atimeMs: 1318289051000.1,[m
[32m+[m[32m     *   mtimeMs: 1318289051000.1,[m
[32m+[m[32m     *   ctimeMs: 1318289051000.1,[m
[32m+[m[32m     *   birthtimeMs: 1318289051000.1,[m
[32m+[m[32m     *   atime: Mon, 10 Oct 2011 23:24:11 GMT,[m
[32m+[m[32m     *   mtime: Mon, 10 Oct 2011 23:24:11 GMT,[m
[32m+[m[32m     *   ctime: Mon, 10 Oct 2011 23:24:11 GMT,[m
[32m+[m[32m     *   birthtime: Mon, 10 Oct 2011 23:24:11 GMT }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * `bigint` version:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```console[m
[32m+[m[32m     * BigIntStats {[m
[32m+[m[32m     *   dev: 2114n,[m
[32m+[m[32m     *   ino: 48064969n,[m
[32m+[m[32m     *   mode: 33188n,[m
[32m+[m[32m     *   nlink: 1n,[m
[32m+[m[32m     *   uid: 85n,[m
[32m+[m[32m     *   gid: 100n,[m
[32m+[m[32m     *   rdev: 0n,[m
[32m+[m[32m     *   size: 527n,[m
[32m+[m[32m     *   blksize: 4096n,[m
[32m+[m[32m     *   blocks: 8n,[m
[32m+[m[32m     *   atimeMs: 1318289051000n,[m
[32m+[m[32m     *   mtimeMs: 1318289051000n,[m
[32m+[m[32m     *   ctimeMs: 1318289051000n,[m
[32m+[m[32m     *   birthtimeMs: 1318289051000n,[m
[32m+[m[32m     *   atimeNs: 1318289051000000000n,[m
[32m+[m[32m     *   mtimeNs: 1318289051000000000n,[m
[32m+[m[32m     *   ctimeNs: 1318289051000000000n,[m
[32m+[m[32m     *   birthtimeNs: 1318289051000000000n,[m
[32m+[m[32m     *   atime: Mon, 10 Oct 2011 23:24:11 GMT,[m
[32m+[m[32m     *   mtime: Mon, 10 Oct 2011 23:24:11 GMT,[m
[32m+[m[32m     *   ctime: Mon, 10 Oct 2011 23:24:11 GMT,[m
[32m+[m[32m     *   birthtime: Mon, 10 Oct 2011 23:24:11 GMT }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     */[m
[32m+[m[32m    export class Stats {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface StatsFsBase<T> {[m
[32m+[m[32m        /** Type of file system. */[m
[32m+[m[32m        type: T;[m
[32m+[m[32m        /**  Optimal transfer block size. */[m
[32m+[m[32m        bsize: T;[m
[32m+[m[32m        /**  Total data blocks in file system. */[m
[32m+[m[32m        blocks: T;[m
[32m+[m[32m        /** Free blocks in file system. */[m
[32m+[m[32m        bfree: T;[m
[32m+[m[32m        /** Available blocks for unprivileged users */[m
[32m+[m[32m        bavail: T;[m
[32m+[m[32m        /** Total file nodes in file system. */[m
[32m+[m[32m        files: T;[m
[32m+[m[32m        /** Free file nodes in file system. */[m
[32m+[m[32m        ffree: T;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface StatsFs extends StatsFsBase<number> {}[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Provides information about a mounted file system.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Objects returned from {@link statfs} and its synchronous counterpart are of[m
[32m+[m[32m     * this type. If `bigint` in the `options` passed to those methods is `true`, the[m
[32m+[m[32m     * numeric values will be `bigint` instead of `number`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```console[m
[32m+[m[32m     * StatFs {[m
[32m+[m[32m     *   type: 1397114950,[m
[32m+[m[32m     *   bsize: 4096,[m
[32m+[m[32m     *   blocks: 121938943,[m
[32m+[m[32m     *   bfree: 61058895,[m
[32m+[m[32m     *   bavail: 61058895,[m
[32m+[m[32m     *   files: 999,[m
[32m+[m[32m     *   ffree: 1000000[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * `bigint` version:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```console[m
[32m+[m[32m     * StatFs {[m
[32m+[m[32m     *   type: 1397114950n,[m
[32m+[m[32m     *   bsize: 4096n,[m
[32m+[m[32m     *   blocks: 121938943n,[m
[32m+[m[32m     *   bfree: 61058895n,[m
[32m+[m[32m     *   bavail: 61058895n,[m
[32m+[m[32m     *   files: 999n,[m
[32m+[m[32m     *   ffree: 1000000n[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v19.6.0, v18.15.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export class StatsFs {}[m
[32m+[m[32m    export interface BigIntStatsFs extends StatsFsBase<bigint> {}[m
[32m+[m[32m    export interface StatFsOptions {[m
[32m+[m[32m        bigint?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A representation of a directory entry, which can be a file or a subdirectory[m
[32m+[m[32m     * within the directory, as returned by reading from an `fs.Dir`. The[m
[32m+[m[32m     * directory entry is a combination of the file name and file type pairs.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Additionally, when {@link readdir} or {@link readdirSync} is called with[m
[32m+[m[32m     * the `withFileTypes` option set to `true`, the resulting array is filled with `fs.Dirent` objects, rather than strings or `Buffer` s.[m
[32m+[m[32m     * @since v10.10.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export class Dirent {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` if the `fs.Dirent` object describes a regular file.[m
[32m+[m[32m         * @since v10.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        isFile(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` if the `fs.Dirent` object describes a file system[m
[32m+[m[32m         * directory.[m
[32m+[m[32m         * @since v10.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        isDirectory(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` if the `fs.Dirent` object describes a block device.[m
[32m+[m[32m         * @since v10.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        isBlockDevice(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` if the `fs.Dirent` object describes a character device.[m
[32m+[m[32m         * @since v10.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        isCharacterDevice(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` if the `fs.Dirent` object describes a symbolic link.[m
[32m+[m[32m         * @since v10.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        isSymbolicLink(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` if the `fs.Dirent` object describes a first-in-first-out[m
[32m+[m[32m         * (FIFO) pipe.[m
[32m+[m[32m         * @since v10.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        isFIFO(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` if the `fs.Dirent` object describes a socket.[m
[32m+[m[32m         * @since v10.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        isSocket(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The file name that this `fs.Dirent` object refers to. The type of this[m
[32m+[m[32m         * value is determined by the `options.encoding` passed to {@link readdir} or {@link readdirSync}.[m
[32m+[m[32m         * @since v10.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        name: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The base path that this `fs.Dirent` object refers to.[m
[32m+[m[32m         * @since v20.12.0[m
[32m+[m[32m         */[m
[32m+[m[32m        parentPath: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Alias for `dirent.parentPath`.[m
[32m+[m[32m         * @since v20.1.0[m
[32m+[m[32m         * @deprecated Since v20.12.0[m
[32m+[m[32m         */[m
[32m+[m[32m        path: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A class representing a directory stream.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Created by {@link opendir}, {@link opendirSync}, or `fsPromises.opendir()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { opendir } from 'node:fs/promises';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   const dir = await opendir('./');[m
[32m+[m[32m     *   for await (const dirent of dir)[m
[32m+[m[32m     *     console.log(dirent.name);[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   console.error(err);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * When using the async iterator, the `fs.Dir` object will be automatically[m
[32m+[m[32m     * closed after the iterator exits.[m
[32m+[m[32m     * @since v12.12.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export class Dir implements AsyncIterable<Dirent> {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The read-only path of this directory as was provided to {@link opendir},{@link opendirSync}, or `fsPromises.opendir()`.[m
[32m+[m[32m         * @since v12.12.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly path: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously iterates over the directory via `readdir(3)` until all entries have been read.[m
[32m+[m[32m         */[m
[32m+[m[32m        [Symbol.asyncIterator](): AsyncIterableIterator<Dirent>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously close the directory's underlying resource handle.[m
[32m+[m[32m         * Subsequent reads will result in errors.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A promise is returned that will be fulfilled after the resource has been[m
[32m+[m[32m         * closed.[m
[32m+[m[32m         * @since v12.12.0[m
[32m+[m[32m         */[m
[32m+[m[32m        close(): Promise<void>;[m
[32m+[m[32m        close(cb: NoParamCallback): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Synchronously close the directory's underlying resource handle.[m
[32m+[m[32m         * Subsequent reads will result in errors.[m
[32m+[m[32m         * @since v12.12.0[m
[32m+[m[32m         */[m
[32m+[m[32m        closeSync(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously read the next directory entry via [`readdir(3)`](http://man7.org/linux/man-pages/man3/readdir.3.html) as an `fs.Dirent`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A promise is returned that will be fulfilled with an `fs.Dirent`, or `null` if there are no more directory entries to read.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Directory entries returned by this function are in no particular order as[m
[32m+[m[32m         * provided by the operating system's underlying directory mechanisms.[m
[32m+[m[32m         * Entries added or removed while iterating over the directory might not be[m
[32m+[m[32m         * included in the iteration results.[m
[32m+[m[32m         * @since v12.12.0[m
[32m+[m[32m         * @return containing {fs.Dirent|null}[m
[32m+[m[32m         */[m
[32m+[m[32m        read(): Promise<Dirent | null>;[m
[32m+[m[32m        read(cb: (err: NodeJS.ErrnoException | null, dirEnt: Dirent | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Synchronously read the next directory entry as an `fs.Dirent`. See the[m
[32m+[m[32m         * POSIX [`readdir(3)`](http://man7.org/linux/man-pages/man3/readdir.3.html) documentation for more detail.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If there are no more directory entries to read, `null` will be returned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Directory entries returned by this function are in no particular order as[m
[32m+[m[32m         * provided by the operating system's underlying directory mechanisms.[m
[32m+[m[32m         * Entries added or removed while iterating over the directory might not be[m
[32m+[m[32m         * included in the iteration results.[m
[32m+[m[32m         * @since v12.12.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readSync(): Dirent | null;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Class: fs.StatWatcher[m
[32m+[m[32m     * @since v14.3.0, v12.20.0[m
[32m+[m[32m     * Extends `EventEmitter`[m
[32m+[m[32m     * A successful call to {@link watchFile} method will return a new fs.StatWatcher object.[m
[32m+[m[32m     */[m
[32m+[m[32m    export interface StatWatcher extends EventEmitter {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When called, requests that the Node.js event loop _not_ exit so long as the `fs.StatWatcher` is active. Calling `watcher.ref()` multiple times will have[m
[32m+[m[32m         * no effect.[m
[32m+[m[32m         *[m
[32m+[m[32m         * By default, all `fs.StatWatcher` objects are "ref'ed", making it normally[m
[32m+[m[32m         * unnecessary to call `watcher.ref()` unless `watcher.unref()` had been[m
[32m+[m[32m         * called previously.[m
[32m+[m[32m         * @since v14.3.0, v12.20.0[m
[32m+[m[32m         */[m
[32m+[m[32m        ref(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When called, the active `fs.StatWatcher` object will not require the Node.js[m
[32m+[m[32m         * event loop to remain active. If there is no other activity keeping the[m
[32m+[m[32m         * event loop running, the process may exit before the `fs.StatWatcher` object's[m
[32m+[m[32m         * callback is invoked. Calling `watcher.unref()` multiple times will have[m
[32m+[m[32m         * no effect.[m
[32m+[m[32m         * @since v14.3.0, v12.20.0[m
[32m+[m[32m         */[m
[32m+[m[32m        unref(): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface FSWatcher extends EventEmitter {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Stop watching for changes on the given `fs.FSWatcher`. Once stopped, the `fs.FSWatcher` object is no longer usable.[m
[32m+[m[32m         * @since v0.5.8[m
[32m+[m[32m         */[m
[32m+[m[32m        close(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When called, requests that the Node.js event loop _not_ exit so long as the `fs.FSWatcher` is active. Calling `watcher.ref()` multiple times will have[m
[32m+[m[32m         * no effect.[m
[32m+[m[32m         *[m
[32m+[m[32m         * By default, all `fs.FSWatcher` objects are "ref'ed", making it normally[m
[32m+[m[32m         * unnecessary to call `watcher.ref()` unless `watcher.unref()` had been[m
[32m+[m[32m         * called previously.[m
[32m+[m[32m         * @since v14.3.0, v12.20.0[m
[32m+[m[32m         */[m
[32m+[m[32m        ref(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When called, the active `fs.FSWatcher` object will not require the Node.js[m
[32m+[m[32m         * event loop to remain active. If there is no other activity keeping the[m
[32m+[m[32m         * event loop running, the process may exit before the `fs.FSWatcher` object's[m
[32m+[m[32m         * callback is invoked. Calling `watcher.unref()` multiple times will have[m
[32m+[m[32m         * no effect.[m
[32m+[m[32m         * @since v14.3.0, v12.20.0[m
[32m+[m[32m         */[m
[32m+[m[32m        unref(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         *   1. change[m
[32m+[m[32m         *   2. close[m
[32m+[m[32m         *   3. error[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "change", listener: (eventType: string, filename: string | Buffer) => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "change", listener: (eventType: string, filename: string | Buffer) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "change", listener: (eventType: string, filename: string | Buffer) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "change", listener: (eventType: string, filename: string | Buffer) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "change", listener: (eventType: string, filename: string | Buffer) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Instances of `fs.ReadStream` are created and returned using the {@link createReadStream} function.[m
[32m+[m[32m     * @since v0.1.93[m
[32m+[m[32m     */[m
[32m+[m[32m    export class ReadStream extends stream.Readable {[m
[32m+[m[32m        close(callback?: (err?: NodeJS.ErrnoException | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of bytes that have been read so far.[m
[32m+[m[32m         * @since v6.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        bytesRead: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The path to the file the stream is reading from as specified in the first[m
[32m+[m[32m         * argument to `fs.createReadStream()`. If `path` is passed as a string, then`readStream.path` will be a string. If `path` is passed as a `Buffer`, then`readStream.path` will be a[m
[32m+[m[32m         * `Buffer`. If `fd` is specified, then`readStream.path` will be `undefined`.[m
[32m+[m[32m         * @since v0.1.93[m
[32m+[m[32m         */[m
[32m+[m[32m        path: string | Buffer;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property is `true` if the underlying file has not been opened yet,[m
[32m+[m[32m         * i.e. before the `'ready'` event is emitted.[m
[32m+[m[32m         * @since v11.2.0, v10.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        pending: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         *   1. open[m
[32m+[m[32m         *   2. close[m
[32m+[m[32m         *   3. ready[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        addListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "open", listener: (fd: number) => void): this;[m
[32m+[m[32m        addListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "ready", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        on(event: "end", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "open", listener: (fd: number) => void): this;[m
[32m+[m[32m        on(event: "pause", listener: () => void): this;[m
[32m+[m[32m        on(event: "readable", listener: () => void): this;[m
[32m+[m[32m        on(event: "ready", listener: () => void): this;[m
[32m+[m[32m        on(event: "resume", listener: () => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        once(event: "end", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "open", listener: (fd: number) => void): this;[m
[32m+[m[32m        once(event: "pause", listener: () => void): this;[m
[32m+[m[32m        once(event: "readable", listener: () => void): this;[m
[32m+[m[32m        once(event: "ready", listener: () => void): this;[m
[32m+[m[32m        once(event: "resume", listener: () => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        prependListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "open", listener: (fd: number) => void): this;[m
[32m+[m[32m        prependListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "ready", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "open", listener: (fd: number) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "ready", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * * Extends `stream.Writable`[m
[32m+[m[32m     *[m
[32m+[m[32m     * Instances of `fs.WriteStream` are created and returned using the {@link createWriteStream} function.[m
[32m+[m[32m     * @since v0.1.93[m
[32m+[m[32m     */[m
[32m+[m[32m    export class WriteStream extends stream.Writable {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Closes `writeStream`. Optionally accepts a[m
[32m+[m[32m         * callback that will be executed once the `writeStream`is closed.[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         */[m
[32m+[m[32m        close(callback?: (err?: NodeJS.ErrnoException | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of bytes written so far. Does not include data that is still queued[m
[32m+[m[32m         * for writing.[m
[32m+[m[32m         * @since v0.4.7[m
[32m+[m[32m         */[m
[32m+[m[32m        bytesWritten: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The path to the file the stream is writing to as specified in the first[m
[32m+[m[32m         * argument to {@link createWriteStream}. If `path` is passed as a string, then`writeStream.path` will be a string. If `path` is passed as a `Buffer`, then`writeStream.path` will be a[m
[32m+[m[32m         * `Buffer`.[m
[32m+[m[32m         * @since v0.1.93[m
[32m+[m[32m         */[m
[32m+[m[32m        path: string | Buffer;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property is `true` if the underlying file has not been opened yet,[m
[32m+[m[32m         * i.e. before the `'ready'` event is emitted.[m
[32m+[m[32m         * @since v11.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        pending: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         *   1. open[m
[32m+[m[32m         *   2. close[m
[32m+[m[32m         *   3. ready[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "open", listener: (fd: number) => void): this;[m
[32m+[m[32m        addListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        addListener(event: "ready", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "drain", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "finish", listener: () => void): this;[m
[32m+[m[32m        on(event: "open", listener: (fd: number) => void): this;[m
[32m+[m[32m        on(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        on(event: "ready", listener: () => void): this;[m
[32m+[m[32m        on(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "drain", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "finish", listener: () => void): this;[m
[32m+[m[32m        once(event: "open", listener: (fd: number) => void): this;[m
[32m+[m[32m        once(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        once(event: "ready", listener: () => void): this;[m
[32m+[m[32m        once(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "open", listener: (fd: number) => void): this;[m
[32m+[m[32m        prependListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependListener(event: "ready", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "open", listener: (fd: number) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "ready", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously rename file at `oldPath` to the pathname provided[m
[32m+[m[32m     * as `newPath`. In the case that `newPath` already exists, it will[m
[32m+[m[32m     * be overwritten. If there is a directory at `newPath`, an error will[m
[32m+[m[32m     * be raised instead. No arguments other than a possible exception are[m
[32m+[m[32m     * given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See also: [`rename(2)`](http://man7.org/linux/man-pages/man2/rename.2.html).[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { rename } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * rename('oldFile.txt', 'newFile.txt', (err) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log('Rename complete!');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.0.2[m
[32m+[m[32m     */[m
[32m+[m[32m    export function rename(oldPath: PathLike, newPath: PathLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace rename {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous rename(2) - Change the name or location of a file or directory.[m
[32m+[m[32m         * @param oldPath A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * URL support is _experimental_.[m
[32m+[m[32m         * @param newPath A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * URL support is _experimental_.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(oldPath: PathLike, newPath: PathLike): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Renames the file from `oldPath` to `newPath`. Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`rename(2)`](http://man7.org/linux/man-pages/man2/rename.2.html) documentation for more details.[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     */[m
[32m+[m[32m    export function renameSync(oldPath: PathLike, newPath: PathLike): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Truncates the file. No arguments other than a possible exception are[m
[32m+[m[32m     * given to the completion callback. A file descriptor can also be passed as the[m
[32m+[m[32m     * first argument. In this case, `fs.ftruncate()` is called.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { truncate } from 'node:fs';[m
[32m+[m[32m     * // Assuming that 'path/file.txt' is a regular file.[m
[32m+[m[32m     * truncate('path/file.txt', (err) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log('path/file.txt was truncated');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Passing a file descriptor is deprecated and may result in an error being thrown[m
[32m+[m[32m     * in the future.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`truncate(2)`](http://man7.org/linux/man-pages/man2/truncate.2.html) documentation for more details.[m
[32m+[m[32m     * @since v0.8.6[m
[32m+[m[32m     * @param [len=0][m
[32m+[m[32m     */[m
[32m+[m[32m    export function truncate(path: PathLike, len: number | undefined | null, callback: NoParamCallback): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous truncate(2) - Truncate a file to a specified length.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function truncate(path: PathLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace truncate {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous truncate(2) - Truncate a file to a specified length.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param len If not specified, defaults to `0`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, len?: number | null): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Truncates the file. Returns `undefined`. A file descriptor can also be[m
[32m+[m[32m     * passed as the first argument. In this case, `fs.ftruncateSync()` is called.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Passing a file descriptor is deprecated and may result in an error being thrown[m
[32m+[m[32m     * in the future.[m
[32m+[m[32m     * @since v0.8.6[m
[32m+[m[32m     * @param [len=0][m
[32m+[m[32m     */[m
[32m+[m[32m    export function truncateSync(path: PathLike, len?: number | null): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Truncates the file descriptor. No arguments other than a possible exception are[m
[32m+[m[32m     * given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`ftruncate(2)`](http://man7.org/linux/man-pages/man2/ftruncate.2.html) documentation for more detail.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the file referred to by the file descriptor was larger than `len` bytes, only[m
[32m+[m[32m     * the first `len` bytes will be retained in the file.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For example, the following program retains only the first four bytes of the[m
[32m+[m[32m     * file:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { open, close, ftruncate } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * function closeFd(fd) {[m
[32m+[m[32m     *   close(fd, (err) => {[m
[32m+[m[32m     *     if (err) throw err;[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * open('temp.txt', 'r+', (err, fd) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *[m
[32m+[m[32m     *   try {[m
[32m+[m[32m     *     ftruncate(fd, 4, (err) => {[m
[32m+[m[32m     *       closeFd(fd);[m
[32m+[m[32m     *       if (err) throw err;[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   } catch (err) {[m
[32m+[m[32m     *     closeFd(fd);[m
[32m+[m[32m     *     if (err) throw err;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the file previously was shorter than `len` bytes, it is extended, and the[m
[32m+[m[32m     * extended part is filled with null bytes (`'\0'`):[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `len` is negative then `0` will be used.[m
[32m+[m[32m     * @since v0.8.6[m
[32m+[m[32m     * @param [len=0][m
[32m+[m[32m     */[m
[32m+[m[32m    export function ftruncate(fd: number, len: number | undefined | null, callback: NoParamCallback): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous ftruncate(2) - Truncate a file to a specified length.[m
[32m+[m[32m     * @param fd A file descriptor.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function ftruncate(fd: number, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace ftruncate {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous ftruncate(2) - Truncate a file to a specified length.[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         * @param len If not specified, defaults to `0`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(fd: number, len?: number | null): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Truncates the file descriptor. Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link ftruncate}.[m
[32m+[m[32m     * @since v0.8.6[m
[32m+[m[32m     * @param [len=0][m
[32m+[m[32m     */[m
[32m+[m[32m    export function ftruncateSync(fd: number, len?: number | null): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously changes owner and group of a file. No arguments other than a[m
[32m+[m[32m     * possible exception are given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`chown(2)`](http://man7.org/linux/man-pages/man2/chown.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.1.97[m
[32m+[m[32m     */[m
[32m+[m[32m    export function chown(path: PathLike, uid: number, gid: number, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace chown {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous chown(2) - Change ownership of a file.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, uid: number, gid: number): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously changes owner and group of a file. Returns `undefined`.[m
[32m+[m[32m     * This is the synchronous version of {@link chown}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`chown(2)`](http://man7.org/linux/man-pages/man2/chown.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.1.97[m
[32m+[m[32m     */[m
[32m+[m[32m    export function chownSync(path: PathLike, uid: number, gid: number): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sets the owner of the file. No arguments other than a possible exception are[m
[32m+[m[32m     * given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`fchown(2)`](http://man7.org/linux/man-pages/man2/fchown.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.4.7[m
[32m+[m[32m     */[m
[32m+[m[32m    export function fchown(fd: number, uid: number, gid: number, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace fchown {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous fchown(2) - Change ownership of a file.[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(fd: number, uid: number, gid: number): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sets the owner of the file. Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`fchown(2)`](http://man7.org/linux/man-pages/man2/fchown.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.4.7[m
[32m+[m[32m     * @param uid The file's new owner's user id.[m
[32m+[m[32m     * @param gid The file's new group's group id.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function fchownSync(fd: number, uid: number, gid: number): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Set the owner of the symbolic link. No arguments other than a possible[m
[32m+[m[32m     * exception are given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`lchown(2)`](http://man7.org/linux/man-pages/man2/lchown.2.html) documentation for more detail.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function lchown(path: PathLike, uid: number, gid: number, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace lchown {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous lchown(2) - Change ownership of a file. Does not dereference symbolic links.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, uid: number, gid: number): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Set the owner for the path. Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`lchown(2)`](http://man7.org/linux/man-pages/man2/lchown.2.html) documentation for more details.[m
[32m+[m[32m     * @param uid The file's new owner's user id.[m
[32m+[m[32m     * @param gid The file's new group's group id.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function lchownSync(path: PathLike, uid: number, gid: number): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Changes the access and modification times of a file in the same way as {@link utimes}, with the difference that if the path refers to a symbolic[m
[32m+[m[32m     * link, then the link is not dereferenced: instead, the timestamps of the[m
[32m+[m[32m     * symbolic link itself are changed.[m
[32m+[m[32m     *[m
[32m+[m[32m     * No arguments other than a possible exception are given to the completion[m
[32m+[m[32m     * callback.[m
[32m+[m[32m     * @since v14.5.0, v12.19.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function lutimes(path: PathLike, atime: TimeLike, mtime: TimeLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace lutimes {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Changes the access and modification times of a file in the same way as `fsPromises.utimes()`,[m
[32m+[m[32m         * with the difference that if the path refers to a symbolic link, then the link is not[m
[32m+[m[32m         * dereferenced: instead, the timestamps of the symbolic link itself are changed.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param atime The last access time. If a string is provided, it will be coerced to number.[m
[32m+[m[32m         * @param mtime The last modified time. If a string is provided, it will be coerced to number.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, atime: TimeLike, mtime: TimeLike): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Change the file system timestamps of the symbolic link referenced by `path`.[m
[32m+[m[32m     * Returns `undefined`, or throws an exception when parameters are incorrect or[m
[32m+[m[32m     * the operation fails. This is the synchronous version of {@link lutimes}.[m
[32m+[m[32m     * @since v14.5.0, v12.19.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function lutimesSync(path: PathLike, atime: TimeLike, mtime: TimeLike): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously changes the permissions of a file. No arguments other than a[m
[32m+[m[32m     * possible exception are given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`chmod(2)`](http://man7.org/linux/man-pages/man2/chmod.2.html) documentation for more detail.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { chmod } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * chmod('my_file.txt', 0o775, (err) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log('The permissions for file "my_file.txt" have been changed!');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.30[m
[32m+[m[32m     */[m
[32m+[m[32m    export function chmod(path: PathLike, mode: Mode, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace chmod {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous chmod(2) - Change permissions of a file.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param mode A file mode. If a string is passed, it is parsed as an octal integer.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, mode: Mode): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link chmod}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`chmod(2)`](http://man7.org/linux/man-pages/man2/chmod.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.6.7[m
[32m+[m[32m     */[m
[32m+[m[32m    export function chmodSync(path: PathLike, mode: Mode): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sets the permissions on the file. No arguments other than a possible exception[m
[32m+[m[32m     * are given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`fchmod(2)`](http://man7.org/linux/man-pages/man2/fchmod.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.4.7[m
[32m+[m[32m     */[m
[32m+[m[32m    export function fchmod(fd: number, mode: Mode, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace fchmod {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous fchmod(2) - Change permissions of a file.[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         * @param mode A file mode. If a string is passed, it is parsed as an octal integer.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(fd: number, mode: Mode): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sets the permissions on the file. Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`fchmod(2)`](http://man7.org/linux/man-pages/man2/fchmod.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.4.7[m
[32m+[m[32m     */[m
[32m+[m[32m    export function fchmodSync(fd: number, mode: Mode): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Changes the permissions on a symbolic link. No arguments other than a possible[m
[32m+[m[32m     * exception are given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This method is only implemented on macOS.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`lchmod(2)`](https://www.freebsd.org/cgi/man.cgi?query=lchmod&sektion=2) documentation for more detail.[m
[32m+[m[32m     * @deprecated Since v0.4.7[m
[32m+[m[32m     */[m
[32m+[m[32m    export function lchmod(path: PathLike, mode: Mode, callback: NoParamCallback): void;[m
[32m+[m[32m    /** @deprecated */[m
[32m+[m[32m    export namespace lchmod {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous lchmod(2) - Change permissions of a file. Does not dereference symbolic links.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param mode A file mode. If a string is passed, it is parsed as an octal integer.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, mode: Mode): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Changes the permissions on a symbolic link. Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This method is only implemented on macOS.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`lchmod(2)`](https://www.freebsd.org/cgi/man.cgi?query=lchmod&sektion=2) documentation for more detail.[m
[32m+[m[32m     * @deprecated Since v0.4.7[m
[32m+[m[32m     */[m
[32m+[m[32m    export function lchmodSync(path: PathLike, mode: Mode): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous [`stat(2)`](http://man7.org/linux/man-pages/man2/stat.2.html). The callback gets two arguments `(err, stats)` where`stats` is an `fs.Stats` object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * In case of an error, the `err.code` will be one of `Common System Errors`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * {@link stat} follows symbolic links. Use {@link lstat} to look at the[m
[32m+[m[32m     * links themselves.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using `fs.stat()` to check for the existence of a file before calling`fs.open()`, `fs.readFile()`, or `fs.writeFile()` is not recommended.[m
[32m+[m[32m     * Instead, user code should open/read/write the file directly and handle the[m
[32m+[m[32m     * error raised if the file is not available.[m
[32m+[m[32m     *[m
[32m+[m[32m     * To check if a file exists without manipulating it afterwards, {@link access} is recommended.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For example, given the following directory structure:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```text[m
[32m+[m[32m     * - txtDir[m
[32m+[m[32m     * -- file.txt[m
[32m+[m[32m     * - app.js[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The next program will check for the stats of the given paths:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { stat } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const pathsToCheck = ['./txtDir', './txtDir/file.txt'];[m
[32m+[m[32m     *[m
[32m+[m[32m     * for (let i = 0; i < pathsToCheck.length; i++) {[m
[32m+[m[32m     *   stat(pathsToCheck[i], (err, stats) => {[m
[32m+[m[32m     *     console.log(stats.isDirectory());[m
[32m+[m[32m     *     console.log(stats);[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The resulting output will resemble:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```console[m
[32m+[m[32m     * true[m
[32m+[m[32m     * Stats {[m
[32m+[m[32m     *   dev: 16777220,[m
[32m+[m[32m     *   mode: 16877,[m
[32m+[m[32m     *   nlink: 3,[m
[32m+[m[32m     *   uid: 501,[m
[32m+[m[32m     *   gid: 20,[m
[32m+[m[32m     *   rdev: 0,[m
[32m+[m[32m     *   blksize: 4096,[m
[32m+[m[32m     *   ino: 14214262,[m
[32m+[m[32m     *   size: 96,[m
[32m+[m[32m     *   blocks: 0,[m
[32m+[m[32m     *   atimeMs: 1561174653071.963,[m
[32m+[m[32m     *   mtimeMs: 1561174614583.3518,[m
[32m+[m[32m     *   ctimeMs: 1561174626623.5366,[m
[32m+[m[32m     *   birthtimeMs: 1561174126937.2893,[m
[32m+[m[32m     *   atime: 2019-06-22T03:37:33.072Z,[m
[32m+[m[32m     *   mtime: 2019-06-22T03:36:54.583Z,[m
[32m+[m[32m     *   ctime: 2019-06-22T03:37:06.624Z,[m
[32m+[m[32m     *   birthtime: 2019-06-22T03:28:46.937Z[m
[32m+[m[32m     * }[m
[32m+[m[32m     * false[m
[32m+[m[32m     * Stats {[m
[32m+[m[32m     *   dev: 16777220,[m
[32m+[m[32m     *   mode: 33188,[m
[32m+[m[32m     *   nlink: 1,[m
[32m+[m[32m     *   uid: 501,[m
[32m+[m[32m     *   gid: 20,[m
[32m+[m[32m     *   rdev: 0,[m
[32m+[m[32m     *   blksize: 4096,[m
[32m+[m[32m     *   ino: 14214074,[m
[32m+[m[32m     *   size: 8,[m
[32m+[m[32m     *   blocks: 8,[m
[32m+[m[32m     *   atimeMs: 1561174616618.8555,[m
[32m+[m[32m     *   mtimeMs: 1561174614584,[m
[32m+[m[32m     *   ctimeMs: 1561174614583.8145,[m
[32m+[m[32m     *   birthtimeMs: 1561174007710.7478,[m
[32m+[m[32m     *   atime: 2019-06-22T03:36:56.619Z,[m
[32m+[m[32m     *   mtime: 2019-06-22T03:36:54.584Z,[m
[32m+[m[32m     *   ctime: 2019-06-22T03:36:54.584Z,[m
[32m+[m[32m     *   birthtime: 2019-06-22T03:26:47.711Z[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.0.2[m
[32m+[m[32m     */[m
[32m+[m[32m    export function stat(path: PathLike, callback: (err: NodeJS.ErrnoException | null, stats: Stats) => void): void;[m
[32m+[m[32m    export function stat([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | (StatOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | undefined,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: Stats) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function stat([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: StatOptions & {[m
[32m+[m[32m            bigint: true;[m
[32m+[m[32m        },[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: BigIntStats) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function stat([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: StatOptions | undefined,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: Stats | BigIntStats) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace stat {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous stat(2) - Get file status.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options?: StatOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<Stats>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: StatOptions & {[m
[32m+[m[32m                bigint: true;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<BigIntStats>;[m
[32m+[m[32m        function __promisify__(path: PathLike, options?: StatOptions): Promise<Stats | BigIntStats>;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface StatSyncFn extends Function {[m
[32m+[m[32m        (path: PathLike, options?: undefined): Stats;[m
[32m+[m[32m        ([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options?: StatSyncOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m                throwIfNoEntry: false;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Stats | undefined;[m
[32m+[m[32m        ([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: StatSyncOptions & {[m
[32m+[m[32m                bigint: true;[m
[32m+[m[32m                throwIfNoEntry: false;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): BigIntStats | undefined;[m
[32m+[m[32m        ([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options?: StatSyncOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Stats;[m
[32m+[m[32m        ([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: StatSyncOptions & {[m
[32m+[m[32m                bigint: true;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): BigIntStats;[m
[32m+[m[32m        ([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: StatSyncOptions & {[m
[32m+[m[32m                bigint: boolean;[m
[32m+[m[32m                throwIfNoEntry?: false | undefined;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Stats | BigIntStats;[m
[32m+[m[32m        (path: PathLike, options?: StatSyncOptions): Stats | BigIntStats | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous stat(2) - Get file status.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export const statSync: StatSyncFn;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Invokes the callback with the `fs.Stats` for the file descriptor.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`fstat(2)`](http://man7.org/linux/man-pages/man2/fstat.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.1.95[m
[32m+[m[32m     */[m
[32m+[m[32m    export function fstat(fd: number, callback: (err: NodeJS.ErrnoException | null, stats: Stats) => void): void;[m
[32m+[m[32m    export function fstat([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | (StatOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | undefined,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: Stats) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function fstat([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        options: StatOptions & {[m
[32m+[m[32m            bigint: true;[m
[32m+[m[32m        },[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: BigIntStats) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function fstat([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        options: StatOptions | undefined,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: Stats | BigIntStats) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace fstat {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous fstat(2) - Get file status.[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            fd: number,[m
[32m+[m[32m            options?: StatOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<Stats>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            fd: number,[m
[32m+[m[32m            options: StatOptions & {[m
[32m+[m[32m                bigint: true;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<BigIntStats>;[m
[32m+[m[32m        function __promisify__(fd: number, options?: StatOptions): Promise<Stats | BigIntStats>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Retrieves the `fs.Stats` for the file descriptor.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`fstat(2)`](http://man7.org/linux/man-pages/man2/fstat.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.1.95[m
[32m+[m[32m     */[m
[32m+[m[32m    export function fstatSync([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        options?: StatOptions & {[m
[32m+[m[32m            bigint?: false | undefined;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): Stats;[m
[32m+[m[32m    export function fstatSync([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        options: StatOptions & {[m
[32m+[m[32m            bigint: true;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): BigIntStats;[m
[32m+[m[32m    export function fstatSync(fd: number, options?: StatOptions): Stats | BigIntStats;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Retrieves the `fs.Stats` for the symbolic link referred to by the path.[m
[32m+[m[32m     * The callback gets two arguments `(err, stats)` where `stats` is a `fs.Stats` object. `lstat()` is identical to `stat()`, except that if `path` is a symbolic[m
[32m+[m[32m     * link, then the link itself is stat-ed, not the file that it refers to.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`lstat(2)`](http://man7.org/linux/man-pages/man2/lstat.2.html) documentation for more details.[m
[32m+[m[32m     * @since v0.1.30[m
[32m+[m[32m     */[m
[32m+[m[32m    export function lstat(path: PathLike, callback: (err: NodeJS.ErrnoException | null, stats: Stats) => void): void;[m
[32m+[m[32m    export function lstat([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | (StatOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | undefined,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: Stats) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function lstat([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: StatOptions & {[m
[32m+[m[32m            bigint: true;[m
[32m+[m[32m        },[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: BigIntStats) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function lstat([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: StatOptions | undefined,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: Stats | BigIntStats) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace lstat {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous lstat(2) - Get file status. Does not dereference symbolic links.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options?: StatOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<Stats>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: StatOptions & {[m
[32m+[m[32m                bigint: true;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<BigIntStats>;[m
[32m+[m[32m        function __promisify__(path: PathLike, options?: StatOptions): Promise<Stats | BigIntStats>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous [`statfs(2)`](http://man7.org/linux/man-pages/man2/statfs.2.html). Returns information about the mounted file system which[m
[32m+[m[32m     * contains `path`. The callback gets two arguments `(err, stats)` where `stats`is an `fs.StatFs` object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * In case of an error, the `err.code` will be one of `Common System Errors`.[m
[32m+[m[32m     * @since v19.6.0, v18.15.0[m
[32m+[m[32m     * @param path A path to an existing file or directory on the file system to be queried.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function statfs(path: PathLike, callback: (err: NodeJS.ErrnoException | null, stats: StatsFs) => void): void;[m
[32m+[m[32m    export function statfs([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | (StatFsOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | undefined,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: StatsFs) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function statfs([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: StatFsOptions & {[m
[32m+[m[32m            bigint: true;[m
[32m+[m[32m        },[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: BigIntStatsFs) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function statfs([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: StatFsOptions | undefined,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, stats: StatsFs | BigIntStatsFs) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace statfs {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous statfs(2) - Returns information about the mounted file system which contains path. The callback gets two arguments (err, stats) where stats is an <fs.StatFs> object.[m
[32m+[m[32m         * @param path A path to an existing file or directory on the file system to be queried.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options?: StatFsOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<StatsFs>;[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: StatFsOptions & {[m
[32m+[m[32m                bigint: true;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<BigIntStatsFs>;[m
[32m+[m[32m        function __promisify__(path: PathLike, options?: StatFsOptions): Promise<StatsFs | BigIntStatsFs>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous [`statfs(2)`](http://man7.org/linux/man-pages/man2/statfs.2.html). Returns information about the mounted file system which[m
[32m+[m[32m     * contains `path`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * In case of an error, the `err.code` will be one of `Common System Errors`.[m
[32m+[m[32m     * @since v19.6.0, v18.15.0[m
[32m+[m[32m     * @param path A path to an existing file or directory on the file system to be queried.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function statfsSync([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options?: StatFsOptions & {[m
[32m+[m[32m            bigint?: false | undefined;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): StatsFs;[m
[32m+[m[32m    export function statfsSync([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: StatFsOptions & {[m
[32m+[m[32m            bigint: true;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): BigIntStatsFs;[m
[32m+[m[32m    export function statfsSync(path: PathLike, options?: StatFsOptions): StatsFs | BigIntStatsFs;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous lstat(2) - Get file status. Does not dereference symbolic links.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export const lstatSync: StatSyncFn;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a new link from the `existingPath` to the `newPath`. See the POSIX [`link(2)`](http://man7.org/linux/man-pages/man2/link.2.html) documentation for more detail. No arguments other than[m
[32m+[m[32m     * a possible[m
[32m+[m[32m     * exception are given to the completion callback.[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     */[m
[32m+[m[32m    export function link(existingPath: PathLike, newPath: PathLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace link {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous link(2) - Create a new link (also known as a hard link) to an existing file.[m
[32m+[m[32m         * @param existingPath A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param newPath A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(existingPath: PathLike, newPath: PathLike): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a new link from the `existingPath` to the `newPath`. See the POSIX [`link(2)`](http://man7.org/linux/man-pages/man2/link.2.html) documentation for more detail. Returns `undefined`.[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     */[m
[32m+[m[32m    export function linkSync(existingPath: PathLike, newPath: PathLike): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates the link called `path` pointing to `target`. No arguments other than a[m
[32m+[m[32m     * possible exception are given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`symlink(2)`](http://man7.org/linux/man-pages/man2/symlink.2.html) documentation for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `type` argument is only available on Windows and ignored on other platforms.[m
[32m+[m[32m     * It can be set to `'dir'`, `'file'`, or `'junction'`. If the `type` argument is[m
[32m+[m[32m     * not a string, Node.js will autodetect `target` type and use `'file'` or `'dir'`.[m
[32m+[m[32m     * If the `target` does not exist, `'file'` will be used. Windows junction points[m
[32m+[m[32m     * require the destination path to be absolute. When using `'junction'`, the`target` argument will automatically be normalized to absolute path. Junction[m
[32m+[m[32m     * points on NTFS volumes can only point to directories.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Relative targets are relative to the link's parent directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { symlink } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * symlink('./mew', './mewtwo', callback);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The above example creates a symbolic link `mewtwo` which points to `mew` in the[m
[32m+[m[32m     * same directory:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```bash[m
[32m+[m[32m     * $ tree .[m
[32m+[m[32m     * .[m
[32m+[m[32m     * ├── mew[m
[32m+[m[32m     * └── mewtwo -> ./mew[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     * @param [type='null'][m
[32m+[m[32m     */[m
[32m+[m[32m    export function symlink([m
[32m+[m[32m        target: PathLike,[m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        type: symlink.Type | undefined | null,[m
[32m+[m[32m        callback: NoParamCallback,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous symlink(2) - Create a new symbolic link to an existing file.[m
[32m+[m[32m     * @param target A path to an existing file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param path A path to the new symlink. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function symlink(target: PathLike, path: PathLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace symlink {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous symlink(2) - Create a new symbolic link to an existing file.[m
[32m+[m[32m         * @param target A path to an existing file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param path A path to the new symlink. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param type May be set to `'dir'`, `'file'`, or `'junction'` (default is `'file'`) and is only available on Windows (ignored on other platforms).[m
[32m+[m[32m         * When using `'junction'`, the `target` argument will automatically be normalized to an absolute path.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(target: PathLike, path: PathLike, type?: string | null): Promise<void>;[m
[32m+[m[32m        type Type = "dir" | "file" | "junction";[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link symlink}.[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     * @param [type='null'][m
[32m+[m[32m     */[m
[32m+[m[32m    export function symlinkSync(target: PathLike, path: PathLike, type?: symlink.Type | null): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Reads the contents of the symbolic link referred to by `path`. The callback gets[m
[32m+[m[32m     * two arguments `(err, linkString)`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`readlink(2)`](http://man7.org/linux/man-pages/man2/readlink.2.html) documentation for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use for[m
[32m+[m[32m     * the link path passed to the callback. If the `encoding` is set to `'buffer'`,[m
[32m+[m[32m     * the link path returned will be passed as a `Buffer` object.[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readlink([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: EncodingOption,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, linkString: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readlink(2) - read value of a symbolic link.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readlink([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: BufferEncodingOption,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, linkString: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readlink(2) - read value of a symbolic link.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readlink([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: EncodingOption,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, linkString: string | Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readlink(2) - read value of a symbolic link.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readlink([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, linkString: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace readlink {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous readlink(2) - read value of a symbolic link.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, options?: EncodingOption): Promise<string>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous readlink(2) - read value of a symbolic link.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, options: BufferEncodingOption): Promise<Buffer>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous readlink(2) - read value of a symbolic link.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, options?: EncodingOption): Promise<string | Buffer>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the symbolic link's string value.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`readlink(2)`](http://man7.org/linux/man-pages/man2/readlink.2.html) documentation for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use for[m
[32m+[m[32m     * the link path returned. If the `encoding` is set to `'buffer'`,[m
[32m+[m[32m     * the link path returned will be passed as a `Buffer` object.[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readlinkSync(path: PathLike, options?: EncodingOption): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous readlink(2) - read value of a symbolic link.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readlinkSync(path: PathLike, options: BufferEncodingOption): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous readlink(2) - read value of a symbolic link.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readlinkSync(path: PathLike, options?: EncodingOption): string | Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously computes the canonical pathname by resolving `.`, `..`, and[m
[32m+[m[32m     * symbolic links.[m
[32m+[m[32m     *[m
[32m+[m[32m     * A canonical pathname is not necessarily unique. Hard links and bind mounts can[m
[32m+[m[32m     * expose a file system entity through many pathnames.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This function behaves like [`realpath(3)`](http://man7.org/linux/man-pages/man3/realpath.3.html), with some exceptions:[m
[32m+[m[32m     *[m
[32m+[m[32m     * 1. No case conversion is performed on case-insensitive file systems.[m
[32m+[m[32m     * 2. The maximum number of symbolic links is platform-independent and generally[m
[32m+[m[32m     * (much) higher than what the native [`realpath(3)`](http://man7.org/linux/man-pages/man3/realpath.3.html) implementation supports.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `callback` gets two arguments `(err, resolvedPath)`. May use `process.cwd` to resolve relative paths.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Only paths that can be converted to UTF8 strings are supported.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use for[m
[32m+[m[32m     * the path passed to the callback. If the `encoding` is set to `'buffer'`,[m
[32m+[m[32m     * the path returned will be passed as a `Buffer` object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `path` resolves to a socket or a pipe, the function will return a system[m
[32m+[m[32m     * dependent name for that object.[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     */[m
[32m+[m[32m    export function realpath([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: EncodingOption,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, resolvedPath: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous realpath(3) - return the canonicalized absolute pathname.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function realpath([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: BufferEncodingOption,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, resolvedPath: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous realpath(3) - return the canonicalized absolute pathname.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function realpath([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: EncodingOption,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, resolvedPath: string | Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous realpath(3) - return the canonicalized absolute pathname.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function realpath([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, resolvedPath: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace realpath {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous realpath(3) - return the canonicalized absolute pathname.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, options?: EncodingOption): Promise<string>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous realpath(3) - return the canonicalized absolute pathname.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, options: BufferEncodingOption): Promise<Buffer>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous realpath(3) - return the canonicalized absolute pathname.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, options?: EncodingOption): Promise<string | Buffer>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous [`realpath(3)`](http://man7.org/linux/man-pages/man3/realpath.3.html).[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `callback` gets two arguments `(err, resolvedPath)`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Only paths that can be converted to UTF8 strings are supported.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m         * object with an `encoding` property specifying the character encoding to use for[m
[32m+[m[32m         * the path passed to the callback. If the `encoding` is set to `'buffer'`,[m
[32m+[m[32m         * the path returned will be passed as a `Buffer` object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * On Linux, when Node.js is linked against musl libc, the procfs file system must[m
[32m+[m[32m         * be mounted on `/proc` in order for this function to work. Glibc does not have[m
[32m+[m[32m         * this restriction.[m
[32m+[m[32m         * @since v9.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function native([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: EncodingOption,[m
[32m+[m[32m            callback: (err: NodeJS.ErrnoException | null, resolvedPath: string) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        function native([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: BufferEncodingOption,[m
[32m+[m[32m            callback: (err: NodeJS.ErrnoException | null, resolvedPath: Buffer) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        function native([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: EncodingOption,[m
[32m+[m[32m            callback: (err: NodeJS.ErrnoException | null, resolvedPath: string | Buffer) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        function native([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            callback: (err: NodeJS.ErrnoException | null, resolvedPath: string) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the resolved pathname.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link realpath}.[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     */[m
[32m+[m[32m    export function realpathSync(path: PathLike, options?: EncodingOption): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous realpath(3) - return the canonicalized absolute pathname.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function realpathSync(path: PathLike, options: BufferEncodingOption): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous realpath(3) - return the canonicalized absolute pathname.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function realpathSync(path: PathLike, options?: EncodingOption): string | Buffer;[m
[32m+[m[32m    export namespace realpathSync {[m
[32m+[m[32m        function native(path: PathLike, options?: EncodingOption): string;[m
[32m+[m[32m        function native(path: PathLike, options: BufferEncodingOption): Buffer;[m
[32m+[m[32m        function native(path: PathLike, options?: EncodingOption): string | Buffer;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously removes a file or symbolic link. No arguments other than a[m
[32m+[m[32m     * possible exception are given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { unlink } from 'node:fs';[m
[32m+[m[32m     * // Assuming that 'path/file.txt' is a regular file.[m
[32m+[m[32m     * unlink('path/file.txt', (err) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log('path/file.txt was deleted');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * `fs.unlink()` will not work on a directory, empty or otherwise. To remove a[m
[32m+[m[32m     * directory, use {@link rmdir}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`unlink(2)`](http://man7.org/linux/man-pages/man2/unlink.2.html) documentation for more details.[m
[32m+[m[32m     * @since v0.0.2[m
[32m+[m[32m     */[m
[32m+[m[32m    export function unlink(path: PathLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace unlink {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous unlink(2) - delete a name and possibly the file it refers to.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous [`unlink(2)`](http://man7.org/linux/man-pages/man2/unlink.2.html). Returns `undefined`.[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     */[m
[32m+[m[32m    export function unlinkSync(path: PathLike): void;[m
[32m+[m[32m    export interface RmDirOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or[m
[32m+[m[32m         * `EPERM` error is encountered, Node.js will retry the operation with a linear[m
[32m+[m[32m         * backoff wait of `retryDelay` ms longer on each try. This option represents the[m
[32m+[m[32m         * number of retries. This option is ignored if the `recursive` option is not[m
[32m+[m[32m         * `true`.[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         */[m
[32m+[m[32m        maxRetries?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated since v14.14.0 In future versions of Node.js and will trigger a warning[m
[32m+[m[32m         * `fs.rmdir(path, { recursive: true })` will throw if `path` does not exist or is a file.[m
[32m+[m[32m         * Use `fs.rm(path, { recursive: true, force: true })` instead.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `true`, perform a recursive directory removal. In[m
[32m+[m[32m         * recursive mode, operations are retried on failure.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        recursive?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The amount of time in milliseconds to wait between retries.[m
[32m+[m[32m         * This option is ignored if the `recursive` option is not `true`.[m
[32m+[m[32m         * @default 100[m
[32m+[m[32m         */[m
[32m+[m[32m        retryDelay?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous [`rmdir(2)`](http://man7.org/linux/man-pages/man2/rmdir.2.html). No arguments other than a possible exception are given[m
[32m+[m[32m     * to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using `fs.rmdir()` on a file (not a directory) results in an `ENOENT` error on[m
[32m+[m[32m     * Windows and an `ENOTDIR` error on POSIX.[m
[32m+[m[32m     *[m
[32m+[m[32m     * To get a behavior similar to the `rm -rf` Unix command, use {@link rm} with options `{ recursive: true, force: true }`.[m
[32m+[m[32m     * @since v0.0.2[m
[32m+[m[32m     */[m
[32m+[m[32m    export function rmdir(path: PathLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export function rmdir(path: PathLike, options: RmDirOptions, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace rmdir {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous rmdir(2) - delete a directory.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, options?: RmDirOptions): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous [`rmdir(2)`](http://man7.org/linux/man-pages/man2/rmdir.2.html). Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using `fs.rmdirSync()` on a file (not a directory) results in an `ENOENT` error[m
[32m+[m[32m     * on Windows and an `ENOTDIR` error on POSIX.[m
[32m+[m[32m     *[m
[32m+[m[32m     * To get a behavior similar to the `rm -rf` Unix command, use {@link rmSync} with options `{ recursive: true, force: true }`.[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     */[m
[32m+[m[32m    export function rmdirSync(path: PathLike, options?: RmDirOptions): void;[m
[32m+[m[32m    export interface RmOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When `true`, exceptions will be ignored if `path` does not exist.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        force?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If an `EBUSY`, `EMFILE`, `ENFILE`, `ENOTEMPTY`, or[m
[32m+[m[32m         * `EPERM` error is encountered, Node.js will retry the operation with a linear[m
[32m+[m[32m         * backoff wait of `retryDelay` ms longer on each try. This option represents the[m
[32m+[m[32m         * number of retries. This option is ignored if the `recursive` option is not[m
[32m+[m[32m         * `true`.[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         */[m
[32m+[m[32m        maxRetries?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, perform a recursive directory removal. In[m
[32m+[m[32m         * recursive mode, operations are retried on failure.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        recursive?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The amount of time in milliseconds to wait between retries.[m
[32m+[m[32m         * This option is ignored if the `recursive` option is not `true`.[m
[32m+[m[32m         * @default 100[m
[32m+[m[32m         */[m
[32m+[m[32m        retryDelay?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously removes files and directories (modeled on the standard POSIX `rm` utility). No arguments other than a possible exception are given to the[m
[32m+[m[32m     * completion callback.[m
[32m+[m[32m     * @since v14.14.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function rm(path: PathLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export function rm(path: PathLike, options: RmOptions, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace rm {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously removes files and directories (modeled on the standard POSIX `rm` utility).[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, options?: RmOptions): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously removes files and directories (modeled on the standard POSIX `rm` utility). Returns `undefined`.[m
[32m+[m[32m     * @since v14.14.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function rmSync(path: PathLike, options?: RmOptions): void;[m
[32m+[m[32m    export interface MakeDirectoryOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Indicates whether parent folders should be created.[m
[32m+[m[32m         * If a folder was created, the path to the first created folder will be returned.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        recursive?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A file mode. If a string is passed, it is parsed as an octal integer. If not specified[m
[32m+[m[32m         * @default 0o777[m
[32m+[m[32m         */[m
[32m+[m[32m        mode?: Mode | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously creates a directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The callback is given a possible exception and, if `recursive` is `true`, the[m
[32m+[m[32m     * first directory path created, `(err[, path])`.`path` can still be `undefined` when `recursive` is `true`, if no directory was[m
[32m+[m[32m     * created (for instance, if it was previously created).[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be an integer specifying `mode` (permission[m
[32m+[m[32m     * and sticky bits), or an object with a `mode` property and a `recursive` property indicating whether parent directories should be created. Calling `fs.mkdir()` when `path` is a directory that[m
[32m+[m[32m     * exists results in an error only[m
[32m+[m[32m     * when `recursive` is false. If `recursive` is false and the directory exists,[m
[32m+[m[32m     * an `EEXIST` error occurs.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { mkdir } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Create ./tmp/a/apple, regardless of whether ./tmp and ./tmp/a exist.[m
[32m+[m[32m     * mkdir('./tmp/a/apple', { recursive: true }, (err) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * On Windows, using `fs.mkdir()` on the root directory even with recursion will[m
[32m+[m[32m     * result in an error:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { mkdir } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * mkdir('/', { recursive: true }, (err) => {[m
[32m+[m[32m     *   // => [Error: EPERM: operation not permitted, mkdir 'C:\'][m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`mkdir(2)`](http://man7.org/linux/man-pages/man2/mkdir.2.html) documentation for more details.[m
[32m+[m[32m     * @since v0.1.8[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: MakeDirectoryOptions & {[m
[32m+[m[32m            recursive: true;[m
[32m+[m[32m        },[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, path?: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous mkdir(2) - create a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options Either the file mode, or an object optionally specifying the file mode and whether parent folders[m
[32m+[m[32m     * should be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to `0o777`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | Mode[m
[32m+[m[32m            | (MakeDirectoryOptions & {[m
[32m+[m[32m                recursive?: false | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | null[m
[32m+[m[32m            | undefined,[m
[32m+[m[32m        callback: NoParamCallback,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous mkdir(2) - create a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options Either the file mode, or an object optionally specifying the file mode and whether parent folders[m
[32m+[m[32m     * should be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to `0o777`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: Mode | MakeDirectoryOptions | null | undefined,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, path?: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous mkdir(2) - create a directory with a mode of `0o777`.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdir(path: PathLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace mkdir {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous mkdir(2) - create a directory.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options Either the file mode, or an object optionally specifying the file mode and whether parent folders[m
[32m+[m[32m         * should be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to `0o777`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: MakeDirectoryOptions & {[m
[32m+[m[32m                recursive: true;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<string | undefined>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous mkdir(2) - create a directory.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options Either the file mode, or an object optionally specifying the file mode and whether parent folders[m
[32m+[m[32m         * should be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to `0o777`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options?:[m
[32m+[m[32m                | Mode[m
[32m+[m[32m                | (MakeDirectoryOptions & {[m
[32m+[m[32m                    recursive?: false | undefined;[m
[32m+[m[32m                })[m
[32m+[m[32m                | null,[m
[32m+[m[32m        ): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous mkdir(2) - create a directory.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options Either the file mode, or an object optionally specifying the file mode and whether parent folders[m
[32m+[m[32m         * should be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to `0o777`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options?: Mode | MakeDirectoryOptions | null,[m
[32m+[m[32m        ): Promise<string | undefined>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously creates a directory. Returns `undefined`, or if `recursive` is `true`, the first directory path created.[m
[32m+[m[32m     * This is the synchronous version of {@link mkdir}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`mkdir(2)`](http://man7.org/linux/man-pages/man2/mkdir.2.html) documentation for more details.[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdirSync([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: MakeDirectoryOptions & {[m
[32m+[m[32m            recursive: true;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): string | undefined;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous mkdir(2) - create a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options Either the file mode, or an object optionally specifying the file mode and whether parent folders[m
[32m+[m[32m     * should be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to `0o777`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdirSync([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options?:[m
[32m+[m[32m            | Mode[m
[32m+[m[32m            | (MakeDirectoryOptions & {[m
[32m+[m[32m                recursive?: false | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous mkdir(2) - create a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options Either the file mode, or an object optionally specifying the file mode and whether parent folders[m
[32m+[m[32m     * should be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to `0o777`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdirSync(path: PathLike, options?: Mode | MakeDirectoryOptions | null): string | undefined;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a unique temporary directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Generates six random characters to be appended behind a required `prefix` to create a unique temporary directory. Due to platform[m
[32m+[m[32m     * inconsistencies, avoid trailing `X` characters in `prefix`. Some platforms,[m
[32m+[m[32m     * notably the BSDs, can return more than six random characters, and replace[m
[32m+[m[32m     * trailing `X` characters in `prefix` with random characters.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The created directory path is passed as a string to the callback's second[m
[32m+[m[32m     * parameter.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { mkdtemp } from 'node:fs';[m
[32m+[m[32m     * import { join } from 'node:path';[m
[32m+[m[32m     * import { tmpdir } from 'node:os';[m
[32m+[m[32m     *[m
[32m+[m[32m     * mkdtemp(join(tmpdir(), 'foo-'), (err, directory) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(directory);[m
[32m+[m[32m     *   // Prints: /tmp/foo-itXde2 or C:\Users\...\AppData\Local\Temp\foo-itXde2[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `fs.mkdtemp()` method will append the six randomly selected characters[m
[32m+[m[32m     * directly to the `prefix` string. For instance, given a directory `/tmp`, if the[m
[32m+[m[32m     * intention is to create a temporary directory _within_`/tmp`, the `prefix`must end with a trailing platform-specific path separator[m
[32m+[m[32m     * (`require('node:path').sep`).[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { tmpdir } from 'node:os';[m
[32m+[m[32m     * import { mkdtemp } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // The parent directory for the new temporary directory[m
[32m+[m[32m     * const tmpDir = tmpdir();[m
[32m+[m[32m     *[m
[32m+[m[32m     * // This method is *INCORRECT*:[m
[32m+[m[32m     * mkdtemp(tmpDir, (err, directory) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(directory);[m
[32m+[m[32m     *   // Will print something similar to `/tmpabc123`.[m
[32m+[m[32m     *   // A new temporary directory is created at the file system root[m
[32m+[m[32m     *   // rather than *within* the /tmp directory.[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * // This method is *CORRECT*:[m
[32m+[m[32m     * import { sep } from 'node:path';[m
[32m+[m[32m     * mkdtemp(`${tmpDir}${sep}`, (err, directory) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(directory);[m
[32m+[m[32m     *   // Will print something similar to `/tmp/abc123`.[m
[32m+[m[32m     *   // A new temporary directory is created within[m
[32m+[m[32m     *   // the /tmp directory.[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v5.10.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdtemp([m
[32m+[m[32m        prefix: string,[m
[32m+[m[32m        options: EncodingOption,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, folder: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously creates a unique temporary directory.[m
[32m+[m[32m     * Generates six random characters to be appended behind a required prefix to create a unique temporary directory.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdtemp([m
[32m+[m[32m        prefix: string,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | "buffer"[m
[32m+[m[32m            | {[m
[32m+[m[32m                encoding: "buffer";[m
[32m+[m[32m            },[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, folder: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously creates a unique temporary directory.[m
[32m+[m[32m     * Generates six random characters to be appended behind a required prefix to create a unique temporary directory.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdtemp([m
[32m+[m[32m        prefix: string,[m
[32m+[m[32m        options: EncodingOption,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, folder: string | Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously creates a unique temporary directory.[m
[32m+[m[32m     * Generates six random characters to be appended behind a required prefix to create a unique temporary directory.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdtemp([m
[32m+[m[32m        prefix: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, folder: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace mkdtemp {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously creates a unique temporary directory.[m
[32m+[m[32m         * Generates six random characters to be appended behind a required prefix to create a unique temporary directory.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(prefix: string, options?: EncodingOption): Promise<string>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously creates a unique temporary directory.[m
[32m+[m[32m         * Generates six random characters to be appended behind a required prefix to create a unique temporary directory.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(prefix: string, options: BufferEncodingOption): Promise<Buffer>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously creates a unique temporary directory.[m
[32m+[m[32m         * Generates six random characters to be appended behind a required prefix to create a unique temporary directory.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(prefix: string, options?: EncodingOption): Promise<string | Buffer>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the created directory path.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link mkdtemp}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use.[m
[32m+[m[32m     * @since v5.10.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdtempSync(prefix: string, options?: EncodingOption): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously creates a unique temporary directory.[m
[32m+[m[32m     * Generates six random characters to be appended behind a required prefix to create a unique temporary directory.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdtempSync(prefix: string, options: BufferEncodingOption): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously creates a unique temporary directory.[m
[32m+[m[32m     * Generates six random characters to be appended behind a required prefix to create a unique temporary directory.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function mkdtempSync(prefix: string, options?: EncodingOption): string | Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Reads the contents of a directory. The callback gets two arguments `(err, files)` where `files` is an array of the names of the files in the directory excluding `'.'` and `'..'`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`readdir(3)`](http://man7.org/linux/man-pages/man3/readdir.3.html) documentation for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use for[m
[32m+[m[32m     * the filenames passed to the callback. If the `encoding` is set to `'buffer'`,[m
[32m+[m[32m     * the filenames returned will be passed as `Buffer` objects.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options.withFileTypes` is set to `true`, the `files` array will contain `fs.Dirent` objects.[m
[32m+[m[32m     * @since v0.1.8[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | {[m
[32m+[m[32m                encoding: BufferEncoding | null;[m
[32m+[m[32m                withFileTypes?: false | undefined;[m
[32m+[m[32m                recursive?: boolean | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            | BufferEncoding[m
[32m+[m[32m            | undefined[m
[32m+[m[32m            | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, files: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | {[m
[32m+[m[32m                encoding: "buffer";[m
[32m+[m[32m                withFileTypes?: false | undefined;[m
[32m+[m[32m                recursive?: boolean | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            | "buffer",[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, files: Buffer[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | (ObjectEncodingOptions & {[m
[32m+[m[32m                withFileTypes?: false | undefined;[m
[32m+[m[32m                recursive?: boolean | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | BufferEncoding[m
[32m+[m[32m            | undefined[m
[32m+[m[32m            | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, files: string[] | Buffer[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, files: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options If called with `withFileTypes: true` the result data will be an array of Dirent.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: ObjectEncodingOptions & {[m
[32m+[m[32m            withFileTypes: true;[m
[32m+[m[32m            recursive?: boolean | undefined;[m
[32m+[m[32m        },[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, files: Dirent[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace readdir {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options?:[m
[32m+[m[32m                | {[m
[32m+[m[32m                    encoding: BufferEncoding | null;[m
[32m+[m[32m                    withFileTypes?: false | undefined;[m
[32m+[m[32m                    recursive?: boolean | undefined;[m
[32m+[m[32m                }[m
[32m+[m[32m                | BufferEncoding[m
[32m+[m[32m                | null,[m
[32m+[m[32m        ): Promise<string[]>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options:[m
[32m+[m[32m                | "buffer"[m
[32m+[m[32m                | {[m
[32m+[m[32m                    encoding: "buffer";[m
[32m+[m[32m                    withFileTypes?: false | undefined;[m
[32m+[m[32m                    recursive?: boolean | undefined;[m
[32m+[m[32m                },[m
[32m+[m[32m        ): Promise<Buffer[]>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options?:[m
[32m+[m[32m                | (ObjectEncodingOptions & {[m
[32m+[m[32m                    withFileTypes?: false | undefined;[m
[32m+[m[32m                    recursive?: boolean | undefined;[m
[32m+[m[32m                })[m
[32m+[m[32m                | BufferEncoding[m
[32m+[m[32m                | null,[m
[32m+[m[32m        ): Promise<string[] | Buffer[]>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param options If called with `withFileTypes: true` the result data will be an array of Dirent[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathLike,[m
[32m+[m[32m            options: ObjectEncodingOptions & {[m
[32m+[m[32m                withFileTypes: true;[m
[32m+[m[32m                recursive?: boolean | undefined;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<Dirent[]>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Reads the contents of the directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`readdir(3)`](http://man7.org/linux/man-pages/man3/readdir.3.html) documentation for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use for[m
[32m+[m[32m     * the filenames returned. If the `encoding` is set to `'buffer'`,[m
[32m+[m[32m     * the filenames returned will be passed as `Buffer` objects.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options.withFileTypes` is set to `true`, the result will contain `fs.Dirent` objects.[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readdirSync([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options?:[m
[32m+[m[32m            | {[m
[32m+[m[32m                encoding: BufferEncoding | null;[m
[32m+[m[32m                withFileTypes?: false | undefined;[m
[32m+[m[32m                recursive?: boolean | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            | BufferEncoding[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): string[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous readdir(3) - read a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readdirSync([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | {[m
[32m+[m[32m                encoding: "buffer";[m
[32m+[m[32m                withFileTypes?: false | undefined;[m
[32m+[m[32m                recursive?: boolean | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            | "buffer",[m
[32m+[m[32m    ): Buffer[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous readdir(3) - read a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readdirSync([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options?:[m
[32m+[m[32m            | (ObjectEncodingOptions & {[m
[32m+[m[32m                withFileTypes?: false | undefined;[m
[32m+[m[32m                recursive?: boolean | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | BufferEncoding[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): string[] | Buffer[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous readdir(3) - read a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options If called with `withFileTypes: true` the result data will be an array of Dirent.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readdirSync([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: ObjectEncodingOptions & {[m
[32m+[m[32m            withFileTypes: true;[m
[32m+[m[32m            recursive?: boolean | undefined;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): Dirent[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Closes the file descriptor. No arguments other than a possible exception are[m
[32m+[m[32m     * given to the completion callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Calling `fs.close()` on any file descriptor (`fd`) that is currently in use[m
[32m+[m[32m     * through any other `fs` operation may lead to undefined behavior.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`close(2)`](http://man7.org/linux/man-pages/man2/close.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.0.2[m
[32m+[m[32m     */[m
[32m+[m[32m    export function close(fd: number, callback?: NoParamCallback): void;[m
[32m+[m[32m    export namespace close {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous close(2) - close a file descriptor.[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(fd: number): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Closes the file descriptor. Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Calling `fs.closeSync()` on any file descriptor (`fd`) that is currently in use[m
[32m+[m[32m     * through any other `fs` operation may lead to undefined behavior.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the POSIX [`close(2)`](http://man7.org/linux/man-pages/man2/close.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     */[m
[32m+[m[32m    export function closeSync(fd: number): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous file open. See the POSIX [`open(2)`](http://man7.org/linux/man-pages/man2/open.2.html) documentation for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `mode` sets the file mode (permission and sticky bits), but only if the file was[m
[32m+[m[32m     * created. On Windows, only the write permission can be manipulated; see {@link chmod}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The callback gets two arguments `(err, fd)`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Some characters (`< > : " / \ | ? *`) are reserved under Windows as documented[m
[32m+[m[32m     * by [Naming Files, Paths, and Namespaces](https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file). Under NTFS, if the filename contains[m
[32m+[m[32m     * a colon, Node.js will open a file system stream, as described by [this MSDN page](https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams).[m
[32m+[m[32m     *[m
[32m+[m[32m     * Functions based on `fs.open()` exhibit this behavior as well:`fs.writeFile()`, `fs.readFile()`, etc.[m
[32m+[m[32m     * @since v0.0.2[m
[32m+[m[32m     * @param [flags='r'] See `support of file system `flags``.[m
[32m+[m[32m     * @param [mode=0o666][m
[32m+[m[32m     */[m
[32m+[m[32m    export function open([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        flags: OpenMode | undefined,[m
[32m+[m[32m        mode: Mode | undefined | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, fd: number) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous open(2) - open and possibly create a file. If the file is created, its mode will be `0o666`.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param [flags='r'] See `support of file system `flags``.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function open([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        flags: OpenMode | undefined,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, fd: number) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous open(2) - open and possibly create a file. If the file is created, its mode will be `0o666`.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function open(path: PathLike, callback: (err: NodeJS.ErrnoException | null, fd: number) => void): void;[m
[32m+[m[32m    export namespace open {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous open(2) - open and possibly create a file.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param mode A file mode. If a string is passed, it is parsed as an octal integer. If not supplied, defaults to `0o666`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, flags: OpenMode, mode?: Mode | null): Promise<number>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns an integer representing the file descriptor.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link open}.[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     * @param [flags='r'][m
[32m+[m[32m     * @param [mode=0o666][m
[32m+[m[32m     */[m
[32m+[m[32m    export function openSync(path: PathLike, flags: OpenMode, mode?: Mode | null): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Change the file system timestamps of the object referenced by `path`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `atime` and `mtime` arguments follow these rules:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * Values can be either numbers representing Unix epoch time in seconds, `Date`s, or a numeric string like `'123456789.0'`.[m
[32m+[m[32m     * * If the value can not be converted to a number, or is `NaN`, `Infinity`, or `-Infinity`, an `Error` will be thrown.[m
[32m+[m[32m     * @since v0.4.2[m
[32m+[m[32m     */[m
[32m+[m[32m    export function utimes(path: PathLike, atime: TimeLike, mtime: TimeLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace utimes {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously change file timestamps of the file referenced by the supplied path.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * @param atime The last access time. If a string is provided, it will be coerced to number.[m
[32m+[m[32m         * @param mtime The last modified time. If a string is provided, it will be coerced to number.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, atime: TimeLike, mtime: TimeLike): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link utimes}.[m
[32m+[m[32m     * @since v0.4.2[m
[32m+[m[32m     */[m
[32m+[m[32m    export function utimesSync(path: PathLike, atime: TimeLike, mtime: TimeLike): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Change the file system timestamps of the object referenced by the supplied file[m
[32m+[m[32m     * descriptor. See {@link utimes}.[m
[32m+[m[32m     * @since v0.4.2[m
[32m+[m[32m     */[m
[32m+[m[32m    export function futimes(fd: number, atime: TimeLike, mtime: TimeLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace futimes {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously change file timestamps of the file referenced by the supplied file descriptor.[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         * @param atime The last access time. If a string is provided, it will be coerced to number.[m
[32m+[m[32m         * @param mtime The last modified time. If a string is provided, it will be coerced to number.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(fd: number, atime: TimeLike, mtime: TimeLike): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronous version of {@link futimes}. Returns `undefined`.[m
[32m+[m[32m     * @since v0.4.2[m
[32m+[m[32m     */[m
[32m+[m[32m    export function futimesSync(fd: number, atime: TimeLike, mtime: TimeLike): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Request that all data for the open file descriptor is flushed to the storage[m
[32m+[m[32m     * device. The specific implementation is operating system and device specific.[m
[32m+[m[32m     * Refer to the POSIX [`fsync(2)`](http://man7.org/linux/man-pages/man2/fsync.2.html) documentation for more detail. No arguments other[m
[32m+[m[32m     * than a possible exception are given to the completion callback.[m
[32m+[m[32m     * @since v0.1.96[m
[32m+[m[32m     */[m
[32m+[m[32m    export function fsync(fd: number, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace fsync {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous fsync(2) - synchronize a file's in-core state with the underlying storage device.[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(fd: number): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Request that all data for the open file descriptor is flushed to the storage[m
[32m+[m[32m     * device. The specific implementation is operating system and device specific.[m
[32m+[m[32m     * Refer to the POSIX [`fsync(2)`](http://man7.org/linux/man-pages/man2/fsync.2.html) documentation for more detail. Returns `undefined`.[m
[32m+[m[32m     * @since v0.1.96[m
[32m+[m[32m     */[m
[32m+[m[32m    export function fsyncSync(fd: number): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Write `buffer` to the file specified by `fd`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `offset` determines the part of the buffer to be written, and `length` is[m
[32m+[m[32m     * an integer specifying the number of bytes to write.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `position` refers to the offset from the beginning of the file where this data[m
[32m+[m[32m     * should be written. If `typeof position !== 'number'`, the data will be written[m
[32m+[m[32m     * at the current position. See [`pwrite(2)`](http://man7.org/linux/man-pages/man2/pwrite.2.html).[m
[32m+[m[32m     *[m
[32m+[m[32m     * The callback will be given three arguments `(err, bytesWritten, buffer)` where `bytesWritten` specifies how many _bytes_ were written from `buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If this method is invoked as its `util.promisify()` ed version, it returns[m
[32m+[m[32m     * a promise for an `Object` with `bytesWritten` and `buffer` properties.[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is unsafe to use `fs.write()` multiple times on the same file without waiting[m
[32m+[m[32m     * for the callback. For this scenario, {@link createWriteStream} is[m
[32m+[m[32m     * recommended.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On Linux, positional writes don't work when the file is opened in append mode.[m
[32m+[m[32m     * The kernel ignores the position argument and always appends the data to[m
[32m+[m[32m     * the end of the file.[m
[32m+[m[32m     * @since v0.0.2[m
[32m+[m[32m     * @param [offset=0][m
[32m+[m[32m     * @param [length=buffer.byteLength - offset][m
[32m+[m[32m     * @param [position='null'][m
[32m+[m[32m     */[m
[32m+[m[32m    export function write<TBuffer extends NodeJS.ArrayBufferView>([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffer: TBuffer,[m
[32m+[m[32m        offset: number | undefined | null,[m
[32m+[m[32m        length: number | undefined | null,[m
[32m+[m[32m        position: number | undefined | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, written: number, buffer: TBuffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously writes `buffer` to the file referenced by the supplied file descriptor.[m
[32m+[m[32m     * @param fd A file descriptor.[m
[32m+[m[32m     * @param offset The part of the buffer to be written. If not supplied, defaults to `0`.[m
[32m+[m[32m     * @param length The number of bytes to write. If not supplied, defaults to `buffer.length - offset`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function write<TBuffer extends NodeJS.ArrayBufferView>([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffer: TBuffer,[m
[32m+[m[32m        offset: number | undefined | null,[m
[32m+[m[32m        length: number | undefined | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, written: number, buffer: TBuffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously writes `buffer` to the file referenced by the supplied file descriptor.[m
[32m+[m[32m     * @param fd A file descriptor.[m
[32m+[m[32m     * @param offset The part of the buffer to be written. If not supplied, defaults to `0`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function write<TBuffer extends NodeJS.ArrayBufferView>([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffer: TBuffer,[m
[32m+[m[32m        offset: number | undefined | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, written: number, buffer: TBuffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously writes `buffer` to the file referenced by the supplied file descriptor.[m
[32m+[m[32m     * @param fd A file descriptor.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function write<TBuffer extends NodeJS.ArrayBufferView>([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffer: TBuffer,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, written: number, buffer: TBuffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously writes `string` to the file referenced by the supplied file descriptor.[m
[32m+[m[32m     * @param fd A file descriptor.[m
[32m+[m[32m     * @param string A string to write.[m
[32m+[m[32m     * @param position The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.[m
[32m+[m[32m     * @param encoding The expected string encoding.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function write([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        string: string,[m
[32m+[m[32m        position: number | undefined | null,[m
[32m+[m[32m        encoding: BufferEncoding | undefined | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, written: number, str: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously writes `string` to the file referenced by the supplied file descriptor.[m
[32m+[m[32m     * @param fd A file descriptor.[m
[32m+[m[32m     * @param string A string to write.[m
[32m+[m[32m     * @param position The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function write([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        string: string,[m
[32m+[m[32m        position: number | undefined | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, written: number, str: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously writes `string` to the file referenced by the supplied file descriptor.[m
[32m+[m[32m     * @param fd A file descriptor.[m
[32m+[m[32m     * @param string A string to write.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function write([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        string: string,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, written: number, str: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace write {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously writes `buffer` to the file referenced by the supplied file descriptor.[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         * @param offset The part of the buffer to be written. If not supplied, defaults to `0`.[m
[32m+[m[32m         * @param length The number of bytes to write. If not supplied, defaults to `buffer.length - offset`.[m
[32m+[m[32m         * @param position The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__<TBuffer extends NodeJS.ArrayBufferView>([m
[32m+[m[32m            fd: number,[m
[32m+[m[32m            buffer?: TBuffer,[m
[32m+[m[32m            offset?: number,[m
[32m+[m[32m            length?: number,[m
[32m+[m[32m            position?: number | null,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            bytesWritten: number;[m
[32m+[m[32m            buffer: TBuffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously writes `string` to the file referenced by the supplied file descriptor.[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         * @param string A string to write.[m
[32m+[m[32m         * @param position The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.[m
[32m+[m[32m         * @param encoding The expected string encoding.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            fd: number,[m
[32m+[m[32m            string: string,[m
[32m+[m[32m            position?: number | null,[m
[32m+[m[32m            encoding?: BufferEncoding | null,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            bytesWritten: number;[m
[32m+[m[32m            buffer: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link write}.[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     * @param [offset=0][m
[32m+[m[32m     * @param [length=buffer.byteLength - offset][m
[32m+[m[32m     * @param [position='null'][m
[32m+[m[32m     * @return The number of bytes written.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function writeSync([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffer: NodeJS.ArrayBufferView,[m
[32m+[m[32m        offset?: number | null,[m
[32m+[m[32m        length?: number | null,[m
[32m+[m[32m        position?: number | null,[m
[32m+[m[32m    ): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously writes `string` to the file referenced by the supplied file descriptor, returning the number of bytes written.[m
[32m+[m[32m     * @param fd A file descriptor.[m
[32m+[m[32m     * @param string A string to write.[m
[32m+[m[32m     * @param position The offset from the beginning of the file where this data should be written. If not supplied, defaults to the current position.[m
[32m+[m[32m     * @param encoding The expected string encoding.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function writeSync([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        string: string,[m
[32m+[m[32m        position?: number | null,[m
[32m+[m[32m        encoding?: BufferEncoding | null,[m
[32m+[m[32m    ): number;[m
[32m+[m[32m    export type ReadPosition = number | bigint;[m
[32m+[m[32m    export interface ReadSyncOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         */[m
[32m+[m[32m        offset?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default `length of buffer`[m
[32m+[m[32m         */[m
[32m+[m[32m        length?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default null[m
[32m+[m[32m         */[m
[32m+[m[32m        position?: ReadPosition | null | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ReadAsyncOptions<TBuffer extends NodeJS.ArrayBufferView> extends ReadSyncOptions {[m
[32m+[m[32m        buffer?: TBuffer;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Read data from the file specified by `fd`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The callback is given the three arguments, `(err, bytesRead, buffer)`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the file is not modified concurrently, the end-of-file is reached when the[m
[32m+[m[32m     * number of bytes read is zero.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If this method is invoked as its `util.promisify()` ed version, it returns[m
[32m+[m[32m     * a promise for an `Object` with `bytesRead` and `buffer` properties.[m
[32m+[m[32m     * @since v0.0.2[m
[32m+[m[32m     * @param buffer The buffer that the data will be written to.[m
[32m+[m[32m     * @param offset The position in `buffer` to write the data to.[m
[32m+[m[32m     * @param length The number of bytes to read.[m
[32m+[m[32m     * @param position Specifies where to begin reading from in the file. If `position` is `null` or `-1 `, data will be read from the current file position, and the file position will be updated. If[m
[32m+[m[32m     * `position` is an integer, the file position will be unchanged.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function read<TBuffer extends NodeJS.ArrayBufferView>([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffer: TBuffer,[m
[32m+[m[32m        offset: number,[m
[32m+[m[32m        length: number,[m
[32m+[m[32m        position: ReadPosition | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, bytesRead: number, buffer: TBuffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Similar to the above `fs.read` function, this version takes an optional `options` object.[m
[32m+[m[32m     * If not otherwise specified in an `options` object,[m
[32m+[m[32m     * `buffer` defaults to `Buffer.alloc(16384)`,[m
[32m+[m[32m     * `offset` defaults to `0`,[m
[32m+[m[32m     * `length` defaults to `buffer.byteLength`, `- offset` as of Node 17.6.0[m
[32m+[m[32m     * `position` defaults to `null`[m
[32m+[m[32m     * @since v12.17.0, 13.11.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function read<TBuffer extends NodeJS.ArrayBufferView>([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        options: ReadAsyncOptions<TBuffer>,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, bytesRead: number, buffer: TBuffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function read([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, bytesRead: number, buffer: NodeJS.ArrayBufferView) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace read {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         * @param buffer The buffer that the data will be written to.[m
[32m+[m[32m         * @param offset The offset in the buffer at which to start writing.[m
[32m+[m[32m         * @param length The number of bytes to read.[m
[32m+[m[32m         * @param position The offset from the beginning of the file from which data should be read. If `null`, data will be read from the current position.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__<TBuffer extends NodeJS.ArrayBufferView>([m
[32m+[m[32m            fd: number,[m
[32m+[m[32m            buffer: TBuffer,[m
[32m+[m[32m            offset: number,[m
[32m+[m[32m            length: number,[m
[32m+[m[32m            position: number | null,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            bytesRead: number;[m
[32m+[m[32m            buffer: TBuffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__<TBuffer extends NodeJS.ArrayBufferView>([m
[32m+[m[32m            fd: number,[m
[32m+[m[32m            options: ReadAsyncOptions<TBuffer>,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            bytesRead: number;[m
[32m+[m[32m            buffer: TBuffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        function __promisify__(fd: number): Promise<{[m
[32m+[m[32m            bytesRead: number;[m
[32m+[m[32m            buffer: NodeJS.ArrayBufferView;[m
[32m+[m[32m        }>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the number of `bytesRead`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link read}.[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     * @param [position='null'][m
[32m+[m[32m     */[m
[32m+[m[32m    export function readSync([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffer: NodeJS.ArrayBufferView,[m
[32m+[m[32m        offset: number,[m
[32m+[m[32m        length: number,[m
[32m+[m[32m        position: ReadPosition | null,[m
[32m+[m[32m    ): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Similar to the above `fs.readSync` function, this version takes an optional `options` object.[m
[32m+[m[32m     * If no `options` object is specified, it will default with the above values.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readSync(fd: number, buffer: NodeJS.ArrayBufferView, opts?: ReadSyncOptions): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { readFile } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * readFile('/etc/passwd', (err, data) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log(data);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The callback is passed two arguments `(err, data)`, where `data` is the[m
[32m+[m[32m     * contents of the file.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If no encoding is specified, then the raw buffer is returned.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the encoding:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { readFile } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * readFile('/etc/passwd', 'utf8', callback);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * When the path is a directory, the behavior of `fs.readFile()` and {@link readFileSync} is platform-specific. On macOS, Linux, and Windows, an[m
[32m+[m[32m     * error will be returned. On FreeBSD, a representation of the directory's contents[m
[32m+[m[32m     * will be returned.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { readFile } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // macOS, Linux, and Windows[m
[32m+[m[32m     * readFile('<directory>', (err, data) => {[m
[32m+[m[32m     *   // => [Error: EISDIR: illegal operation on a directory, read <directory>][m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * //  FreeBSD[m
[32m+[m[32m     * readFile('<directory>', (err, data) => {[m
[32m+[m[32m     *   // => null, <data>[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is possible to abort an ongoing request using an `AbortSignal`. If a[m
[32m+[m[32m     * request is aborted the callback is called with an `AbortError`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { readFile } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const controller = new AbortController();[m
[32m+[m[32m     * const signal = controller.signal;[m
[32m+[m[32m     * readFile(fileInfo[0].name, { signal }, (err, buf) => {[m
[32m+[m[32m     *   // ...[m
[32m+[m[32m     * });[m
[32m+[m[32m     * // When you want to abort the request[m
[32m+[m[32m     * controller.abort();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `fs.readFile()` function buffers the entire file. To minimize memory costs,[m
[32m+[m[32m     * when possible prefer streaming via `fs.createReadStream()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Aborting an ongoing request does not abort individual operating[m
[32m+[m[32m     * system requests but rather the internal buffering `fs.readFile` performs.[m
[32m+[m[32m     * @since v0.1.29[m
[32m+[m[32m     * @param path filename or file descriptor[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readFile([m
[32m+[m[32m        path: PathOrFileDescriptor,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | ({[m
[32m+[m[32m                encoding?: null | undefined;[m
[32m+[m[32m                flag?: string | undefined;[m
[32m+[m[32m            } & Abortable)[m
[32m+[m[32m            | undefined[m
[32m+[m[32m            | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, data: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m     * @param options Either the encoding for the result, or an object that contains the encoding and an optional flag.[m
[32m+[m[32m     * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readFile([m
[32m+[m[32m        path: PathOrFileDescriptor,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | ({[m
[32m+[m[32m                encoding: BufferEncoding;[m
[32m+[m[32m                flag?: string | undefined;[m
[32m+[m[32m            } & Abortable)[m
[32m+[m[32m            | BufferEncoding,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, data: string) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m     * @param options Either the encoding for the result, or an object that contains the encoding and an optional flag.[m
[32m+[m[32m     * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readFile([m
[32m+[m[32m        path: PathOrFileDescriptor,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | (ObjectEncodingOptions & {[m
[32m+[m[32m                flag?: string | undefined;[m
[32m+[m[32m            } & Abortable)[m
[32m+[m[32m            | BufferEncoding[m
[32m+[m[32m            | undefined[m
[32m+[m[32m            | null,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, data: string | Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readFile([m
[32m+[m[32m        path: PathOrFileDescriptor,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, data: Buffer) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace readFile {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m         * @param options An object that may contain an optional flag.[m
[32m+[m[32m         * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathOrFileDescriptor,[m
[32m+[m[32m            options?: {[m
[32m+[m[32m                encoding?: null | undefined;[m
[32m+[m[32m                flag?: string | undefined;[m
[32m+[m[32m            } | null,[m
[32m+[m[32m        ): Promise<Buffer>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * URL support is _experimental_.[m
[32m+[m[32m         * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m         * @param options Either the encoding for the result, or an object that contains the encoding and an optional flag.[m
[32m+[m[32m         * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathOrFileDescriptor,[m
[32m+[m[32m            options:[m
[32m+[m[32m                | {[m
[32m+[m[32m                    encoding: BufferEncoding;[m
[32m+[m[32m                    flag?: string | undefined;[m
[32m+[m[32m                }[m
[32m+[m[32m                | BufferEncoding,[m
[32m+[m[32m        ): Promise<string>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * URL support is _experimental_.[m
[32m+[m[32m         * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m         * @param options Either the encoding for the result, or an object that contains the encoding and an optional flag.[m
[32m+[m[32m         * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathOrFileDescriptor,[m
[32m+[m[32m            options?:[m
[32m+[m[32m                | (ObjectEncodingOptions & {[m
[32m+[m[32m                    flag?: string | undefined;[m
[32m+[m[32m                })[m
[32m+[m[32m                | BufferEncoding[m
[32m+[m[32m                | null,[m
[32m+[m[32m        ): Promise<string | Buffer>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the contents of the `path`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link readFile}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `encoding` option is specified then this function returns a[m
[32m+[m[32m     * string. Otherwise it returns a buffer.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Similar to {@link readFile}, when the path is a directory, the behavior of `fs.readFileSync()` is platform-specific.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { readFileSync } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // macOS, Linux, and Windows[m
[32m+[m[32m     * readFileSync('<directory>');[m
[32m+[m[32m     * // => [Error: EISDIR: illegal operation on a directory, read <directory>][m
[32m+[m[32m     *[m
[32m+[m[32m     * //  FreeBSD[m
[32m+[m[32m     * readFileSync('<directory>'); // => <data>[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.8[m
[32m+[m[32m     * @param path filename or file descriptor[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readFileSync([m
[32m+[m[32m        path: PathOrFileDescriptor,[m
[32m+[m[32m        options?: {[m
[32m+[m[32m            encoding?: null | undefined;[m
[32m+[m[32m            flag?: string | undefined;[m
[32m+[m[32m        } | null,[m
[32m+[m[32m    ): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously reads the entire contents of a file.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m     * @param options Either the encoding for the result, or an object that contains the encoding and an optional flag.[m
[32m+[m[32m     * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readFileSync([m
[32m+[m[32m        path: PathOrFileDescriptor,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | {[m
[32m+[m[32m                encoding: BufferEncoding;[m
[32m+[m[32m                flag?: string | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            | BufferEncoding,[m
[32m+[m[32m    ): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously reads the entire contents of a file.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m     * @param options Either the encoding for the result, or an object that contains the encoding and an optional flag.[m
[32m+[m[32m     * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readFileSync([m
[32m+[m[32m        path: PathOrFileDescriptor,[m
[32m+[m[32m        options?:[m
[32m+[m[32m            | (ObjectEncodingOptions & {[m
[32m+[m[32m                flag?: string | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | BufferEncoding[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): string | Buffer;[m
[32m+[m[32m    export type WriteFileOptions =[m
[32m+[m[32m        | ([m
[32m+[m[32m            & ObjectEncodingOptions[m
[32m+[m[32m            & Abortable[m
[32m+[m[32m            & {[m
[32m+[m[32m                mode?: Mode | undefined;[m
[32m+[m[32m                flag?: string | undefined;[m
[32m+[m[32m                flush?: boolean | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m        )[m
[32m+[m[32m        | BufferEncoding[m
[32m+[m[32m        | null;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * When `file` is a filename, asynchronously writes data to the file, replacing the[m
[32m+[m[32m     * file if it already exists. `data` can be a string or a buffer.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When `file` is a file descriptor, the behavior is similar to calling `fs.write()` directly (which is recommended). See the notes below on using[m
[32m+[m[32m     * a file descriptor.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `encoding` option is ignored if `data` is a buffer.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `mode` option only affects the newly created file. See {@link open} for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { writeFile } from 'node:fs';[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const data = new Uint8Array(Buffer.from('Hello Node.js'));[m
[32m+[m[32m     * writeFile('message.txt', data, (err) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log('The file has been saved!');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the encoding:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { writeFile } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * writeFile('message.txt', 'Hello Node.js', 'utf8', callback);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is unsafe to use `fs.writeFile()` multiple times on the same file without[m
[32m+[m[32m     * waiting for the callback. For this scenario, {@link createWriteStream} is[m
[32m+[m[32m     * recommended.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Similarly to `fs.readFile` \- `fs.writeFile` is a convenience method that[m
[32m+[m[32m     * performs multiple `write` calls internally to write the buffer passed to it.[m
[32m+[m[32m     * For performance sensitive code consider using {@link createWriteStream}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is possible to use an `AbortSignal` to cancel an `fs.writeFile()`.[m
[32m+[m[32m     * Cancelation is "best effort", and some amount of data is likely still[m
[32m+[m[32m     * to be written.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { writeFile } from 'node:fs';[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const controller = new AbortController();[m
[32m+[m[32m     * const { signal } = controller;[m
[32m+[m[32m     * const data = new Uint8Array(Buffer.from('Hello Node.js'));[m
[32m+[m[32m     * writeFile('message.txt', data, { signal }, (err) => {[m
[32m+[m[32m     *   // When a request is aborted - the callback is called with an AbortError[m
[32m+[m[32m     * });[m
[32m+[m[32m     * // When the request should be aborted[m
[32m+[m[32m     * controller.abort();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Aborting an ongoing request does not abort individual operating[m
[32m+[m[32m     * system requests but rather the internal buffering `fs.writeFile` performs.[m
[32m+[m[32m     * @since v0.1.29[m
[32m+[m[32m     * @param file filename or file descriptor[m
[32m+[m[32m     */[m
[32m+[m[32m    export function writeFile([m
[32m+[m[32m        file: PathOrFileDescriptor,[m
[32m+[m[32m        data: string | NodeJS.ArrayBufferView,[m
[32m+[m[32m        options: WriteFileOptions,[m
[32m+[m[32m        callback: NoParamCallback,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously writes data to a file, replacing the file if it already exists.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m     * @param data The data to write. If something other than a Buffer or Uint8Array is provided, the value is coerced to a string.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function writeFile([m
[32m+[m[32m        path: PathOrFileDescriptor,[m
[32m+[m[32m        data: string | NodeJS.ArrayBufferView,[m
[32m+[m[32m        callback: NoParamCallback,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace writeFile {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously writes data to a file, replacing the file if it already exists.[m
[32m+[m[32m         * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * URL support is _experimental_.[m
[32m+[m[32m         * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m         * @param data The data to write. If something other than a Buffer or Uint8Array is provided, the value is coerced to a string.[m
[32m+[m[32m         * @param options Either the encoding for the file, or an object optionally specifying the encoding, file mode, and flag.[m
[32m+[m[32m         * If `encoding` is not supplied, the default of `'utf8'` is used.[m
[32m+[m[32m         * If `mode` is not supplied, the default of `0o666` is used.[m
[32m+[m[32m         * If `mode` is a string, it is parsed as an octal integer.[m
[32m+[m[32m         * If `flag` is not supplied, the default of `'w'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            path: PathOrFileDescriptor,[m
[32m+[m[32m            data: string | NodeJS.ArrayBufferView,[m
[32m+[m[32m            options?: WriteFileOptions,[m
[32m+[m[32m        ): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `mode` option only affects the newly created file. See {@link open} for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link writeFile}.[m
[32m+[m[32m     * @since v0.1.29[m
[32m+[m[32m     * @param file filename or file descriptor[m
[32m+[m[32m     */[m
[32m+[m[32m    export function writeFileSync([m
[32m+[m[32m        file: PathOrFileDescriptor,[m
[32m+[m[32m        data: string | NodeJS.ArrayBufferView,[m
[32m+[m[32m        options?: WriteFileOptions,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously append data to a file, creating the file if it does not yet[m
[32m+[m[32m     * exist. `data` can be a string or a `Buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `mode` option only affects the newly created file. See {@link open} for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { appendFile } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * appendFile('message.txt', 'data to append', (err) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log('The "data to append" was appended to file!');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the encoding:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { appendFile } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * appendFile('message.txt', 'data to append', 'utf8', callback);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `path` may be specified as a numeric file descriptor that has been opened[m
[32m+[m[32m     * for appending (using `fs.open()` or `fs.openSync()`). The file descriptor will[m
[32m+[m[32m     * not be closed automatically.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { open, close, appendFile } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * function closeFd(fd) {[m
[32m+[m[32m     *   close(fd, (err) => {[m
[32m+[m[32m     *     if (err) throw err;[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * open('message.txt', 'a', (err, fd) => {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *[m
[32m+[m[32m     *   try {[m
[32m+[m[32m     *     appendFile(fd, 'data to append', 'utf8', (err) => {[m
[32m+[m[32m     *       closeFd(fd);[m
[32m+[m[32m     *       if (err) throw err;[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   } catch (err) {[m
[32m+[m[32m     *     closeFd(fd);[m
[32m+[m[32m     *     throw err;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.6.7[m
[32m+[m[32m     * @param path filename or file descriptor[m
[32m+[m[32m     */[m
[32m+[m[32m    export function appendFile([m
[32m+[m[32m        path: PathOrFileDescriptor,[m
[32m+[m[32m        data: string | Uint8Array,[m
[32m+[m[32m        options: WriteFileOptions,[m
[32m+[m[32m        callback: NoParamCallback,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously append data to a file, creating the file if it does not exist.[m
[32m+[m[32m     * @param file A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m     * @param data The data to write. If something other than a Buffer or Uint8Array is provided, the value is coerced to a string.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function appendFile(file: PathOrFileDescriptor, data: string | Uint8Array, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace appendFile {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously append data to a file, creating the file if it does not exist.[m
[32m+[m[32m         * @param file A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * URL support is _experimental_.[m
[32m+[m[32m         * If a file descriptor is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m         * @param data The data to write. If something other than a Buffer or Uint8Array is provided, the value is coerced to a string.[m
[32m+[m[32m         * @param options Either the encoding for the file, or an object optionally specifying the encoding, file mode, and flag.[m
[32m+[m[32m         * If `encoding` is not supplied, the default of `'utf8'` is used.[m
[32m+[m[32m         * If `mode` is not supplied, the default of `0o666` is used.[m
[32m+[m[32m         * If `mode` is a string, it is parsed as an octal integer.[m
[32m+[m[32m         * If `flag` is not supplied, the default of `'a'` is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            file: PathOrFileDescriptor,[m
[32m+[m[32m            data: string | Uint8Array,[m
[32m+[m[32m            options?: WriteFileOptions,[m
[32m+[m[32m        ): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously append data to a file, creating the file if it does not yet[m
[32m+[m[32m     * exist. `data` can be a string or a `Buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `mode` option only affects the newly created file. See {@link open} for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { appendFileSync } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   appendFileSync('message.txt', 'data to append');[m
[32m+[m[32m     *   console.log('The "data to append" was appended to file!');[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   // Handle the error[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the encoding:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { appendFileSync } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * appendFileSync('message.txt', 'data to append', 'utf8');[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `path` may be specified as a numeric file descriptor that has been opened[m
[32m+[m[32m     * for appending (using `fs.open()` or `fs.openSync()`). The file descriptor will[m
[32m+[m[32m     * not be closed automatically.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { openSync, closeSync, appendFileSync } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * let fd;[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   fd = openSync('message.txt', 'a');[m
[32m+[m[32m     *   appendFileSync(fd, 'data to append', 'utf8');[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   // Handle the error[m
[32m+[m[32m     * } finally {[m
[32m+[m[32m     *   if (fd !== undefined)[m
[32m+[m[32m     *     closeSync(fd);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.6.7[m
[32m+[m[32m     * @param path filename or file descriptor[m
[32m+[m[32m     */[m
[32m+[m[32m    export function appendFileSync([m
[32m+[m[32m        path: PathOrFileDescriptor,[m
[32m+[m[32m        data: string | Uint8Array,[m
[32m+[m[32m        options?: WriteFileOptions,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Watch for changes on `filename`. The callback `listener` will be called each[m
[32m+[m[32m     * time the file is accessed.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `options` argument may be omitted. If provided, it should be an object. The `options` object may contain a boolean named `persistent` that indicates[m
[32m+[m[32m     * whether the process should continue to run as long as files are being watched.[m
[32m+[m[32m     * The `options` object may specify an `interval` property indicating how often the[m
[32m+[m[32m     * target should be polled in milliseconds.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `listener` gets two arguments the current stat object and the previous[m
[32m+[m[32m     * stat object:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { watchFile } from 'fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * watchFile('message.text', (curr, prev) => {[m
[32m+[m[32m     *   console.log(`the current mtime is: ${curr.mtime}`);[m
[32m+[m[32m     *   console.log(`the previous mtime was: ${prev.mtime}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * These stat objects are instances of `fs.Stat`. If the `bigint` option is `true`,[m
[32m+[m[32m     * the numeric values in these objects are specified as `BigInt`s.[m
[32m+[m[32m     *[m
[32m+[m[32m     * To be notified when the file was modified, not just accessed, it is necessary[m
[32m+[m[32m     * to compare `curr.mtimeMs` and `prev.mtimeMs`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When an `fs.watchFile` operation results in an `ENOENT` error, it[m
[32m+[m[32m     * will invoke the listener once, with all the fields zeroed (or, for dates, the[m
[32m+[m[32m     * Unix Epoch). If the file is created later on, the listener will be called[m
[32m+[m[32m     * again, with the latest stat objects. This is a change in functionality since[m
[32m+[m[32m     * v0.10.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using {@link watch} is more efficient than `fs.watchFile` and `fs.unwatchFile`. `fs.watch` should be used instead of `fs.watchFile` and `fs.unwatchFile` when possible.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When a file being watched by `fs.watchFile()` disappears and reappears,[m
[32m+[m[32m     * then the contents of `previous` in the second callback event (the file's[m
[32m+[m[32m     * reappearance) will be the same as the contents of `previous` in the first[m
[32m+[m[32m     * callback event (its disappearance).[m
[32m+[m[32m     *[m
[32m+[m[32m     * This happens when:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * the file is deleted, followed by a restore[m
[32m+[m[32m     * * the file is renamed and then renamed a second time back to its original name[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     */[m
[32m+[m[32m    export interface WatchFileOptions {[m
[32m+[m[32m        bigint?: boolean | undefined;[m
[32m+[m[32m        persistent?: boolean | undefined;[m
[32m+[m[32m        interval?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Watch for changes on `filename`. The callback `listener` will be called each[m
[32m+[m[32m     * time the file is accessed.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `options` argument may be omitted. If provided, it should be an object. The `options` object may contain a boolean named `persistent` that indicates[m
[32m+[m[32m     * whether the process should continue to run as long as files are being watched.[m
[32m+[m[32m     * The `options` object may specify an `interval` property indicating how often the[m
[32m+[m[32m     * target should be polled in milliseconds.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `listener` gets two arguments the current stat object and the previous[m
[32m+[m[32m     * stat object:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { watchFile } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * watchFile('message.text', (curr, prev) => {[m
[32m+[m[32m     *   console.log(`the current mtime is: ${curr.mtime}`);[m
[32m+[m[32m     *   console.log(`the previous mtime was: ${prev.mtime}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * These stat objects are instances of `fs.Stat`. If the `bigint` option is `true`,[m
[32m+[m[32m     * the numeric values in these objects are specified as `BigInt`s.[m
[32m+[m[32m     *[m
[32m+[m[32m     * To be notified when the file was modified, not just accessed, it is necessary[m
[32m+[m[32m     * to compare `curr.mtimeMs` and `prev.mtimeMs`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When an `fs.watchFile` operation results in an `ENOENT` error, it[m
[32m+[m[32m     * will invoke the listener once, with all the fields zeroed (or, for dates, the[m
[32m+[m[32m     * Unix Epoch). If the file is created later on, the listener will be called[m
[32m+[m[32m     * again, with the latest stat objects. This is a change in functionality since[m
[32m+[m[32m     * v0.10.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using {@link watch} is more efficient than `fs.watchFile` and `fs.unwatchFile`. `fs.watch` should be used instead of `fs.watchFile` and `fs.unwatchFile` when possible.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When a file being watched by `fs.watchFile()` disappears and reappears,[m
[32m+[m[32m     * then the contents of `previous` in the second callback event (the file's[m
[32m+[m[32m     * reappearance) will be the same as the contents of `previous` in the first[m
[32m+[m[32m     * callback event (its disappearance).[m
[32m+[m[32m     *[m
[32m+[m[32m     * This happens when:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * the file is deleted, followed by a restore[m
[32m+[m[32m     * * the file is renamed and then renamed a second time back to its original name[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     */[m
[32m+[m[32m    export function watchFile([m
[32m+[m[32m        filename: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | (WatchFileOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | undefined,[m
[32m+[m[32m        listener: StatsListener,[m
[32m+[m[32m    ): StatWatcher;[m
[32m+[m[32m    export function watchFile([m
[32m+[m[32m        filename: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | (WatchFileOptions & {[m
[32m+[m[32m                bigint: true;[m
[32m+[m[32m            })[m
[32m+[m[32m            | undefined,[m
[32m+[m[32m        listener: BigIntStatsListener,[m
[32m+[m[32m    ): StatWatcher;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Watch for changes on `filename`. The callback `listener` will be called each time the file is accessed.[m
[32m+[m[32m     * @param filename A path to a file or directory. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function watchFile(filename: PathLike, listener: StatsListener): StatWatcher;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Stop watching for changes on `filename`. If `listener` is specified, only that[m
[32m+[m[32m     * particular listener is removed. Otherwise, _all_ listeners are removed,[m
[32m+[m[32m     * effectively stopping watching of `filename`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Calling `fs.unwatchFile()` with a filename that is not being watched is a[m
[32m+[m[32m     * no-op, not an error.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using {@link watch} is more efficient than `fs.watchFile()` and `fs.unwatchFile()`. `fs.watch()` should be used instead of `fs.watchFile()` and `fs.unwatchFile()` when possible.[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     * @param listener Optional, a listener previously attached using `fs.watchFile()`[m
[32m+[m[32m     */[m
[32m+[m[32m    export function unwatchFile(filename: PathLike, listener?: StatsListener): void;[m
[32m+[m[32m    export function unwatchFile(filename: PathLike, listener?: BigIntStatsListener): void;[m
[32m+[m[32m    export interface WatchOptions extends Abortable {[m
[32m+[m[32m        encoding?: BufferEncoding | "buffer" | undefined;[m
[32m+[m[32m        persistent?: boolean | undefined;[m
[32m+[m[32m        recursive?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export type WatchEventType = "rename" | "change";[m
[32m+[m[32m    export type WatchListener<T> = (event: WatchEventType, filename: T | null) => void;[m
[32m+[m[32m    export type StatsListener = (curr: Stats, prev: Stats) => void;[m
[32m+[m[32m    export type BigIntStatsListener = (curr: BigIntStats, prev: BigIntStats) => void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Watch for changes on `filename`, where `filename` is either a file or a[m
[32m+[m[32m     * directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The second argument is optional. If `options` is provided as a string, it[m
[32m+[m[32m     * specifies the `encoding`. Otherwise `options` should be passed as an object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The listener callback gets two arguments `(eventType, filename)`. `eventType`is either `'rename'` or `'change'`, and `filename` is the name of the file[m
[32m+[m[32m     * which triggered the event.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On most platforms, `'rename'` is emitted whenever a filename appears or[m
[32m+[m[32m     * disappears in the directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The listener callback is attached to the `'change'` event fired by `fs.FSWatcher`, but it is not the same thing as the `'change'` value of `eventType`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If a `signal` is passed, aborting the corresponding AbortController will close[m
[32m+[m[32m     * the returned `fs.FSWatcher`.[m
[32m+[m[32m     * @since v0.5.10[m
[32m+[m[32m     * @param listener[m
[32m+[m[32m     */[m
[32m+[m[32m    export function watch([m
[32m+[m[32m        filename: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | (WatchOptions & {[m
[32m+[m[32m                encoding: "buffer";[m
[32m+[m[32m            })[m
[32m+[m[32m            | "buffer",[m
[32m+[m[32m        listener?: WatchListener<Buffer>,[m
[32m+[m[32m    ): FSWatcher;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Watch for changes on `filename`, where `filename` is either a file or a directory, returning an `FSWatcher`.[m
[32m+[m[32m     * @param filename A path to a file or directory. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options Either the encoding for the filename provided to the listener, or an object optionally specifying encoding, persistent, and recursive options.[m
[32m+[m[32m     * If `encoding` is not supplied, the default of `'utf8'` is used.[m
[32m+[m[32m     * If `persistent` is not supplied, the default of `true` is used.[m
[32m+[m[32m     * If `recursive` is not supplied, the default of `false` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function watch([m
[32m+[m[32m        filename: PathLike,[m
[32m+[m[32m        options?: WatchOptions | BufferEncoding | null,[m
[32m+[m[32m        listener?: WatchListener<string>,[m
[32m+[m[32m    ): FSWatcher;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Watch for changes on `filename`, where `filename` is either a file or a directory, returning an `FSWatcher`.[m
[32m+[m[32m     * @param filename A path to a file or directory. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options Either the encoding for the filename provided to the listener, or an object optionally specifying encoding, persistent, and recursive options.[m
[32m+[m[32m     * If `encoding` is not supplied, the default of `'utf8'` is used.[m
[32m+[m[32m     * If `persistent` is not supplied, the default of `true` is used.[m
[32m+[m[32m     * If `recursive` is not supplied, the default of `false` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function watch([m
[32m+[m[32m        filename: PathLike,[m
[32m+[m[32m        options: WatchOptions | string,[m
[32m+[m[32m        listener?: WatchListener<string | Buffer>,[m
[32m+[m[32m    ): FSWatcher;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Watch for changes on `filename`, where `filename` is either a file or a directory, returning an `FSWatcher`.[m
[32m+[m[32m     * @param filename A path to a file or directory. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function watch(filename: PathLike, listener?: WatchListener<string>): FSWatcher;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Test whether or not the given path exists by checking with the file system.[m
[32m+[m[32m     * Then call the `callback` argument with either true or false:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { exists } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * exists('/etc/passwd', (e) => {[m
[32m+[m[32m     *   console.log(e ? 'it exists' : 'no passwd!');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * **The parameters for this callback are not consistent with other Node.js**[m
[32m+[m[32m     * **callbacks.** Normally, the first parameter to a Node.js callback is an `err` parameter, optionally followed by other parameters. The `fs.exists()` callback[m
[32m+[m[32m     * has only one boolean parameter. This is one reason `fs.access()` is recommended[m
[32m+[m[32m     * instead of `fs.exists()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using `fs.exists()` to check for the existence of a file before calling `fs.open()`, `fs.readFile()`, or `fs.writeFile()` is not recommended. Doing[m
[32m+[m[32m     * so introduces a race condition, since other processes may change the file's[m
[32m+[m[32m     * state between the two calls. Instead, user code should open/read/write the[m
[32m+[m[32m     * file directly and handle the error raised if the file does not exist.[m
[32m+[m[32m     *[m
[32m+[m[32m     * **write (NOT RECOMMENDED)**[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { exists, open, close } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * exists('myfile', (e) => {[m
[32m+[m[32m     *   if (e) {[m
[32m+[m[32m     *     console.error('myfile already exists');[m
[32m+[m[32m     *   } else {[m
[32m+[m[32m     *     open('myfile', 'wx', (err, fd) => {[m
[32m+[m[32m     *       if (err) throw err;[m
[32m+[m[32m     *[m
[32m+[m[32m     *       try {[m
[32m+[m[32m     *         writeMyData(fd);[m
[32m+[m[32m     *       } finally {[m
[32m+[m[32m     *         close(fd, (err) => {[m
[32m+[m[32m     *           if (err) throw err;[m
[32m+[m[32m     *         });[m
[32m+[m[32m     *       }[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * **write (RECOMMENDED)**[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { open, close } from 'node:fs';[m
[32m+[m[32m     * open('myfile', 'wx', (err, fd) => {[m
[32m+[m[32m     *   if (err) {[m
[32m+[m[32m     *     if (err.code === 'EEXIST') {[m
[32m+[m[32m     *       console.error('myfile already exists');[m
[32m+[m[32m     *       return;[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *[m
[32m+[m[32m     *     throw err;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *[m
[32m+[m[32m     *   try {[m
[32m+[m[32m     *     writeMyData(fd);[m
[32m+[m[32m     *   } finally {[m
[32m+[m[32m     *     close(fd, (err) => {[m
[32m+[m[32m     *       if (err) throw err;[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * **read (NOT RECOMMENDED)**[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { open, close, exists } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * exists('myfile', (e) => {[m
[32m+[m[32m     *   if (e) {[m
[32m+[m[32m     *     open('myfile', 'r', (err, fd) => {[m
[32m+[m[32m     *       if (err) throw err;[m
[32m+[m[32m     *[m
[32m+[m[32m     *       try {[m
[32m+[m[32m     *         readMyData(fd);[m
[32m+[m[32m     *       } finally {[m
[32m+[m[32m     *         close(fd, (err) => {[m
[32m+[m[32m     *           if (err) throw err;[m
[32m+[m[32m     *         });[m
[32m+[m[32m     *       }[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   } else {[m
[32m+[m[32m     *     console.error('myfile does not exist');[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * **read (RECOMMENDED)**[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { open, close } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * open('myfile', 'r', (err, fd) => {[m
[32m+[m[32m     *   if (err) {[m
[32m+[m[32m     *     if (err.code === 'ENOENT') {[m
[32m+[m[32m     *       console.error('myfile does not exist');[m
[32m+[m[32m     *       return;[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *[m
[32m+[m[32m     *     throw err;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *[m
[32m+[m[32m     *   try {[m
[32m+[m[32m     *     readMyData(fd);[m
[32m+[m[32m     *   } finally {[m
[32m+[m[32m     *     close(fd, (err) => {[m
[32m+[m[32m     *       if (err) throw err;[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The "not recommended" examples above check for existence and then use the[m
[32m+[m[32m     * file; the "recommended" examples are better because they use the file directly[m
[32m+[m[32m     * and handle the error, if any.[m
[32m+[m[32m     *[m
[32m+[m[32m     * In general, check for the existence of a file only if the file won't be[m
[32m+[m[32m     * used directly, for example when its existence is a signal from another[m
[32m+[m[32m     * process.[m
[32m+[m[32m     * @since v0.0.2[m
[32m+[m[32m     * @deprecated Since v1.0.0 - Use {@link stat} or {@link access} instead.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function exists(path: PathLike, callback: (exists: boolean) => void): void;[m
[32m+[m[32m    /** @deprecated */[m
[32m+[m[32m    export namespace exists {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @param path A path to a file or directory. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * URL support is _experimental_.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike): Promise<boolean>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns `true` if the path exists, `false` otherwise.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link exists}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `fs.exists()` is deprecated, but `fs.existsSync()` is not. The `callback` parameter to `fs.exists()` accepts parameters that are inconsistent with other[m
[32m+[m[32m     * Node.js callbacks. `fs.existsSync()` does not use a callback.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { existsSync } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * if (existsSync('/etc/passwd'))[m
[32m+[m[32m     *   console.log('The path exists.');[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.21[m
[32m+[m[32m     */[m
[32m+[m[32m    export function existsSync(path: PathLike): boolean;[m
[32m+[m[32m    export namespace constants {[m
[32m+[m[32m        // File Access Constants[m
[32m+[m[32m        /** Constant for fs.access(). File is visible to the calling process. */[m
[32m+[m[32m        const F_OK: number;[m
[32m+[m[32m        /** Constant for fs.access(). File can be read by the calling process. */[m
[32m+[m[32m        const R_OK: number;[m
[32m+[m[32m        /** Constant for fs.access(). File can be written by the calling process. */[m
[32m+[m[32m        const W_OK: number;[m
[32m+[m[32m        /** Constant for fs.access(). File can be executed by the calling process. */[m
[32m+[m[32m        const X_OK: number;[m
[32m+[m[32m        // File Copy Constants[m
[32m+[m[32m        /** Constant for fs.copyFile. Flag indicating the destination file should not be overwritten if it already exists. */[m
[32m+[m[32m        const COPYFILE_EXCL: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Constant for fs.copyFile. copy operation will attempt to create a copy-on-write reflink.[m
[32m+[m[32m         * If the underlying platform does not support copy-on-write, then a fallback copy mechanism is used.[m
[32m+[m[32m         */[m
[32m+[m[32m        const COPYFILE_FICLONE: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Constant for fs.copyFile. Copy operation will attempt to create a copy-on-write reflink.[m
[32m+[m[32m         * If the underlying platform does not support copy-on-write, then the operation will fail with an error.[m
[32m+[m[32m         */[m
[32m+[m[32m        const COPYFILE_FICLONE_FORCE: number;[m
[32m+[m[32m        // File Open Constants[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating to open a file for read-only access. */[m
[32m+[m[32m        const O_RDONLY: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating to open a file for write-only access. */[m
[32m+[m[32m        const O_WRONLY: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating to open a file for read-write access. */[m
[32m+[m[32m        const O_RDWR: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating to create the file if it does not already exist. */[m
[32m+[m[32m        const O_CREAT: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating that opening a file should fail if the O_CREAT flag is set and the file already exists. */[m
[32m+[m[32m        const O_EXCL: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Constant for fs.open(). Flag indicating that if path identifies a terminal device,[m
[32m+[m[32m         * opening the path shall not cause that terminal to become the controlling terminal for the process[m
[32m+[m[32m         * (if the process does not already have one).[m
[32m+[m[32m         */[m
[32m+[m[32m        const O_NOCTTY: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating that if the file exists and is a regular file, and the file is opened successfully for write access, its length shall be truncated to zero. */[m
[32m+[m[32m        const O_TRUNC: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating that data will be appended to the end of the file. */[m
[32m+[m[32m        const O_APPEND: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating that the open should fail if the path is not a directory. */[m
[32m+[m[32m        const O_DIRECTORY: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * constant for fs.open().[m
[32m+[m[32m         * Flag indicating reading accesses to the file system will no longer result in[m
[32m+[m[32m         * an update to the atime information associated with the file.[m
[32m+[m[32m         * This flag is available on Linux operating systems only.[m
[32m+[m[32m         */[m
[32m+[m[32m        const O_NOATIME: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating that the open should fail if the path is a symbolic link. */[m
[32m+[m[32m        const O_NOFOLLOW: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating that the file is opened for synchronous I/O. */[m
[32m+[m[32m        const O_SYNC: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating that the file is opened for synchronous I/O with write operations waiting for data integrity. */[m
[32m+[m[32m        const O_DSYNC: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating to open the symbolic link itself rather than the resource it is pointing to. */[m
[32m+[m[32m        const O_SYMLINK: number;[m
[32m+[m[32m        /** Constant for fs.open(). When set, an attempt will be made to minimize caching effects of file I/O. */[m
[32m+[m[32m        const O_DIRECT: number;[m
[32m+[m[32m        /** Constant for fs.open(). Flag indicating to open the file in nonblocking mode when possible. */[m
[32m+[m[32m        const O_NONBLOCK: number;[m
[32m+[m[32m        // File Type Constants[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining a file's type. Bit mask used to extract the file type code. */[m
[32m+[m[32m        const S_IFMT: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining a file's type. File type constant for a regular file. */[m
[32m+[m[32m        const S_IFREG: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining a file's type. File type constant for a directory. */[m
[32m+[m[32m        const S_IFDIR: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining a file's type. File type constant for a character-oriented device file. */[m
[32m+[m[32m        const S_IFCHR: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining a file's type. File type constant for a block-oriented device file. */[m
[32m+[m[32m        const S_IFBLK: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining a file's type. File type constant for a FIFO/pipe. */[m
[32m+[m[32m        const S_IFIFO: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining a file's type. File type constant for a symbolic link. */[m
[32m+[m[32m        const S_IFLNK: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining a file's type. File type constant for a socket. */[m
[32m+[m[32m        const S_IFSOCK: number;[m
[32m+[m[32m        // File Mode Constants[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by owner. */[m
[32m+[m[32m        const S_IRWXU: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by owner. */[m
[32m+[m[32m        const S_IRUSR: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by owner. */[m
[32m+[m[32m        const S_IWUSR: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by owner. */[m
[32m+[m[32m        const S_IXUSR: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by group. */[m
[32m+[m[32m        const S_IRWXG: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by group. */[m
[32m+[m[32m        const S_IRGRP: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by group. */[m
[32m+[m[32m        const S_IWGRP: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by group. */[m
[32m+[m[32m        const S_IXGRP: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by others. */[m
[32m+[m[32m        const S_IRWXO: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by others. */[m
[32m+[m[32m        const S_IROTH: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by others. */[m
[32m+[m[32m        const S_IWOTH: number;[m
[32m+[m[32m        /** Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by others. */[m
[32m+[m[32m        const S_IXOTH: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When set, a memory file mapping is used to access the file. This flag[m
[32m+[m[32m         * is available on Windows operating systems only. On other operating systems,[m
[32m+[m[32m         * this flag is ignored.[m
[32m+[m[32m         */[m
[32m+[m[32m        const UV_FS_O_FILEMAP: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Tests a user's permissions for the file or directory specified by `path`.[m
[32m+[m[32m     * The `mode` argument is an optional integer that specifies the accessibility[m
[32m+[m[32m     * checks to be performed. `mode` should be either the value `fs.constants.F_OK` or a mask consisting of the bitwise OR of any of `fs.constants.R_OK`, `fs.constants.W_OK`, and `fs.constants.X_OK`[m
[32m+[m[32m     * (e.g.`fs.constants.W_OK | fs.constants.R_OK`). Check `File access constants` for[m
[32m+[m[32m     * possible values of `mode`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The final argument, `callback`, is a callback function that is invoked with[m
[32m+[m[32m     * a possible error argument. If any of the accessibility checks fail, the error[m
[32m+[m[32m     * argument will be an `Error` object. The following examples check if `package.json` exists, and if it is readable or writable.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { access, constants } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const file = 'package.json';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Check if the file exists in the current directory.[m
[32m+[m[32m     * access(file, constants.F_OK, (err) => {[m
[32m+[m[32m     *   console.log(`${file} ${err ? 'does not exist' : 'exists'}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Check if the file is readable.[m
[32m+[m[32m     * access(file, constants.R_OK, (err) => {[m
[32m+[m[32m     *   console.log(`${file} ${err ? 'is not readable' : 'is readable'}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Check if the file is writable.[m
[32m+[m[32m     * access(file, constants.W_OK, (err) => {[m
[32m+[m[32m     *   console.log(`${file} ${err ? 'is not writable' : 'is writable'}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Check if the file is readable and writable.[m
[32m+[m[32m     * access(file, constants.R_OK | constants.W_OK, (err) => {[m
[32m+[m[32m     *   console.log(`${file} ${err ? 'is not' : 'is'} readable and writable`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Do not use `fs.access()` to check for the accessibility of a file before calling `fs.open()`, `fs.readFile()`, or `fs.writeFile()`. Doing[m
[32m+[m[32m     * so introduces a race condition, since other processes may change the file's[m
[32m+[m[32m     * state between the two calls. Instead, user code should open/read/write the[m
[32m+[m[32m     * file directly and handle the error raised if the file is not accessible.[m
[32m+[m[32m     *[m
[32m+[m[32m     * **write (NOT RECOMMENDED)**[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { access, open, close } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * access('myfile', (err) => {[m
[32m+[m[32m     *   if (!err) {[m
[32m+[m[32m     *     console.error('myfile already exists');[m
[32m+[m[32m     *     return;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *[m
[32m+[m[32m     *   open('myfile', 'wx', (err, fd) => {[m
[32m+[m[32m     *     if (err) throw err;[m
[32m+[m[32m     *[m
[32m+[m[32m     *     try {[m
[32m+[m[32m     *       writeMyData(fd);[m
[32m+[m[32m     *     } finally {[m
[32m+[m[32m     *       close(fd, (err) => {[m
[32m+[m[32m     *         if (err) throw err;[m
[32m+[m[32m     *       });[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * **write (RECOMMENDED)**[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { open, close } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * open('myfile', 'wx', (err, fd) => {[m
[32m+[m[32m     *   if (err) {[m
[32m+[m[32m     *     if (err.code === 'EEXIST') {[m
[32m+[m[32m     *       console.error('myfile already exists');[m
[32m+[m[32m     *       return;[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *[m
[32m+[m[32m     *     throw err;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *[m
[32m+[m[32m     *   try {[m
[32m+[m[32m     *     writeMyData(fd);[m
[32m+[m[32m     *   } finally {[m
[32m+[m[32m     *     close(fd, (err) => {[m
[32m+[m[32m     *       if (err) throw err;[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * **read (NOT RECOMMENDED)**[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { access, open, close } from 'node:fs';[m
[32m+[m[32m     * access('myfile', (err) => {[m
[32m+[m[32m     *   if (err) {[m
[32m+[m[32m     *     if (err.code === 'ENOENT') {[m
[32m+[m[32m     *       console.error('myfile does not exist');[m
[32m+[m[32m     *       return;[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *[m
[32m+[m[32m     *     throw err;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *[m
[32m+[m[32m     *   open('myfile', 'r', (err, fd) => {[m
[32m+[m[32m     *     if (err) throw err;[m
[32m+[m[32m     *[m
[32m+[m[32m     *     try {[m
[32m+[m[32m     *       readMyData(fd);[m
[32m+[m[32m     *     } finally {[m
[32m+[m[32m     *       close(fd, (err) => {[m
[32m+[m[32m     *         if (err) throw err;[m
[32m+[m[32m     *       });[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * **read (RECOMMENDED)**[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { open, close } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * open('myfile', 'r', (err, fd) => {[m
[32m+[m[32m     *   if (err) {[m
[32m+[m[32m     *     if (err.code === 'ENOENT') {[m
[32m+[m[32m     *       console.error('myfile does not exist');[m
[32m+[m[32m     *       return;[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *[m
[32m+[m[32m     *     throw err;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *[m
[32m+[m[32m     *   try {[m
[32m+[m[32m     *     readMyData(fd);[m
[32m+[m[32m     *   } finally {[m
[32m+[m[32m     *     close(fd, (err) => {[m
[32m+[m[32m     *       if (err) throw err;[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The "not recommended" examples above check for accessibility and then use the[m
[32m+[m[32m     * file; the "recommended" examples are better because they use the file directly[m
[32m+[m[32m     * and handle the error, if any.[m
[32m+[m[32m     *[m
[32m+[m[32m     * In general, check for the accessibility of a file only if the file will not be[m
[32m+[m[32m     * used directly, for example when its accessibility is a signal from another[m
[32m+[m[32m     * process.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On Windows, access-control policies (ACLs) on a directory may limit access to[m
[32m+[m[32m     * a file or directory. The `fs.access()` function, however, does not check the[m
[32m+[m[32m     * ACL and therefore may report that a path is accessible even if the ACL restricts[m
[32m+[m[32m     * the user from reading or writing to it.[m
[32m+[m[32m     * @since v0.11.15[m
[32m+[m[32m     * @param [mode=fs.constants.F_OK][m
[32m+[m[32m     */[m
[32m+[m[32m    export function access(path: PathLike, mode: number | undefined, callback: NoParamCallback): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously tests a user's permissions for the file specified by path.[m
[32m+[m[32m     * @param path A path to a file or directory. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function access(path: PathLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace access {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously tests a user's permissions for the file specified by path.[m
[32m+[m[32m         * @param path A path to a file or directory. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m         * URL support is _experimental_.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(path: PathLike, mode?: number): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously tests a user's permissions for the file or directory specified[m
[32m+[m[32m     * by `path`. The `mode` argument is an optional integer that specifies the[m
[32m+[m[32m     * accessibility checks to be performed. `mode` should be either the value `fs.constants.F_OK` or a mask consisting of the bitwise OR of any of `fs.constants.R_OK`, `fs.constants.W_OK`, and[m
[32m+[m[32m     * `fs.constants.X_OK` (e.g.`fs.constants.W_OK | fs.constants.R_OK`). Check `File access constants` for[m
[32m+[m[32m     * possible values of `mode`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If any of the accessibility checks fail, an `Error` will be thrown. Otherwise,[m
[32m+[m[32m     * the method will return `undefined`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { accessSync, constants } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   accessSync('etc/passwd', constants.R_OK | constants.W_OK);[m
[32m+[m[32m     *   console.log('can read/write');[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   console.error('no access!');[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.11.15[m
[32m+[m[32m     * @param [mode=fs.constants.F_OK][m
[32m+[m[32m     */[m
[32m+[m[32m    export function accessSync(path: PathLike, mode?: number): void;[m
[32m+[m[32m    interface StreamOptions {[m
[32m+[m[32m        flags?: string | undefined;[m
[32m+[m[32m        encoding?: BufferEncoding | undefined;[m
[32m+[m[32m        fd?: number | promises.FileHandle | undefined;[m
[32m+[m[32m        mode?: number | undefined;[m
[32m+[m[32m        autoClose?: boolean | undefined;[m
[32m+[m[32m        emitClose?: boolean | undefined;[m
[32m+[m[32m        start?: number | undefined;[m
[32m+[m[32m        signal?: AbortSignal | null | undefined;[m
[32m+[m[32m        highWaterMark?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface FSImplementation {[m
[32m+[m[32m        open?: (...args: any[]) => any;[m
[32m+[m[32m        close?: (...args: any[]) => any;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CreateReadStreamFSImplementation extends FSImplementation {[m
[32m+[m[32m        read: (...args: any[]) => any;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CreateWriteStreamFSImplementation extends FSImplementation {[m
[32m+[m[32m        write: (...args: any[]) => any;[m
[32m+[m[32m        writev?: (...args: any[]) => any;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ReadStreamOptions extends StreamOptions {[m
[32m+[m[32m        fs?: CreateReadStreamFSImplementation | null | undefined;[m
[32m+[m[32m        end?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface WriteStreamOptions extends StreamOptions {[m
[32m+[m[32m        fs?: CreateWriteStreamFSImplementation | null | undefined;[m
[32m+[m[32m        flush?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Unlike the 16 KiB default `highWaterMark` for a `stream.Readable`, the stream[m
[32m+[m[32m     * returned by this method has a default `highWaterMark` of 64 KiB.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `options` can include `start` and `end` values to read a range of bytes from[m
[32m+[m[32m     * the file instead of the entire file. Both `start` and `end` are inclusive and[m
[32m+[m[32m     * start counting at 0, allowed values are in the[m
[32m+[m[32m     * \[0, [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\] range. If `fd` is specified and `start` is[m
[32m+[m[32m     * omitted or `undefined`, `fs.createReadStream()` reads sequentially from the[m
[32m+[m[32m     * current file position. The `encoding` can be any one of those accepted by `Buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `fd` is specified, `ReadStream` will ignore the `path` argument and will use[m
[32m+[m[32m     * the specified file descriptor. This means that no `'open'` event will be[m
[32m+[m[32m     * emitted. `fd` should be blocking; non-blocking `fd`s should be passed to `net.Socket`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `fd` points to a character device that only supports blocking reads[m
[32m+[m[32m     * (such as keyboard or sound card), read operations do not finish until data is[m
[32m+[m[32m     * available. This can prevent the process from exiting and the stream from[m
[32m+[m[32m     * closing naturally.[m
[32m+[m[32m     *[m
[32m+[m[32m     * By default, the stream will emit a `'close'` event after it has been[m
[32m+[m[32m     * destroyed.  Set the `emitClose` option to `false` to change this behavior.[m
[32m+[m[32m     *[m
[32m+[m[32m     * By providing the `fs` option, it is possible to override the corresponding `fs` implementations for `open`, `read`, and `close`. When providing the `fs` option,[m
[32m+[m[32m     * an override for `read` is required. If no `fd` is provided, an override for `open` is also required. If `autoClose` is `true`, an override for `close` is[m
[32m+[m[32m     * also required.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { createReadStream } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Create a stream from some character device.[m
[32m+[m[32m     * const stream = createReadStream('/dev/input/event0');[m
[32m+[m[32m     * setTimeout(() => {[m
[32m+[m[32m     *   stream.close(); // This may not close the stream.[m
[32m+[m[32m     *   // Artificially marking end-of-stream, as if the underlying resource had[m
[32m+[m[32m     *   // indicated end-of-file by itself, allows the stream to close.[m
[32m+[m[32m     *   // This does not cancel pending read operations, and if there is such an[m
[32m+[m[32m     *   // operation, the process may still not be able to exit successfully[m
[32m+[m[32m     *   // until it finishes.[m
[32m+[m[32m     *   stream.push(null);[m
[32m+[m[32m     *   stream.read(0);[m
[32m+[m[32m     * }, 100);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `autoClose` is false, then the file descriptor won't be closed, even if[m
[32m+[m[32m     * there's an error. It is the application's responsibility to close it and make[m
[32m+[m[32m     * sure there's no file descriptor leak. If `autoClose` is set to true (default[m
[32m+[m[32m     * behavior), on `'error'` or `'end'` the file descriptor will be closed[m
[32m+[m[32m     * automatically.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `mode` sets the file mode (permission and sticky bits), but only if the[m
[32m+[m[32m     * file was created.[m
[32m+[m[32m     *[m
[32m+[m[32m     * An example to read the last 10 bytes of a file which is 100 bytes long:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { createReadStream } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * createReadStream('sample.txt', { start: 90, end: 99 });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the encoding.[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     */[m
[32m+[m[32m    export function createReadStream(path: PathLike, options?: BufferEncoding | ReadStreamOptions): ReadStream;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * `options` may also include a `start` option to allow writing data at some[m
[32m+[m[32m     * position past the beginning of the file, allowed values are in the[m
[32m+[m[32m     * \[0, [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\] range. Modifying a file rather than[m
[32m+[m[32m     * replacing it may require the `flags` option to be set to `r+` rather than the[m
[32m+[m[32m     * default `w`. The `encoding` can be any one of those accepted by `Buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `autoClose` is set to true (default behavior) on `'error'` or `'finish'` the file descriptor will be closed automatically. If `autoClose` is false,[m
[32m+[m[32m     * then the file descriptor won't be closed, even if there's an error.[m
[32m+[m[32m     * It is the application's responsibility to close it and make sure there's no[m
[32m+[m[32m     * file descriptor leak.[m
[32m+[m[32m     *[m
[32m+[m[32m     * By default, the stream will emit a `'close'` event after it has been[m
[32m+[m[32m     * destroyed.  Set the `emitClose` option to `false` to change this behavior.[m
[32m+[m[32m     *[m
[32m+[m[32m     * By providing the `fs` option it is possible to override the corresponding `fs` implementations for `open`, `write`, `writev`, and `close`. Overriding `write()` without `writev()` can reduce[m
[32m+[m[32m     * performance as some optimizations (`_writev()`)[m
[32m+[m[32m     * will be disabled. When providing the `fs` option, overrides for at least one of `write` and `writev` are required. If no `fd` option is supplied, an override[m
[32m+[m[32m     * for `open` is also required. If `autoClose` is `true`, an override for `close` is also required.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Like `fs.ReadStream`, if `fd` is specified, `fs.WriteStream` will ignore the `path` argument and will use the specified file descriptor. This means that no `'open'` event will be[m
[32m+[m[32m     * emitted. `fd` should be blocking; non-blocking `fd`s[m
[32m+[m[32m     * should be passed to `net.Socket`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the encoding.[m
[32m+[m[32m     * @since v0.1.31[m
[32m+[m[32m     */[m
[32m+[m[32m    export function createWriteStream(path: PathLike, options?: BufferEncoding | WriteStreamOptions): WriteStream;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Forces all currently queued I/O operations associated with the file to the[m
[32m+[m[32m     * operating system's synchronized I/O completion state. Refer to the POSIX [`fdatasync(2)`](http://man7.org/linux/man-pages/man2/fdatasync.2.html) documentation for details. No arguments other[m
[32m+[m[32m     * than a possible[m
[32m+[m[32m     * exception are given to the completion callback.[m
[32m+[m[32m     * @since v0.1.96[m
[32m+[m[32m     */[m
[32m+[m[32m    export function fdatasync(fd: number, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace fdatasync {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronous fdatasync(2) - synchronize a file's in-core state with storage device.[m
[32m+[m[32m         * @param fd A file descriptor.[m
[32m+[m[32m         */[m
[32m+[m[32m        function __promisify__(fd: number): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Forces all currently queued I/O operations associated with the file to the[m
[32m+[m[32m     * operating system's synchronized I/O completion state. Refer to the POSIX [`fdatasync(2)`](http://man7.org/linux/man-pages/man2/fdatasync.2.html) documentation for details. Returns `undefined`.[m
[32m+[m[32m     * @since v0.1.96[m
[32m+[m[32m     */[m
[32m+[m[32m    export function fdatasyncSync(fd: number): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it[m
[32m+[m[32m     * already exists. No arguments other than a possible exception are given to the[m
[32m+[m[32m     * callback function. Node.js makes no guarantees about the atomicity of the copy[m
[32m+[m[32m     * operation. If an error occurs after the destination file has been opened for[m
[32m+[m[32m     * writing, Node.js will attempt to remove the destination.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `mode` is an optional integer that specifies the behavior[m
[32m+[m[32m     * of the copy operation. It is possible to create a mask consisting of the bitwise[m
[32m+[m[32m     * OR of two or more values (e.g.`fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`).[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `fs.constants.COPYFILE_EXCL`: The copy operation will fail if `dest` already[m
[32m+[m[32m     * exists.[m
[32m+[m[32m     * * `fs.constants.COPYFILE_FICLONE`: The copy operation will attempt to create a[m
[32m+[m[32m     * copy-on-write reflink. If the platform does not support copy-on-write, then a[m
[32m+[m[32m     * fallback copy mechanism is used.[m
[32m+[m[32m     * * `fs.constants.COPYFILE_FICLONE_FORCE`: The copy operation will attempt to[m
[32m+[m[32m     * create a copy-on-write reflink. If the platform does not support[m
[32m+[m[32m     * copy-on-write, then the operation will fail.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { copyFile, constants } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * function callback(err) {[m
[32m+[m[32m     *   if (err) throw err;[m
[32m+[m[32m     *   console.log('source.txt was copied to destination.txt');[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * // destination.txt will be created or overwritten by default.[m
[32m+[m[32m     * copyFile('source.txt', 'destination.txt', callback);[m
[32m+[m[32m     *[m
[32m+[m[32m     * // By using COPYFILE_EXCL, the operation will fail if destination.txt exists.[m
[32m+[m[32m     * copyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL, callback);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v8.5.0[m
[32m+[m[32m     * @param src source filename to copy[m
[32m+[m[32m     * @param dest destination filename of the copy operation[m
[32m+[m[32m     * @param [mode=0] modifiers for copy operation.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function copyFile(src: PathLike, dest: PathLike, callback: NoParamCallback): void;[m
[32m+[m[32m    export function copyFile(src: PathLike, dest: PathLike, mode: number, callback: NoParamCallback): void;[m
[32m+[m[32m    export namespace copyFile {[m
[32m+[m[32m        function __promisify__(src: PathLike, dst: PathLike, mode?: number): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously copies `src` to `dest`. By default, `dest` is overwritten if it[m
[32m+[m[32m     * already exists. Returns `undefined`. Node.js makes no guarantees about the[m
[32m+[m[32m     * atomicity of the copy operation. If an error occurs after the destination file[m
[32m+[m[32m     * has been opened for writing, Node.js will attempt to remove the destination.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `mode` is an optional integer that specifies the behavior[m
[32m+[m[32m     * of the copy operation. It is possible to create a mask consisting of the bitwise[m
[32m+[m[32m     * OR of two or more values (e.g.`fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`).[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `fs.constants.COPYFILE_EXCL`: The copy operation will fail if `dest` already[m
[32m+[m[32m     * exists.[m
[32m+[m[32m     * * `fs.constants.COPYFILE_FICLONE`: The copy operation will attempt to create a[m
[32m+[m[32m     * copy-on-write reflink. If the platform does not support copy-on-write, then a[m
[32m+[m[32m     * fallback copy mechanism is used.[m
[32m+[m[32m     * * `fs.constants.COPYFILE_FICLONE_FORCE`: The copy operation will attempt to[m
[32m+[m[32m     * create a copy-on-write reflink. If the platform does not support[m
[32m+[m[32m     * copy-on-write, then the operation will fail.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { copyFileSync, constants } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // destination.txt will be created or overwritten by default.[m
[32m+[m[32m     * copyFileSync('source.txt', 'destination.txt');[m
[32m+[m[32m     * console.log('source.txt was copied to destination.txt');[m
[32m+[m[32m     *[m
[32m+[m[32m     * // By using COPYFILE_EXCL, the operation will fail if destination.txt exists.[m
[32m+[m[32m     * copyFileSync('source.txt', 'destination.txt', constants.COPYFILE_EXCL);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v8.5.0[m
[32m+[m[32m     * @param src source filename to copy[m
[32m+[m[32m     * @param dest destination filename of the copy operation[m
[32m+[m[32m     * @param [mode=0] modifiers for copy operation.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function copyFileSync(src: PathLike, dest: PathLike, mode?: number): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Write an array of `ArrayBufferView`s to the file specified by `fd` using `writev()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `position` is the offset from the beginning of the file where this data[m
[32m+[m[32m     * should be written. If `typeof position !== 'number'`, the data will be written[m
[32m+[m[32m     * at the current position.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The callback will be given three arguments: `err`, `bytesWritten`, and `buffers`. `bytesWritten` is how many bytes were written from `buffers`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If this method is `util.promisify()` ed, it returns a promise for an `Object` with `bytesWritten` and `buffers` properties.[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is unsafe to use `fs.writev()` multiple times on the same file without[m
[32m+[m[32m     * waiting for the callback. For this scenario, use {@link createWriteStream}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On Linux, positional writes don't work when the file is opened in append mode.[m
[32m+[m[32m     * The kernel ignores the position argument and always appends the data to[m
[32m+[m[32m     * the end of the file.[m
[32m+[m[32m     * @since v12.9.0[m
[32m+[m[32m     * @param [position='null'][m
[32m+[m[32m     */[m
[32m+[m[32m    export function writev([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffers: readonly NodeJS.ArrayBufferView[],[m
[32m+[m[32m        cb: (err: NodeJS.ErrnoException | null, bytesWritten: number, buffers: NodeJS.ArrayBufferView[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function writev([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffers: readonly NodeJS.ArrayBufferView[],[m
[32m+[m[32m        position: number,[m
[32m+[m[32m        cb: (err: NodeJS.ErrnoException | null, bytesWritten: number, buffers: NodeJS.ArrayBufferView[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export interface WriteVResult {[m
[32m+[m[32m        bytesWritten: number;[m
[32m+[m[32m        buffers: NodeJS.ArrayBufferView[];[m
[32m+[m[32m    }[m
[32m+[m[32m    export namespace writev {[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            fd: number,[m
[32m+[m[32m            buffers: readonly NodeJS.ArrayBufferView[],[m
[32m+[m[32m            position?: number,[m
[32m+[m[32m        ): Promise<WriteVResult>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link writev}.[m
[32m+[m[32m     * @since v12.9.0[m
[32m+[m[32m     * @param [position='null'][m
[32m+[m[32m     * @return The number of bytes written.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function writevSync(fd: number, buffers: readonly NodeJS.ArrayBufferView[], position?: number): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Read from a file specified by `fd` and write to an array of `ArrayBufferView`s[m
[32m+[m[32m     * using `readv()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `position` is the offset from the beginning of the file from where data[m
[32m+[m[32m     * should be read. If `typeof position !== 'number'`, the data will be read[m
[32m+[m[32m     * from the current position.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The callback will be given three arguments: `err`, `bytesRead`, and `buffers`. `bytesRead` is how many bytes were read from the file.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If this method is invoked as its `util.promisify()` ed version, it returns[m
[32m+[m[32m     * a promise for an `Object` with `bytesRead` and `buffers` properties.[m
[32m+[m[32m     * @since v13.13.0, v12.17.0[m
[32m+[m[32m     * @param [position='null'][m
[32m+[m[32m     */[m
[32m+[m[32m    export function readv([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffers: readonly NodeJS.ArrayBufferView[],[m
[32m+[m[32m        cb: (err: NodeJS.ErrnoException | null, bytesRead: number, buffers: NodeJS.ArrayBufferView[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function readv([m
[32m+[m[32m        fd: number,[m
[32m+[m[32m        buffers: readonly NodeJS.ArrayBufferView[],[m
[32m+[m[32m        position: number,[m
[32m+[m[32m        cb: (err: NodeJS.ErrnoException | null, bytesRead: number, buffers: NodeJS.ArrayBufferView[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export interface ReadVResult {[m
[32m+[m[32m        bytesRead: number;[m
[32m+[m[32m        buffers: NodeJS.ArrayBufferView[];[m
[32m+[m[32m    }[m
[32m+[m[32m    export namespace readv {[m
[32m+[m[32m        function __promisify__([m
[32m+[m[32m            fd: number,[m
[32m+[m[32m            buffers: readonly NodeJS.ArrayBufferView[],[m
[32m+[m[32m            position?: number,[m
[32m+[m[32m        ): Promise<ReadVResult>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * For detailed information, see the documentation of the asynchronous version of[m
[32m+[m[32m     * this API: {@link readv}.[m
[32m+[m[32m     * @since v13.13.0, v12.17.0[m
[32m+[m[32m     * @param [position='null'][m
[32m+[m[32m     * @return The number of bytes read.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function readvSync(fd: number, buffers: readonly NodeJS.ArrayBufferView[], position?: number): number;[m
[32m+[m
[32m+[m[32m    export interface OpenAsBlobOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An optional mime type for the blob.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @default 'undefined'[m
[32m+[m[32m         */[m
[32m+[m[32m        type?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a `Blob` whose data is backed by the given file.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The file must not be modified after the `Blob` is created. Any modifications[m
[32m+[m[32m     * will cause reading the `Blob` data to fail with a `DOMException` error.[m
[32m+[m[32m     * Synchronous stat operations on the file when the `Blob` is created, and before[m
[32m+[m[32m     * each read in order to detect whether the file data has been modified on disk.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { openAsBlob } from 'node:fs';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const blob = await openAsBlob('the.file.txt');[m
[32m+[m[32m     * const ab = await blob.arrayBuffer();[m
[32m+[m[32m     * blob.stream();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v19.8.0[m
[32m+[m[32m     * @experimental[m
[32m+[m[32m     */[m
[32m+[m[32m    export function openAsBlob(path: PathLike, options?: OpenAsBlobOptions): Promise<Blob>;[m
[32m+[m
[32m+[m[32m    export interface OpenDirOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default 'utf8'[m
[32m+[m[32m         */[m
[32m+[m[32m        encoding?: BufferEncoding | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Number of directory entries that are buffered[m
[32m+[m[32m         * internally when reading from the directory. Higher values lead to better[m
[32m+[m[32m         * performance but higher memory usage.[m
[32m+[m[32m         * @default 32[m
[32m+[m[32m         */[m
[32m+[m[32m        bufferSize?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        recursive?: boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously open a directory. See [`opendir(3)`](http://man7.org/linux/man-pages/man3/opendir.3.html).[m
[32m+[m[32m     *[m
[32m+[m[32m     * Creates an `fs.Dir`, which contains all further functions for reading from[m
[32m+[m[32m     * and cleaning up the directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `encoding` option sets the encoding for the `path` while opening the[m
[32m+[m[32m     * directory and subsequent read operations.[m
[32m+[m[32m     * @since v12.12.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function opendirSync(path: PathLike, options?: OpenDirOptions): Dir;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously open a directory. See the POSIX [`opendir(3)`](http://man7.org/linux/man-pages/man3/opendir.3.html) documentation for[m
[32m+[m[32m     * more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Creates an `fs.Dir`, which contains all further functions for reading from[m
[32m+[m[32m     * and cleaning up the directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `encoding` option sets the encoding for the `path` while opening the[m
[32m+[m[32m     * directory and subsequent read operations.[m
[32m+[m[32m     * @since v12.12.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function opendir(path: PathLike, cb: (err: NodeJS.ErrnoException | null, dir: Dir) => void): void;[m
[32m+[m[32m    export function opendir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: OpenDirOptions,[m
[32m+[m[32m        cb: (err: NodeJS.ErrnoException | null, dir: Dir) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export namespace opendir {[m
[32m+[m[32m        function __promisify__(path: PathLike, options?: OpenDirOptions): Promise<Dir>;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface BigIntStats extends StatsBase<bigint> {[m
[32m+[m[32m        atimeNs: bigint;[m
[32m+[m[32m        mtimeNs: bigint;[m
[32m+[m[32m        ctimeNs: bigint;[m
[32m+[m[32m        birthtimeNs: bigint;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface BigIntOptions {[m
[32m+[m[32m        bigint: true;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface StatOptions {[m
[32m+[m[32m        bigint?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface StatSyncOptions extends StatOptions {[m
[32m+[m[32m        throwIfNoEntry?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CopyOptionsBase {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Dereference symlinks[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        dereference?: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When `force` is `false`, and the destination[m
[32m+[m[32m         * exists, throw an error.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        errorOnExist?: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Overwrite existing file or directory. _The copy[m
[32m+[m[32m         * operation will ignore errors if you set this to false and the destination[m
[32m+[m[32m         * exists. Use the `errorOnExist` option to change this behavior.[m
[32m+[m[32m         * @default true[m
[32m+[m[32m         */[m
[32m+[m[32m        force?: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Modifiers for copy operation. See `mode` flag of {@link copyFileSync()}[m
[32m+[m[32m         */[m
[32m+[m[32m        mode?: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When `true` timestamps from `src` will[m
[32m+[m[32m         * be preserved.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        preserveTimestamps?: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Copy directories recursively.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        recursive?: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When true, path resolution for symlinks will be skipped[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        verbatimSymlinks?: boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface CopyOptions extends CopyOptionsBase {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Function to filter copied files/directories. Return[m
[32m+[m[32m         * `true` to copy the item, `false` to ignore it.[m
[32m+[m[32m         */[m
[32m+[m[32m        filter?(source: string, destination: string): boolean | Promise<boolean>;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface CopySyncOptions extends CopyOptionsBase {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Function to filter copied files/directories. Return[m
[32m+[m[32m         * `true` to copy the item, `false` to ignore it.[m
[32m+[m[32m         */[m
[32m+[m[32m        filter?(source: string, destination: string): boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously copies the entire directory structure from `src` to `dest`,[m
[32m+[m[32m     * including subdirectories and files.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When copying a directory to another directory, globs are not supported and[m
[32m+[m[32m     * behavior is similar to `cp dir1/ dir2/`.[m
[32m+[m[32m     * @since v16.7.0[m
[32m+[m[32m     * @experimental[m
[32m+[m[32m     * @param src source path to copy.[m
[32m+[m[32m     * @param dest destination path to copy to.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function cp([m
[32m+[m[32m        source: string | URL,[m
[32m+[m[32m        destination: string | URL,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function cp([m
[32m+[m[32m        source: string | URL,[m
[32m+[m[32m        destination: string | URL,[m
[32m+[m[32m        opts: CopyOptions,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Synchronously copies the entire directory structure from `src` to `dest`,[m
[32m+[m[32m     * including subdirectories and files.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When copying a directory to another directory, globs are not supported and[m
[32m+[m[32m     * behavior is similar to `cp dir1/ dir2/`.[m
[32m+[m[32m     * @since v16.7.0[m
[32m+[m[32m     * @experimental[m
[32m+[m[32m     * @param src source path to copy.[m
[32m+[m[32m     * @param dest destination path to copy to.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function cpSync(source: string | URL, destination: string | URL, opts?: CopySyncOptions): void;[m
[32m+[m
[32m+[m[32m    export interface GlobOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Current working directory.[m
[32m+[m[32m         * @default process.cwd()[m
[32m+[m[32m         */[m
[32m+[m[32m        cwd?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Function to filter out files/directories. Return true to exclude the item, false to include it.[m
[32m+[m[32m         */[m
[32m+[m[32m        exclude?: ((fileName: string) => boolean) | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `true` if the glob should return paths as `Dirent`s, `false` otherwise.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         * @since v22.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        withFileTypes?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface GlobOptionsWithFileTypes extends GlobOptions {[m
[32m+[m[32m        withFileTypes: true;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface GlobOptionsWithoutFileTypes extends GlobOptions {[m
[32m+[m[32m        withFileTypes?: false | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Retrieves the files matching the specified pattern.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function glob([m
[32m+[m[32m        pattern: string | string[],[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, matches: string[]) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function glob([m
[32m+[m[32m        pattern: string | string[],[m
[32m+[m[32m        options: GlobOptionsWithFileTypes,[m
[32m+[m[32m        callback: ([m
[32m+[m[32m            err: NodeJS.ErrnoException | null,[m
[32m+[m[32m            matches: Dirent[],[m
[32m+[m[32m        ) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function glob([m
[32m+[m[32m        pattern: string | string[],[m
[32m+[m[32m        options: GlobOptionsWithoutFileTypes,[m
[32m+[m[32m        callback: ([m
[32m+[m[32m            err: NodeJS.ErrnoException | null,[m
[32m+[m[32m            matches: string[],[m
[32m+[m[32m        ) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    export function glob([m
[32m+[m[32m        pattern: string | string[],[m
[32m+[m[32m        options: GlobOptions,[m
[32m+[m[32m        callback: ([m
[32m+[m[32m            err: NodeJS.ErrnoException | null,[m
[32m+[m[32m            matches: Dirent[] | string[],[m
[32m+[m[32m        ) => void,[m
[32m+[m[32m    ): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Retrieves the files matching the specified pattern.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function globSync(pattern: string | string[]): string[];[m
[32m+[m[32m    export function globSync([m
[32m+[m[32m        pattern: string | string[],[m
[32m+[m[32m        options: GlobOptionsWithFileTypes,[m
[32m+[m[32m    ): Dirent[];[m
[32m+[m[32m    export function globSync([m
[32m+[m[32m        pattern: string | string[],[m
[32m+[m[32m        options: GlobOptionsWithoutFileTypes,[m
[32m+[m[32m    ): string[];[m
[32m+[m[32m    export function globSync([m
[32m+[m[32m        pattern: string | string[],[m
[32m+[m[32m        options: GlobOptions,[m
[32m+[m[32m    ): Dirent[] | string[];[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:fs" {[m
[32m+[m[32m    export * from "fs";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/fs/promises.d.ts b/node_modules/@types/node/fs/promises.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..cac0591[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/fs/promises.d.ts[m
[36m@@ -0,0 +1,1264 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `fs/promises` API provides asynchronous file system methods that return[m
[32m+[m[32m * promises.[m
[32m+[m[32m *[m
[32m+[m[32m * The promise APIs use the underlying Node.js threadpool to perform file[m
[32m+[m[32m * system operations off the event loop thread. These operations are not[m
[32m+[m[32m * synchronized or threadsafe. Care must be taken when performing multiple[m
[32m+[m[32m * concurrent modifications on the same file or data corruption may occur.[m
[32m+[m[32m * @since v10.0.0[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "fs/promises" {[m
[32m+[m[32m    import { Abortable } from "node:events";[m
[32m+[m[32m    import { Stream } from "node:stream";[m
[32m+[m[32m    import { ReadableStream } from "node:stream/web";[m
[32m+[m[32m    import {[m
[32m+[m[32m        BigIntStats,[m
[32m+[m[32m        BigIntStatsFs,[m
[32m+[m[32m        BufferEncodingOption,[m
[32m+[m[32m        constants as fsConstants,[m
[32m+[m[32m        CopyOptions,[m
[32m+[m[32m        Dir,[m
[32m+[m[32m        Dirent,[m
[32m+[m[32m        GlobOptions,[m
[32m+[m[32m        GlobOptionsWithFileTypes,[m
[32m+[m[32m        GlobOptionsWithoutFileTypes,[m
[32m+[m[32m        MakeDirectoryOptions,[m
[32m+[m[32m        Mode,[m
[32m+[m[32m        ObjectEncodingOptions,[m
[32m+[m[32m        OpenDirOptions,[m
[32m+[m[32m        OpenMode,[m
[32m+[m[32m        PathLike,[m
[32m+[m[32m        ReadStream,[m
[32m+[m[32m        ReadVResult,[m
[32m+[m[32m        RmDirOptions,[m
[32m+[m[32m        RmOptions,[m
[32m+[m[32m        StatFsOptions,[m
[32m+[m[32m        StatOptions,[m
[32m+[m[32m        Stats,[m
[32m+[m[32m        StatsFs,[m
[32m+[m[32m        TimeLike,[m
[32m+[m[32m        WatchEventType,[m
[32m+[m[32m        WatchOptions,[m
[32m+[m[32m        WriteStream,[m
[32m+[m[32m        WriteVResult,[m
[32m+[m[32m    } from "node:fs";[m
[32m+[m[32m    import { Interface as ReadlineInterface } from "node:readline";[m
[32m+[m[32m    interface FileChangeInfo<T extends string | Buffer> {[m
[32m+[m[32m        eventType: WatchEventType;[m
[32m+[m[32m        filename: T | null;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface FlagAndOpenMode {[m
[32m+[m[32m        mode?: Mode | undefined;[m
[32m+[m[32m        flag?: OpenMode | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface FileReadResult<T extends NodeJS.ArrayBufferView> {[m
[32m+[m[32m        bytesRead: number;[m
[32m+[m[32m        buffer: T;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface FileReadOptions<T extends NodeJS.ArrayBufferView = Buffer> {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default `Buffer.alloc(0xffff)`[m
[32m+[m[32m         */[m
[32m+[m[32m        buffer?: T;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         */[m
[32m+[m[32m        offset?: number | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default `buffer.byteLength`[m
[32m+[m[32m         */[m
[32m+[m[32m        length?: number | null;[m
[32m+[m[32m        position?: number | null;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CreateReadStreamOptions {[m
[32m+[m[32m        encoding?: BufferEncoding | null | undefined;[m
[32m+[m[32m        autoClose?: boolean | undefined;[m
[32m+[m[32m        emitClose?: boolean | undefined;[m
[32m+[m[32m        start?: number | undefined;[m
[32m+[m[32m        end?: number | undefined;[m
[32m+[m[32m        highWaterMark?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface CreateWriteStreamOptions {[m
[32m+[m[32m        encoding?: BufferEncoding | null | undefined;[m
[32m+[m[32m        autoClose?: boolean | undefined;[m
[32m+[m[32m        emitClose?: boolean | undefined;[m
[32m+[m[32m        start?: number | undefined;[m
[32m+[m[32m        highWaterMark?: number | undefined;[m
[32m+[m[32m        flush?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ReadableWebStreamOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Whether to open a normal or a `'bytes'` stream.[m
[32m+[m[32m         * @since v20.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        type?: "bytes" | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    // TODO: Add `EventEmitter` close[m
[32m+[m[32m    interface FileHandle {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The numeric file descriptor managed by the {FileHandle} object.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly fd: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Alias of `filehandle.writeFile()`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When operating on file handles, the mode cannot be changed from what it was set[m
[32m+[m[32m         * to with `fsPromises.open()`. Therefore, this is equivalent to `filehandle.writeFile()`.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m         */[m
[32m+[m[32m        appendFile([m
[32m+[m[32m            data: string | Uint8Array,[m
[32m+[m[32m            options?:[m
[32m+[m[32m                | (ObjectEncodingOptions & FlagAndOpenMode & { flush?: boolean | undefined })[m
[32m+[m[32m                | BufferEncoding[m
[32m+[m[32m                | null,[m
[32m+[m[32m        ): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Changes the ownership of the file. A wrapper for [`chown(2)`](http://man7.org/linux/man-pages/man2/chown.2.html).[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @param uid The file's new owner's user id.[m
[32m+[m[32m         * @param gid The file's new group's group id.[m
[32m+[m[32m         * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m         */[m
[32m+[m[32m        chown(uid: number, gid: number): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Modifies the permissions on the file. See [`chmod(2)`](http://man7.org/linux/man-pages/man2/chmod.2.html).[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @param mode the file mode bit mask.[m
[32m+[m[32m         * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m         */[m
[32m+[m[32m        chmod(mode: Mode): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Unlike the 16 KiB default `highWaterMark` for a `stream.Readable`, the stream[m
[32m+[m[32m         * returned by this method has a default `highWaterMark` of 64 KiB.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `options` can include `start` and `end` values to read a range of bytes from[m
[32m+[m[32m         * the file instead of the entire file. Both `start` and `end` are inclusive and[m
[32m+[m[32m         * start counting at 0, allowed values are in the[m
[32m+[m[32m         * \[0, [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\] range. If `start` is[m
[32m+[m[32m         * omitted or `undefined`, `filehandle.createReadStream()` reads sequentially from[m
[32m+[m[32m         * the current file position. The `encoding` can be any one of those accepted by `Buffer`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `FileHandle` points to a character device that only supports blocking[m
[32m+[m[32m         * reads (such as keyboard or sound card), read operations do not finish until data[m
[32m+[m[32m         * is available. This can prevent the process from exiting and the stream from[m
[32m+[m[32m         * closing naturally.[m
[32m+[m[32m         *[m
[32m+[m[32m         * By default, the stream will emit a `'close'` event after it has been[m
[32m+[m[32m         * destroyed.  Set the `emitClose` option to `false` to change this behavior.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { open } from 'node:fs/promises';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const fd = await open('/dev/input/event0');[m
[32m+[m[32m         * // Create a stream from some character device.[m
[32m+[m[32m         * const stream = fd.createReadStream();[m
[32m+[m[32m         * setTimeout(() => {[m
[32m+[m[32m         *   stream.close(); // This may not close the stream.[m
[32m+[m[32m         *   // Artificially marking end-of-stream, as if the underlying resource had[m
[32m+[m[32m         *   // indicated end-of-file by itself, allows the stream to close.[m
[32m+[m[32m         *   // This does not cancel pending read operations, and if there is such an[m
[32m+[m[32m         *   // operation, the process may still not be able to exit successfully[m
[32m+[m[32m         *   // until it finishes.[m
[32m+[m[32m         *   stream.push(null);[m
[32m+[m[32m         *   stream.read(0);[m
[32m+[m[32m         * }, 100);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `autoClose` is false, then the file descriptor won't be closed, even if[m
[32m+[m[32m         * there's an error. It is the application's responsibility to close it and make[m
[32m+[m[32m         * sure there's no file descriptor leak. If `autoClose` is set to true (default[m
[32m+[m[32m         * behavior), on `'error'` or `'end'` the file descriptor will be closed[m
[32m+[m[32m         * automatically.[m
[32m+[m[32m         *[m
[32m+[m[32m         * An example to read the last 10 bytes of a file which is 100 bytes long:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { open } from 'node:fs/promises';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const fd = await open('sample.txt');[m
[32m+[m[32m         * fd.createReadStream({ start: 90, end: 99 });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v16.11.0[m
[32m+[m[32m         */[m
[32m+[m[32m        createReadStream(options?: CreateReadStreamOptions): ReadStream;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `options` may also include a `start` option to allow writing data at some[m
[32m+[m[32m         * position past the beginning of the file, allowed values are in the[m
[32m+[m[32m         * \[0, [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER)\] range. Modifying a file rather than[m
[32m+[m[32m         * replacing it may require the `flags` `open` option to be set to `r+` rather than[m
[32m+[m[32m         * the default `r`. The `encoding` can be any one of those accepted by `Buffer`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `autoClose` is set to true (default behavior) on `'error'` or `'finish'` the file descriptor will be closed automatically. If `autoClose` is false,[m
[32m+[m[32m         * then the file descriptor won't be closed, even if there's an error.[m
[32m+[m[32m         * It is the application's responsibility to close it and make sure there's no[m
[32m+[m[32m         * file descriptor leak.[m
[32m+[m[32m         *[m
[32m+[m[32m         * By default, the stream will emit a `'close'` event after it has been[m
[32m+[m[32m         * destroyed.  Set the `emitClose` option to `false` to change this behavior.[m
[32m+[m[32m         * @since v16.11.0[m
[32m+[m[32m         */[m
[32m+[m[32m        createWriteStream(options?: CreateWriteStreamOptions): WriteStream;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Forces all currently queued I/O operations associated with the file to the[m
[32m+[m[32m         * operating system's synchronized I/O completion state. Refer to the POSIX [`fdatasync(2)`](http://man7.org/linux/man-pages/man2/fdatasync.2.html) documentation for details.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Unlike `filehandle.sync` this method does not flush modified metadata.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m         */[m
[32m+[m[32m        datasync(): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Request that all data for the open file descriptor is flushed to the storage[m
[32m+[m[32m         * device. The specific implementation is operating system and device specific.[m
[32m+[m[32m         * Refer to the POSIX [`fsync(2)`](http://man7.org/linux/man-pages/man2/fsync.2.html) documentation for more detail.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m         */[m
[32m+[m[32m        sync(): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Reads data from the file and stores that in the given buffer.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the file is not modified concurrently, the end-of-file is reached when the[m
[32m+[m[32m         * number of bytes read is zero.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @param buffer A buffer that will be filled with the file data read.[m
[32m+[m[32m         * @param offset The location in the buffer at which to start filling.[m
[32m+[m[32m         * @param length The number of bytes to read.[m
[32m+[m[32m         * @param position The location where to begin reading data from the file. If `null`, data will be read from the current file position, and the position will be updated. If `position` is an[m
[32m+[m[32m         * integer, the current file position will remain unchanged.[m
[32m+[m[32m         * @return Fulfills upon success with an object with two properties:[m
[32m+[m[32m         */[m
[32m+[m[32m        read<T extends NodeJS.ArrayBufferView>([m
[32m+[m[32m            buffer: T,[m
[32m+[m[32m            offset?: number | null,[m
[32m+[m[32m            length?: number | null,[m
[32m+[m[32m            position?: number | null,[m
[32m+[m[32m        ): Promise<FileReadResult<T>>;[m
[32m+[m[32m        read<T extends NodeJS.ArrayBufferView = Buffer>(options?: FileReadOptions<T>): Promise<FileReadResult<T>>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a `ReadableStream` that may be used to read the files data.[m
[32m+[m[32m         *[m
[32m+[m[32m         * An error will be thrown if this method is called more than once or is called[m
[32m+[m[32m         * after the `FileHandle` is closed or closing.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import {[m
[32m+[m[32m         *   open,[m
[32m+[m[32m         * } from 'node:fs/promises';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const file = await open('./some/file/to/read');[m
[32m+[m[32m         *[m
[32m+[m[32m         * for await (const chunk of file.readableWebStream())[m
[32m+[m[32m         *   console.log(chunk);[m
[32m+[m[32m         *[m
[32m+[m[32m         * await file.close();[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * While the `ReadableStream` will read the file to completion, it will not[m
[32m+[m[32m         * close the `FileHandle` automatically. User code must still call the`fileHandle.close()` method.[m
[32m+[m[32m         * @since v17.0.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        readableWebStream(options?: ReadableWebStreamOptions): ReadableStream;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `options` is a string, then it specifies the `encoding`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `FileHandle` has to support reading.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If one or more `filehandle.read()` calls are made on a file handle and then a `filehandle.readFile()` call is made, the data will be read from the current[m
[32m+[m[32m         * position till the end of the file. It doesn't always read from the beginning[m
[32m+[m[32m         * of the file.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @return Fulfills upon a successful read with the contents of the file. If no encoding is specified (using `options.encoding`), the data is returned as a {Buffer} object. Otherwise, the[m
[32m+[m[32m         * data will be a string.[m
[32m+[m[32m         */[m
[32m+[m[32m        readFile([m
[32m+[m[32m            options?: {[m
[32m+[m[32m                encoding?: null | undefined;[m
[32m+[m[32m                flag?: OpenMode | undefined;[m
[32m+[m[32m            } | null,[m
[32m+[m[32m        ): Promise<Buffer>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously reads the entire contents of a file. The underlying file will _not_ be closed automatically.[m
[32m+[m[32m         * The `FileHandle` must have been opened for reading.[m
[32m+[m[32m         * @param options An object that may contain an optional flag.[m
[32m+[m[32m         * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readFile([m
[32m+[m[32m            options:[m
[32m+[m[32m                | {[m
[32m+[m[32m                    encoding: BufferEncoding;[m
[32m+[m[32m                    flag?: OpenMode | undefined;[m
[32m+[m[32m                }[m
[32m+[m[32m                | BufferEncoding,[m
[32m+[m[32m        ): Promise<string>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously reads the entire contents of a file. The underlying file will _not_ be closed automatically.[m
[32m+[m[32m         * The `FileHandle` must have been opened for reading.[m
[32m+[m[32m         * @param options An object that may contain an optional flag.[m
[32m+[m[32m         * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readFile([m
[32m+[m[32m            options?:[m
[32m+[m[32m                | (ObjectEncodingOptions & {[m
[32m+[m[32m                    flag?: OpenMode | undefined;[m
[32m+[m[32m                })[m
[32m+[m[32m                | BufferEncoding[m
[32m+[m[32m                | null,[m
[32m+[m[32m        ): Promise<string | Buffer>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Convenience method to create a `readline` interface and stream over the file.[m
[32m+[m[32m         * See `filehandle.createReadStream()` for the options.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { open } from 'node:fs/promises';[m
[32m+[m[32m         *[m
[32m+[m[32m         * const file = await open('./some/file/to/read');[m
[32m+[m[32m         *[m
[32m+[m[32m         * for await (const line of file.readLines()) {[m
[32m+[m[32m         *   console.log(line);[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v18.11.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readLines(options?: CreateReadStreamOptions): ReadlineInterface;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @return Fulfills with an {fs.Stats} for the file.[m
[32m+[m[32m         */[m
[32m+[m[32m        stat([m
[32m+[m[32m            opts?: StatOptions & {[m
[32m+[m[32m                bigint?: false | undefined;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<Stats>;[m
[32m+[m[32m        stat([m
[32m+[m[32m            opts: StatOptions & {[m
[32m+[m[32m                bigint: true;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): Promise<BigIntStats>;[m
[32m+[m[32m        stat(opts?: StatOptions): Promise<Stats | BigIntStats>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Truncates the file.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the file was larger than `len` bytes, only the first `len` bytes will be[m
[32m+[m[32m         * retained in the file.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The following example retains only the first four bytes of the file:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { open } from 'node:fs/promises';[m
[32m+[m[32m         *[m
[32m+[m[32m         * let filehandle = null;[m
[32m+[m[32m         * try {[m
[32m+[m[32m         *   filehandle = await open('temp.txt', 'r+');[m
[32m+[m[32m         *   await filehandle.truncate(4);[m
[32m+[m[32m         * } finally {[m
[32m+[m[32m         *   await filehandle?.close();[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the file previously was shorter than `len` bytes, it is extended, and the[m
[32m+[m[32m         * extended part is filled with null bytes (`'\0'`):[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `len` is negative then `0` will be used.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @param [len=0][m
[32m+[m[32m         * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m         */[m
[32m+[m[32m        truncate(len?: number): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Change the file system timestamps of the object referenced by the `FileHandle` then fulfills the promise with no arguments upon success.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        utimes(atime: TimeLike, mtime: TimeLike): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an[m
[32m+[m[32m         * [AsyncIterable](https://tc39.github.io/ecma262/#sec-asynciterable-interface), or an[m
[32m+[m[32m         * [Iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol) object.[m
[32m+[m[32m         * The promise is fulfilled with no arguments upon success.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `options` is a string, then it specifies the `encoding`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `FileHandle` has to support writing.[m
[32m+[m[32m         *[m
[32m+[m[32m         * It is unsafe to use `filehandle.writeFile()` multiple times on the same file[m
[32m+[m[32m         * without waiting for the promise to be fulfilled (or rejected).[m
[32m+[m[32m         *[m
[32m+[m[32m         * If one or more `filehandle.write()` calls are made on a file handle and then a`filehandle.writeFile()` call is made, the data will be written from the[m
[32m+[m[32m         * current position till the end of the file. It doesn't always write from the[m
[32m+[m[32m         * beginning of the file.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        writeFile([m
[32m+[m[32m            data: string | Uint8Array,[m
[32m+[m[32m            options?:[m
[32m+[m[32m                | (ObjectEncodingOptions & FlagAndOpenMode & Abortable & { flush?: boolean | undefined })[m
[32m+[m[32m                | BufferEncoding[m
[32m+[m[32m                | null,[m
[32m+[m[32m        ): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Write `buffer` to the file.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The promise is fulfilled with an object containing two properties:[m
[32m+[m[32m         *[m
[32m+[m[32m         * It is unsafe to use `filehandle.write()` multiple times on the same file[m
[32m+[m[32m         * without waiting for the promise to be fulfilled (or rejected). For this[m
[32m+[m[32m         * scenario, use `filehandle.createWriteStream()`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * On Linux, positional writes do not work when the file is opened in append mode.[m
[32m+[m[32m         * The kernel ignores the position argument and always appends the data to[m
[32m+[m[32m         * the end of the file.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @param offset The start position from within `buffer` where the data to write begins.[m
[32m+[m[32m         * @param [length=buffer.byteLength - offset] The number of bytes from `buffer` to write.[m
[32m+[m[32m         * @param [position='null'] The offset from the beginning of the file where the data from `buffer` should be written. If `position` is not a `number`, the data will be written at the current[m
[32m+[m[32m         * position. See the POSIX pwrite(2) documentation for more detail.[m
[32m+[m[32m         */[m
[32m+[m[32m        write<TBuffer extends Uint8Array>([m
[32m+[m[32m            buffer: TBuffer,[m
[32m+[m[32m            offset?: number | null,[m
[32m+[m[32m            length?: number | null,[m
[32m+[m[32m            position?: number | null,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            bytesWritten: number;[m
[32m+[m[32m            buffer: TBuffer;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        write([m
[32m+[m[32m            data: string,[m
[32m+[m[32m            position?: number | null,[m
[32m+[m[32m            encoding?: BufferEncoding | null,[m
[32m+[m[32m        ): Promise<{[m
[32m+[m[32m            bytesWritten: number;[m
[32m+[m[32m            buffer: string;[m
[32m+[m[32m        }>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Write an array of [ArrayBufferView](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView) s to the file.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The promise is fulfilled with an object containing a two properties:[m
[32m+[m[32m         *[m
[32m+[m[32m         * It is unsafe to call `writev()` multiple times on the same file without waiting[m
[32m+[m[32m         * for the promise to be fulfilled (or rejected).[m
[32m+[m[32m         *[m
[32m+[m[32m         * On Linux, positional writes don't work when the file is opened in append mode.[m
[32m+[m[32m         * The kernel ignores the position argument and always appends the data to[m
[32m+[m[32m         * the end of the file.[m
[32m+[m[32m         * @since v12.9.0[m
[32m+[m[32m         * @param [position='null'] The offset from the beginning of the file where the data from `buffers` should be written. If `position` is not a `number`, the data will be written at the current[m
[32m+[m[32m         * position.[m
[32m+[m[32m         */[m
[32m+[m[32m        writev(buffers: readonly NodeJS.ArrayBufferView[], position?: number): Promise<WriteVResult>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Read from a file and write to an array of [ArrayBufferView](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView) s[m
[32m+[m[32m         * @since v13.13.0, v12.17.0[m
[32m+[m[32m         * @param [position='null'] The offset from the beginning of the file where the data should be read from. If `position` is not a `number`, the data will be read from the current position.[m
[32m+[m[32m         * @return Fulfills upon success an object containing two properties:[m
[32m+[m[32m         */[m
[32m+[m[32m        readv(buffers: readonly NodeJS.ArrayBufferView[], position?: number): Promise<ReadVResult>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Closes the file handle after waiting for any pending operation on the handle to[m
[32m+[m[32m         * complete.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import { open } from 'node:fs/promises';[m
[32m+[m[32m         *[m
[32m+[m[32m         * let filehandle;[m
[32m+[m[32m         * try {[m
[32m+[m[32m         *   filehandle = await open('thefile.txt', 'r');[m
[32m+[m[32m         * } finally {[m
[32m+[m[32m         *   await filehandle?.close();[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m         */[m
[32m+[m[32m        close(): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An alias for {@link FileHandle.close()}.[m
[32m+[m[32m         * @since v20.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        [Symbol.asyncDispose](): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    const constants: typeof fsConstants;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Tests a user's permissions for the file or directory specified by `path`.[m
[32m+[m[32m     * The `mode` argument is an optional integer that specifies the accessibility[m
[32m+[m[32m     * checks to be performed. `mode` should be either the value `fs.constants.F_OK` or a mask consisting of the bitwise OR of any of `fs.constants.R_OK`, `fs.constants.W_OK`, and `fs.constants.X_OK`[m
[32m+[m[32m     * (e.g.`fs.constants.W_OK | fs.constants.R_OK`). Check `File access constants` for[m
[32m+[m[32m     * possible values of `mode`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the accessibility check is successful, the promise is fulfilled with no[m
[32m+[m[32m     * value. If any of the accessibility checks fail, the promise is rejected[m
[32m+[m[32m     * with an [Error](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error) object. The following example checks if the file`/etc/passwd` can be read and[m
[32m+[m[32m     * written by the current process.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { access, constants } from 'node:fs/promises';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   await access('/etc/passwd', constants.R_OK | constants.W_OK);[m
[32m+[m[32m     *   console.log('can access');[m
[32m+[m[32m     * } catch {[m
[32m+[m[32m     *   console.error('cannot access');[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using `fsPromises.access()` to check for the accessibility of a file before[m
[32m+[m[32m     * calling `fsPromises.open()` is not recommended. Doing so introduces a race[m
[32m+[m[32m     * condition, since other processes may change the file's state between the two[m
[32m+[m[32m     * calls. Instead, user code should open/read/write the file directly and handle[m
[32m+[m[32m     * the error raised if the file is not accessible.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @param [mode=fs.constants.F_OK][m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function access(path: PathLike, mode?: number): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously copies `src` to `dest`. By default, `dest` is overwritten if it[m
[32m+[m[32m     * already exists.[m
[32m+[m[32m     *[m
[32m+[m[32m     * No guarantees are made about the atomicity of the copy operation. If an[m
[32m+[m[32m     * error occurs after the destination file has been opened for writing, an attempt[m
[32m+[m[32m     * will be made to remove the destination.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { copyFile, constants } from 'node:fs/promises';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   await copyFile('source.txt', 'destination.txt');[m
[32m+[m[32m     *   console.log('source.txt was copied to destination.txt');[m
[32m+[m[32m     * } catch {[m
[32m+[m[32m     *   console.error('The file could not be copied');[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * // By using COPYFILE_EXCL, the operation will fail if destination.txt exists.[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   await copyFile('source.txt', 'destination.txt', constants.COPYFILE_EXCL);[m
[32m+[m[32m     *   console.log('source.txt was copied to destination.txt');[m
[32m+[m[32m     * } catch {[m
[32m+[m[32m     *   console.error('The file could not be copied');[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @param src source filename to copy[m
[32m+[m[32m     * @param dest destination filename of the copy operation[m
[32m+[m[32m     * @param [mode=0] Optional modifiers that specify the behavior of the copy operation. It is possible to create a mask consisting of the bitwise OR of two or more values (e.g.[m
[32m+[m[32m     * `fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE`)[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function copyFile(src: PathLike, dest: PathLike, mode?: number): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Opens a `FileHandle`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Refer to the POSIX [`open(2)`](http://man7.org/linux/man-pages/man2/open.2.html) documentation for more detail.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Some characters (`< > : " / \ | ? *`) are reserved under Windows as documented[m
[32m+[m[32m     * by [Naming Files, Paths, and Namespaces](https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file). Under NTFS, if the filename contains[m
[32m+[m[32m     * a colon, Node.js will open a file system stream, as described by [this MSDN page](https://docs.microsoft.com/en-us/windows/desktop/FileIO/using-streams).[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @param [flags='r'] See `support of file system `flags``.[m
[32m+[m[32m     * @param [mode=0o666] Sets the file mode (permission and sticky bits) if the file is created.[m
[32m+[m[32m     * @return Fulfills with a {FileHandle} object.[m
[32m+[m[32m     */[m
[32m+[m[32m    function open(path: PathLike, flags?: string | number, mode?: Mode): Promise<FileHandle>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Renames `oldPath` to `newPath`.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function rename(oldPath: PathLike, newPath: PathLike): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Truncates (shortens or extends the length) of the content at `path` to `len` bytes.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @param [len=0][m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function truncate(path: PathLike, len?: number): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Removes the directory identified by `path`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using `fsPromises.rmdir()` on a file (not a directory) results in the[m
[32m+[m[32m     * promise being rejected with an `ENOENT` error on Windows and an `ENOTDIR` error on POSIX.[m
[32m+[m[32m     *[m
[32m+[m[32m     * To get a behavior similar to the `rm -rf` Unix command, use `fsPromises.rm()` with options `{ recursive: true, force: true }`.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function rmdir(path: PathLike, options?: RmDirOptions): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Removes files and directories (modeled on the standard POSIX `rm` utility).[m
[32m+[m[32m     * @since v14.14.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function rm(path: PathLike, options?: RmOptions): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously creates a directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be an integer specifying `mode` (permission[m
[32m+[m[32m     * and sticky bits), or an object with a `mode` property and a `recursive` property indicating whether parent directories should be created. Calling `fsPromises.mkdir()` when `path` is a directory[m
[32m+[m[32m     * that exists results in a[m
[32m+[m[32m     * rejection only when `recursive` is false.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { mkdir } from 'node:fs/promises';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   const projectFolder = new URL('./test/project/', import.meta.url);[m
[32m+[m[32m     *   const createDir = await mkdir(projectFolder, { recursive: true });[m
[32m+[m[32m     *[m
[32m+[m[32m     *   console.log(`created ${createDir}`);[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   console.error(err.message);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Upon success, fulfills with `undefined` if `recursive` is `false`, or the first directory path created if `recursive` is `true`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function mkdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: MakeDirectoryOptions & {[m
[32m+[m[32m            recursive: true;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): Promise<string | undefined>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous mkdir(2) - create a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options Either the file mode, or an object optionally specifying the file mode and whether parent folders[m
[32m+[m[32m     * should be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to `0o777`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function mkdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options?:[m
[32m+[m[32m            | Mode[m
[32m+[m[32m            | (MakeDirectoryOptions & {[m
[32m+[m[32m                recursive?: false | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous mkdir(2) - create a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options Either the file mode, or an object optionally specifying the file mode and whether parent folders[m
[32m+[m[32m     * should be created. If a string is passed, it is parsed as an octal integer. If not specified, defaults to `0o777`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function mkdir(path: PathLike, options?: Mode | MakeDirectoryOptions | null): Promise<string | undefined>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Reads the contents of a directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use for[m
[32m+[m[32m     * the filenames. If the `encoding` is set to `'buffer'`, the filenames returned[m
[32m+[m[32m     * will be passed as `Buffer` objects.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options.withFileTypes` is set to `true`, the returned array will contain `fs.Dirent` objects.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { readdir } from 'node:fs/promises';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   const files = await readdir(path);[m
[32m+[m[32m     *   for (const file of files)[m
[32m+[m[32m     *     console.log(file);[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   console.error(err);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with an array of the names of the files in the directory excluding `'.'` and `'..'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function readdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options?:[m
[32m+[m[32m            | (ObjectEncodingOptions & {[m
[32m+[m[32m                withFileTypes?: false | undefined;[m
[32m+[m[32m                recursive?: boolean | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | BufferEncoding[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): Promise<string[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    function readdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | {[m
[32m+[m[32m                encoding: "buffer";[m
[32m+[m[32m                withFileTypes?: false | undefined;[m
[32m+[m[32m                recursive?: boolean | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            | "buffer",[m
[32m+[m[32m    ): Promise<Buffer[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    function readdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options?:[m
[32m+[m[32m            | (ObjectEncodingOptions & {[m
[32m+[m[32m                withFileTypes?: false | undefined;[m
[32m+[m[32m                recursive?: boolean | undefined;[m
[32m+[m[32m            })[m
[32m+[m[32m            | BufferEncoding[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): Promise<string[] | Buffer[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readdir(3) - read a directory.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options If called with `withFileTypes: true` the result data will be an array of Dirent.[m
[32m+[m[32m     */[m
[32m+[m[32m    function readdir([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options: ObjectEncodingOptions & {[m
[32m+[m[32m            withFileTypes: true;[m
[32m+[m[32m            recursive?: boolean | undefined;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): Promise<Dirent[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Reads the contents of the symbolic link referred to by `path`. See the POSIX [`readlink(2)`](http://man7.org/linux/man-pages/man2/readlink.2.html) documentation for more detail. The promise is[m
[32m+[m[32m     * fulfilled with the`linkString` upon success.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use for[m
[32m+[m[32m     * the link path returned. If the `encoding` is set to `'buffer'`, the link path[m
[32m+[m[32m     * returned will be passed as a `Buffer` object.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with the `linkString` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function readlink(path: PathLike, options?: ObjectEncodingOptions | BufferEncoding | null): Promise<string>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readlink(2) - read value of a symbolic link.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    function readlink(path: PathLike, options: BufferEncodingOption): Promise<Buffer>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous readlink(2) - read value of a symbolic link.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    function readlink(path: PathLike, options?: ObjectEncodingOptions | string | null): Promise<string | Buffer>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a symbolic link.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `type` argument is only used on Windows platforms and can be one of `'dir'`, `'file'`, or `'junction'`. If the `type` argument is not a string, Node.js will[m
[32m+[m[32m     * autodetect `target` type and use `'file'` or `'dir'`. If the `target` does not[m
[32m+[m[32m     * exist, `'file'` will be used. Windows junction points require the destination[m
[32m+[m[32m     * path to be absolute. When using `'junction'`, the `target` argument will[m
[32m+[m[32m     * automatically be normalized to absolute path. Junction points on NTFS volumes[m
[32m+[m[32m     * can only point to directories.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @param [type='null'][m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function symlink(target: PathLike, path: PathLike, type?: string | null): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Equivalent to `fsPromises.stat()` unless `path` refers to a symbolic link,[m
[32m+[m[32m     * in which case the link itself is stat-ed, not the file that it refers to.[m
[32m+[m[32m     * Refer to the POSIX [`lstat(2)`](http://man7.org/linux/man-pages/man2/lstat.2.html) document for more detail.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with the {fs.Stats} object for the given symbolic link `path`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function lstat([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        opts?: StatOptions & {[m
[32m+[m[32m            bigint?: false | undefined;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): Promise<Stats>;[m
[32m+[m[32m    function lstat([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        opts: StatOptions & {[m
[32m+[m[32m            bigint: true;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): Promise<BigIntStats>;[m
[32m+[m[32m    function lstat(path: PathLike, opts?: StatOptions): Promise<Stats | BigIntStats>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with the {fs.Stats} object for the given `path`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function stat([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        opts?: StatOptions & {[m
[32m+[m[32m            bigint?: false | undefined;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): Promise<Stats>;[m
[32m+[m[32m    function stat([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        opts: StatOptions & {[m
[32m+[m[32m            bigint: true;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): Promise<BigIntStats>;[m
[32m+[m[32m    function stat(path: PathLike, opts?: StatOptions): Promise<Stats | BigIntStats>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v19.6.0, v18.15.0[m
[32m+[m[32m     * @return Fulfills with the {fs.StatFs} object for the given `path`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function statfs([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        opts?: StatFsOptions & {[m
[32m+[m[32m            bigint?: false | undefined;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): Promise<StatsFs>;[m
[32m+[m[32m    function statfs([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        opts: StatFsOptions & {[m
[32m+[m[32m            bigint: true;[m
[32m+[m[32m        },[m
[32m+[m[32m    ): Promise<BigIntStatsFs>;[m
[32m+[m[32m    function statfs(path: PathLike, opts?: StatFsOptions): Promise<StatsFs | BigIntStatsFs>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a new link from the `existingPath` to the `newPath`. See the POSIX [`link(2)`](http://man7.org/linux/man-pages/man2/link.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function link(existingPath: PathLike, newPath: PathLike): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * If `path` refers to a symbolic link, then the link is removed without affecting[m
[32m+[m[32m     * the file or directory to which that link refers. If the `path` refers to a file[m
[32m+[m[32m     * path that is not a symbolic link, the file is deleted. See the POSIX [`unlink(2)`](http://man7.org/linux/man-pages/man2/unlink.2.html) documentation for more detail.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function unlink(path: PathLike): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Changes the permissions of a file.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function chmod(path: PathLike, mode: Mode): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Changes the permissions on a symbolic link.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This method is only implemented on macOS.[m
[32m+[m[32m     * @deprecated Since v10.0.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function lchmod(path: PathLike, mode: Mode): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Changes the ownership on a symbolic link.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function lchown(path: PathLike, uid: number, gid: number): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Changes the access and modification times of a file in the same way as `fsPromises.utimes()`, with the difference that if the path refers to a[m
[32m+[m[32m     * symbolic link, then the link is not dereferenced: instead, the timestamps of[m
[32m+[m[32m     * the symbolic link itself are changed.[m
[32m+[m[32m     * @since v14.5.0, v12.19.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function lutimes(path: PathLike, atime: TimeLike, mtime: TimeLike): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Changes the ownership of a file.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function chown(path: PathLike, uid: number, gid: number): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Change the file system timestamps of the object referenced by `path`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `atime` and `mtime` arguments follow these rules:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * Values can be either numbers representing Unix epoch time, `Date`s, or a[m
[32m+[m[32m     * numeric string like `'123456789.0'`.[m
[32m+[m[32m     * * If the value can not be converted to a number, or is `NaN`, `Infinity`, or `-Infinity`, an `Error` will be thrown.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function utimes(path: PathLike, atime: TimeLike, mtime: TimeLike): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Determines the actual location of `path` using the same semantics as the `fs.realpath.native()` function.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Only paths that can be converted to UTF8 strings are supported.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use for[m
[32m+[m[32m     * the path. If the `encoding` is set to `'buffer'`, the path returned will be[m
[32m+[m[32m     * passed as a `Buffer` object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On Linux, when Node.js is linked against musl libc, the procfs file system must[m
[32m+[m[32m     * be mounted on `/proc` in order for this function to work. Glibc does not have[m
[32m+[m[32m     * this restriction.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with the resolved path upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function realpath(path: PathLike, options?: ObjectEncodingOptions | BufferEncoding | null): Promise<string>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous realpath(3) - return the canonicalized absolute pathname.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    function realpath(path: PathLike, options: BufferEncodingOption): Promise<Buffer>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronous realpath(3) - return the canonicalized absolute pathname.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    function realpath([m
[32m+[m[32m        path: PathLike,[m
[32m+[m[32m        options?: ObjectEncodingOptions | BufferEncoding | null,[m
[32m+[m[32m    ): Promise<string | Buffer>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a unique temporary directory. A unique directory name is generated by[m
[32m+[m[32m     * appending six random characters to the end of the provided `prefix`. Due to[m
[32m+[m[32m     * platform inconsistencies, avoid trailing `X` characters in `prefix`. Some[m
[32m+[m[32m     * platforms, notably the BSDs, can return more than six random characters, and[m
[32m+[m[32m     * replace trailing `X` characters in `prefix` with random characters.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `options` argument can be a string specifying an encoding, or an[m
[32m+[m[32m     * object with an `encoding` property specifying the character encoding to use.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { mkdtemp } from 'node:fs/promises';[m
[32m+[m[32m     * import { join } from 'node:path';[m
[32m+[m[32m     * import { tmpdir } from 'node:os';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   await mkdtemp(join(tmpdir(), 'foo-'));[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   console.error(err);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `fsPromises.mkdtemp()` method will append the six randomly selected[m
[32m+[m[32m     * characters directly to the `prefix` string. For instance, given a directory `/tmp`, if the intention is to create a temporary directory _within_ `/tmp`, the `prefix` must end with a trailing[m
[32m+[m[32m     * platform-specific path separator[m
[32m+[m[32m     * (`require('node:path').sep`).[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @return Fulfills with a string containing the file system path of the newly created temporary directory.[m
[32m+[m[32m     */[m
[32m+[m[32m    function mkdtemp(prefix: string, options?: ObjectEncodingOptions | BufferEncoding | null): Promise<string>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously creates a unique temporary directory.[m
[32m+[m[32m     * Generates six random characters to be appended behind a required `prefix` to create a unique temporary directory.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    function mkdtemp(prefix: string, options: BufferEncodingOption): Promise<Buffer>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously creates a unique temporary directory.[m
[32m+[m[32m     * Generates six random characters to be appended behind a required `prefix` to create a unique temporary directory.[m
[32m+[m[32m     * @param options The encoding (or an object specifying the encoding), used as the encoding of the result. If not provided, `'utf8'` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    function mkdtemp(prefix: string, options?: ObjectEncodingOptions | BufferEncoding | null): Promise<string | Buffer>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously writes data to a file, replacing the file if it already exists. `data` can be a string, a buffer, an[m
[32m+[m[32m     * [AsyncIterable](https://tc39.github.io/ecma262/#sec-asynciterable-interface), or an[m
[32m+[m[32m     * [Iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol) object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `encoding` option is ignored if `data` is a buffer.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the encoding.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `mode` option only affects the newly created file. See `fs.open()` for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Any specified `FileHandle` has to support writing.[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is unsafe to use `fsPromises.writeFile()` multiple times on the same file[m
[32m+[m[32m     * without waiting for the promise to be settled.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Similarly to `fsPromises.readFile` \- `fsPromises.writeFile` is a convenience[m
[32m+[m[32m     * method that performs multiple `write` calls internally to write the buffer[m
[32m+[m[32m     * passed to it. For performance sensitive code consider using `fs.createWriteStream()` or `filehandle.createWriteStream()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is possible to use an `AbortSignal` to cancel an `fsPromises.writeFile()`.[m
[32m+[m[32m     * Cancelation is "best effort", and some amount of data is likely still[m
[32m+[m[32m     * to be written.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { writeFile } from 'node:fs/promises';[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   const controller = new AbortController();[m
[32m+[m[32m     *   const { signal } = controller;[m
[32m+[m[32m     *   const data = new Uint8Array(Buffer.from('Hello Node.js'));[m
[32m+[m[32m     *   const promise = writeFile('message.txt', data, { signal });[m
[32m+[m[32m     *[m
[32m+[m[32m     *   // Abort the request before the promise settles.[m
[32m+[m[32m     *   controller.abort();[m
[32m+[m[32m     *[m
[32m+[m[32m     *   await promise;[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   // When a request is aborted - err is an AbortError[m
[32m+[m[32m     *   console.error(err);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Aborting an ongoing request does not abort individual operating[m
[32m+[m[32m     * system requests but rather the internal buffering `fs.writeFile` performs.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @param file filename or `FileHandle`[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function writeFile([m
[32m+[m[32m        file: PathLike | FileHandle,[m
[32m+[m[32m        data:[m
[32m+[m[32m            | string[m
[32m+[m[32m            | NodeJS.ArrayBufferView[m
[32m+[m[32m            | Iterable<string | NodeJS.ArrayBufferView>[m
[32m+[m[32m            | AsyncIterable<string | NodeJS.ArrayBufferView>[m
[32m+[m[32m            | Stream,[m
[32m+[m[32m        options?:[m
[32m+[m[32m            | (ObjectEncodingOptions & {[m
[32m+[m[32m                mode?: Mode | undefined;[m
[32m+[m[32m                flag?: OpenMode | undefined;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * If all data is successfully written to the file, and `flush`[m
[32m+[m[32m                 * is `true`, `filehandle.sync()` is used to flush the data.[m
[32m+[m[32m                 * @default false[m
[32m+[m[32m                 */[m
[32m+[m[32m                flush?: boolean | undefined;[m
[32m+[m[32m            } & Abortable)[m
[32m+[m[32m            | BufferEncoding[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously append data to a file, creating the file if it does not yet[m
[32m+[m[32m     * exist. `data` can be a string or a `Buffer`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the `encoding`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `mode` option only affects the newly created file. See `fs.open()` for more details.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `path` may be specified as a `FileHandle` that has been opened[m
[32m+[m[32m     * for appending (using `fsPromises.open()`).[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @param path filename or {FileHandle}[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function appendFile([m
[32m+[m[32m        path: PathLike | FileHandle,[m
[32m+[m[32m        data: string | Uint8Array,[m
[32m+[m[32m        options?: (ObjectEncodingOptions & FlagAndOpenMode & { flush?: boolean | undefined }) | BufferEncoding | null,[m
[32m+[m[32m    ): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If no encoding is specified (using `options.encoding`), the data is returned[m
[32m+[m[32m     * as a `Buffer` object. Otherwise, the data will be a string.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the encoding.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When the `path` is a directory, the behavior of `fsPromises.readFile()` is[m
[32m+[m[32m     * platform-specific. On macOS, Linux, and Windows, the promise will be rejected[m
[32m+[m[32m     * with an error. On FreeBSD, a representation of the directory's contents will be[m
[32m+[m[32m     * returned.[m
[32m+[m[32m     *[m
[32m+[m[32m     * An example of reading a `package.json` file located in the same directory of the[m
[32m+[m[32m     * running code:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { readFile } from 'node:fs/promises';[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   const filePath = new URL('./package.json', import.meta.url);[m
[32m+[m[32m     *   const contents = await readFile(filePath, { encoding: 'utf8' });[m
[32m+[m[32m     *   console.log(contents);[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   console.error(err.message);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is possible to abort an ongoing `readFile` using an `AbortSignal`. If a[m
[32m+[m[32m     * request is aborted the promise returned is rejected with an `AbortError`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { readFile } from 'node:fs/promises';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   const controller = new AbortController();[m
[32m+[m[32m     *   const { signal } = controller;[m
[32m+[m[32m     *   const promise = readFile(fileName, { signal });[m
[32m+[m[32m     *[m
[32m+[m[32m     *   // Abort the request before the promise settles.[m
[32m+[m[32m     *   controller.abort();[m
[32m+[m[32m     *[m
[32m+[m[32m     *   await promise;[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   // When a request is aborted - err is an AbortError[m
[32m+[m[32m     *   console.error(err);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Aborting an ongoing request does not abort individual operating[m
[32m+[m[32m     * system requests but rather the internal buffering `fs.readFile` performs.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Any specified `FileHandle` has to support reading.[m
[32m+[m[32m     * @since v10.0.0[m
[32m+[m[32m     * @param path filename or `FileHandle`[m
[32m+[m[32m     * @return Fulfills with the contents of the file.[m
[32m+[m[32m     */[m
[32m+[m[32m    function readFile([m
[32m+[m[32m        path: PathLike | FileHandle,[m
[32m+[m[32m        options?:[m
[32m+[m[32m            | ({[m
[32m+[m[32m                encoding?: null | undefined;[m
[32m+[m[32m                flag?: OpenMode | undefined;[m
[32m+[m[32m            } & Abortable)[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): Promise<Buffer>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * If a `FileHandle` is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m     * @param options An object that may contain an optional flag.[m
[32m+[m[32m     * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function readFile([m
[32m+[m[32m        path: PathLike | FileHandle,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | ({[m
[32m+[m[32m                encoding: BufferEncoding;[m
[32m+[m[32m                flag?: OpenMode | undefined;[m
[32m+[m[32m            } & Abortable)[m
[32m+[m[32m            | BufferEncoding,[m
[32m+[m[32m    ): Promise<string>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously reads the entire contents of a file.[m
[32m+[m[32m     * @param path A path to a file. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * If a `FileHandle` is provided, the underlying file will _not_ be closed automatically.[m
[32m+[m[32m     * @param options An object that may contain an optional flag.[m
[32m+[m[32m     * If a flag is not provided, it defaults to `'r'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function readFile([m
[32m+[m[32m        path: PathLike | FileHandle,[m
[32m+[m[32m        options?:[m
[32m+[m[32m            | ([m
[32m+[m[32m                & ObjectEncodingOptions[m
[32m+[m[32m                & Abortable[m
[32m+[m[32m                & {[m
[32m+[m[32m                    flag?: OpenMode | undefined;[m
[32m+[m[32m                }[m
[32m+[m[32m            )[m
[32m+[m[32m            | BufferEncoding[m
[32m+[m[32m            | null,[m
[32m+[m[32m    ): Promise<string | Buffer>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously open a directory for iterative scanning. See the POSIX [`opendir(3)`](http://man7.org/linux/man-pages/man3/opendir.3.html) documentation for more detail.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Creates an `fs.Dir`, which contains all further functions for reading from[m
[32m+[m[32m     * and cleaning up the directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `encoding` option sets the encoding for the `path` while opening the[m
[32m+[m[32m     * directory and subsequent read operations.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example using async iteration:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { opendir } from 'node:fs/promises';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   const dir = await opendir('./');[m
[32m+[m[32m     *   for await (const dirent of dir)[m
[32m+[m[32m     *     console.log(dirent.name);[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   console.error(err);[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * When using the async iterator, the `fs.Dir` object will be automatically[m
[32m+[m[32m     * closed after the iterator exits.[m
[32m+[m[32m     * @since v12.12.0[m
[32m+[m[32m     * @return Fulfills with an {fs.Dir}.[m
[32m+[m[32m     */[m
[32m+[m[32m    function opendir(path: PathLike, options?: OpenDirOptions): Promise<Dir>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns an async iterator that watches for changes on `filename`, where `filename`is either a file or a directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { watch } = require('node:fs/promises');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const ac = new AbortController();[m
[32m+[m[32m     * const { signal } = ac;[m
[32m+[m[32m     * setTimeout(() => ac.abort(), 10000);[m
[32m+[m[32m     *[m
[32m+[m[32m     * (async () => {[m
[32m+[m[32m     *   try {[m
[32m+[m[32m     *     const watcher = watch(__filename, { signal });[m
[32m+[m[32m     *     for await (const event of watcher)[m
[32m+[m[32m     *       console.log(event);[m
[32m+[m[32m     *   } catch (err) {[m
[32m+[m[32m     *     if (err.name === 'AbortError')[m
[32m+[m[32m     *       return;[m
[32m+[m[32m     *     throw err;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * })();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * On most platforms, `'rename'` is emitted whenever a filename appears or[m
[32m+[m[32m     * disappears in the directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * All the `caveats` for `fs.watch()` also apply to `fsPromises.watch()`.[m
[32m+[m[32m     * @since v15.9.0, v14.18.0[m
[32m+[m[32m     * @return of objects with the properties:[m
[32m+[m[32m     */[m
[32m+[m[32m    function watch([m
[32m+[m[32m        filename: PathLike,[m
[32m+[m[32m        options:[m
[32m+[m[32m            | (WatchOptions & {[m
[32m+[m[32m                encoding: "buffer";[m
[32m+[m[32m            })[m
[32m+[m[32m            | "buffer",[m
[32m+[m[32m    ): AsyncIterable<FileChangeInfo<Buffer>>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Watch for changes on `filename`, where `filename` is either a file or a directory, returning an `FSWatcher`.[m
[32m+[m[32m     * @param filename A path to a file or directory. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options Either the encoding for the filename provided to the listener, or an object optionally specifying encoding, persistent, and recursive options.[m
[32m+[m[32m     * If `encoding` is not supplied, the default of `'utf8'` is used.[m
[32m+[m[32m     * If `persistent` is not supplied, the default of `true` is used.[m
[32m+[m[32m     * If `recursive` is not supplied, the default of `false` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    function watch(filename: PathLike, options?: WatchOptions | BufferEncoding): AsyncIterable<FileChangeInfo<string>>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Watch for changes on `filename`, where `filename` is either a file or a directory, returning an `FSWatcher`.[m
[32m+[m[32m     * @param filename A path to a file or directory. If a URL is provided, it must use the `file:` protocol.[m
[32m+[m[32m     * @param options Either the encoding for the filename provided to the listener, or an object optionally specifying encoding, persistent, and recursive options.[m
[32m+[m[32m     * If `encoding` is not supplied, the default of `'utf8'` is used.[m
[32m+[m[32m     * If `persistent` is not supplied, the default of `true` is used.[m
[32m+[m[32m     * If `recursive` is not supplied, the default of `false` is used.[m
[32m+[m[32m     */[m
[32m+[m[32m    function watch([m
[32m+[m[32m        filename: PathLike,[m
[32m+[m[32m        options: WatchOptions | string,[m
[32m+[m[32m    ): AsyncIterable<FileChangeInfo<string>> | AsyncIterable<FileChangeInfo<Buffer>>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Asynchronously copies the entire directory structure from `src` to `dest`,[m
[32m+[m[32m     * including subdirectories and files.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When copying a directory to another directory, globs are not supported and[m
[32m+[m[32m     * behavior is similar to `cp dir1/ dir2/`.[m
[32m+[m[32m     * @since v16.7.0[m
[32m+[m[32m     * @experimental[m
[32m+[m[32m     * @param src source path to copy.[m
[32m+[m[32m     * @param dest destination path to copy to.[m
[32m+[m[32m     * @return Fulfills with `undefined` upon success.[m
[32m+[m[32m     */[m
[32m+[m[32m    function cp(source: string | URL, destination: string | URL, opts?: CopyOptions): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Retrieves the files matching the specified pattern.[m
[32m+[m[32m     */[m
[32m+[m[32m    function glob(pattern: string | string[]): AsyncIterableIterator<string>;[m
[32m+[m[32m    function glob([m
[32m+[m[32m        pattern: string | string[],[m
[32m+[m[32m        opt: GlobOptionsWithFileTypes,[m
[32m+[m[32m    ): AsyncIterableIterator<Dirent>;[m
[32m+[m[32m    function glob([m
[32m+[m[32m        pattern: string | string[],[m
[32m+[m[32m        opt: GlobOptionsWithoutFileTypes,[m
[32m+[m[32m    ): AsyncIterableIterator<string>;[m
[32m+[m[32m    function glob([m
[32m+[m[32m        pattern: string | string[],[m
[32m+[m[32m        opt: GlobOptions,[m
[32m+[m[32m    ): AsyncIterableIterator<Dirent> | AsyncIterableIterator<string>;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:fs/promises" {[m
[32m+[m[32m    export * from "fs/promises";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/globals.d.ts b/node_modules/@types/node/globals.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..d7c6852[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/globals.d.ts[m
[36m@@ -0,0 +1,510 @@[m
[32m+[m[32mexport {}; // Make this a module[m
[32m+[m
[32m+[m[32m// #region Fetch and friends[m
[32m+[m[32m// Conditional type aliases, used at the end of this file.[m
[32m+[m[32m// Will either be empty if lib.dom (or lib.webworker) is included, or the undici version otherwise.[m
[32m+[m[32mtype _Request = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Request;[m
[32m+[m[32mtype _Response = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Response;[m
[32m+[m[32mtype _FormData = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").FormData;[m
[32m+[m[32mtype _Headers = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").Headers;[m
[32m+[m[32mtype _MessageEvent = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").MessageEvent;[m
[32m+[m[32mtype _RequestInit = typeof globalThis extends { onmessage: any } ? {}[m
[32m+[m[32m    : import("undici-types").RequestInit;[m
[32m+[m[32mtype _ResponseInit = typeof globalThis extends { onmessage: any } ? {}[m
[32m+[m[32m    : import("undici-types").ResponseInit;[m
[32m+[m[32mtype _File = typeof globalThis extends { onmessage: any } ? {} : import("node:buffer").File;[m
[32m+[m[32mtype _WebSocket = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").WebSocket;[m
[32m+[m[32mtype _EventSource = typeof globalThis extends { onmessage: any } ? {} : import("undici-types").EventSource;[m
[32m+[m[32m// #endregion Fetch and friends[m
[32m+[m
[32m+[m[32m// Conditional type definitions for webstorage interface, which conflicts with lib.dom otherwise.[m
[32m+[m[32mtype _Storage = typeof globalThis extends { onabort: any } ? {} : {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the number of key/value pairs.[m
[32m+[m[32m     *[m
[32m+[m[32m     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/length)[m
[32m+[m[32m     */[m
[32m+[m[32m    readonly length: number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Removes all key/value pairs, if there are any.[m
[32m+[m[32m     *[m
[32m+[m[32m     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/clear)[m
[32m+[m[32m     */[m
[32m+[m[32m    clear(): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the current value associated with the given key, or null if the given key does not exist.[m
[32m+[m[32m     *[m
[32m+[m[32m     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/getItem)[m
[32m+[m[32m     */[m
[32m+[m[32m    getItem(key: string): string | null;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the name of the nth key, or null if n is greater than or equal to the number of key/value pairs.[m
[32m+[m[32m     *[m
[32m+[m[32m     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/key)[m
[32m+[m[32m     */[m
[32m+[m[32m    key(index: number): string | null;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Removes the key/value pair with the given key, if a key/value pair with the given key exists.[m
[32m+[m[32m     *[m
[32m+[m[32m     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/removeItem)[m
[32m+[m[32m     */[m
[32m+[m[32m    removeItem(key: string): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Throws a "QuotaExceededError" DOMException exception if the new value couldn't be set.[m
[32m+[m[32m     *[m
[32m+[m[32m     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage/setItem)[m
[32m+[m[32m     */[m
[32m+[m[32m    setItem(key: string, value: string): void;[m
[32m+[m[32m    [key: string]: any;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mdeclare global {[m
[32m+[m[32m    // Declare "static" methods in Error[m
[32m+[m[32m    interface ErrorConstructor {[m
[32m+[m[32m        /** Create .stack property on a target object */[m
[32m+[m[32m        captureStackTrace(targetObject: object, constructorOpt?: Function): void;[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Optional override for formatting stack traces[m
[32m+[m[32m         *[m
[32m+[m[32m         * @see https://v8.dev/docs/stack-trace-api#customizing-stack-traces[m
[32m+[m[32m         */[m
[32m+[m[32m        prepareStackTrace?: ((err: Error, stackTraces: NodeJS.CallSite[]) => any) | undefined;[m
[32m+[m
[32m+[m[32m        stackTraceLimit: number;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /*-----------------------------------------------*[m
[32m+[m[32m    *                                               *[m
[32m+[m[32m    *                   GLOBAL                      *[m
[32m+[m[32m    *                                               *[m
[32m+[m[32m    ------------------------------------------------*/[m
[32m+[m
[32m+[m[32m    // For backwards compability[m
[32m+[m[32m    interface NodeRequire extends NodeJS.Require {}[m
[32m+[m[32m    interface RequireResolve extends NodeJS.RequireResolve {}[m
[32m+[m[32m    interface NodeModule extends NodeJS.Module {}[m
[32m+[m
[32m+[m[32m    var process: NodeJS.Process;[m
[32m+[m[32m    var console: Console;[m
[32m+[m
[32m+[m[32m    var __filename: string;[m
[32m+[m[32m    var __dirname: string;[m
[32m+[m
[32m+[m[32m    var require: NodeRequire;[m
[32m+[m[32m    var module: NodeModule;[m
[32m+[m
[32m+[m[32m    // Same as module.exports[m
[32m+[m[32m    var exports: any;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Only available if `--expose-gc` is passed to the process.[m
[32m+[m[32m     */[m
[32m+[m[32m    var gc: undefined | (() => void);[m
[32m+[m
[32m+[m[32m    // #region borrowed[m
[32m+[m[32m    // from https://github.com/microsoft/TypeScript/blob/38da7c600c83e7b31193a62495239a0fe478cb67/lib/lib.webworker.d.ts#L633 until moved to separate lib[m
[32m+[m[32m    /** A controller object that allows you to abort one or more DOM requests as and when desired. */[m
[32m+[m[32m    interface AbortController {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the AbortSignal object associated with this object.[m
[32m+[m[32m         */[m
[32m+[m
[32m+[m[32m        readonly signal: AbortSignal;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Invoking this method will set this object's AbortSignal's aborted flag and signal to any observers that the associated activity is to be aborted.[m
[32m+[m[32m         */[m
[32m+[m[32m        abort(reason?: any): void;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /** A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object. */[m
[32m+[m[32m    interface AbortSignal extends EventTarget {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly aborted: boolean;[m
[32m+[m[32m        readonly reason: any;[m
[32m+[m[32m        onabort: null | ((this: AbortSignal, event: Event) => any);[m
[32m+[m[32m        throwIfAborted(): void;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    var AbortController: typeof globalThis extends { onmessage: any; AbortController: infer T } ? T[m
[32m+[m[32m        : {[m
[32m+[m[32m            prototype: AbortController;[m
[32m+[m[32m            new(): AbortController;[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m    var AbortSignal: typeof globalThis extends { onmessage: any; AbortSignal: infer T } ? T[m
[32m+[m[32m        : {[m
[32m+[m[32m            prototype: AbortSignal;[m
[32m+[m[32m            new(): AbortSignal;[m
[32m+[m[32m            abort(reason?: any): AbortSignal;[m
[32m+[m[32m            timeout(milliseconds: number): AbortSignal;[m
[32m+[m[32m            any(signals: AbortSignal[]): AbortSignal;[m
[32m+[m[32m        };[m
[32m+[m[32m    // #endregion borrowed[m
[32m+[m
[32m+[m[32m    // #region Storage[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This Web Storage API interface provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items.[m
[32m+[m[32m     *[m
[32m+[m[32m     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/Storage)[m
[32m+[m[32m     */[m
[32m+[m[32m    interface Storage extends _Storage {}[m
[32m+[m
[32m+[m[32m    // Conditional on `onabort` rather than `onmessage`, in order to exclude lib.webworker[m
[32m+[m[32m    var Storage: typeof globalThis extends { onabort: any; Storage: infer T } ? T[m
[32m+[m[32m        : {[m
[32m+[m[32m            prototype: Storage;[m
[32m+[m[32m            new(): Storage;[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A browser-compatible implementation of [`localStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage).[m
[32m+[m[32m     * Data is stored unencrypted in the file specified by the `--localstorage-file` CLI flag.[m
[32m+[m[32m     * Any modification of this data outside of the Web Storage API is not supported.[m
[32m+[m[32m     * Enable this API with the `--experimental-webstorage` CLI flag.[m
[32m+[m[32m     * @since v22.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    var localStorage: Storage;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A browser-compatible implementation of [`sessionStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage).[m
[32m+[m[32m     * Data is stored in memory, with a storage quota of 10 MB.[m
[32m+[m[32m     * Any modification of this data outside of the Web Storage API is not supported.[m
[32m+[m[32m     * Enable this API with the `--experimental-webstorage` CLI flag.[m
[32m+[m[32m     * @since v22.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    var sessionStorage: Storage;[m
[32m+[m[32m    // #endregion Storage[m
[32m+[m
[32m+[m[32m    // #region Disposable[m
[32m+[m[32m    interface SymbolConstructor {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A method that is used to release resources held by an object. Called by the semantics of the `using` statement.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly dispose: unique symbol;[m
[32m+[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A method that is used to asynchronously release resources held by an object. Called by the semantics of the `await using` statement.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly asyncDispose: unique symbol;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    interface Disposable {[m
[32m+[m[32m        [Symbol.dispose](): void;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    interface AsyncDisposable {[m
[32m+[m[32m        [Symbol.asyncDispose](): PromiseLike<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    // #endregion Disposable[m
[32m+[m
[32m+[m[32m    // #region ArrayLike.at()[m
[32m+[m[32m    interface RelativeIndexable<T> {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Takes an integer value and returns the item at that index,[m
[32m+[m[32m         * allowing for positive and negative integers.[m
[32m+[m[32m         * Negative integers count back from the last item in the array.[m
[32m+[m[32m         */[m
[32m+[m[32m        at(index: number): T | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface String extends RelativeIndexable<string> {}[m
[32m+[m[32m    interface Array<T> extends RelativeIndexable<T> {}[m
[32m+[m[32m    interface ReadonlyArray<T> extends RelativeIndexable<T> {}[m
[32m+[m[32m    interface Int8Array extends RelativeIndexable<number> {}[m
[32m+[m[32m    interface Uint8Array extends RelativeIndexable<number> {}[m
[32m+[m[32m    interface Uint8ClampedArray extends RelativeIndexable<number> {}[m
[32m+[m[32m    interface Int16Array extends RelativeIndexable<number> {}[m
[32m+[m[32m    interface Uint16Array extends RelativeIndexable<number> {}[m
[32m+[m[32m    interface Int32Array extends RelativeIndexable<number> {}[m
[32m+[m[32m    interface Uint32Array extends RelativeIndexable<number> {}[m
[32m+[m[32m    interface Float32Array extends RelativeIndexable<number> {}[m
[32m+[m[32m    interface Float64Array extends RelativeIndexable<number> {}[m
[32m+[m[32m    interface BigInt64Array extends RelativeIndexable<bigint> {}[m
[32m+[m[32m    interface BigUint64Array extends RelativeIndexable<bigint> {}[m
[32m+[m[32m    // #endregion ArrayLike.at() end[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v17.0.0[m
[32m+[m[32m     *[m
[32m+[m[32m     * Creates a deep clone of an object.[m
[32m+[m[32m     */[m
[32m+[m[32m    function structuredClone<T>([m
[32m+[m[32m        value: T,[m
[32m+[m[32m        transfer?: { transfer: ReadonlyArray<import("worker_threads").TransferListItem> },[m
[32m+[m[32m    ): T;[m
[32m+[m
[32m+[m[32m    /*----------------------------------------------*[m
[32m+[m[32m    *                                               *[m
[32m+[m[32m    *               GLOBAL INTERFACES               *[m
[32m+[m[32m    *                                               *[m
[32m+[m[32m    *-----------------------------------------------*/[m
[32m+[m[32m    namespace NodeJS {[m
[32m+[m[32m        interface CallSite {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Value of "this"[m
[32m+[m[32m             */[m
[32m+[m[32m            getThis(): unknown;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Type of "this" as a string.[m
[32m+[m[32m             * This is the name of the function stored in the constructor field of[m
[32m+[m[32m             * "this", if available.  Otherwise the object's [[Class]] internal[m
[32m+[m[32m             * property.[m
[32m+[m[32m             */[m
[32m+[m[32m            getTypeName(): string | null;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Current function[m
[32m+[m[32m             */[m
[32m+[m[32m            getFunction(): Function | undefined;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Name of the current function, typically its name property.[m
[32m+[m[32m             * If a name property is not available an attempt will be made to try[m
[32m+[m[32m             * to infer a name from the function's context.[m
[32m+[m[32m             */[m
[32m+[m[32m            getFunctionName(): string | null;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Name of the property [of "this" or one of its prototypes] that holds[m
[32m+[m[32m             * the current function[m
[32m+[m[32m             */[m
[32m+[m[32m            getMethodName(): string | null;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Name of the script [if this function was defined in a script][m
[32m+[m[32m             */[m
[32m+[m[32m            getFileName(): string | undefined;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Current line number [if this function was defined in a script][m
[32m+[m[32m             */[m
[32m+[m[32m            getLineNumber(): number | null;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Current column number [if this function was defined in a script][m
[32m+[m[32m             */[m
[32m+[m[32m            getColumnNumber(): number | null;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A call site object representing the location where eval was called[m
[32m+[m[32m             * [if this function was created using a call to eval][m
[32m+[m[32m             */[m
[32m+[m[32m            getEvalOrigin(): string | undefined;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Is this a toplevel invocation, that is, is "this" the global object?[m
[32m+[m[32m             */[m
[32m+[m[32m            isToplevel(): boolean;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Does this call take place in code defined by a call to eval?[m
[32m+[m[32m             */[m
[32m+[m[32m            isEval(): boolean;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Is this call in native V8 code?[m
[32m+[m[32m             */[m
[32m+[m[32m            isNative(): boolean;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Is this a constructor call?[m
[32m+[m[32m             */[m
[32m+[m[32m            isConstructor(): boolean;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * is this an async call (i.e. await, Promise.all(), or Promise.any())?[m
[32m+[m[32m             */[m
[32m+[m[32m            isAsync(): boolean;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * is this an async call to Promise.all()?[m
[32m+[m[32m             */[m
[32m+[m[32m            isPromiseAll(): boolean;[m
[32m+[m
[32m+[m[32m            /**[m
[32m+[m[32m             * returns the index of the promise element that was followed in[m
[32m+[m[32m             * Promise.all() or Promise.any() for async stack traces, or null[m
[32m+[m[32m             * if the CallSite is not an async[m
[32m+[m[32m             */[m
[32m+[m[32m            getPromiseIndex(): number | null;[m
[32m+[m
[32m+[m[32m            getScriptNameOrSourceURL(): string;[m
[32m+[m[32m            getScriptHash(): string;[m
[32m+[m
[32m+[m[32m            getEnclosingColumnNumber(): number;[m
[32m+[m[32m            getEnclosingLineNumber(): number;[m
[32m+[m[32m            getPosition(): number;[m
[32m+[m
[32m+[m[32m            toString(): string;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        interface ErrnoException extends Error {[m
[32m+[m[32m            errno?: number | undefined;[m
[32m+[m[32m            code?: string | undefined;[m
[32m+[m[32m            path?: string | undefined;[m
[32m+[m[32m            syscall?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        interface ReadableStream extends EventEmitter {[m
[32m+[m[32m            readable: boolean;[m
[32m+[m[32m            read(size?: number): string | Buffer;[m
[32m+[m[32m            setEncoding(encoding: BufferEncoding): this;[m
[32m+[m[32m            pause(): this;[m
[32m+[m[32m            resume(): this;[m
[32m+[m[32m            isPaused(): boolean;[m
[32m+[m[32m            pipe<T extends WritableStream>(destination: T, options?: { end?: boolean | undefined }): T;[m
[32m+[m[32m            unpipe(destination?: WritableStream): this;[m
[32m+[m[32m            unshift(chunk: string | Uint8Array, encoding?: BufferEncoding): void;[m
[32m+[m[32m            wrap(oldStream: ReadableStream): this;[m
[32m+[m[32m            [Symbol.asyncIterator](): AsyncIterableIterator<string | Buffer>;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        interface WritableStream extends EventEmitter {[m
[32m+[m[32m            writable: boolean;[m
[32m+[m[32m            write(buffer: Uint8Array | string, cb?: (err?: Error | null) => void): boolean;[m
[32m+[m[32m            write(str: string, encoding?: BufferEncoding, cb?: (err?: Error | null) => void): boolean;[m
[32m+[m[32m            end(cb?: () => void): this;[m
[32m+[m[32m            end(data: string | Uint8Array, cb?: () => void): this;[m
[32m+[m[32m            end(str: string, encoding?: BufferEncoding, cb?: () => void): this;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        interface ReadWriteStream extends ReadableStream, WritableStream {}[m
[32m+[m
[32m+[m[32m        interface RefCounted {[m
[32m+[m[32m            ref(): this;[m
[32m+[m[32m            unref(): this;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        type TypedArray =[m
[32m+[m[32m            | Uint8Array[m
[32m+[m[32m            | Uint8ClampedArray[m
[32m+[m[32m            | Uint16Array[m
[32m+[m[32m            | Uint32Array[m
[32m+[m[32m            | Int8Array[m
[32m+[m[32m            | Int16Array[m
[32m+[m[32m            | Int32Array[m
[32m+[m[32m            | BigUint64Array[m
[32m+[m[32m            | BigInt64Array[m
[32m+[m[32m            | Float32Array[m
[32m+[m[32m            | Float64Array;[m
[32m+[m[32m        type ArrayBufferView = TypedArray | DataView;[m
[32m+[m
[32m+[m[32m        interface Require {[m
[32m+[m[32m            (id: string): any;[m
[32m+[m[32m            resolve: RequireResolve;[m
[32m+[m[32m            cache: Dict<NodeModule>;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @deprecated[m
[32m+[m[32m             */[m
[32m+[m[32m            extensions: RequireExtensions;[m
[32m+[m[32m            main: Module | undefined;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        interface RequireResolve {[m
[32m+[m[32m            (id: string, options?: { paths?: string[] | undefined }): string;[m
[32m+[m[32m            paths(request: string): string[] | null;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        interface RequireExtensions extends Dict<(m: Module, filename: string) => any> {[m
[32m+[m[32m            ".js": (m: Module, filename: string) => any;[m
[32m+[m[32m            ".json": (m: Module, filename: string) => any;[m
[32m+[m[32m            ".node": (m: Module, filename: string) => any;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface Module {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * `true` if the module is running during the Node.js preload[m
[32m+[m[32m             */[m
[32m+[m[32m            isPreloading: boolean;[m
[32m+[m[32m            exports: any;[m
[32m+[m[32m            require: Require;[m
[32m+[m[32m            id: string;[m
[32m+[m[32m            filename: string;[m
[32m+[m[32m            loaded: boolean;[m
[32m+[m[32m            /** @deprecated since v14.6.0 Please use `require.main` and `module.children` instead. */[m
[32m+[m[32m            parent: Module | null | undefined;[m
[32m+[m[32m            children: Module[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @since v11.14.0[m
[32m+[m[32m             *[m
[32m+[m[32m             * The directory name of the module. This is usually the same as the path.dirname() of the module.id.[m
[32m+[m[32m             */[m
[32m+[m[32m            path: string;[m
[32m+[m[32m            paths: string[];[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        interface Dict<T> {[m
[32m+[m[32m            [key: string]: T | undefined;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        interface ReadOnlyDict<T> {[m
[32m+[m[32m            readonly [key: string]: T | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    interface RequestInit extends _RequestInit {}[m
[32m+[m
[32m+[m[32m    function fetch([m
[32m+[m[32m        input: string | URL | globalThis.Request,[m
[32m+[m[32m        init?: RequestInit,[m
[32m+[m[32m    ): Promise<Response>;[m
[32m+[m
[32m+[m[32m    interface Request extends _Request {}[m
[32m+[m[32m    var Request: typeof globalThis extends {[m
[32m+[m[32m        onmessage: any;[m
[32m+[m[32m        Request: infer T;[m
[32m+[m[32m    } ? T[m
[32m+[m[32m        : typeof import("undici-types").Request;[m
[32m+[m
[32m+[m[32m    interface ResponseInit extends _ResponseInit {}[m
[32m+[m
[32m+[m[32m    interface Response extends _Response {}[m
[32m+[m[32m    var Response: typeof globalThis extends {[m
[32m+[m[32m        onmessage: any;[m
[32m+[m[32m        Response: infer T;[m
[32m+[m[32m    } ? T[m
[32m+[m[32m        : typeof import("undici-types").Response;[m
[32m+[m
[32m+[m[32m    interface FormData extends _FormData {}[m
[32m+[m[32m    var FormData: typeof globalThis extends {[m
[32m+[m[32m        onmessage: any;[m
[32m+[m[32m        FormData: infer T;[m
[32m+[m[32m    } ? T[m
[32m+[m[32m        : typeof import("undici-types").FormData;[m
[32m+[m
[32m+[m[32m    interface Headers extends _Headers {}[m
[32m+[m[32m    var Headers: typeof globalThis extends {[m
[32m+[m[32m        onmessage: any;[m
[32m+[m[32m        Headers: infer T;[m
[32m+[m[32m    } ? T[m
[32m+[m[32m        : typeof import("undici-types").Headers;[m
[32m+[m
[32m+[m[32m    interface MessageEvent extends _MessageEvent {}[m
[32m+[m[32m    var MessageEvent: typeof globalThis extends {[m
[32m+[m[32m        onmessage: any;[m
[32m+[m[32m        MessageEvent: infer T;[m
[32m+[m[32m    } ? T[m
[32m+[m[32m        : typeof import("undici-types").MessageEvent;[m
[32m+[m
[32m+[m[32m    interface File extends _File {}[m
[32m+[m[32m    var File: typeof globalThis extends {[m
[32m+[m[32m        onmessage: any;[m
[32m+[m[32m        File: infer T;[m
[32m+[m[32m    } ? T[m
[32m+[m[32m        : typeof import("node:buffer").File;[m
[32m+[m
[32m+[m[32m    interface WebSocket extends _WebSocket {}[m
[32m+[m[32m    var WebSocket: typeof globalThis extends { onmessage: any; WebSocket: infer T } ? T[m
[32m+[m[32m        : typeof import("undici-types").WebSocket;[m
[32m+[m
[32m+[m[32m    interface EventSource extends _EventSource {}[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Only available through the [--experimental-eventsource](https://nodejs.org/api/cli.html#--experimental-eventsource) flag.[m
[32m+[m[32m     */[m
[32m+[m[32m    var EventSource: typeof globalThis extends { onmessage: any; EventSource: infer T } ? T[m
[32m+[m[32m        : typeof import("undici-types").EventSource;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/globals.global.d.ts b/node_modules/@types/node/globals.global.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..ef1198c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/globals.global.d.ts[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mdeclare var global: typeof globalThis;[m
[1mdiff --git a/node_modules/@types/node/http.d.ts b/node_modules/@types/node/http.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..b790c00[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/http.d.ts[m
[36m@@ -0,0 +1,1921 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * To use the HTTP server and client one must `require('node:http')`.[m
[32m+[m[32m *[m
[32m+[m[32m * The HTTP interfaces in Node.js are designed to support many features[m
[32m+[m[32m * of the protocol which have been traditionally difficult to use.[m
[32m+[m[32m * In particular, large, possibly chunk-encoded, messages. The interface is[m
[32m+[m[32m * careful to never buffer entire requests or responses, so the[m
[32m+[m[32m * user is able to stream data.[m
[32m+[m[32m *[m
[32m+[m[32m * HTTP message headers are represented by an object like this:[m
[32m+[m[32m *[m
[32m+[m[32m * ```json[m
[32m+[m[32m * { "content-length": "123",[m
[32m+[m[32m *   "content-type": "text/plain",[m
[32m+[m[32m *   "connection": "keep-alive",[m
[32m+[m[32m *   "host": "example.com",[m
[32m+[m[32m *   "accept": "*" }[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * Keys are lowercased. Values are not modified.[m
[32m+[m[32m *[m
[32m+[m[32m * In order to support the full spectrum of possible HTTP applications, the Node.js[m
[32m+[m[32m * HTTP API is very low-level. It deals with stream handling and message[m
[32m+[m[32m * parsing only. It parses a message into headers and body but it does not[m
[32m+[m[32m * parse the actual headers or the body.[m
[32m+[m[32m *[m
[32m+[m[32m * See `message.headers` for details on how duplicate headers are handled.[m
[32m+[m[32m *[m
[32m+[m[32m * The raw headers as they were received are retained in the `rawHeaders` property, which is an array of `[key, value, key2, value2, ...]`. For[m
[32m+[m[32m * example, the previous message header object might have a `rawHeaders` list like the following:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * [ 'ConTent-Length', '123456',[m
[32m+[m[32m *   'content-LENGTH', '123',[m
[32m+[m[32m *   'content-type', 'text/plain',[m
[32m+[m[32m *   'CONNECTION', 'keep-alive',[m
[32m+[m[32m *   'Host', 'example.com',[m
[32m+[m[32m *   'accepT', '*' ][m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/http.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "http" {[m
[32m+[m[32m    import * as stream from "node:stream";[m
[32m+[m[32m    import { URL } from "node:url";[m
[32m+[m[32m    import { LookupOptions } from "node:dns";[m
[32m+[m[32m    import { EventEmitter } from "node:events";[m
[32m+[m[32m    import { LookupFunction, Server as NetServer, Socket, TcpSocketConnectOpts } from "node:net";[m
[32m+[m[32m    // incoming headers will never contain number[m
[32m+[m[32m    interface IncomingHttpHeaders extends NodeJS.Dict<string | string[]> {[m
[32m+[m[32m        accept?: string | undefined;[m
[32m+[m[32m        "accept-language"?: string | undefined;[m
[32m+[m[32m        "accept-patch"?: string | undefined;[m
[32m+[m[32m        "accept-ranges"?: string | undefined;[m
[32m+[m[32m        "access-control-allow-credentials"?: string | undefined;[m
[32m+[m[32m        "access-control-allow-headers"?: string | undefined;[m
[32m+[m[32m        "access-control-allow-methods"?: string | undefined;[m
[32m+[m[32m        "access-control-allow-origin"?: string | undefined;[m
[32m+[m[32m        "access-control-expose-headers"?: string | undefined;[m
[32m+[m[32m        "access-control-max-age"?: string | undefined;[m
[32m+[m[32m        "access-control-request-headers"?: string | undefined;[m
[32m+[m[32m        "access-control-request-method"?: string | undefined;[m
[32m+[m[32m        age?: string | undefined;[m
[32m+[m[32m        allow?: string | undefined;[m
[32m+[m[32m        "alt-svc"?: string | undefined;[m
[32m+[m[32m        authorization?: string | undefined;[m
[32m+[m[32m        "cache-control"?: string | undefined;[m
[32m+[m[32m        connection?: string | undefined;[m
[32m+[m[32m        "content-disposition"?: string | undefined;[m
[32m+[m[32m        "content-encoding"?: string | undefined;[m
[32m+[m[32m        "content-language"?: string | undefined;[m
[32m+[m[32m        "content-length"?: string | undefined;[m
[32m+[m[32m        "content-location"?: string | undefined;[m
[32m+[m[32m        "content-range"?: string | undefined;[m
[32m+[m[32m        "content-type"?: string | undefined;[m
[32m+[m[32m        cookie?: string | undefined;[m
[32m+[m[32m        date?: string | undefined;[m
[32m+[m[32m        etag?: string | undefined;[m
[32m+[m[32m        expect?: string | undefined;[m
[32m+[m[32m        expires?: string | undefined;[m
[32m+[m[32m        forwarded?: string | undefined;[m
[32m+[m[32m        from?: string | undefined;[m
[32m+[m[32m        host?: string | undefined;[m
[32m+[m[32m        "if-match"?: string | undefined;[m
[32m+[m[32m        "if-modified-since"?: string | undefined;[m
[32m+[m[32m        "if-none-match"?: string | undefined;[m
[32m+[m[32m        "if-unmodified-since"?: string | undefined;[m
[32m+[m[32m        "last-modified"?: string | undefined;[m
[32m+[m[32m        location?: string | undefined;[m
[32m+[m[32m        origin?: string | undefined;[m
[32m+[m[32m        pragma?: string | undefined;[m
[32m+[m[32m        "proxy-authenticate"?: string | undefined;[m
[32m+[m[32m        "proxy-authorization"?: string | undefined;[m
[32m+[m[32m        "public-key-pins"?: string | undefined;[m
[32m+[m[32m        range?: string | undefined;[m
[32m+[m[32m        referer?: string | undefined;[m
[32m+[m[32m        "retry-after"?: string | undefined;[m
[32m+[m[32m        "sec-websocket-accept"?: string | undefined;[m
[32m+[m[32m        "sec-websocket-extensions"?: string | undefined;[m
[32m+[m[32m        "sec-websocket-key"?: string | undefined;[m
[32m+[m[32m        "sec-websocket-protocol"?: string | undefined;[m
[32m+[m[32m        "sec-websocket-version"?: string | undefined;[m
[32m+[m[32m        "set-cookie"?: string[] | undefined;[m
[32m+[m[32m        "strict-transport-security"?: string | undefined;[m
[32m+[m[32m        tk?: string | undefined;[m
[32m+[m[32m        trailer?: string | undefined;[m
[32m+[m[32m        "transfer-encoding"?: string | undefined;[m
[32m+[m[32m        upgrade?: string | undefined;[m
[32m+[m[32m        "user-agent"?: string | undefined;[m
[32m+[m[32m        vary?: string | undefined;[m
[32m+[m[32m        via?: string | undefined;[m
[32m+[m[32m        warning?: string | undefined;[m
[32m+[m[32m        "www-authenticate"?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    // outgoing headers allows numbers (as they are converted internally to strings)[m
[32m+[m[32m    type OutgoingHttpHeader = number | string | string[];[m
[32m+[m[32m    interface OutgoingHttpHeaders extends NodeJS.Dict<OutgoingHttpHeader> {[m
[32m+[m[32m        accept?: string | string[] | undefined;[m
[32m+[m[32m        "accept-charset"?: string | string[] | undefined;[m
[32m+[m[32m        "accept-encoding"?: string | string[] | undefined;[m
[32m+[m[32m        "accept-language"?: string | string[] | undefined;[m
[32m+[m[32m        "accept-ranges"?: string | undefined;[m
[32m+[m[32m        "access-control-allow-credentials"?: string | undefined;[m
[32m+[m[32m        "access-control-allow-headers"?: string | undefined;[m
[32m+[m[32m        "access-control-allow-methods"?: string | undefined;[m
[32m+[m[32m        "access-control-allow-origin"?: string | undefined;[m
[32m+[m[32m        "access-control-expose-headers"?: string | undefined;[m
[32m+[m[32m        "access-control-max-age"?: string | undefined;[m
[32m+[m[32m        "access-control-request-headers"?: string | undefined;[m
[32m+[m[32m        "access-control-request-method"?: string | undefined;[m
[32m+[m[32m        age?: string | undefined;[m
[32m+[m[32m        allow?: string | undefined;[m
[32m+[m[32m        authorization?: string | undefined;[m
[32m+[m[32m        "cache-control"?: string | undefined;[m
[32m+[m[32m        "cdn-cache-control"?: string | undefined;[m
[32m+[m[32m        connection?: string | string[] | undefined;[m
[32m+[m[32m        "content-disposition"?: string | undefined;[m
[32m+[m[32m        "content-encoding"?: string | undefined;[m
[32m+[m[32m        "content-language"?: string | undefined;[m
[32m+[m[32m        "content-length"?: string | number | undefined;[m
[32m+[m[32m        "content-location"?: string | undefined;[m
[32m+[m[32m        "content-range"?: string | undefined;[m
[32m+[m[32m        "content-security-policy"?: string | undefined;[m
[32m+[m[32m        "content-security-policy-report-only"?: string | undefined;[m
[32m+[m[32m        cookie?: string | string[] | undefined;[m
[32m+[m[32m        dav?: string | string[] | undefined;[m
[32m+[m[32m        dnt?: string | undefined;[m
[32m+[m[32m        date?: string | undefined;[m
[32m+[m[32m        etag?: string | undefined;[m
[32m+[m[32m        expect?: string | undefined;[m
[32m+[m[32m        expires?: string | undefined;[m
[32m+[m[32m        forwarded?: string | undefined;[m
[32m+[m[32m        from?: string | undefined;[m
[32m+[m[32m        host?: string | undefined;[m
[32m+[m[32m        "if-match"?: string | undefined;[m
[32m+[m[32m        "if-modified-since"?: string | undefined;[m
[32m+[m[32m        "if-none-match"?: string | undefined;[m
[32m+[m[32m        "if-range"?: string | undefined;[m
[32m+[m[32m        "if-unmodified-since"?: string | undefined;[m
[32m+[m[32m        "last-modified"?: string | undefined;[m
[32m+[m[32m        link?: string | string[] | undefined;[m
[32m+[m[32m        location?: string | undefined;[m
[32m+[m[32m        "max-forwards"?: string | undefined;[m
[32m+[m[32m        origin?: string | undefined;[m
[32m+[m[32m        prgama?: string | string[] | undefined;[m
[32m+[m[32m        "proxy-authenticate"?: string | string[] | undefined;[m
[32m+[m[32m        "proxy-authorization"?: string | undefined;[m
[32m+[m[32m        "public-key-pins"?: string | undefined;[m
[32m+[m[32m        "public-key-pins-report-only"?: string | undefined;[m
[32m+[m[32m        range?: string | undefined;[m
[32m+[m[32m        referer?: string | undefined;[m
[32m+[m[32m        "referrer-policy"?: string | undefined;[m
[32m+[m[32m        refresh?: string | undefined;[m
[32m+[m[32m        "retry-after"?: string | undefined;[m
[32m+[m[32m        "sec-websocket-accept"?: string | undefined;[m
[32m+[m[32m        "sec-websocket-extensions"?: string | string[] | undefined;[m
[32m+[m[32m        "sec-websocket-key"?: string | undefined;[m
[32m+[m[32m        "sec-websocket-protocol"?: string | string[] | undefined;[m
[32m+[m[32m        "sec-websocket-version"?: string | undefined;[m
[32m+[m[32m        server?: string | undefined;[m
[32m+[m[32m        "set-cookie"?: string | string[] | undefined;[m
[32m+[m[32m        "strict-transport-security"?: string | undefined;[m
[32m+[m[32m        te?: string | undefined;[m
[32m+[m[32m        trailer?: string | undefined;[m
[32m+[m[32m        "transfer-encoding"?: string | undefined;[m
[32m+[m[32m        "user-agent"?: string | undefined;[m
[32m+[m[32m        upgrade?: string | undefined;[m
[32m+[m[32m        "upgrade-insecure-requests"?: string | undefined;[m
[32m+[m[32m        vary?: string | undefined;[m
[32m+[m[32m        via?: string | string[] | undefined;[m
[32m+[m[32m        warning?: string | undefined;[m
[32m+[m[32m        "www-authenticate"?: string | string[] | undefined;[m
[32m+[m[32m        "x-content-type-options"?: string | undefined;[m
[32m+[m[32m        "x-dns-prefetch-control"?: string | undefined;[m
[32m+[m[32m        "x-frame-options"?: string | undefined;[m
[32m+[m[32m        "x-xss-protection"?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ClientRequestArgs {[m
[32m+[m[32m        _defaultAgent?: Agent | undefined;[m
[32m+[m[32m        agent?: Agent | boolean | undefined;[m
[32m+[m[32m        auth?: string | null | undefined;[m
[32m+[m[32m        createConnection?:[m
[32m+[m[32m            | (([m
[32m+[m[32m                options: ClientRequestArgs,[m
[32m+[m[32m                oncreate: (err: Error | null, socket: stream.Duplex) => void,[m
[32m+[m[32m            ) => stream.Duplex | null | undefined)[m
[32m+[m[32m            | undefined;[m
[32m+[m[32m        defaultPort?: number | string | undefined;[m
[32m+[m[32m        family?: number | undefined;[m
[32m+[m[32m        headers?: OutgoingHttpHeaders | undefined;[m
[32m+[m[32m        hints?: LookupOptions["hints"];[m
[32m+[m[32m        host?: string | null | undefined;[m
[32m+[m[32m        hostname?: string | null | undefined;[m
[32m+[m[32m        insecureHTTPParser?: boolean | undefined;[m
[32m+[m[32m        localAddress?: string | undefined;[m
[32m+[m[32m        localPort?: number | undefined;[m
[32m+[m[32m        lookup?: LookupFunction | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default 16384[m
[32m+[m[32m         */[m
[32m+[m[32m        maxHeaderSize?: number | undefined;[m
[32m+[m[32m        method?: string | undefined;[m
[32m+[m[32m        path?: string | null | undefined;[m
[32m+[m[32m        port?: number | string | null | undefined;[m
[32m+[m[32m        protocol?: string | null | undefined;[m
[32m+[m[32m        setHost?: boolean | undefined;[m
[32m+[m[32m        signal?: AbortSignal | undefined;[m
[32m+[m[32m        socketPath?: string | undefined;[m
[32m+[m[32m        timeout?: number | undefined;[m
[32m+[m[32m        uniqueHeaders?: Array<string | string[]> | undefined;[m
[32m+[m[32m        joinDuplicateHeaders?: boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ServerOptions<[m
[32m+[m[32m        Request extends typeof IncomingMessage = typeof IncomingMessage,[m
[32m+[m[32m        Response extends typeof ServerResponse = typeof ServerResponse,[m
[32m+[m[32m    > {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specifies the `IncomingMessage` class to be used. Useful for extending the original `IncomingMessage`.[m
[32m+[m[32m         */[m
[32m+[m[32m        IncomingMessage?: Request | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specifies the `ServerResponse` class to be used. Useful for extending the original `ServerResponse`.[m
[32m+[m[32m         */[m
[32m+[m[32m        ServerResponse?: Response | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the timeout value in milliseconds for receiving the entire request from the client.[m
[32m+[m[32m         * @see Server.requestTimeout for more information.[m
[32m+[m[32m         * @default 300000[m
[32m+[m[32m         * @since v18.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        requestTimeout?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * It joins the field line values of multiple headers in a request with `, ` instead of discarding the duplicates.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         * @since v18.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        joinDuplicateHeaders?: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of milliseconds of inactivity a server needs to wait for additional incoming data,[m
[32m+[m[32m         * after it has finished writing the last response, before a socket will be destroyed.[m
[32m+[m[32m         * @see Server.keepAliveTimeout for more information.[m
[32m+[m[32m         * @default 5000[m
[32m+[m[32m         * @since v18.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        keepAliveTimeout?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the interval value in milliseconds to check for request and headers timeout in incomplete requests.[m
[32m+[m[32m         * @default 30000[m
[32m+[m[32m         */[m
[32m+[m[32m        connectionsCheckingInterval?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Optionally overrides all `socket`s' `readableHighWaterMark` and `writableHighWaterMark`.[m
[32m+[m[32m         * This affects `highWaterMark` property of both `IncomingMessage` and `ServerResponse`.[m
[32m+[m[32m         * Default: @see stream.getDefaultHighWaterMark().[m
[32m+[m[32m         * @since v20.1.0[m
[32m+[m[32m         */[m
[32m+[m[32m        highWaterMark?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Use an insecure HTTP parser that accepts invalid HTTP headers when `true`.[m
[32m+[m[32m         * Using the insecure parser should be avoided.[m
[32m+[m[32m         * See --insecure-http-parser for more information.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        insecureHTTPParser?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Optionally overrides the value of `--max-http-header-size` for requests received by[m
[32m+[m[32m         * this server, i.e. the maximum length of request headers in bytes.[m
[32m+[m[32m         * @default 16384[m
[32m+[m[32m         * @since v13.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        maxHeaderSize?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If set to `true`, it disables the use of Nagle's algorithm immediately after a new incoming connection is received.[m
[32m+[m[32m         * @default true[m
[32m+[m[32m         * @since v16.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        noDelay?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If set to `true`, it enables keep-alive functionality on the socket immediately after a new incoming connection is received,[m
[32m+[m[32m         * similarly on what is done in `socket.setKeepAlive([enable][, initialDelay])`.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         * @since v16.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        keepAlive?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If set to a positive number, it sets the initial delay before the first keepalive probe is sent on an idle socket.[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         * @since v16.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        keepAliveInitialDelay?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A list of response headers that should be sent only once.[m
[32m+[m[32m         * If the header's value is an array, the items will be joined using `; `.[m
[32m+[m[32m         */[m
[32m+[m[32m        uniqueHeaders?: Array<string | string[]> | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    type RequestListener<[m
[32m+[m[32m        Request extends typeof IncomingMessage = typeof IncomingMessage,[m
[32m+[m[32m        Response extends typeof ServerResponse = typeof ServerResponse,[m
[32m+[m[32m    > = (req: InstanceType<Request>, res: InstanceType<Response> & { req: InstanceType<Request> }) => void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v0.1.17[m
[32m+[m[32m     */[m
[32m+[m[32m    class Server<[m
[32m+[m[32m        Request extends typeof IncomingMessage = typeof IncomingMessage,[m
[32m+[m[32m        Response extends typeof ServerResponse = typeof ServerResponse,[m
[32m+[m[32m    > extends NetServer {[m
[32m+[m[32m        constructor(requestListener?: RequestListener<Request, Response>);[m
[32m+[m[32m        constructor(options: ServerOptions<Request, Response>, requestListener?: RequestListener<Request, Response>);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the timeout value for sockets, and emits a `'timeout'` event on[m
[32m+[m[32m         * the Server object, passing the socket as an argument, if a timeout[m
[32m+[m[32m         * occurs.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If there is a `'timeout'` event listener on the Server object, then it[m
[32m+[m[32m         * will be called with the timed-out socket as an argument.[m
[32m+[m[32m         *[m
[32m+[m[32m         * By default, the Server does not timeout sockets. However, if a callback[m
[32m+[m[32m         * is assigned to the Server's `'timeout'` event, timeouts must be handled[m
[32m+[m[32m         * explicitly.[m
[32m+[m[32m         * @since v0.9.12[m
[32m+[m[32m         * @param [msecs=0 (no timeout)][m
[32m+[m[32m         */[m
[32m+[m[32m        setTimeout(msecs?: number, callback?: () => void): this;[m
[32m+[m[32m        setTimeout(callback: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Limits maximum incoming headers count. If set to 0, no limit will be applied.[m
[32m+[m[32m         * @since v0.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        maxHeadersCount: number | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The maximum number of requests socket can handle[m
[32m+[m[32m         * before closing keep alive connection.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A value of `0` will disable the limit.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When the limit is reached it will set the `Connection` header value to `close`,[m
[32m+[m[32m         * but will not actually close the connection, subsequent requests sent[m
[32m+[m[32m         * after the limit is reached will get `503 Service Unavailable` as a response.[m
[32m+[m[32m         * @since v16.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        maxRequestsPerSocket: number | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of milliseconds of inactivity before a socket is presumed[m
[32m+[m[32m         * to have timed out.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A value of `0` will disable the timeout behavior on incoming connections.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The socket timeout logic is set up on connection, so changing this[m
[32m+[m[32m         * value only affects new connections to the server, not any existing connections.[m
[32m+[m[32m         * @since v0.9.12[m
[32m+[m[32m         */[m
[32m+[m[32m        timeout: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Limit the amount of time the parser will wait to receive the complete HTTP[m
[32m+[m[32m         * headers.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the timeout expires, the server responds with status 408 without[m
[32m+[m[32m         * forwarding the request to the request listener and then closes the connection.[m
[32m+[m[32m         *[m
[32m+[m[32m         * It must be set to a non-zero value (e.g. 120 seconds) to protect against[m
[32m+[m[32m         * potential Denial-of-Service attacks in case the server is deployed without a[m
[32m+[m[32m         * reverse proxy in front.[m
[32m+[m[32m         * @since v11.3.0, v10.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        headersTimeout: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of milliseconds of inactivity a server needs to wait for additional[m
[32m+[m[32m         * incoming data, after it has finished writing the last response, before a socket[m
[32m+[m[32m         * will be destroyed. If the server receives new data before the keep-alive[m
[32m+[m[32m         * timeout has fired, it will reset the regular inactivity timeout, i.e., `server.timeout`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A value of `0` will disable the keep-alive timeout behavior on incoming[m
[32m+[m[32m         * connections.[m
[32m+[m[32m         * A value of `0` makes the http server behave similarly to Node.js versions prior[m
[32m+[m[32m         * to 8.0.0, which did not have a keep-alive timeout.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The socket timeout logic is set up on connection, so changing this value only[m
[32m+[m[32m         * affects new connections to the server, not any existing connections.[m
[32m+[m[32m         * @since v8.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        keepAliveTimeout: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the timeout value in milliseconds for receiving the entire request from[m
[32m+[m[32m         * the client.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the timeout expires, the server responds with status 408 without[m
[32m+[m[32m         * forwarding the request to the request listener and then closes the connection.[m
[32m+[m[32m         *[m
[32m+[m[32m         * It must be set to a non-zero value (e.g. 120 seconds) to protect against[m
[32m+[m[32m         * potential Denial-of-Service attacks in case the server is deployed without a[m
[32m+[m[32m         * reverse proxy in front.[m
[32m+[m[32m         * @since v14.11.0[m
[32m+[m[32m         */[m
[32m+[m[32m        requestTimeout: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Closes all connections connected to this server.[m
[32m+[m[32m         * @since v18.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        closeAllConnections(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Closes all connections connected to this server which are not sending a request[m
[32m+[m[32m         * or waiting for a response.[m
[32m+[m[32m         * @since v18.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        closeIdleConnections(): void;[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "connection", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "checkContinue", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        addListener(event: "checkExpectation", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        addListener(event: "clientError", listener: (err: Error, socket: stream.Duplex) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: stream.Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "dropRequest", listener: (req: InstanceType<Request>, socket: stream.Duplex) => void): this;[m
[32m+[m[32m        addListener(event: "request", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "upgrade",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: stream.Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        emit(event: string, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "connection", socket: Socket): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: "listening"): boolean;[m
[32m+[m[32m        emit([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            req: InstanceType<Request>,[m
[32m+[m[32m            res: InstanceType<Response> & { req: InstanceType<Request> },[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        emit([m
[32m+[m[32m            event: "checkExpectation",[m
[32m+[m[32m            req: InstanceType<Request>,[m
[32m+[m[32m            res: InstanceType<Response> & { req: InstanceType<Request> },[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        emit(event: "clientError", err: Error, socket: stream.Duplex): boolean;[m
[32m+[m[32m        emit(event: "connect", req: InstanceType<Request>, socket: stream.Duplex, head: Buffer): boolean;[m
[32m+[m[32m        emit(event: "dropRequest", req: InstanceType<Request>, socket: stream.Duplex): boolean;[m
[32m+[m[32m        emit([m
[32m+[m[32m            event: "request",[m
[32m+[m[32m            req: InstanceType<Request>,[m
[32m+[m[32m            res: InstanceType<Response> & { req: InstanceType<Request> },[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        emit(event: "upgrade", req: InstanceType<Request>, socket: stream.Duplex, head: Buffer): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "connection", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "listening", listener: () => void): this;[m
[32m+[m[32m        on(event: "checkContinue", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        on(event: "checkExpectation", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        on(event: "clientError", listener: (err: Error, socket: stream.Duplex) => void): this;[m
[32m+[m[32m        on(event: "connect", listener: (req: InstanceType<Request>, socket: stream.Duplex, head: Buffer) => void): this;[m
[32m+[m[32m        on(event: "dropRequest", listener: (req: InstanceType<Request>, socket: stream.Duplex) => void): this;[m
[32m+[m[32m        on(event: "request", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        on(event: "upgrade", listener: (req: InstanceType<Request>, socket: stream.Duplex, head: Buffer) => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "connection", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "listening", listener: () => void): this;[m
[32m+[m[32m        once(event: "checkContinue", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        once(event: "checkExpectation", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        once(event: "clientError", listener: (err: Error, socket: stream.Duplex) => void): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: stream.Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: "dropRequest", listener: (req: InstanceType<Request>, socket: stream.Duplex) => void): this;[m
[32m+[m[32m        once(event: "request", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "upgrade",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: stream.Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "connection", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "checkContinue", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependListener(event: "checkExpectation", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependListener(event: "clientError", listener: (err: Error, socket: stream.Duplex) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: stream.Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "dropRequest",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: stream.Duplex) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "request", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "upgrade",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: stream.Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "connection", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "checkContinue", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependOnceListener(event: "checkExpectation", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependOnceListener(event: "clientError", listener: (err: Error, socket: stream.Duplex) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: stream.Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "dropRequest",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: stream.Duplex) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "request", listener: RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "upgrade",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: stream.Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This class serves as the parent class of {@link ClientRequest} and {@link ServerResponse}. It is an abstract outgoing message from[m
[32m+[m[32m     * the perspective of the participants of an HTTP transaction.[m
[32m+[m[32m     * @since v0.1.17[m
[32m+[m[32m     */[m
[32m+[m[32m    class OutgoingMessage<Request extends IncomingMessage = IncomingMessage> extends stream.Writable {[m
[32m+[m[32m        readonly req: Request;[m
[32m+[m[32m        chunkedEncoding: boolean;[m
[32m+[m[32m        shouldKeepAlive: boolean;[m
[32m+[m[32m        useChunkedEncodingByDefault: boolean;[m
[32m+[m[32m        sendDate: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated Use `writableEnded` instead.[m
[32m+[m[32m         */[m
[32m+[m[32m        finished: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Read-only. `true` if the headers were sent, otherwise `false`.[m
[32m+[m[32m         * @since v0.9.3[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly headersSent: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Alias of `outgoingMessage.socket`.[m
[32m+[m[32m         * @since v0.3.0[m
[32m+[m[32m         * @deprecated Since v15.12.0,v14.17.1 - Use `socket` instead.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly connection: Socket | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Reference to the underlying socket. Usually, users will not want to access[m
[32m+[m[32m         * this property.[m
[32m+[m[32m         *[m
[32m+[m[32m         * After calling `outgoingMessage.end()`, this property will be nulled.[m
[32m+[m[32m         * @since v0.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly socket: Socket | null;[m
[32m+[m[32m        constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Once a socket is associated with the message and is connected, `socket.setTimeout()` will be called with `msecs` as the first parameter.[m
[32m+[m[32m         * @since v0.9.12[m
[32m+[m[32m         * @param callback Optional function to be called when a timeout occurs. Same as binding to the `timeout` event.[m
[32m+[m[32m         */[m
[32m+[m[32m        setTimeout(msecs: number, callback?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets a single header value. If the header already exists in the to-be-sent[m
[32m+[m[32m         * headers, its value will be replaced. Use an array of strings to send multiple[m
[32m+[m[32m         * headers with the same name.[m
[32m+[m[32m         * @since v0.4.0[m
[32m+[m[32m         * @param name Header name[m
[32m+[m[32m         * @param value Header value[m
[32m+[m[32m         */[m
[32m+[m[32m        setHeader(name: string, value: number | string | readonly string[]): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Append a single header value to the header object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the value is an array, this is equivalent to calling this method multiple[m
[32m+[m[32m         * times.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If there were no previous values for the header, this is equivalent to calling `outgoingMessage.setHeader(name, value)`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Depending of the value of `options.uniqueHeaders` when the client request or the[m
[32m+[m[32m         * server were created, this will end up in the header being sent multiple times or[m
[32m+[m[32m         * a single time with values joined using `; `.[m
[32m+[m[32m         * @since v18.3.0, v16.17.0[m
[32m+[m[32m         * @param name Header name[m
[32m+[m[32m         * @param value Header value[m
[32m+[m[32m         */[m
[32m+[m[32m        appendHeader(name: string, value: string | readonly string[]): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Gets the value of the HTTP header with the given name. If that header is not[m
[32m+[m[32m         * set, the returned value will be `undefined`.[m
[32m+[m[32m         * @since v0.4.0[m
[32m+[m[32m         * @param name Name of header[m
[32m+[m[32m         */[m
[32m+[m[32m        getHeader(name: string): number | string | string[] | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a shallow copy of the current outgoing headers. Since a shallow[m
[32m+[m[32m         * copy is used, array values may be mutated without additional calls to[m
[32m+[m[32m         * various header-related HTTP module methods. The keys of the returned[m
[32m+[m[32m         * object are the header names and the values are the respective header[m
[32m+[m[32m         * values. All header names are lowercase.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The object returned by the `outgoingMessage.getHeaders()` method does[m
[32m+[m[32m         * not prototypically inherit from the JavaScript `Object`. This means that[m
[32m+[m[32m         * typical `Object` methods such as `obj.toString()`, `obj.hasOwnProperty()`,[m
[32m+[m[32m         * and others are not defined and will not work.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * outgoingMessage.setHeader('Foo', 'bar');[m
[32m+[m[32m         * outgoingMessage.setHeader('Set-Cookie', ['foo=bar', 'bar=baz']);[m
[32m+[m[32m         *[m
[32m+[m[32m         * const headers = outgoingMessage.getHeaders();[m
[32m+[m[32m         * // headers === { foo: 'bar', 'set-cookie': ['foo=bar', 'bar=baz'] }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v7.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getHeaders(): OutgoingHttpHeaders;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns an array containing the unique names of the current outgoing headers.[m
[32m+[m[32m         * All names are lowercase.[m
[32m+[m[32m         * @since v7.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getHeaderNames(): string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` if the header identified by `name` is currently set in the[m
[32m+[m[32m         * outgoing headers. The header name is case-insensitive.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const hasContentType = outgoingMessage.hasHeader('content-type');[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v7.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        hasHeader(name: string): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Removes a header that is queued for implicit sending.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * outgoingMessage.removeHeader('Content-Encoding');[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.4.0[m
[32m+[m[32m         * @param name Header name[m
[32m+[m[32m         */[m
[32m+[m[32m        removeHeader(name: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Adds HTTP trailers (headers but at the end of the message) to the message.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Trailers will **only** be emitted if the message is chunked encoded. If not,[m
[32m+[m[32m         * the trailers will be silently discarded.[m
[32m+[m[32m         *[m
[32m+[m[32m         * HTTP requires the `Trailer` header to be sent to emit trailers,[m
[32m+[m[32m         * with a list of header field names in its value, e.g.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * message.writeHead(200, { 'Content-Type': 'text/plain',[m
[32m+[m[32m         *                          'Trailer': 'Content-MD5' });[m
[32m+[m[32m         * message.write(fileData);[m
[32m+[m[32m         * message.addTrailers({ 'Content-MD5': '7895bf4b8828b55ceaf47747b4bca667' });[m
[32m+[m[32m         * message.end();[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Attempting to set a header field name or value that contains invalid characters[m
[32m+[m[32m         * will result in a `TypeError` being thrown.[m
[32m+[m[32m         * @since v0.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        addTrailers(headers: OutgoingHttpHeaders | ReadonlyArray<[string, string]>): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Flushes the message headers.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For efficiency reason, Node.js normally buffers the message headers[m
[32m+[m[32m         * until `outgoingMessage.end()` is called or the first chunk of message data[m
[32m+[m[32m         * is written. It then tries to pack the headers and data into a single TCP[m
[32m+[m[32m         * packet.[m
[32m+[m[32m         *[m
[32m+[m[32m         * It is usually desired (it saves a TCP round-trip), but not when the first[m
[32m+[m[32m         * data is not sent until possibly much later. `outgoingMessage.flushHeaders()` bypasses the optimization and kickstarts the message.[m
[32m+[m[32m         * @since v1.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        flushHeaders(): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This object is created internally by an HTTP server, not by the user. It is[m
[32m+[m[32m     * passed as the second parameter to the `'request'` event.[m
[32m+[m[32m     * @since v0.1.17[m
[32m+[m[32m     */[m
[32m+[m[32m    class ServerResponse<Request extends IncomingMessage = IncomingMessage> extends OutgoingMessage<Request> {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When using implicit headers (not calling `response.writeHead()` explicitly),[m
[32m+[m[32m         * this property controls the status code that will be sent to the client when[m
[32m+[m[32m         * the headers get flushed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * response.statusCode = 404;[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * After response header was sent to the client, this property indicates the[m
[32m+[m[32m         * status code which was sent out.[m
[32m+[m[32m         * @since v0.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        statusCode: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When using implicit headers (not calling `response.writeHead()` explicitly),[m
[32m+[m[32m         * this property controls the status message that will be sent to the client when[m
[32m+[m[32m         * the headers get flushed. If this is left as `undefined` then the standard[m
[32m+[m[32m         * message for the status code will be used.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * response.statusMessage = 'Not found';[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * After response header was sent to the client, this property indicates the[m
[32m+[m[32m         * status message which was sent out.[m
[32m+[m[32m         * @since v0.11.8[m
[32m+[m[32m         */[m
[32m+[m[32m        statusMessage: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If set to `true`, Node.js will check whether the `Content-Length` header value and the size of the body, in bytes, are equal.[m
[32m+[m[32m         * Mismatching the `Content-Length` header value will result[m
[32m+[m[32m         * in an `Error` being thrown, identified by `code:``'ERR_HTTP_CONTENT_LENGTH_MISMATCH'`.[m
[32m+[m[32m         * @since v18.10.0, v16.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        strictContentLength: boolean;[m
[32m+[m[32m        constructor(req: Request);[m
[32m+[m[32m        assignSocket(socket: Socket): void;[m
[32m+[m[32m        detachSocket(socket: Socket): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends an HTTP/1.1 100 Continue message to the client, indicating that[m
[32m+[m[32m         * the request body should be sent. See the `'checkContinue'` event on `Server`.[m
[32m+[m[32m         * @since v0.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        writeContinue(callback?: () => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends an HTTP/1.1 103 Early Hints message to the client with a Link header,[m
[32m+[m[32m         * indicating that the user agent can preload/preconnect the linked resources.[m
[32m+[m[32m         * The `hints` is an object containing the values of headers to be sent with[m
[32m+[m[32m         * early hints message. The optional `callback` argument will be called when[m
[32m+[m[32m         * the response message has been written.[m
[32m+[m[32m         *[m
[32m+[m[32m         * **Example**[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const earlyHintsLink = '</styles.css>; rel=preload; as=style';[m
[32m+[m[32m         * response.writeEarlyHints({[m
[32m+[m[32m         *   'link': earlyHintsLink,[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * const earlyHintsLinks = [[m
[32m+[m[32m         *   '</styles.css>; rel=preload; as=style',[m
[32m+[m[32m         *   '</scripts.js>; rel=preload; as=script',[m
[32m+[m[32m         * ];[m
[32m+[m[32m         * response.writeEarlyHints({[m
[32m+[m[32m         *   'link': earlyHintsLinks,[m
[32m+[m[32m         *   'x-trace-id': 'id for diagnostics',[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * const earlyHintsCallback = () => console.log('early hints message sent');[m
[32m+[m[32m         * response.writeEarlyHints({[m
[32m+[m[32m         *   'link': earlyHintsLinks,[m
[32m+[m[32m         * }, earlyHintsCallback);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v18.11.0[m
[32m+[m[32m         * @param hints An object containing the values of headers[m
[32m+[m[32m         * @param callback Will be called when the response message has been written[m
[32m+[m[32m         */[m
[32m+[m[32m        writeEarlyHints(hints: Record<string, string | string[]>, callback?: () => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends a response header to the request. The status code is a 3-digit HTTP[m
[32m+[m[32m         * status code, like `404`. The last argument, `headers`, are the response headers.[m
[32m+[m[32m         * Optionally one can give a human-readable `statusMessage` as the second[m
[32m+[m[32m         * argument.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `headers` may be an `Array` where the keys and values are in the same list.[m
[32m+[m[32m         * It is _not_ a list of tuples. So, the even-numbered offsets are key values,[m
[32m+[m[32m         * and the odd-numbered offsets are the associated values. The array is in the same[m
[32m+[m[32m         * format as `request.rawHeaders`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Returns a reference to the `ServerResponse`, so that calls can be chained.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const body = 'hello world';[m
[32m+[m[32m         * response[m
[32m+[m[32m         *   .writeHead(200, {[m
[32m+[m[32m         *     'Content-Length': Buffer.byteLength(body),[m
[32m+[m[32m         *     'Content-Type': 'text/plain',[m
[32m+[m[32m         *   })[m
[32m+[m[32m         *   .end(body);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method must only be called once on a message and it must[m
[32m+[m[32m         * be called before `response.end()` is called.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `response.write()` or `response.end()` are called before calling[m
[32m+[m[32m         * this, the implicit/mutable headers will be calculated and call this function.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When headers have been set with `response.setHeader()`, they will be merged[m
[32m+[m[32m         * with any headers passed to `response.writeHead()`, with the headers passed[m
[32m+[m[32m         * to `response.writeHead()` given precedence.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If this method is called and `response.setHeader()` has not been called,[m
[32m+[m[32m         * it will directly write the supplied header values onto the network channel[m
[32m+[m[32m         * without caching internally, and the `response.getHeader()` on the header[m
[32m+[m[32m         * will not yield the expected result. If progressive population of headers is[m
[32m+[m[32m         * desired with potential future retrieval and modification, use `response.setHeader()` instead.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Returns content-type = text/plain[m
[32m+[m[32m         * const server = http.createServer((req, res) => {[m
[32m+[m[32m         *   res.setHeader('Content-Type', 'text/html');[m
[32m+[m[32m         *   res.setHeader('X-Foo', 'bar');[m
[32m+[m[32m         *   res.writeHead(200, { 'Content-Type': 'text/plain' });[m
[32m+[m[32m         *   res.end('ok');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * `Content-Length` is read in bytes, not characters. Use `Buffer.byteLength()` to determine the length of the body in bytes. Node.js[m
[32m+[m[32m         * will check whether `Content-Length` and the length of the body which has[m
[32m+[m[32m         * been transmitted are equal or not.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Attempting to set a header field name or value that contains invalid characters[m
[32m+[m[32m         * will result in a \[`Error`\]\[\] being thrown.[m
[32m+[m[32m         * @since v0.1.30[m
[32m+[m[32m         */[m
[32m+[m[32m        writeHead([m
[32m+[m[32m            statusCode: number,[m
[32m+[m[32m            statusMessage?: string,[m
[32m+[m[32m            headers?: OutgoingHttpHeaders | OutgoingHttpHeader[],[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        writeHead(statusCode: number, headers?: OutgoingHttpHeaders | OutgoingHttpHeader[]): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends a HTTP/1.1 102 Processing message to the client, indicating that[m
[32m+[m[32m         * the request body should be sent.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        writeProcessing(): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface InformationEvent {[m
[32m+[m[32m        statusCode: number;[m
[32m+[m[32m        statusMessage: string;[m
[32m+[m[32m        httpVersion: string;[m
[32m+[m[32m        httpVersionMajor: number;[m
[32m+[m[32m        httpVersionMinor: number;[m
[32m+[m[32m        headers: IncomingHttpHeaders;[m
[32m+[m[32m        rawHeaders: string[];[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This object is created internally and returned from {@link request}. It[m
[32m+[m[32m     * represents an _in-progress_ request whose header has already been queued. The[m
[32m+[m[32m     * header is still mutable using the `setHeader(name, value)`, `getHeader(name)`, `removeHeader(name)` API. The actual header will[m
[32m+[m[32m     * be sent along with the first data chunk or when calling `request.end()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * To get the response, add a listener for `'response'` to the request object. `'response'` will be emitted from the request object when the response[m
[32m+[m[32m     * headers have been received. The `'response'` event is executed with one[m
[32m+[m[32m     * argument which is an instance of {@link IncomingMessage}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * During the `'response'` event, one can add listeners to the[m
[32m+[m[32m     * response object; particularly to listen for the `'data'` event.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If no `'response'` handler is added, then the response will be[m
[32m+[m[32m     * entirely discarded. However, if a `'response'` event handler is added,[m
[32m+[m[32m     * then the data from the response object **must** be consumed, either by[m
[32m+[m[32m     * calling `response.read()` whenever there is a `'readable'` event, or[m
[32m+[m[32m     * by adding a `'data'` handler, or by calling the `.resume()` method.[m
[32m+[m[32m     * Until the data is consumed, the `'end'` event will not fire. Also, until[m
[32m+[m[32m     * the data is read it will consume memory that can eventually lead to a[m
[32m+[m[32m     * 'process out of memory' error.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For backward compatibility, `res` will only emit `'error'` if there is an `'error'` listener registered.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Set `Content-Length` header to limit the response body size.[m
[32m+[m[32m     * If `response.strictContentLength` is set to `true`, mismatching the `Content-Length` header value will result in an `Error` being thrown,[m
[32m+[m[32m     * identified by `code:``'ERR_HTTP_CONTENT_LENGTH_MISMATCH'`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `Content-Length` value should be in bytes, not characters. Use `Buffer.byteLength()` to determine the length of the body in bytes.[m
[32m+[m[32m     * @since v0.1.17[m
[32m+[m[32m     */[m
[32m+[m[32m    class ClientRequest extends OutgoingMessage {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `request.aborted` property will be `true` if the request has[m
[32m+[m[32m         * been aborted.[m
[32m+[m[32m         * @since v0.11.14[m
[32m+[m[32m         * @deprecated Since v17.0.0, v16.12.0 - Check `destroyed` instead.[m
[32m+[m[32m         */[m
[32m+[m[32m        aborted: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request host.[m
[32m+[m[32m         * @since v14.5.0, v12.19.0[m
[32m+[m[32m         */[m
[32m+[m[32m        host: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request protocol.[m
[32m+[m[32m         * @since v14.5.0, v12.19.0[m
[32m+[m[32m         */[m
[32m+[m[32m        protocol: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When sending request through a keep-alive enabled agent, the underlying socket[m
[32m+[m[32m         * might be reused. But if server closes connection at unfortunate time, client[m
[32m+[m[32m         * may run into a 'ECONNRESET' error.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import http from 'node:http';[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Server has a 5 seconds keep-alive timeout by default[m
[32m+[m[32m         * http[m
[32m+[m[32m         *   .createServer((req, res) => {[m
[32m+[m[32m         *     res.write('hello\n');[m
[32m+[m[32m         *     res.end();[m
[32m+[m[32m         *   })[m
[32m+[m[32m         *   .listen(3000);[m
[32m+[m[32m         *[m
[32m+[m[32m         * setInterval(() => {[m
[32m+[m[32m         *   // Adapting a keep-alive agent[m
[32m+[m[32m         *   http.get('http://localhost:3000', { agent }, (res) => {[m
[32m+[m[32m         *     res.on('data', (data) => {[m
[32m+[m[32m         *       // Do nothing[m
[32m+[m[32m         *     });[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * }, 5000); // Sending request on 5s interval so it's easy to hit idle timeout[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * By marking a request whether it reused socket or not, we can do[m
[32m+[m[32m         * automatic error retry base on it.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * import http from 'node:http';[m
[32m+[m[32m         * const agent = new http.Agent({ keepAlive: true });[m
[32m+[m[32m         *[m
[32m+[m[32m         * function retriableRequest() {[m
[32m+[m[32m         *   const req = http[m
[32m+[m[32m         *     .get('http://localhost:3000', { agent }, (res) => {[m
[32m+[m[32m         *       // ...[m
[32m+[m[32m         *     })[m
[32m+[m[32m         *     .on('error', (err) => {[m
[32m+[m[32m         *       // Check if retry is needed[m
[32m+[m[32m         *       if (req.reusedSocket &#x26;&#x26; err.code === 'ECONNRESET') {[m
[32m+[m[32m         *         retriableRequest();[m
[32m+[m[32m         *       }[m
[32m+[m[32m         *     });[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * retriableRequest();[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v13.0.0, v12.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        reusedSocket: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Limits maximum response headers count. If set to 0, no limit will be applied.[m
[32m+[m[32m         */[m
[32m+[m[32m        maxHeadersCount: number;[m
[32m+[m[32m        constructor(url: string | URL | ClientRequestArgs, cb?: (res: IncomingMessage) => void);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request method.[m
[32m+[m[32m         * @since v0.1.97[m
[32m+[m[32m         */[m
[32m+[m[32m        method: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request path.[m
[32m+[m[32m         * @since v0.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        path: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Marks the request as aborting. Calling this will cause remaining data[m
[32m+[m[32m         * in the response to be dropped and the socket to be destroyed.[m
[32m+[m[32m         * @since v0.3.8[m
[32m+[m[32m         * @deprecated Since v14.1.0,v13.14.0 - Use `destroy` instead.[m
[32m+[m[32m         */[m
[32m+[m[32m        abort(): void;[m
[32m+[m[32m        onSocket(socket: Socket): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Once a socket is assigned to this request and is connected `socket.setTimeout()` will be called.[m
[32m+[m[32m         * @since v0.5.9[m
[32m+[m[32m         * @param timeout Milliseconds before a request times out.[m
[32m+[m[32m         * @param callback Optional function to be called when a timeout occurs. Same as binding to the `'timeout'` event.[m
[32m+[m[32m         */[m
[32m+[m[32m        setTimeout(timeout: number, callback?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Once a socket is assigned to this request and is connected `socket.setNoDelay()` will be called.[m
[32m+[m[32m         * @since v0.5.9[m
[32m+[m[32m         */[m
[32m+[m[32m        setNoDelay(noDelay?: boolean): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Once a socket is assigned to this request and is connected `socket.setKeepAlive()` will be called.[m
[32m+[m[32m         * @since v0.5.9[m
[32m+[m[32m         */[m
[32m+[m[32m        setSocketKeepAlive(enable?: boolean, initialDelay?: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns an array containing the unique names of the current outgoing raw[m
[32m+[m[32m         * headers. Header names are returned with their exact casing being set.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * request.setHeader('Foo', 'bar');[m
[32m+[m[32m         * request.setHeader('Set-Cookie', ['foo=bar', 'bar=baz']);[m
[32m+[m[32m         *[m
[32m+[m[32m         * const headerNames = request.getRawHeaderNames();[m
[32m+[m[32m         * // headerNames === ['Foo', 'Set-Cookie'][m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.13.0, v14.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getRawHeaderNames(): string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: "abort", listener: () => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (response: IncomingMessage, socket: Socket, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "continue", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "information", listener: (info: InformationEvent) => void): this;[m
[32m+[m[32m        addListener(event: "response", listener: (response: IncomingMessage) => void): this;[m
[32m+[m[32m        addListener(event: "socket", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        addListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "upgrade",[m
[32m+[m[32m            listener: (response: IncomingMessage, socket: Socket, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        addListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: "abort", listener: () => void): this;[m
[32m+[m[32m        on(event: "connect", listener: (response: IncomingMessage, socket: Socket, head: Buffer) => void): this;[m
[32m+[m[32m        on(event: "continue", listener: () => void): this;[m
[32m+[m[32m        on(event: "information", listener: (info: InformationEvent) => void): this;[m
[32m+[m[32m        on(event: "response", listener: (response: IncomingMessage) => void): this;[m
[32m+[m[32m        on(event: "socket", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        on(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        on(event: "upgrade", listener: (response: IncomingMessage, socket: Socket, head: Buffer) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "drain", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "finish", listener: () => void): this;[m
[32m+[m[32m        on(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        on(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: "abort", listener: () => void): this;[m
[32m+[m[32m        once(event: "connect", listener: (response: IncomingMessage, socket: Socket, head: Buffer) => void): this;[m
[32m+[m[32m        once(event: "continue", listener: () => void): this;[m
[32m+[m[32m        once(event: "information", listener: (info: InformationEvent) => void): this;[m
[32m+[m[32m        once(event: "response", listener: (response: IncomingMessage) => void): this;[m
[32m+[m[32m        once(event: "socket", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        once(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        once(event: "upgrade", listener: (response: IncomingMessage, socket: Socket, head: Buffer) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "drain", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "finish", listener: () => void): this;[m
[32m+[m[32m        once(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        once(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: "abort", listener: () => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (response: IncomingMessage, socket: Socket, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "continue", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "information", listener: (info: InformationEvent) => void): this;[m
[32m+[m[32m        prependListener(event: "response", listener: (response: IncomingMessage) => void): this;[m
[32m+[m[32m        prependListener(event: "socket", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        prependListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "upgrade",[m
[32m+[m[32m            listener: (response: IncomingMessage, socket: Socket, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: "abort", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (response: IncomingMessage, socket: Socket, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "continue", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "information", listener: (info: InformationEvent) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "response", listener: (response: IncomingMessage) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "socket", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "upgrade",[m
[32m+[m[32m            listener: (response: IncomingMessage, socket: Socket, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An `IncomingMessage` object is created by {@link Server} or {@link ClientRequest} and passed as the first argument to the `'request'` and `'response'` event respectively. It may be used to[m
[32m+[m[32m     * access response[m
[32m+[m[32m     * status, headers, and data.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Different from its `socket` value which is a subclass of `stream.Duplex`, the `IncomingMessage` itself extends `stream.Readable` and is created separately to[m
[32m+[m[32m     * parse and emit the incoming HTTP headers and payload, as the underlying socket[m
[32m+[m[32m     * may be reused multiple times in case of keep-alive.[m
[32m+[m[32m     * @since v0.1.17[m
[32m+[m[32m     */[m
[32m+[m[32m    class IncomingMessage extends stream.Readable {[m
[32m+[m[32m        constructor(socket: Socket);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `message.aborted` property will be `true` if the request has[m
[32m+[m[32m         * been aborted.[m
[32m+[m[32m         * @since v10.1.0[m
[32m+[m[32m         * @deprecated Since v17.0.0,v16.12.0 - Check `message.destroyed` from <a href="stream.html#class-streamreadable" class="type">stream.Readable</a>.[m
[32m+[m[32m         */[m
[32m+[m[32m        aborted: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * In case of server request, the HTTP version sent by the client. In the case of[m
[32m+[m[32m         * client response, the HTTP version of the connected-to server.[m
[32m+[m[32m         * Probably either `'1.1'` or `'1.0'`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Also `message.httpVersionMajor` is the first integer and `message.httpVersionMinor` is the second.[m
[32m+[m[32m         * @since v0.1.1[m
[32m+[m[32m         */[m
[32m+[m[32m        httpVersion: string;[m
[32m+[m[32m        httpVersionMajor: number;[m
[32m+[m[32m        httpVersionMinor: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `message.complete` property will be `true` if a complete HTTP message has[m
[32m+[m[32m         * been received and successfully parsed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This property is particularly useful as a means of determining if a client or[m
[32m+[m[32m         * server fully transmitted a message before a connection was terminated:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const req = http.request({[m
[32m+[m[32m         *   host: '127.0.0.1',[m
[32m+[m[32m         *   port: 8080,[m
[32m+[m[32m         *   method: 'POST',[m
[32m+[m[32m         * }, (res) => {[m
[32m+[m[32m         *   res.resume();[m
[32m+[m[32m         *   res.on('end', () => {[m
[32m+[m[32m         *     if (!res.complete)[m
[32m+[m[32m         *       console.error([m
[32m+[m[32m         *         'The connection was terminated while the message was still being sent');[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        complete: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Alias for `message.socket`.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         * @deprecated Since v16.0.0 - Use `socket`.[m
[32m+[m[32m         */[m
[32m+[m[32m        connection: Socket;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `net.Socket` object associated with the connection.[m
[32m+[m[32m         *[m
[32m+[m[32m         * With HTTPS support, use `request.socket.getPeerCertificate()` to obtain the[m
[32m+[m[32m         * client's authentication details.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This property is guaranteed to be an instance of the `net.Socket` class,[m
[32m+[m[32m         * a subclass of `stream.Duplex`, unless the user specified a socket[m
[32m+[m[32m         * type other than `net.Socket` or internally nulled.[m
[32m+[m[32m         * @since v0.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        socket: Socket;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request/response headers object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Key-value pairs of header names and values. Header names are lower-cased.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Prints something like:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * // { 'user-agent': 'curl/7.22.0',[m
[32m+[m[32m         * //   host: '127.0.0.1:8000',[m
[32m+[m[32m         * //   accept: '*' }[m
[32m+[m[32m         * console.log(request.headers);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Duplicates in raw headers are handled in the following ways, depending on the[m
[32m+[m[32m         * header name:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * Duplicates of `age`, `authorization`, `content-length`, `content-type`, `etag`, `expires`, `from`, `host`, `if-modified-since`, `if-unmodified-since`, `last-modified`, `location`,[m
[32m+[m[32m         * `max-forwards`, `proxy-authorization`, `referer`, `retry-after`, `server`, or `user-agent` are discarded.[m
[32m+[m[32m         * To allow duplicate values of the headers listed above to be joined,[m
[32m+[m[32m         * use the option `joinDuplicateHeaders` in {@link request} and {@link createServer}. See RFC 9110 Section 5.3 for more[m
[32m+[m[32m         * information.[m
[32m+[m[32m         * * `set-cookie` is always an array. Duplicates are added to the array.[m
[32m+[m[32m         * * For duplicate `cookie` headers, the values are joined together with `; `.[m
[32m+[m[32m         * * For all other headers, the values are joined together with `, `.[m
[32m+[m[32m         * @since v0.1.5[m
[32m+[m[32m         */[m
[32m+[m[32m        headers: IncomingHttpHeaders;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Similar to `message.headers`, but there is no join logic and the values are[m
[32m+[m[32m         * always arrays of strings, even for headers received just once.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Prints something like:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * // { 'user-agent': ['curl/7.22.0'],[m
[32m+[m[32m         * //   host: ['127.0.0.1:8000'],[m
[32m+[m[32m         * //   accept: ['*'] }[m
[32m+[m[32m         * console.log(request.headersDistinct);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v18.3.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        headersDistinct: NodeJS.Dict<string[]>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The raw request/response headers list exactly as they were received.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The keys and values are in the same list. It is _not_ a[m
[32m+[m[32m         * list of tuples. So, the even-numbered offsets are key values, and the[m
[32m+[m[32m         * odd-numbered offsets are the associated values.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Header names are not lowercased, and duplicates are not merged.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Prints something like:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * // [ 'user-agent',[m
[32m+[m[32m         * //   'this is invalid because there can be only one',[m
[32m+[m[32m         * //   'User-Agent',[m
[32m+[m[32m         * //   'curl/7.22.0',[m
[32m+[m[32m         * //   'Host',[m
[32m+[m[32m         * //   '127.0.0.1:8000',[m
[32m+[m[32m         * //   'ACCEPT',[m
[32m+[m[32m         * //   '*' ][m
[32m+[m[32m         * console.log(request.rawHeaders);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.11.6[m
[32m+[m[32m         */[m
[32m+[m[32m        rawHeaders: string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request/response trailers object. Only populated at the `'end'` event.[m
[32m+[m[32m         * @since v0.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        trailers: NodeJS.Dict<string>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Similar to `message.trailers`, but there is no join logic and the values are[m
[32m+[m[32m         * always arrays of strings, even for headers received just once.[m
[32m+[m[32m         * Only populated at the `'end'` event.[m
[32m+[m[32m         * @since v18.3.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        trailersDistinct: NodeJS.Dict<string[]>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The raw request/response trailer keys and values exactly as they were[m
[32m+[m[32m         * received. Only populated at the `'end'` event.[m
[32m+[m[32m         * @since v0.11.6[m
[32m+[m[32m         */[m
[32m+[m[32m        rawTrailers: string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calls `message.socket.setTimeout(msecs, callback)`.[m
[32m+[m[32m         * @since v0.5.9[m
[32m+[m[32m         */[m
[32m+[m[32m        setTimeout(msecs: number, callback?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * **Only valid for request obtained from {@link Server}.**[m
[32m+[m[32m         *[m
[32m+[m[32m         * The request method as a string. Read only. Examples: `'GET'`, `'DELETE'`.[m
[32m+[m[32m         * @since v0.1.1[m
[32m+[m[32m         */[m
[32m+[m[32m        method?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * **Only valid for request obtained from {@link Server}.**[m
[32m+[m[32m         *[m
[32m+[m[32m         * Request URL string. This contains only the URL that is present in the actual[m
[32m+[m[32m         * HTTP request. Take the following request:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```http[m
[32m+[m[32m         * GET /status?name=ryan HTTP/1.1[m
[32m+[m[32m         * Accept: text/plain[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * To parse the URL into its parts:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * new URL(`http://${process.env.HOST ?? 'localhost'}${request.url}`);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * When `request.url` is `'/status?name=ryan'` and `process.env.HOST` is undefined:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```console[m
[32m+[m[32m         * $ node[m
[32m+[m[32m         * > new URL(`http://${process.env.HOST ?? 'localhost'}${request.url}`);[m
[32m+[m[32m         * URL {[m
[32m+[m[32m         *   href: 'http://localhost/status?name=ryan',[m
[32m+[m[32m         *   origin: 'http://localhost',[m
[32m+[m[32m         *   protocol: 'http:',[m
[32m+[m[32m         *   username: '',[m
[32m+[m[32m         *   password: '',[m
[32m+[m[32m         *   host: 'localhost',[m
[32m+[m[32m         *   hostname: 'localhost',[m
[32m+[m[32m         *   port: '',[m
[32m+[m[32m         *   pathname: '/status',[m
[32m+[m[32m         *   search: '?name=ryan',[m
[32m+[m[32m         *   searchParams: URLSearchParams { 'name' => 'ryan' },[m
[32m+[m[32m         *   hash: ''[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Ensure that you set `process.env.HOST` to the server's host name, or consider replacing this part entirely. If using `req.headers.host`, ensure proper[m
[32m+[m[32m         * validation is used, as clients may specify a custom `Host` header.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         */[m
[32m+[m[32m        url?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * **Only valid for response obtained from {@link ClientRequest}.**[m
[32m+[m[32m         *[m
[32m+[m[32m         * The 3-digit HTTP response status code. E.G. `404`.[m
[32m+[m[32m         * @since v0.1.1[m
[32m+[m[32m         */[m
[32m+[m[32m        statusCode?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * **Only valid for response obtained from {@link ClientRequest}.**[m
[32m+[m[32m         *[m
[32m+[m[32m         * The HTTP response status message (reason phrase). E.G. `OK` or `Internal Server Error`.[m
[32m+[m[32m         * @since v0.11.10[m
[32m+[m[32m         */[m
[32m+[m[32m        statusMessage?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calls `destroy()` on the socket that received the `IncomingMessage`. If `error` is provided, an `'error'` event is emitted on the socket and `error` is passed[m
[32m+[m[32m         * as an argument to any listeners on the event.[m
[32m+[m[32m         * @since v0.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        destroy(error?: Error): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface AgentOptions extends Partial<TcpSocketConnectOpts> {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Keep sockets around in a pool to be used by other requests in the future. Default = false[m
[32m+[m[32m         */[m
[32m+[m[32m        keepAlive?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When using HTTP KeepAlive, how often to send TCP KeepAlive packets over sockets being kept alive. Default = 1000.[m
[32m+[m[32m         * Only relevant if keepAlive is set to true.[m
[32m+[m[32m         */[m
[32m+[m[32m        keepAliveMsecs?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Maximum number of sockets to allow per host. Default for Node 0.10 is 5, default for Node 0.12 is Infinity[m
[32m+[m[32m         */[m
[32m+[m[32m        maxSockets?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Maximum number of sockets allowed for all hosts in total. Each request will use a new socket until the maximum is reached. Default: Infinity.[m
[32m+[m[32m         */[m
[32m+[m[32m        maxTotalSockets?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Maximum number of sockets to leave open in a free state. Only relevant if keepAlive is set to true. Default = 256.[m
[32m+[m[32m         */[m
[32m+[m[32m        maxFreeSockets?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Socket timeout in milliseconds. This will set the timeout after the socket is connected.[m
[32m+[m[32m         */[m
[32m+[m[32m        timeout?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Scheduling strategy to apply when picking the next free socket to use.[m
[32m+[m[32m         * @default `lifo`[m
[32m+[m[32m         */[m
[32m+[m[32m        scheduling?: "fifo" | "lifo" | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An `Agent` is responsible for managing connection persistence[m
[32m+[m[32m     * and reuse for HTTP clients. It maintains a queue of pending requests[m
[32m+[m[32m     * for a given host and port, reusing a single socket connection for each[m
[32m+[m[32m     * until the queue is empty, at which time the socket is either destroyed[m
[32m+[m[32m     * or put into a pool where it is kept to be used again for requests to the[m
[32m+[m[32m     * same host and port. Whether it is destroyed or pooled depends on the `keepAlive` `option`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Pooled connections have TCP Keep-Alive enabled for them, but servers may[m
[32m+[m[32m     * still close idle connections, in which case they will be removed from the[m
[32m+[m[32m     * pool and a new connection will be made when a new HTTP request is made for[m
[32m+[m[32m     * that host and port. Servers may also refuse to allow multiple requests[m
[32m+[m[32m     * over the same connection, in which case the connection will have to be[m
[32m+[m[32m     * remade for every request and cannot be pooled. The `Agent` will still make[m
[32m+[m[32m     * the requests to that server, but each one will occur over a new connection.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When a connection is closed by the client or the server, it is removed[m
[32m+[m[32m     * from the pool. Any unused sockets in the pool will be unrefed so as not[m
[32m+[m[32m     * to keep the Node.js process running when there are no outstanding requests.[m
[32m+[m[32m     * (see `socket.unref()`).[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is good practice, to `destroy()` an `Agent` instance when it is no[m
[32m+[m[32m     * longer in use, because unused sockets consume OS resources.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Sockets are removed from an agent when the socket emits either[m
[32m+[m[32m     * a `'close'` event or an `'agentRemove'` event. When intending to keep one[m
[32m+[m[32m     * HTTP request open for a long time without keeping it in the agent, something[m
[32m+[m[32m     * like the following may be done:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * http.get(options, (res) => {[m
[32m+[m[32m     *   // Do stuff[m
[32m+[m[32m     * }).on('socket', (socket) => {[m
[32m+[m[32m     *   socket.emit('agentRemove');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * An agent may also be used for an individual request. By providing `{agent: false}` as an option to the `http.get()` or `http.request()` functions, a one-time use `Agent` with default options[m
[32m+[m[32m     * will be used[m
[32m+[m[32m     * for the client connection.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `agent:false`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * http.get({[m
[32m+[m[32m     *   hostname: 'localhost',[m
[32m+[m[32m     *   port: 80,[m
[32m+[m[32m     *   path: '/',[m
[32m+[m[32m     *   agent: false,  // Create a new agent just for this one request[m
[32m+[m[32m     * }, (res) => {[m
[32m+[m[32m     *   // Do stuff with response[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * `options` in [`socket.connect()`](https://nodejs.org/docs/latest-v22.x/api/net.html#socketconnectoptions-connectlistener) are also supported.[m
[32m+[m[32m     *[m
[32m+[m[32m     * To configure any of them, a custom {@link Agent} instance must be created.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const http = require('node:http');[m
[32m+[m[32m     * const keepAliveAgent = new http.Agent({ keepAlive: true });[m
[32m+[m[32m     * options.agent = keepAliveAgent;[m
[32m+[m[32m     * http.request(options, onResponseCallback)[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.3.4[m
[32m+[m[32m     */[m
[32m+[m[32m    class Agent extends EventEmitter {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * By default set to 256. For agents with `keepAlive` enabled, this[m
[32m+[m[32m         * sets the maximum number of sockets that will be left open in the free[m
[32m+[m[32m         * state.[m
[32m+[m[32m         * @since v0.11.7[m
[32m+[m[32m         */[m
[32m+[m[32m        maxFreeSockets: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * By default set to `Infinity`. Determines how many concurrent sockets the agent[m
[32m+[m[32m         * can have open per origin. Origin is the returned value of `agent.getName()`.[m
[32m+[m[32m         * @since v0.3.6[m
[32m+[m[32m         */[m
[32m+[m[32m        maxSockets: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * By default set to `Infinity`. Determines how many concurrent sockets the agent[m
[32m+[m[32m         * can have open. Unlike `maxSockets`, this parameter applies across all origins.[m
[32m+[m[32m         * @since v14.5.0, v12.19.0[m
[32m+[m[32m         */[m
[32m+[m[32m        maxTotalSockets: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An object which contains arrays of sockets currently awaiting use by[m
[32m+[m[32m         * the agent when `keepAlive` is enabled. Do not modify.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Sockets in the `freeSockets` list will be automatically destroyed and[m
[32m+[m[32m         * removed from the array on `'timeout'`.[m
[32m+[m[32m         * @since v0.11.4[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly freeSockets: NodeJS.ReadOnlyDict<Socket[]>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An object which contains arrays of sockets currently in use by the[m
[32m+[m[32m         * agent. Do not modify.[m
[32m+[m[32m         * @since v0.3.6[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly sockets: NodeJS.ReadOnlyDict<Socket[]>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An object which contains queues of requests that have not yet been assigned to[m
[32m+[m[32m         * sockets. Do not modify.[m
[32m+[m[32m         * @since v0.5.9[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly requests: NodeJS.ReadOnlyDict<IncomingMessage[]>;[m
[32m+[m[32m        constructor(opts?: AgentOptions);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Destroy any sockets that are currently in use by the agent.[m
[32m+[m[32m         *[m
[32m+[m[32m         * It is usually not necessary to do this. However, if using an[m
[32m+[m[32m         * agent with `keepAlive` enabled, then it is best to explicitly shut down[m
[32m+[m[32m         * the agent when it is no longer needed. Otherwise,[m
[32m+[m[32m         * sockets might stay open for quite a long time before the server[m
[32m+[m[32m         * terminates them.[m
[32m+[m[32m         * @since v0.11.4[m
[32m+[m[32m         */[m
[32m+[m[32m        destroy(): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    const METHODS: string[];[m
[32m+[m[32m    const STATUS_CODES: {[m
[32m+[m[32m        [errorCode: number]: string | undefined;[m
[32m+[m[32m        [errorCode: string]: string | undefined;[m
[32m+[m[32m    };[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a new instance of {@link Server}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `requestListener` is a function which is automatically[m
[32m+[m[32m     * added to the `'request'` event.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import http from 'node:http';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Create a local server to receive data from[m
[32m+[m[32m     * const server = http.createServer((req, res) => {[m
[32m+[m[32m     *   res.writeHead(200, { 'Content-Type': 'application/json' });[m
[32m+[m[32m     *   res.end(JSON.stringify({[m
[32m+[m[32m     *     data: 'Hello World!',[m
[32m+[m[32m     *   }));[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * server.listen(8000);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import http from 'node:http';[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Create a local server to receive data from[m
[32m+[m[32m     * const server = http.createServer();[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Listen to the request event[m
[32m+[m[32m     * server.on('request', (request, res) => {[m
[32m+[m[32m     *   res.writeHead(200, { 'Content-Type': 'application/json' });[m
[32m+[m[32m     *   res.end(JSON.stringify({[m
[32m+[m[32m     *     data: 'Hello World!',[m
[32m+[m[32m     *   }));[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * server.listen(8000);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.13[m
[32m+[m[32m     */[m
[32m+[m[32m    function createServer<[m
[32m+[m[32m        Request extends typeof IncomingMessage = typeof IncomingMessage,[m
[32m+[m[32m        Response extends typeof ServerResponse = typeof ServerResponse,[m
[32m+[m[32m    >(requestListener?: RequestListener<Request, Response>): Server<Request, Response>;[m
[32m+[m[32m    function createServer<[m
[32m+[m[32m        Request extends typeof IncomingMessage = typeof IncomingMessage,[m
[32m+[m[32m        Response extends typeof ServerResponse = typeof ServerResponse,[m
[32m+[m[32m    >([m
[32m+[m[32m        options: ServerOptions<Request, Response>,[m
[32m+[m[32m        requestListener?: RequestListener<Request, Response>,[m
[32m+[m[32m    ): Server<Request, Response>;[m
[32m+[m[32m    // although RequestOptions are passed as ClientRequestArgs to ClientRequest directly,[m
[32m+[m[32m    // create interface RequestOptions would make the naming more clear to developers[m
[32m+[m[32m    interface RequestOptions extends ClientRequestArgs {}[m
[32m+[m[32m    /**[m
[32m+[m[32m     * `options` in `socket.connect()` are also supported.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Node.js maintains several connections per server to make HTTP requests.[m
[32m+[m[32m     * This function allows one to transparently issue requests.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `url` can be a string or a `URL` object. If `url` is a[m
[32m+[m[32m     * string, it is automatically parsed with `new URL()`. If it is a `URL` object, it will be automatically converted to an ordinary `options` object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If both `url` and `options` are specified, the objects are merged, with the `options` properties taking precedence.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The optional `callback` parameter will be added as a one-time listener for[m
[32m+[m[32m     * the `'response'` event.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `http.request()` returns an instance of the {@link ClientRequest} class. The `ClientRequest` instance is a writable stream. If one needs to[m
[32m+[m[32m     * upload a file with a POST request, then write to the `ClientRequest` object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import http from 'node:http';[m
[32m+[m[32m     * import { Buffer } from 'node:buffer';[m
[32m+[m[32m     *[m
[32m+[m[32m     * const postData = JSON.stringify({[m
[32m+[m[32m     *   'msg': 'Hello World!',[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * const options = {[m
[32m+[m[32m     *   hostname: 'www.google.com',[m
[32m+[m[32m     *   port: 80,[m
[32m+[m[32m     *   path: '/upload',[m
[32m+[m[32m     *   method: 'POST',[m
[32m+[m[32m     *   headers: {[m
[32m+[m[32m     *     'Content-Type': 'application/json',[m
[32m+[m[32m     *     'Content-Length': Buffer.byteLength(postData),[m
[32m+[m[32m     *   },[m
[32m+[m[32m     * };[m
[32m+[m[32m     *[m
[32m+[m[32m     * const req = http.request(options, (res) => {[m
[32m+[m[32m     *   console.log(`STATUS: ${res.statusCode}`);[m
[32m+[m[32m     *   console.log(`HEADERS: ${JSON.stringify(res.headers)}`);[m
[32m+[m[32m     *   res.setEncoding('utf8');[m
[32m+[m[32m     *   res.on('data', (chunk) => {[m
[32m+[m[32m     *     console.log(`BODY: ${chunk}`);[m
[32m+[m[32m     *   });[m
[32m+[m[32m     *   res.on('end', () => {[m
[32m+[m[32m     *     console.log('No more data in response.');[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * req.on('error', (e) => {[m
[32m+[m[32m     *   console.error(`problem with request: ${e.message}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Write data to request body[m
[32m+[m[32m     * req.write(postData);[m
[32m+[m[32m     * req.end();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * In the example `req.end()` was called. With `http.request()` one[m
[32m+[m[32m     * must always call `req.end()` to signify the end of the request -[m
[32m+[m[32m     * even if there is no data being written to the request body.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If any error is encountered during the request (be that with DNS resolution,[m
[32m+[m[32m     * TCP level errors, or actual HTTP parse errors) an `'error'` event is emitted[m
[32m+[m[32m     * on the returned request object. As with all `'error'` events, if no listeners[m
[32m+[m[32m     * are registered the error will be thrown.[m
[32m+[m[32m     *[m
[32m+[m[32m     * There are a few special headers that should be noted.[m
[32m+[m[32m     *[m
[32m+[m[32m     * * Sending a 'Connection: keep-alive' will notify Node.js that the connection to[m
[32m+[m[32m     * the server should be persisted until the next request.[m
[32m+[m[32m     * * Sending a 'Content-Length' header will disable the default chunked encoding.[m
[32m+[m[32m     * * Sending an 'Expect' header will immediately send the request headers.[m
[32m+[m[32m     * Usually, when sending 'Expect: 100-continue', both a timeout and a listener[m
[32m+[m[32m     * for the `'continue'` event should be set. See RFC 2616 Section 8.2.3 for more[m
[32m+[m[32m     * information.[m
[32m+[m[32m     * * Sending an Authorization header will override using the `auth` option[m
[32m+[m[32m     * to compute basic authentication.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example using a `URL` as `options`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const options = new URL('http://abc:xyz@example.com');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const req = http.request(options, (res) => {[m
[32m+[m[32m     *   // ...[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * In a successful request, the following events will be emitted in the following[m
[32m+[m[32m     * order:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `'socket'`[m
[32m+[m[32m     * * `'response'`[m
[32m+[m[32m     *    * `'data'` any number of times, on the `res` object[m
[32m+[m[32m     *    (`'data'` will not be emitted at all if the response body is empty, for[m
[32m+[m[32m     *    instance, in most redirects)[m
[32m+[m[32m     *    * `'end'` on the `res` object[m
[32m+[m[32m     * * `'close'`[m
[32m+[m[32m     *[m
[32m+[m[32m     * In the case of a connection error, the following events will be emitted:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `'socket'`[m
[32m+[m[32m     * * `'error'`[m
[32m+[m[32m     * * `'close'`[m
[32m+[m[32m     *[m
[32m+[m[32m     * In the case of a premature connection close before the response is received,[m
[32m+[m[32m     * the following events will be emitted in the following order:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `'socket'`[m
[32m+[m[32m     * * `'error'` with an error with message `'Error: socket hang up'` and code `'ECONNRESET'`[m
[32m+[m[32m     * * `'close'`[m
[32m+[m[32m     *[m
[32m+[m[32m     * In the case of a premature connection close after the response is received,[m
[32m+[m[32m     * the following events will be emitted in the following order:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `'socket'`[m
[32m+[m[32m     * * `'response'`[m
[32m+[m[32m     *    * `'data'` any number of times, on the `res` object[m
[32m+[m[32m     * * (connection closed here)[m
[32m+[m[32m     * * `'aborted'` on the `res` object[m
[32m+[m[32m     * * `'close'`[m
[32m+[m[32m     * * `'error'` on the `res` object with an error with message `'Error: aborted'` and code `'ECONNRESET'`[m
[32m+[m[32m     * * `'close'` on the `res` object[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `req.destroy()` is called before a socket is assigned, the following[m
[32m+[m[32m     * events will be emitted in the following order:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * (`req.destroy()` called here)[m
[32m+[m[32m     * * `'error'` with an error with message `'Error: socket hang up'` and code `'ECONNRESET'`, or the error with which `req.destroy()` was called[m
[32m+[m[32m     * * `'close'`[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `req.destroy()` is called before the connection succeeds, the following[m
[32m+[m[32m     * events will be emitted in the following order:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `'socket'`[m
[32m+[m[32m     * * (`req.destroy()` called here)[m
[32m+[m[32m     * * `'error'` with an error with message `'Error: socket hang up'` and code `'ECONNRESET'`, or the error with which `req.destroy()` was called[m
[32m+[m[32m     * * `'close'`[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `req.destroy()` is called after the response is received, the following[m
[32m+[m[32m     * events will be emitted in the following order:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `'socket'`[m
[32m+[m[32m     * * `'response'`[m
[32m+[m[32m     *    * `'data'` any number of times, on the `res` object[m
[32m+[m[32m     * * (`req.destroy()` called here)[m
[32m+[m[32m     * * `'aborted'` on the `res` object[m
[32m+[m[32m     * * `'close'`[m
[32m+[m[32m     * * `'error'` on the `res` object with an error with message `'Error: aborted'` and code `'ECONNRESET'`, or the error with which `req.destroy()` was called[m
[32m+[m[32m     * * `'close'` on the `res` object[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `req.abort()` is called before a socket is assigned, the following[m
[32m+[m[32m     * events will be emitted in the following order:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * (`req.abort()` called here)[m
[32m+[m[32m     * * `'abort'`[m
[32m+[m[32m     * * `'close'`[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `req.abort()` is called before the connection succeeds, the following[m
[32m+[m[32m     * events will be emitted in the following order:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `'socket'`[m
[32m+[m[32m     * * (`req.abort()` called here)[m
[32m+[m[32m     * * `'abort'`[m
[32m+[m[32m     * * `'error'` with an error with message `'Error: socket hang up'` and code `'ECONNRESET'`[m
[32m+[m[32m     * * `'close'`[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `req.abort()` is called after the response is received, the following[m
[32m+[m[32m     * events will be emitted in the following order:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * `'socket'`[m
[32m+[m[32m     * * `'response'`[m
[32m+[m[32m     *    * `'data'` any number of times, on the `res` object[m
[32m+[m[32m     * * (`req.abort()` called here)[m
[32m+[m[32m     * * `'abort'`[m
[32m+[m[32m     * * `'aborted'` on the `res` object[m
[32m+[m[32m     * * `'error'` on the `res` object with an error with message `'Error: aborted'` and code `'ECONNRESET'`.[m
[32m+[m[32m     * * `'close'`[m
[32m+[m[32m     * * `'close'` on the `res` object[m
[32m+[m[32m     *[m
[32m+[m[32m     * Setting the `timeout` option or using the `setTimeout()` function will[m
[32m+[m[32m     * not abort the request or do anything besides add a `'timeout'` event.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Passing an `AbortSignal` and then calling `abort()` on the corresponding `AbortController` will behave the same way as calling `.destroy()` on the[m
[32m+[m[32m     * request. Specifically, the `'error'` event will be emitted with an error with[m
[32m+[m[32m     * the message `'AbortError: The operation was aborted'`, the code `'ABORT_ERR'` and the `cause`, if one was provided.[m
[32m+[m[32m     * @since v0.3.6[m
[32m+[m[32m     */[m
[32m+[m[32m    function request(options: RequestOptions | string | URL, callback?: (res: IncomingMessage) => void): ClientRequest;[m
[32m+[m[32m    function request([m
[32m+[m[32m        url: string | URL,[m
[32m+[m[32m        options: RequestOptions,[m
[32m+[m[32m        callback?: (res: IncomingMessage) => void,[m
[32m+[m[32m    ): ClientRequest;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Since most requests are GET requests without bodies, Node.js provides this[m
[32m+[m[32m     * convenience method. The only difference between this method and {@link request} is that it sets the method to GET by default and calls `req.end()` automatically. The callback must take care to[m
[32m+[m[32m     * consume the response[m
[32m+[m[32m     * data for reasons stated in {@link ClientRequest} section.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `callback` is invoked with a single argument that is an instance of {@link IncomingMessage}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * JSON fetching example:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * http.get('http://localhost:8000/', (res) => {[m
[32m+[m[32m     *   const { statusCode } = res;[m
[32m+[m[32m     *   const contentType = res.headers['content-type'];[m
[32m+[m[32m     *[m
[32m+[m[32m     *   let error;[m
[32m+[m[32m     *   // Any 2xx status code signals a successful response but[m
[32m+[m[32m     *   // here we're only checking for 200.[m
[32m+[m[32m     *   if (statusCode !== 200) {[m
[32m+[m[32m     *     error = new Error('Request Failed.\n' +[m
[32m+[m[32m     *                       `Status Code: ${statusCode}`);[m
[32m+[m[32m     *   } else if (!/^application\/json/.test(contentType)) {[m
[32m+[m[32m     *     error = new Error('Invalid content-type.\n' +[m
[32m+[m[32m     *                       `Expected application/json but received ${contentType}`);[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *   if (error) {[m
[32m+[m[32m     *     console.error(error.message);[m
[32m+[m[32m     *     // Consume response data to free up memory[m
[32m+[m[32m     *     res.resume();[m
[32m+[m[32m     *     return;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *[m
[32m+[m[32m     *   res.setEncoding('utf8');[m
[32m+[m[32m     *   let rawData = '';[m
[32m+[m[32m     *   res.on('data', (chunk) => { rawData += chunk; });[m
[32m+[m[32m     *   res.on('end', () => {[m
[32m+[m[32m     *     try {[m
[32m+[m[32m     *       const parsedData = JSON.parse(rawData);[m
[32m+[m[32m     *       console.log(parsedData);[m
[32m+[m[32m     *     } catch (e) {[m
[32m+[m[32m     *       console.error(e.message);[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * }).on('error', (e) => {[m
[32m+[m[32m     *   console.error(`Got error: ${e.message}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Create a local server to receive data from[m
[32m+[m[32m     * const server = http.createServer((req, res) => {[m
[32m+[m[32m     *   res.writeHead(200, { 'Content-Type': 'application/json' });[m
[32m+[m[32m     *   res.end(JSON.stringify({[m
[32m+[m[32m     *     data: 'Hello World!',[m
[32m+[m[32m     *   }));[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * server.listen(8000);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.3.6[m
[32m+[m[32m     * @param options Accepts the same `options` as {@link request}, with the method set to GET by default.[m
[32m+[m[32m     */[m
[32m+[m[32m    function get(options: RequestOptions | string | URL, callback?: (res: IncomingMessage) => void): ClientRequest;[m
[32m+[m[32m    function get(url: string | URL, options: RequestOptions, callback?: (res: IncomingMessage) => void): ClientRequest;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Performs the low-level validations on the provided `name` that are done when `res.setHeader(name, value)` is called.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Passing illegal value as `name` will result in a `TypeError` being thrown,[m
[32m+[m[32m     * identified by `code: 'ERR_INVALID_HTTP_TOKEN'`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is not necessary to use this method before passing headers to an HTTP request[m
[32m+[m[32m     * or response. The HTTP module will automatically validate such headers.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { validateHeaderName } from 'node:http';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   validateHeaderName('');[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   console.error(err instanceof TypeError); // --> true[m
[32m+[m[32m     *   console.error(err.code); // --> 'ERR_INVALID_HTTP_TOKEN'[m
[32m+[m[32m     *   console.error(err.message); // --> 'Header name must be a valid HTTP token [""]'[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v14.3.0[m
[32m+[m[32m     * @param [label='Header name'] Label for error message.[m
[32m+[m[32m     */[m
[32m+[m[32m    function validateHeaderName(name: string): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Performs the low-level validations on the provided `value` that are done when `res.setHeader(name, value)` is called.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Passing illegal value as `value` will result in a `TypeError` being thrown.[m
[32m+[m[32m     *[m
[32m+[m[32m     * * Undefined value error is identified by `code: 'ERR_HTTP_INVALID_HEADER_VALUE'`.[m
[32m+[m[32m     * * Invalid value character error is identified by `code: 'ERR_INVALID_CHAR'`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * It is not necessary to use this method before passing headers to an HTTP request[m
[32m+[m[32m     * or response. The HTTP module will automatically validate such headers.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Examples:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { validateHeaderValue } from 'node:http';[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   validateHeaderValue('x-my-header', undefined);[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   console.error(err instanceof TypeError); // --> true[m
[32m+[m[32m     *   console.error(err.code === 'ERR_HTTP_INVALID_HEADER_VALUE'); // --> true[m
[32m+[m[32m     *   console.error(err.message); // --> 'Invalid value "undefined" for header "x-my-header"'[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * try {[m
[32m+[m[32m     *   validateHeaderValue('x-my-header', 'oʊmɪɡə');[m
[32m+[m[32m     * } catch (err) {[m
[32m+[m[32m     *   console.error(err instanceof TypeError); // --> true[m
[32m+[m[32m     *   console.error(err.code === 'ERR_INVALID_CHAR'); // --> true[m
[32m+[m[32m     *   console.error(err.message); // --> 'Invalid character in header content ["x-my-header"]'[m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v14.3.0[m
[32m+[m[32m     * @param name Header name[m
[32m+[m[32m     * @param value Header value[m
[32m+[m[32m     */[m
[32m+[m[32m    function validateHeaderValue(name: string, value: string): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Set the maximum number of idle HTTP parsers.[m
[32m+[m[32m     * @since v18.8.0, v16.18.0[m
[32m+[m[32m     * @param [max=1000][m
[32m+[m[32m     */[m
[32m+[m[32m    function setMaxIdleHTTPParsers(max: number): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Global instance of `Agent` which is used as the default for all HTTP client[m
[32m+[m[32m     * requests. Diverges from a default `Agent` configuration by having `keepAlive`[m
[32m+[m[32m     * enabled and a `timeout` of 5 seconds.[m
[32m+[m[32m     * @since v0.5.9[m
[32m+[m[32m     */[m
[32m+[m[32m    let globalAgent: Agent;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Read-only property specifying the maximum allowed size of HTTP headers in bytes.[m
[32m+[m[32m     * Defaults to 16KB. Configurable using the `--max-http-header-size` CLI option.[m
[32m+[m[32m     */[m
[32m+[m[32m    const maxHeaderSize: number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A browser-compatible implementation of [WebSocket](https://nodejs.org/docs/latest/api/http.html#websocket).[m
[32m+[m[32m     * @since v22.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    const WebSocket: import("undici-types").WebSocket;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v22.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    const CloseEvent: import("undici-types").CloseEvent;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v22.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    const MessageEvent: import("undici-types").MessageEvent;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:http" {[m
[32m+[m[32m    export * from "http";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/http2.d.ts b/node_modules/@types/node/http2.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..3e98e0d[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/http2.d.ts[m
[36m@@ -0,0 +1,2418 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:http2` module provides an implementation of the [HTTP/2](https://tools.ietf.org/html/rfc7540) protocol.[m
[32m+[m[32m * It can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const http2 = require('node:http2');[m
[32m+[m[32m * ```[m
[32m+[m[32m * @since v8.4.0[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/http2.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "http2" {[m
[32m+[m[32m    import EventEmitter = require("node:events");[m
[32m+[m[32m    import * as fs from "node:fs";[m
[32m+[m[32m    import * as net from "node:net";[m
[32m+[m[32m    import * as stream from "node:stream";[m
[32m+[m[32m    import * as tls from "node:tls";[m
[32m+[m[32m    import * as url from "node:url";[m
[32m+[m[32m    import {[m
[32m+[m[32m        IncomingHttpHeaders as Http1IncomingHttpHeaders,[m
[32m+[m[32m        IncomingMessage,[m
[32m+[m[32m        OutgoingHttpHeaders,[m
[32m+[m[32m        ServerResponse,[m
[32m+[m[32m    } from "node:http";[m
[32m+[m[32m    export { OutgoingHttpHeaders } from "node:http";[m
[32m+[m[32m    export interface IncomingHttpStatusHeader {[m
[32m+[m[32m        ":status"?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface IncomingHttpHeaders extends Http1IncomingHttpHeaders {[m
[32m+[m[32m        ":path"?: string | undefined;[m
[32m+[m[32m        ":method"?: string | undefined;[m
[32m+[m[32m        ":authority"?: string | undefined;[m
[32m+[m[32m        ":scheme"?: string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    // Http2Stream[m
[32m+[m[32m    export interface StreamPriorityOptions {[m
[32m+[m[32m        exclusive?: boolean | undefined;[m
[32m+[m[32m        parent?: number | undefined;[m
[32m+[m[32m        weight?: number | undefined;[m
[32m+[m[32m        silent?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface StreamState {[m
[32m+[m[32m        localWindowSize?: number | undefined;[m
[32m+[m[32m        state?: number | undefined;[m
[32m+[m[32m        localClose?: number | undefined;[m
[32m+[m[32m        remoteClose?: number | undefined;[m
[32m+[m[32m        sumDependencyWeight?: number | undefined;[m
[32m+[m[32m        weight?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ServerStreamResponseOptions {[m
[32m+[m[32m        endStream?: boolean | undefined;[m
[32m+[m[32m        waitForTrailers?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface StatOptions {[m
[32m+[m[32m        offset: number;[m
[32m+[m[32m        length: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ServerStreamFileResponseOptions {[m
[32m+[m[32m        // eslint-disable-next-line @typescript-eslint/no-invalid-void-type[m
[32m+[m[32m        statCheck?(stats: fs.Stats, headers: OutgoingHttpHeaders, statOptions: StatOptions): void | boolean;[m
[32m+[m[32m        waitForTrailers?: boolean | undefined;[m
[32m+[m[32m        offset?: number | undefined;[m
[32m+[m[32m        length?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ServerStreamFileResponseOptionsWithError extends ServerStreamFileResponseOptions {[m
[32m+[m[32m        onError?(err: NodeJS.ErrnoException): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface Http2Stream extends stream.Duplex {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Set to `true` if the `Http2Stream` instance was aborted abnormally. When set,[m
[32m+[m[32m         * the `'aborted'` event will have been emitted.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly aborted: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property shows the number of characters currently buffered to be written.[m
[32m+[m[32m         * See `net.Socket.bufferSize` for details.[m
[32m+[m[32m         * @since v11.2.0, v10.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly bufferSize: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Set to `true` if the `Http2Stream` instance has been closed.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly closed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Set to `true` if the `Http2Stream` instance has been destroyed and is no longer[m
[32m+[m[32m         * usable.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly destroyed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Set to `true` if the `END_STREAM` flag was set in the request or response[m
[32m+[m[32m         * HEADERS frame received, indicating that no additional data should be received[m
[32m+[m[32m         * and the readable side of the `Http2Stream` will be closed.[m
[32m+[m[32m         * @since v10.11.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly endAfterHeaders: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The numeric stream identifier of this `Http2Stream` instance. Set to `undefined` if the stream identifier has not yet been assigned.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly id?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Set to `true` if the `Http2Stream` instance has not yet been assigned a[m
[32m+[m[32m         * numeric stream identifier.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly pending: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Set to the `RST_STREAM` `error code` reported when the `Http2Stream` is[m
[32m+[m[32m         * destroyed after either receiving an `RST_STREAM` frame from the connected peer,[m
[32m+[m[32m         * calling `http2stream.close()`, or `http2stream.destroy()`. Will be `undefined` if the `Http2Stream` has not been closed.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly rstCode: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An object containing the outbound headers sent for this `Http2Stream`.[m
[32m+[m[32m         * @since v9.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly sentHeaders: OutgoingHttpHeaders;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An array of objects containing the outbound informational (additional) headers[m
[32m+[m[32m         * sent for this `Http2Stream`.[m
[32m+[m[32m         * @since v9.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly sentInfoHeaders?: OutgoingHttpHeaders[] | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An object containing the outbound trailers sent for this `HttpStream`.[m
[32m+[m[32m         * @since v9.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly sentTrailers?: OutgoingHttpHeaders | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A reference to the `Http2Session` instance that owns this `Http2Stream`. The[m
[32m+[m[32m         * value will be `undefined` after the `Http2Stream` instance is destroyed.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly session: Http2Session | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Provides miscellaneous information about the current state of the `Http2Stream`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A current state of this `Http2Stream`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly state: StreamState;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Closes the `Http2Stream` instance by sending an `RST_STREAM` frame to the[m
[32m+[m[32m         * connected HTTP/2 peer.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         * @param [code=http2.constants.NGHTTP2_NO_ERROR] Unsigned 32-bit integer identifying the error code.[m
[32m+[m[32m         * @param callback An optional function registered to listen for the `'close'` event.[m
[32m+[m[32m         */[m
[32m+[m[32m        close(code?: number, callback?: () => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Updates the priority for this `Http2Stream` instance.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        priority(options: StreamPriorityOptions): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const client = http2.connect('http://example.org:8000');[m
[32m+[m[32m         * const { NGHTTP2_CANCEL } = http2.constants;[m
[32m+[m[32m         * const req = client.request({ ':path': '/' });[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Cancel the stream if there's no activity after 5 seconds[m
[32m+[m[32m         * req.setTimeout(5000, () => req.close(NGHTTP2_CANCEL));[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setTimeout(msecs: number, callback?: () => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends a trailing `HEADERS` frame to the connected HTTP/2 peer. This method[m
[32m+[m[32m         * will cause the `Http2Stream` to be immediately closed and must only be[m
[32m+[m[32m         * called after the `'wantTrailers'` event has been emitted. When sending a[m
[32m+[m[32m         * request or sending a response, the `options.waitForTrailers` option must be set[m
[32m+[m[32m         * in order to keep the `Http2Stream` open after the final `DATA` frame so that[m
[32m+[m[32m         * trailers can be sent.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   stream.respond(undefined, { waitForTrailers: true });[m
[32m+[m[32m         *   stream.on('wantTrailers', () => {[m
[32m+[m[32m         *     stream.sendTrailers({ xyz: 'abc' });[m
[32m+[m[32m         *   });[m
[32m+[m[32m         *   stream.end('Hello World');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The HTTP/1 specification forbids trailers from containing HTTP/2 pseudo-header[m
[32m+[m[32m         * fields (e.g. `':method'`, `':path'`, etc).[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        sendTrailers(headers: OutgoingHttpHeaders): void;[m
[32m+[m[32m        addListener(event: "aborted", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        addListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "frameError", listener: (frameType: number, errorCode: number) => void): this;[m
[32m+[m[32m        addListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        addListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        addListener(event: "streamClosed", listener: (code: number) => void): this;[m
[32m+[m[32m        addListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "trailers", listener: (trailers: IncomingHttpHeaders, flags: number) => void): this;[m
[32m+[m[32m        addListener(event: "wantTrailers", listener: () => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "aborted"): boolean;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "data", chunk: Buffer | string): boolean;[m
[32m+[m[32m        emit(event: "drain"): boolean;[m
[32m+[m[32m        emit(event: "end"): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: "finish"): boolean;[m
[32m+[m[32m        emit(event: "frameError", frameType: number, errorCode: number): boolean;[m
[32m+[m[32m        emit(event: "pipe", src: stream.Readable): boolean;[m
[32m+[m[32m        emit(event: "unpipe", src: stream.Readable): boolean;[m
[32m+[m[32m        emit(event: "streamClosed", code: number): boolean;[m
[32m+[m[32m        emit(event: "timeout"): boolean;[m
[32m+[m[32m        emit(event: "trailers", trailers: IncomingHttpHeaders, flags: number): boolean;[m
[32m+[m[32m        emit(event: "wantTrailers"): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on(event: "aborted", listener: () => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        on(event: "drain", listener: () => void): this;[m
[32m+[m[32m        on(event: "end", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "finish", listener: () => void): this;[m
[32m+[m[32m        on(event: "frameError", listener: (frameType: number, errorCode: number) => void): this;[m
[32m+[m[32m        on(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        on(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        on(event: "streamClosed", listener: (code: number) => void): this;[m
[32m+[m[32m        on(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        on(event: "trailers", listener: (trailers: IncomingHttpHeaders, flags: number) => void): this;[m
[32m+[m[32m        on(event: "wantTrailers", listener: () => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "aborted", listener: () => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        once(event: "drain", listener: () => void): this;[m
[32m+[m[32m        once(event: "end", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "finish", listener: () => void): this;[m
[32m+[m[32m        once(event: "frameError", listener: (frameType: number, errorCode: number) => void): this;[m
[32m+[m[32m        once(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        once(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        once(event: "streamClosed", listener: (code: number) => void): this;[m
[32m+[m[32m        once(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        once(event: "trailers", listener: (trailers: IncomingHttpHeaders, flags: number) => void): this;[m
[32m+[m[32m        once(event: "wantTrailers", listener: () => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "aborted", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        prependListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "frameError", listener: (frameType: number, errorCode: number) => void): this;[m
[32m+[m[32m        prependListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependListener(event: "streamClosed", listener: (code: number) => void): this;[m
[32m+[m[32m        prependListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "trailers", listener: (trailers: IncomingHttpHeaders, flags: number) => void): this;[m
[32m+[m[32m        prependListener(event: "wantTrailers", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "aborted", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "frameError", listener: (frameType: number, errorCode: number) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "streamClosed", listener: (code: number) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "trailers", listener: (trailers: IncomingHttpHeaders, flags: number) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "wantTrailers", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ClientHttp2Stream extends Http2Stream {[m
[32m+[m[32m        addListener(event: "continue", listener: () => {}): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "headers",[m
[32m+[m[32m            listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "push", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "response",[m
[32m+[m[32m            listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "continue"): boolean;[m
[32m+[m[32m        emit(event: "headers", headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number): boolean;[m
[32m+[m[32m        emit(event: "push", headers: IncomingHttpHeaders, flags: number): boolean;[m
[32m+[m[32m        emit(event: "response", headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on(event: "continue", listener: () => {}): this;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "headers",[m
[32m+[m[32m            listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on(event: "push", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "response",[m
[32m+[m[32m            listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "continue", listener: () => {}): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "headers",[m
[32m+[m[32m            listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: "push", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "response",[m
[32m+[m[32m            listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "continue", listener: () => {}): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "headers",[m
[32m+[m[32m            listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "push", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "response",[m
[32m+[m[32m            listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "continue", listener: () => {}): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "headers",[m
[32m+[m[32m            listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "push", listener: (headers: IncomingHttpHeaders, flags: number) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "response",[m
[32m+[m[32m            listener: (headers: IncomingHttpHeaders & IncomingHttpStatusHeader, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ServerHttp2Stream extends Http2Stream {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * True if headers were sent, false otherwise (read-only).[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly headersSent: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Read-only property mapped to the `SETTINGS_ENABLE_PUSH` flag of the remote[m
[32m+[m[32m         * client's most recent `SETTINGS` frame. Will be `true` if the remote peer[m
[32m+[m[32m         * accepts push streams, `false` otherwise. Settings are the same for every `Http2Stream` in the same `Http2Session`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly pushAllowed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends an additional informational `HEADERS` frame to the connected HTTP/2 peer.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        additionalHeaders(headers: OutgoingHttpHeaders): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Initiates a push stream. The callback is invoked with the new `Http2Stream` instance created for the push stream passed as the second argument, or an `Error` passed as the first argument.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   stream.respond({ ':status': 200 });[m
[32m+[m[32m         *   stream.pushStream({ ':path': '/' }, (err, pushStream, headers) => {[m
[32m+[m[32m         *     if (err) throw err;[m
[32m+[m[32m         *     pushStream.respond({ ':status': 200 });[m
[32m+[m[32m         *     pushStream.end('some pushed data');[m
[32m+[m[32m         *   });[m
[32m+[m[32m         *   stream.end('some data');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Setting the weight of a push stream is not allowed in the `HEADERS` frame. Pass[m
[32m+[m[32m         * a `weight` value to `http2stream.priority` with the `silent` option set to `true` to enable server-side bandwidth balancing between concurrent streams.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling `http2stream.pushStream()` from within a pushed stream is not permitted[m
[32m+[m[32m         * and will throw an error.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         * @param callback Callback that is called once the push stream has been initiated.[m
[32m+[m[32m         */[m
[32m+[m[32m        pushStream([m
[32m+[m[32m            headers: OutgoingHttpHeaders,[m
[32m+[m[32m            callback?: (err: Error | null, pushStream: ServerHttp2Stream, headers: OutgoingHttpHeaders) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        pushStream([m
[32m+[m[32m            headers: OutgoingHttpHeaders,[m
[32m+[m[32m            options?: StreamPriorityOptions,[m
[32m+[m[32m            callback?: (err: Error | null, pushStream: ServerHttp2Stream, headers: OutgoingHttpHeaders) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   stream.respond({ ':status': 200 });[m
[32m+[m[32m         *   stream.end('some data');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Initiates a response. When the `options.waitForTrailers` option is set, the`'wantTrailers'` event will be emitted immediately after queuing the last chunk[m
[32m+[m[32m         * of payload data to be sent. The `http2stream.sendTrailers()` method can then be[m
[32m+[m[32m         * used to sent trailing header fields to the peer.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When `options.waitForTrailers` is set, the `Http2Stream` will not automatically[m
[32m+[m[32m         * close when the final `DATA` frame is transmitted. User code must call either `http2stream.sendTrailers()` or `http2stream.close()` to close the `Http2Stream`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   stream.respond({ ':status': 200 }, { waitForTrailers: true });[m
[32m+[m[32m         *   stream.on('wantTrailers', () => {[m
[32m+[m[32m         *     stream.sendTrailers({ ABC: 'some value to send' });[m
[32m+[m[32m         *   });[m
[32m+[m[32m         *   stream.end('some data');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        respond(headers?: OutgoingHttpHeaders, options?: ServerStreamResponseOptions): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Initiates a response whose data is read from the given file descriptor. No[m
[32m+[m[32m         * validation is performed on the given file descriptor. If an error occurs while[m
[32m+[m[32m         * attempting to read data using the file descriptor, the `Http2Stream` will be[m
[32m+[m[32m         * closed using an `RST_STREAM` frame using the standard `INTERNAL_ERROR` code.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When used, the `Http2Stream` object's `Duplex` interface will be closed[m
[32m+[m[32m         * automatically.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   const fd = fs.openSync('/some/file', 'r');[m
[32m+[m[32m         *[m
[32m+[m[32m         *   const stat = fs.fstatSync(fd);[m
[32m+[m[32m         *   const headers = {[m
[32m+[m[32m         *     'content-length': stat.size,[m
[32m+[m[32m         *     'last-modified': stat.mtime.toUTCString(),[m
[32m+[m[32m         *     'content-type': 'text/plain; charset=utf-8',[m
[32m+[m[32m         *   };[m
[32m+[m[32m         *   stream.respondWithFD(fd, headers);[m
[32m+[m[32m         *   stream.on('close', () => fs.closeSync(fd));[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `options.statCheck` function may be specified to give user code[m
[32m+[m[32m         * an opportunity to set additional content headers based on the `fs.Stat` details[m
[32m+[m[32m         * of the given fd. If the `statCheck` function is provided, the `http2stream.respondWithFD()` method will perform an `fs.fstat()` call to[m
[32m+[m[32m         * collect details on the provided file descriptor.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `offset` and `length` options may be used to limit the response to a[m
[32m+[m[32m         * specific range subset. This can be used, for instance, to support HTTP Range[m
[32m+[m[32m         * requests.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The file descriptor or `FileHandle` is not closed when the stream is closed,[m
[32m+[m[32m         * so it will need to be closed manually once it is no longer needed.[m
[32m+[m[32m         * Using the same file descriptor concurrently for multiple streams[m
[32m+[m[32m         * is not supported and may result in data loss. Re-using a file descriptor[m
[32m+[m[32m         * after a stream has finished is supported.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When the `options.waitForTrailers` option is set, the `'wantTrailers'` event[m
[32m+[m[32m         * will be emitted immediately after queuing the last chunk of payload data to be[m
[32m+[m[32m         * sent. The `http2stream.sendTrailers()` method can then be used to sent trailing[m
[32m+[m[32m         * header fields to the peer.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When `options.waitForTrailers` is set, the `Http2Stream` will not automatically[m
[32m+[m[32m         * close when the final `DATA` frame is transmitted. User code _must_ call either `http2stream.sendTrailers()` or `http2stream.close()` to close the `Http2Stream`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   const fd = fs.openSync('/some/file', 'r');[m
[32m+[m[32m         *[m
[32m+[m[32m         *   const stat = fs.fstatSync(fd);[m
[32m+[m[32m         *   const headers = {[m
[32m+[m[32m         *     'content-length': stat.size,[m
[32m+[m[32m         *     'last-modified': stat.mtime.toUTCString(),[m
[32m+[m[32m         *     'content-type': 'text/plain; charset=utf-8',[m
[32m+[m[32m         *   };[m
[32m+[m[32m         *   stream.respondWithFD(fd, headers, { waitForTrailers: true });[m
[32m+[m[32m         *   stream.on('wantTrailers', () => {[m
[32m+[m[32m         *     stream.sendTrailers({ ABC: 'some value to send' });[m
[32m+[m[32m         *   });[m
[32m+[m[32m         *[m
[32m+[m[32m         *   stream.on('close', () => fs.closeSync(fd));[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         * @param fd A readable file descriptor.[m
[32m+[m[32m         */[m
[32m+[m[32m        respondWithFD([m
[32m+[m[32m            fd: number | fs.promises.FileHandle,[m
[32m+[m[32m            headers?: OutgoingHttpHeaders,[m
[32m+[m[32m            options?: ServerStreamFileResponseOptions,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends a regular file as the response. The `path` must specify a regular file[m
[32m+[m[32m         * or an `'error'` event will be emitted on the `Http2Stream` object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When used, the `Http2Stream` object's `Duplex` interface will be closed[m
[32m+[m[32m         * automatically.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `options.statCheck` function may be specified to give user code[m
[32m+[m[32m         * an opportunity to set additional content headers based on the `fs.Stat` details[m
[32m+[m[32m         * of the given file:[m
[32m+[m[32m         *[m
[32m+[m[32m         * If an error occurs while attempting to read the file data, the `Http2Stream` will be closed using an `RST_STREAM` frame using the standard `INTERNAL_ERROR` code. If the `onError` callback is[m
[32m+[m[32m         * defined, then it will be called. Otherwise[m
[32m+[m[32m         * the stream will be destroyed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example using a file path:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   function statCheck(stat, headers) {[m
[32m+[m[32m         *     headers['last-modified'] = stat.mtime.toUTCString();[m
[32m+[m[32m         *   }[m
[32m+[m[32m         *[m
[32m+[m[32m         *   function onError(err) {[m
[32m+[m[32m         *     // stream.respond() can throw if the stream has been destroyed by[m
[32m+[m[32m         *     // the other side.[m
[32m+[m[32m         *     try {[m
[32m+[m[32m         *       if (err.code === 'ENOENT') {[m
[32m+[m[32m         *         stream.respond({ ':status': 404 });[m
[32m+[m[32m         *       } else {[m
[32m+[m[32m         *         stream.respond({ ':status': 500 });[m
[32m+[m[32m         *       }[m
[32m+[m[32m         *     } catch (err) {[m
[32m+[m[32m         *       // Perform actual error handling.[m
[32m+[m[32m         *       console.error(err);[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *     stream.end();[m
[32m+[m[32m         *   }[m
[32m+[m[32m         *[m
[32m+[m[32m         *   stream.respondWithFile('/some/file',[m
[32m+[m[32m         *                          { 'content-type': 'text/plain; charset=utf-8' },[m
[32m+[m[32m         *                          { statCheck, onError });[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `options.statCheck` function may also be used to cancel the send operation[m
[32m+[m[32m         * by returning `false`. For instance, a conditional request may check the stat[m
[32m+[m[32m         * results to determine if the file has been modified to return an appropriate `304` response:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   function statCheck(stat, headers) {[m
[32m+[m[32m         *     // Check the stat here...[m
[32m+[m[32m         *     stream.respond({ ':status': 304 });[m
[32m+[m[32m         *     return false; // Cancel the send operation[m
[32m+[m[32m         *   }[m
[32m+[m[32m         *   stream.respondWithFile('/some/file',[m
[32m+[m[32m         *                          { 'content-type': 'text/plain; charset=utf-8' },[m
[32m+[m[32m         *                          { statCheck });[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `content-length` header field will be automatically set.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `offset` and `length` options may be used to limit the response to a[m
[32m+[m[32m         * specific range subset. This can be used, for instance, to support HTTP Range[m
[32m+[m[32m         * requests.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `options.onError` function may also be used to handle all the errors[m
[32m+[m[32m         * that could happen before the delivery of the file is initiated. The[m
[32m+[m[32m         * default behavior is to destroy the stream.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When the `options.waitForTrailers` option is set, the `'wantTrailers'` event[m
[32m+[m[32m         * will be emitted immediately after queuing the last chunk of payload data to be[m
[32m+[m[32m         * sent. The `http2stream.sendTrailers()` method can then be used to sent trailing[m
[32m+[m[32m         * header fields to the peer.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When `options.waitForTrailers` is set, the `Http2Stream` will not automatically[m
[32m+[m[32m         * close when the final `DATA` frame is transmitted. User code must call either`http2stream.sendTrailers()` or `http2stream.close()` to close the`Http2Stream`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   stream.respondWithFile('/some/file',[m
[32m+[m[32m         *                          { 'content-type': 'text/plain; charset=utf-8' },[m
[32m+[m[32m         *                          { waitForTrailers: true });[m
[32m+[m[32m         *   stream.on('wantTrailers', () => {[m
[32m+[m[32m         *     stream.sendTrailers({ ABC: 'some value to send' });[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        respondWithFile([m
[32m+[m[32m            path: string,[m
[32m+[m[32m            headers?: OutgoingHttpHeaders,[m
[32m+[m[32m            options?: ServerStreamFileResponseOptionsWithError,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    // Http2Session[m
[32m+[m[32m    export interface Settings {[m
[32m+[m[32m        headerTableSize?: number | undefined;[m
[32m+[m[32m        enablePush?: boolean | undefined;[m
[32m+[m[32m        initialWindowSize?: number | undefined;[m
[32m+[m[32m        maxFrameSize?: number | undefined;[m
[32m+[m[32m        maxConcurrentStreams?: number | undefined;[m
[32m+[m[32m        maxHeaderListSize?: number | undefined;[m
[32m+[m[32m        enableConnectProtocol?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ClientSessionRequestOptions {[m
[32m+[m[32m        endStream?: boolean | undefined;[m
[32m+[m[32m        exclusive?: boolean | undefined;[m
[32m+[m[32m        parent?: number | undefined;[m
[32m+[m[32m        weight?: number | undefined;[m
[32m+[m[32m        waitForTrailers?: boolean | undefined;[m
[32m+[m[32m        signal?: AbortSignal | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface SessionState {[m
[32m+[m[32m        effectiveLocalWindowSize?: number | undefined;[m
[32m+[m[32m        effectiveRecvDataLength?: number | undefined;[m
[32m+[m[32m        nextStreamID?: number | undefined;[m
[32m+[m[32m        localWindowSize?: number | undefined;[m
[32m+[m[32m        lastProcStreamID?: number | undefined;[m
[32m+[m[32m        remoteWindowSize?: number | undefined;[m
[32m+[m[32m        outboundQueueSize?: number | undefined;[m
[32m+[m[32m        deflateDynamicTableSize?: number | undefined;[m
[32m+[m[32m        inflateDynamicTableSize?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface Http2Session extends EventEmitter {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Value will be `undefined` if the `Http2Session` is not yet connected to a[m
[32m+[m[32m         * socket, `h2c` if the `Http2Session` is not connected to a `TLSSocket`, or[m
[32m+[m[32m         * will return the value of the connected `TLSSocket`'s own `alpnProtocol` property.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly alpnProtocol?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Will be `true` if this `Http2Session` instance has been closed, otherwise `false`.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly closed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Will be `true` if this `Http2Session` instance is still connecting, will be set[m
[32m+[m[32m         * to `false` before emitting `connect` event and/or calling the `http2.connect` callback.[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly connecting: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Will be `true` if this `Http2Session` instance has been destroyed and must no[m
[32m+[m[32m         * longer be used, otherwise `false`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly destroyed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Value is `undefined` if the `Http2Session` session socket has not yet been[m
[32m+[m[32m         * connected, `true` if the `Http2Session` is connected with a `TLSSocket`,[m
[32m+[m[32m         * and `false` if the `Http2Session` is connected to any other kind of socket[m
[32m+[m[32m         * or stream.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly encrypted?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A prototype-less object describing the current local settings of this `Http2Session`. The local settings are local to _this_`Http2Session` instance.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly localSettings: Settings;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If the `Http2Session` is connected to a `TLSSocket`, the `originSet` property[m
[32m+[m[32m         * will return an `Array` of origins for which the `Http2Session` may be[m
[32m+[m[32m         * considered authoritative.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `originSet` property is only available when using a secure TLS connection.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly originSet?: string[] | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Indicates whether the `Http2Session` is currently waiting for acknowledgment of[m
[32m+[m[32m         * a sent `SETTINGS` frame. Will be `true` after calling the `http2session.settings()` method. Will be `false` once all sent `SETTINGS` frames have been acknowledged.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly pendingSettingsAck: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A prototype-less object describing the current remote settings of this`Http2Session`. The remote settings are set by the _connected_ HTTP/2 peer.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly remoteSettings: Settings;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a `Proxy` object that acts as a `net.Socket` (or `tls.TLSSocket`) but[m
[32m+[m[32m         * limits available methods to ones safe to use with HTTP/2.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `destroy`, `emit`, `end`, `pause`, `read`, `resume`, and `write` will throw[m
[32m+[m[32m         * an error with code `ERR_HTTP2_NO_SOCKET_MANIPULATION`. See `Http2Session and Sockets` for more information.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `setTimeout` method will be called on this `Http2Session`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * All other interactions will be routed directly to the socket.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly socket: net.Socket | tls.TLSSocket;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Provides miscellaneous information about the current state of the`Http2Session`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * An object describing the current status of this `Http2Session`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly state: SessionState;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `http2session.type` will be equal to `http2.constants.NGHTTP2_SESSION_SERVER` if this `Http2Session` instance is a[m
[32m+[m[32m         * server, and `http2.constants.NGHTTP2_SESSION_CLIENT` if the instance is a[m
[32m+[m[32m         * client.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly type: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Gracefully closes the `Http2Session`, allowing any existing streams to[m
[32m+[m[32m         * complete on their own and preventing new `Http2Stream` instances from being[m
[32m+[m[32m         * created. Once closed, `http2session.destroy()`_might_ be called if there[m
[32m+[m[32m         * are no open `Http2Stream` instances.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If specified, the `callback` function is registered as a handler for the`'close'` event.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        close(callback?: () => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Immediately terminates the `Http2Session` and the associated `net.Socket` or `tls.TLSSocket`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Once destroyed, the `Http2Session` will emit the `'close'` event. If `error` is not undefined, an `'error'` event will be emitted immediately before the `'close'` event.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If there are any remaining open `Http2Streams` associated with the `Http2Session`, those will also be destroyed.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         * @param error An `Error` object if the `Http2Session` is being destroyed due to an error.[m
[32m+[m[32m         * @param code The HTTP/2 error code to send in the final `GOAWAY` frame. If unspecified, and `error` is not undefined, the default is `INTERNAL_ERROR`, otherwise defaults to `NO_ERROR`.[m
[32m+[m[32m         */[m
[32m+[m[32m        destroy(error?: Error, code?: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Transmits a `GOAWAY` frame to the connected peer _without_ shutting down the`Http2Session`.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         * @param code An HTTP/2 error code[m
[32m+[m[32m         * @param lastStreamID The numeric ID of the last processed `Http2Stream`[m
[32m+[m[32m         * @param opaqueData A `TypedArray` or `DataView` instance containing additional data to be carried within the `GOAWAY` frame.[m
[32m+[m[32m         */[m
[32m+[m[32m        goaway(code?: number, lastStreamID?: number, opaqueData?: NodeJS.ArrayBufferView): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends a `PING` frame to the connected HTTP/2 peer. A `callback` function must[m
[32m+[m[32m         * be provided. The method will return `true` if the `PING` was sent, `false` otherwise.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The maximum number of outstanding (unacknowledged) pings is determined by the `maxOutstandingPings` configuration option. The default maximum is 10.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If provided, the `payload` must be a `Buffer`, `TypedArray`, or `DataView` containing 8 bytes of data that will be transmitted with the `PING` and[m
[32m+[m[32m         * returned with the ping acknowledgment.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The callback will be invoked with three arguments: an error argument that will[m
[32m+[m[32m         * be `null` if the `PING` was successfully acknowledged, a `duration` argument[m
[32m+[m[32m         * that reports the number of milliseconds elapsed since the ping was sent and the[m
[32m+[m[32m         * acknowledgment was received, and a `Buffer` containing the 8-byte `PING` payload.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * session.ping(Buffer.from('abcdefgh'), (err, duration, payload) => {[m
[32m+[m[32m         *   if (!err) {[m
[32m+[m[32m         *     console.log(`Ping acknowledged in ${duration} milliseconds`);[m
[32m+[m[32m         *     console.log(`With payload '${payload.toString()}'`);[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `payload` argument is not specified, the default payload will be the[m
[32m+[m[32m         * 64-bit timestamp (little endian) marking the start of the `PING` duration.[m
[32m+[m[32m         * @since v8.9.3[m
[32m+[m[32m         * @param payload Optional ping payload.[m
[32m+[m[32m         */[m
[32m+[m[32m        ping(callback: (err: Error | null, duration: number, payload: Buffer) => void): boolean;[m
[32m+[m[32m        ping([m
[32m+[m[32m            payload: NodeJS.ArrayBufferView,[m
[32m+[m[32m            callback: (err: Error | null, duration: number, payload: Buffer) => void,[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calls `ref()` on this `Http2Session` instance's underlying `net.Socket`.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        ref(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the local endpoint's window size.[m
[32m+[m[32m         * The `windowSize` is the total window size to set, not[m
[32m+[m[32m         * the delta.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * const expectedWindowSize = 2 ** 20;[m
[32m+[m[32m         * server.on('connect', (session) => {[m
[32m+[m[32m         *[m
[32m+[m[32m         *   // Set local window size to be 2 ** 20[m
[32m+[m[32m         *   session.setLocalWindowSize(expectedWindowSize);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.3.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setLocalWindowSize(windowSize: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Used to set a callback function that is called when there is no activity on[m
[32m+[m[32m         * the `Http2Session` after `msecs` milliseconds. The given `callback` is[m
[32m+[m[32m         * registered as a listener on the `'timeout'` event.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setTimeout(msecs: number, callback?: () => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Updates the current local settings for this `Http2Session` and sends a new `SETTINGS` frame to the connected HTTP/2 peer.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Once called, the `http2session.pendingSettingsAck` property will be `true` while the session is waiting for the remote peer to acknowledge the new[m
[32m+[m[32m         * settings.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The new settings will not become effective until the `SETTINGS` acknowledgment[m
[32m+[m[32m         * is received and the `'localSettings'` event is emitted. It is possible to send[m
[32m+[m[32m         * multiple `SETTINGS` frames while acknowledgment is still pending.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         * @param callback Callback that is called once the session is connected or right away if the session is already connected.[m
[32m+[m[32m         */[m
[32m+[m[32m        settings([m
[32m+[m[32m            settings: Settings,[m
[32m+[m[32m            callback?: (err: Error | null, settings: Settings, duration: number) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calls `unref()` on this `Http2Session`instance's underlying `net.Socket`.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        unref(): void;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "frameError",[m
[32m+[m[32m            listener: (frameType: number, errorCode: number, streamID: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "goaway",[m
[32m+[m[32m            listener: (errorCode: number, lastStreamID: number, opaqueData?: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "localSettings", listener: (settings: Settings) => void): this;[m
[32m+[m[32m        addListener(event: "ping", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "remoteSettings", listener: (settings: Settings) => void): this;[m
[32m+[m[32m        addListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: "frameError", frameType: number, errorCode: number, streamID: number): boolean;[m
[32m+[m[32m        emit(event: "goaway", errorCode: number, lastStreamID: number, opaqueData?: Buffer): boolean;[m
[32m+[m[32m        emit(event: "localSettings", settings: Settings): boolean;[m
[32m+[m[32m        emit(event: "ping"): boolean;[m
[32m+[m[32m        emit(event: "remoteSettings", settings: Settings): boolean;[m
[32m+[m[32m        emit(event: "timeout"): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "frameError", listener: (frameType: number, errorCode: number, streamID: number) => void): this;[m
[32m+[m[32m        on(event: "goaway", listener: (errorCode: number, lastStreamID: number, opaqueData?: Buffer) => void): this;[m
[32m+[m[32m        on(event: "localSettings", listener: (settings: Settings) => void): this;[m
[32m+[m[32m        on(event: "ping", listener: () => void): this;[m
[32m+[m[32m        on(event: "remoteSettings", listener: (settings: Settings) => void): this;[m
[32m+[m[32m        on(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "frameError", listener: (frameType: number, errorCode: number, streamID: number) => void): this;[m
[32m+[m[32m        once(event: "goaway", listener: (errorCode: number, lastStreamID: number, opaqueData?: Buffer) => void): this;[m
[32m+[m[32m        once(event: "localSettings", listener: (settings: Settings) => void): this;[m
[32m+[m[32m        once(event: "ping", listener: () => void): this;[m
[32m+[m[32m        once(event: "remoteSettings", listener: (settings: Settings) => void): this;[m
[32m+[m[32m        once(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "frameError",[m
[32m+[m[32m            listener: (frameType: number, errorCode: number, streamID: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "goaway",[m
[32m+[m[32m            listener: (errorCode: number, lastStreamID: number, opaqueData?: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "localSettings", listener: (settings: Settings) => void): this;[m
[32m+[m[32m        prependListener(event: "ping", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "remoteSettings", listener: (settings: Settings) => void): this;[m
[32m+[m[32m        prependListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "frameError",[m
[32m+[m[32m            listener: (frameType: number, errorCode: number, streamID: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "goaway",[m
[32m+[m[32m            listener: (errorCode: number, lastStreamID: number, opaqueData?: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "localSettings", listener: (settings: Settings) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "ping", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "remoteSettings", listener: (settings: Settings) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ClientHttp2Session extends Http2Session {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * For HTTP/2 Client `Http2Session` instances only, the `http2session.request()` creates and returns an `Http2Stream` instance that can be used to send an[m
[32m+[m[32m         * HTTP/2 request to the connected server.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When a `ClientHttp2Session` is first created, the socket may not yet be[m
[32m+[m[32m         * connected. if `clienthttp2session.request()` is called during this time, the[m
[32m+[m[32m         * actual request will be deferred until the socket is ready to go.[m
[32m+[m[32m         * If the `session` is closed before the actual request be executed, an `ERR_HTTP2_GOAWAY_SESSION` is thrown.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method is only available if `http2session.type` is equal to `http2.constants.NGHTTP2_SESSION_CLIENT`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const clientSession = http2.connect('https://localhost:1234');[m
[32m+[m[32m         * const {[m
[32m+[m[32m         *   HTTP2_HEADER_PATH,[m
[32m+[m[32m         *   HTTP2_HEADER_STATUS,[m
[32m+[m[32m         * } = http2.constants;[m
[32m+[m[32m         *[m
[32m+[m[32m         * const req = clientSession.request({ [HTTP2_HEADER_PATH]: '/' });[m
[32m+[m[32m         * req.on('response', (headers) => {[m
[32m+[m[32m         *   console.log(headers[HTTP2_HEADER_STATUS]);[m
[32m+[m[32m         *   req.on('data', (chunk) => { // ..  });[m
[32m+[m[32m         *   req.on('end', () => { // ..  });[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * When the `options.waitForTrailers` option is set, the `'wantTrailers'` event[m
[32m+[m[32m         * is emitted immediately after queuing the last chunk of payload data to be sent.[m
[32m+[m[32m         * The `http2stream.sendTrailers()` method can then be called to send trailing[m
[32m+[m[32m         * headers to the peer.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When `options.waitForTrailers` is set, the `Http2Stream` will not automatically[m
[32m+[m[32m         * close when the final `DATA` frame is transmitted. User code must call either`http2stream.sendTrailers()` or `http2stream.close()` to close the`Http2Stream`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When `options.signal` is set with an `AbortSignal` and then `abort` on the[m
[32m+[m[32m         * corresponding `AbortController` is called, the request will emit an `'error'`event with an `AbortError` error.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `:method` and `:path` pseudo-headers are not specified within `headers`,[m
[32m+[m[32m         * they respectively default to:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `:method` \= `'GET'`[m
[32m+[m[32m         * * `:path` \= `/`[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        request(headers?: OutgoingHttpHeaders, options?: ClientSessionRequestOptions): ClientHttp2Stream;[m
[32m+[m[32m        addListener(event: "altsvc", listener: (alt: string, origin: string, stream: number) => void): this;[m
[32m+[m[32m        addListener(event: "origin", listener: (origins: string[]) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: ([m
[32m+[m[32m                stream: ClientHttp2Stream,[m
[32m+[m[32m                headers: IncomingHttpHeaders & IncomingHttpStatusHeader,[m
[32m+[m[32m                flags: number,[m
[32m+[m[32m            ) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "altsvc", alt: string, origin: string, stream: number): boolean;[m
[32m+[m[32m        emit(event: "origin", origins: readonly string[]): boolean;[m
[32m+[m[32m        emit(event: "connect", session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;[m
[32m+[m[32m        emit([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            stream: ClientHttp2Stream,[m
[32m+[m[32m            headers: IncomingHttpHeaders & IncomingHttpStatusHeader,[m
[32m+[m[32m            flags: number,[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on(event: "altsvc", listener: (alt: string, origin: string, stream: number) => void): this;[m
[32m+[m[32m        on(event: "origin", listener: (origins: string[]) => void): this;[m
[32m+[m[32m        on(event: "connect", listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void): this;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: ([m
[32m+[m[32m                stream: ClientHttp2Stream,[m
[32m+[m[32m                headers: IncomingHttpHeaders & IncomingHttpStatusHeader,[m
[32m+[m[32m                flags: number,[m
[32m+[m[32m            ) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "altsvc", listener: (alt: string, origin: string, stream: number) => void): this;[m
[32m+[m[32m        once(event: "origin", listener: (origins: string[]) => void): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: ([m
[32m+[m[32m                stream: ClientHttp2Stream,[m
[32m+[m[32m                headers: IncomingHttpHeaders & IncomingHttpStatusHeader,[m
[32m+[m[32m                flags: number,[m
[32m+[m[32m            ) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "altsvc", listener: (alt: string, origin: string, stream: number) => void): this;[m
[32m+[m[32m        prependListener(event: "origin", listener: (origins: string[]) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: ([m
[32m+[m[32m                stream: ClientHttp2Stream,[m
[32m+[m[32m                headers: IncomingHttpHeaders & IncomingHttpStatusHeader,[m
[32m+[m[32m                flags: number,[m
[32m+[m[32m            ) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "altsvc", listener: (alt: string, origin: string, stream: number) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "origin", listener: (origins: string[]) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: ([m
[32m+[m[32m                stream: ClientHttp2Stream,[m
[32m+[m[32m                headers: IncomingHttpHeaders & IncomingHttpStatusHeader,[m
[32m+[m[32m                flags: number,[m
[32m+[m[32m            ) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface AlternativeServiceOptions {[m
[32m+[m[32m        origin: number | string | url.URL;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ServerHttp2Session extends Http2Session {[m
[32m+[m[32m        readonly server: Http2Server | Http2SecureServer;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Submits an `ALTSVC` frame (as defined by [RFC 7838](https://tools.ietf.org/html/rfc7838)) to the connected client.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const server = http2.createServer();[m
[32m+[m[32m         * server.on('session', (session) => {[m
[32m+[m[32m         *   // Set altsvc for origin https://example.org:80[m
[32m+[m[32m         *   session.altsvc('h2=":8000"', 'https://example.org:80');[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   // Set altsvc for a specific stream[m
[32m+[m[32m         *   stream.session.altsvc('h2=":8000"', stream.id);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Sending an `ALTSVC` frame with a specific stream ID indicates that the alternate[m
[32m+[m[32m         * service is associated with the origin of the given `Http2Stream`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `alt` and origin string _must_ contain only ASCII bytes and are[m
[32m+[m[32m         * strictly interpreted as a sequence of ASCII bytes. The special value `'clear'`may be passed to clear any previously set alternative service for a given[m
[32m+[m[32m         * domain.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When a string is passed for the `originOrStream` argument, it will be parsed as[m
[32m+[m[32m         * a URL and the origin will be derived. For instance, the origin for the[m
[32m+[m[32m         * HTTP URL `'https://example.org/foo/bar'` is the ASCII string`'https://example.org'`. An error will be thrown if either the given string[m
[32m+[m[32m         * cannot be parsed as a URL or if a valid origin cannot be derived.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A `URL` object, or any object with an `origin` property, may be passed as`originOrStream`, in which case the value of the `origin` property will be[m
[32m+[m[32m         * used. The value of the `origin` property _must_ be a properly serialized[m
[32m+[m[32m         * ASCII origin.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         * @param alt A description of the alternative service configuration as defined by `RFC 7838`.[m
[32m+[m[32m         * @param originOrStream Either a URL string specifying the origin (or an `Object` with an `origin` property) or the numeric identifier of an active `Http2Stream` as given by the[m
[32m+[m[32m         * `http2stream.id` property.[m
[32m+[m[32m         */[m
[32m+[m[32m        altsvc(alt: string, originOrStream: number | string | url.URL | AlternativeServiceOptions): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Submits an `ORIGIN` frame (as defined by [RFC 8336](https://tools.ietf.org/html/rfc8336)) to the connected client[m
[32m+[m[32m         * to advertise the set of origins for which the server is capable of providing[m
[32m+[m[32m         * authoritative responses.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const options = getSecureOptionsSomehow();[m
[32m+[m[32m         * const server = http2.createSecureServer(options);[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   stream.respond();[m
[32m+[m[32m         *   stream.end('ok');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * server.on('session', (session) => {[m
[32m+[m[32m         *   session.origin('https://example.com', 'https://example.org');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * When a string is passed as an `origin`, it will be parsed as a URL and the[m
[32m+[m[32m         * origin will be derived. For instance, the origin for the HTTP URL `'https://example.org/foo/bar'` is the ASCII string` 'https://example.org'`. An error will be thrown if either the given[m
[32m+[m[32m         * string[m
[32m+[m[32m         * cannot be parsed as a URL or if a valid origin cannot be derived.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A `URL` object, or any object with an `origin` property, may be passed as[m
[32m+[m[32m         * an `origin`, in which case the value of the `origin` property will be[m
[32m+[m[32m         * used. The value of the `origin` property _must_ be a properly serialized[m
[32m+[m[32m         * ASCII origin.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Alternatively, the `origins` option may be used when creating a new HTTP/2[m
[32m+[m[32m         * server using the `http2.createSecureServer()` method:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const options = getSecureOptionsSomehow();[m
[32m+[m[32m         * options.origins = ['https://example.com', 'https://example.org'];[m
[32m+[m[32m         * const server = http2.createSecureServer(options);[m
[32m+[m[32m         * server.on('stream', (stream) => {[m
[32m+[m[32m         *   stream.respond();[m
[32m+[m[32m         *   stream.end('ok');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v10.12.0[m
[32m+[m[32m         * @param origins One or more URL Strings passed as separate arguments.[m
[32m+[m[32m         */[m
[32m+[m[32m        origin([m
[32m+[m[32m            ...origins: Array<[m
[32m+[m[32m                | string[m
[32m+[m[32m                | url.URL[m
[32m+[m[32m                | {[m
[32m+[m[32m                    origin: string;[m
[32m+[m[32m                }[m
[32m+[m[32m            >[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "connect", session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket): boolean;[m
[32m+[m[32m        emit(event: "stream", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on(event: "connect", listener: (session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket) => void): this;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (session: ServerHttp2Session, socket: net.Socket | tls.TLSSocket) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    // Http2Server[m
[32m+[m[32m    export interface SessionOptions {[m
[32m+[m[32m        maxDeflateDynamicTableSize?: number | undefined;[m
[32m+[m[32m        maxSessionMemory?: number | undefined;[m
[32m+[m[32m        maxHeaderListPairs?: number | undefined;[m
[32m+[m[32m        maxOutstandingPings?: number | undefined;[m
[32m+[m[32m        maxSendHeaderBlockLength?: number | undefined;[m
[32m+[m[32m        paddingStrategy?: number | undefined;[m
[32m+[m[32m        peerMaxConcurrentStreams?: number | undefined;[m
[32m+[m[32m        settings?: Settings | undefined;[m
[32m+[m[32m        remoteCustomSettings?: number[] | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specifies a timeout in milliseconds that[m
[32m+[m[32m         * a server should wait when an [`'unknownProtocol'`][] is emitted. If the[m
[32m+[m[32m         * socket has not been destroyed by that time the server will destroy it.[m
[32m+[m[32m         * @default 100000[m
[32m+[m[32m         */[m
[32m+[m[32m        unknownProtocolTimeout?: number | undefined;[m
[32m+[m[32m        selectPadding?(frameLen: number, maxFrameLen: number): number;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ClientSessionOptions extends SessionOptions {[m
[32m+[m[32m        maxReservedRemoteStreams?: number | undefined;[m
[32m+[m[32m        createConnection?: ((authority: url.URL, option: SessionOptions) => stream.Duplex) | undefined;[m
[32m+[m[32m        protocol?: "http:" | "https:" | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface ServerSessionOptions extends SessionOptions {[m
[32m+[m[32m        Http1IncomingMessage?: typeof IncomingMessage | undefined;[m
[32m+[m[32m        Http1ServerResponse?: typeof ServerResponse | undefined;[m
[32m+[m[32m        Http2ServerRequest?: typeof Http2ServerRequest | undefined;[m
[32m+[m[32m        Http2ServerResponse?: typeof Http2ServerResponse | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface SecureClientSessionOptions extends ClientSessionOptions, tls.ConnectionOptions {}[m
[32m+[m[32m    export interface SecureServerSessionOptions extends ServerSessionOptions, tls.TlsOptions {}[m
[32m+[m[32m    export interface ServerOptions extends ServerSessionOptions {}[m
[32m+[m[32m    export interface SecureServerOptions extends SecureServerSessionOptions {[m
[32m+[m[32m        allowHTTP1?: boolean | undefined;[m
[32m+[m[32m        origins?: string[] | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface HTTP2ServerCommon {[m
[32m+[m[32m        setTimeout(msec?: number, callback?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Throws ERR_HTTP2_INVALID_SETTING_VALUE for invalid settings values.[m
[32m+[m[32m         * Throws ERR_INVALID_ARG_TYPE for invalid settings argument.[m
[32m+[m[32m         */[m
[32m+[m[32m        updateSettings(settings: Settings): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface Http2Server extends net.Server, HTTP2ServerCommon {[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "request",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "session", listener: (session: ServerHttp2Session) => void): this;[m
[32m+[m[32m        addListener(event: "sessionError", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "checkContinue", request: Http2ServerRequest, response: Http2ServerResponse): boolean;[m
[32m+[m[32m        emit(event: "request", request: Http2ServerRequest, response: Http2ServerResponse): boolean;[m
[32m+[m[32m        emit(event: "session", session: ServerHttp2Session): boolean;[m
[32m+[m[32m        emit(event: "sessionError", err: Error): boolean;[m
[32m+[m[32m        emit(event: "stream", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;[m
[32m+[m[32m        emit(event: "timeout"): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;[m
[32m+[m[32m        on(event: "session", listener: (session: ServerHttp2Session) => void): this;[m
[32m+[m[32m        on(event: "sessionError", listener: (err: Error) => void): this;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;[m
[32m+[m[32m        once(event: "session", listener: (session: ServerHttp2Session) => void): this;[m
[32m+[m[32m        once(event: "sessionError", listener: (err: Error) => void): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "request",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "session", listener: (session: ServerHttp2Session) => void): this;[m
[32m+[m[32m        prependListener(event: "sessionError", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "request",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "session", listener: (session: ServerHttp2Session) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "sessionError", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    export interface Http2SecureServer extends tls.Server, HTTP2ServerCommon {[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "request",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "session", listener: (session: ServerHttp2Session) => void): this;[m
[32m+[m[32m        addListener(event: "sessionError", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "unknownProtocol", listener: (socket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "checkContinue", request: Http2ServerRequest, response: Http2ServerResponse): boolean;[m
[32m+[m[32m        emit(event: "request", request: Http2ServerRequest, response: Http2ServerResponse): boolean;[m
[32m+[m[32m        emit(event: "session", session: ServerHttp2Session): boolean;[m
[32m+[m[32m        emit(event: "sessionError", err: Error): boolean;[m
[32m+[m[32m        emit(event: "stream", stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number): boolean;[m
[32m+[m[32m        emit(event: "timeout"): boolean;[m
[32m+[m[32m        emit(event: "unknownProtocol", socket: tls.TLSSocket): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;[m
[32m+[m[32m        on(event: "session", listener: (session: ServerHttp2Session) => void): this;[m
[32m+[m[32m        on(event: "sessionError", listener: (err: Error) => void): this;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        on(event: "unknownProtocol", listener: (socket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: "request", listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void): this;[m
[32m+[m[32m        once(event: "session", listener: (session: ServerHttp2Session) => void): this;[m
[32m+[m[32m        once(event: "sessionError", listener: (err: Error) => void): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        once(event: "unknownProtocol", listener: (socket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "request",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "session", listener: (session: ServerHttp2Session) => void): this;[m
[32m+[m[32m        prependListener(event: "sessionError", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "unknownProtocol", listener: (socket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "request",[m
[32m+[m[32m            listener: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "session", listener: (session: ServerHttp2Session) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "sessionError", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "stream",[m
[32m+[m[32m            listener: (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "unknownProtocol", listener: (socket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A `Http2ServerRequest` object is created by {@link Server} or {@link SecureServer} and passed as the first argument to the `'request'` event. It may be used to access a request status,[m
[32m+[m[32m     * headers, and[m
[32m+[m[32m     * data.[m
[32m+[m[32m     * @since v8.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export class Http2ServerRequest extends stream.Readable {[m
[32m+[m[32m        constructor([m
[32m+[m[32m            stream: ServerHttp2Stream,[m
[32m+[m[32m            headers: IncomingHttpHeaders,[m
[32m+[m[32m            options: stream.ReadableOptions,[m
[32m+[m[32m            rawHeaders: readonly string[],[m
[32m+[m[32m        );[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `request.aborted` property will be `true` if the request has[m
[32m+[m[32m         * been aborted.[m
[32m+[m[32m         * @since v10.1.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly aborted: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request authority pseudo header field. Because HTTP/2 allows requests[m
[32m+[m[32m         * to set either `:authority` or `host`, this value is derived from `req.headers[':authority']` if present. Otherwise, it is derived from `req.headers['host']`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly authority: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * See `request.socket`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         * @deprecated Since v13.0.0 - Use `socket`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly connection: net.Socket | tls.TLSSocket;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `request.complete` property will be `true` if the request has[m
[32m+[m[32m         * been completed, aborted, or destroyed.[m
[32m+[m[32m         * @since v12.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly complete: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request/response headers object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Key-value pairs of header names and values. Header names are lower-cased.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Prints something like:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * // { 'user-agent': 'curl/7.22.0',[m
[32m+[m[32m         * //   host: '127.0.0.1:8000',[m
[32m+[m[32m         * //   accept: '*' }[m
[32m+[m[32m         * console.log(request.headers);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * See `HTTP/2 Headers Object`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * In HTTP/2, the request path, host name, protocol, and method are represented as[m
[32m+[m[32m         * special headers prefixed with the `:` character (e.g. `':path'`). These special[m
[32m+[m[32m         * headers will be included in the `request.headers` object. Care must be taken not[m
[32m+[m[32m         * to inadvertently modify these special headers or errors may occur. For instance,[m
[32m+[m[32m         * removing all headers from the request will cause errors to occur:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * removeAllHeaders(request.headers);[m
[32m+[m[32m         * assert(request.url);   // Fails because the :path header has been removed[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly headers: IncomingHttpHeaders;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * In case of server request, the HTTP version sent by the client. In the case of[m
[32m+[m[32m         * client response, the HTTP version of the connected-to server. Returns `'2.0'`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Also `message.httpVersionMajor` is the first integer and `message.httpVersionMinor` is the second.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly httpVersion: string;[m
[32m+[m[32m        readonly httpVersionMinor: number;[m
[32m+[m[32m        readonly httpVersionMajor: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request method as a string. Read-only. Examples: `'GET'`, `'DELETE'`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly method: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The raw request/response headers list exactly as they were received.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The keys and values are in the same list. It is _not_ a[m
[32m+[m[32m         * list of tuples. So, the even-numbered offsets are key values, and the[m
[32m+[m[32m         * odd-numbered offsets are the associated values.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Header names are not lowercased, and duplicates are not merged.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Prints something like:[m
[32m+[m[32m         * //[m
[32m+[m[32m         * // [ 'user-agent',[m
[32m+[m[32m         * //   'this is invalid because there can be only one',[m
[32m+[m[32m         * //   'User-Agent',[m
[32m+[m[32m         * //   'curl/7.22.0',[m
[32m+[m[32m         * //   'Host',[m
[32m+[m[32m         * //   '127.0.0.1:8000',[m
[32m+[m[32m         * //   'ACCEPT',[m
[32m+[m[32m         * //   '*' ][m
[32m+[m[32m         * console.log(request.rawHeaders);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly rawHeaders: string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The raw request/response trailer keys and values exactly as they were[m
[32m+[m[32m         * received. Only populated at the `'end'` event.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly rawTrailers: string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request scheme pseudo header field indicating the scheme[m
[32m+[m[32m         * portion of the target URL.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly scheme: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a `Proxy` object that acts as a `net.Socket` (or `tls.TLSSocket`) but[m
[32m+[m[32m         * applies getters, setters, and methods based on HTTP/2 logic.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `destroyed`, `readable`, and `writable` properties will be retrieved from and[m
[32m+[m[32m         * set on `request.stream`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `destroy`, `emit`, `end`, `on` and `once` methods will be called on `request.stream`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `setTimeout` method will be called on `request.stream.session`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `pause`, `read`, `resume`, and `write` will throw an error with code `ERR_HTTP2_NO_SOCKET_MANIPULATION`. See `Http2Session and Sockets` for[m
[32m+[m[32m         * more information.[m
[32m+[m[32m         *[m
[32m+[m[32m         * All other interactions will be routed directly to the socket. With TLS support,[m
[32m+[m[32m         * use `request.socket.getPeerCertificate()` to obtain the client's[m
[32m+[m[32m         * authentication details.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly socket: net.Socket | tls.TLSSocket;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `Http2Stream` object backing the request.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly stream: ServerHttp2Stream;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The request/response trailers object. Only populated at the `'end'` event.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly trailers: IncomingHttpHeaders;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Request URL string. This contains only the URL that is present in the actual[m
[32m+[m[32m         * HTTP request. If the request is:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```http[m
[32m+[m[32m         * GET /status?name=ryan HTTP/1.1[m
[32m+[m[32m         * Accept: text/plain[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Then `request.url` will be:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * '/status?name=ryan'[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * To parse the url into its parts, `new URL()` can be used:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```console[m
[32m+[m[32m         * $ node[m
[32m+[m[32m         * > new URL('/status?name=ryan', 'http://example.com')[m
[32m+[m[32m         * URL {[m
[32m+[m[32m         *   href: 'http://example.com/status?name=ryan',[m
[32m+[m[32m         *   origin: 'http://example.com',[m
[32m+[m[32m         *   protocol: 'http:',[m
[32m+[m[32m         *   username: '',[m
[32m+[m[32m         *   password: '',[m
[32m+[m[32m         *   host: 'example.com',[m
[32m+[m[32m         *   hostname: 'example.com',[m
[32m+[m[32m         *   port: '',[m
[32m+[m[32m         *   pathname: '/status',[m
[32m+[m[32m         *   search: '?name=ryan',[m
[32m+[m[32m         *   searchParams: URLSearchParams { 'name' => 'ryan' },[m
[32m+[m[32m         *   hash: ''[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        url: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the `Http2Stream`'s timeout value to `msecs`. If a callback is[m
[32m+[m[32m         * provided, then it is added as a listener on the `'timeout'` event on[m
[32m+[m[32m         * the response object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If no `'timeout'` listener is added to the request, the response, or[m
[32m+[m[32m         * the server, then `Http2Stream`s are destroyed when they time out. If a[m
[32m+[m[32m         * handler is assigned to the request, the response, or the server's `'timeout'`events, timed out sockets must be handled explicitly.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setTimeout(msecs: number, callback?: () => void): void;[m
[32m+[m[32m        read(size?: number): Buffer | string | null;[m
[32m+[m[32m        addListener(event: "aborted", listener: (hadError: boolean, code: number) => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        addListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "aborted", hadError: boolean, code: number): boolean;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "data", chunk: Buffer | string): boolean;[m
[32m+[m[32m        emit(event: "end"): boolean;[m
[32m+[m[32m        emit(event: "readable"): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on(event: "aborted", listener: (hadError: boolean, code: number) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        on(event: "end", listener: () => void): this;[m
[32m+[m[32m        on(event: "readable", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "aborted", listener: (hadError: boolean, code: number) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        once(event: "end", listener: () => void): this;[m
[32m+[m[32m        once(event: "readable", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "aborted", listener: (hadError: boolean, code: number) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        prependListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "aborted", listener: (hadError: boolean, code: number) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "data", listener: (chunk: Buffer | string) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This object is created internally by an HTTP server, not by the user. It is[m
[32m+[m[32m     * passed as the second parameter to the `'request'` event.[m
[32m+[m[32m     * @since v8.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export class Http2ServerResponse extends stream.Writable {[m
[32m+[m[32m        constructor(stream: ServerHttp2Stream);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * See `response.socket`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         * @deprecated Since v13.0.0 - Use `socket`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly connection: net.Socket | tls.TLSSocket;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Append a single header value to the header object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the value is an array, this is equivalent to calling this method multiple times.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If there were no previous values for the header, this is equivalent to calling {@link setHeader}.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Attempting to set a header field name or value that contains invalid characters will result in a[m
[32m+[m[32m         * [TypeError](https://nodejs.org/docs/latest-v22.x/api/errors.html#class-typeerror) being thrown.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Returns headers including "set-cookie: a" and "set-cookie: b"[m
[32m+[m[32m         * const server = http2.createServer((req, res) => {[m
[32m+[m[32m         *   res.setHeader('set-cookie', 'a');[m
[32m+[m[32m         *   res.appendHeader('set-cookie', 'b');[m
[32m+[m[32m         *   res.writeHead(200);[m
[32m+[m[32m         *   res.end('ok');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v20.12.0[m
[32m+[m[32m         */[m
[32m+[m[32m        appendHeader(name: string, value: string | string[]): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Boolean value that indicates whether the response has completed. Starts[m
[32m+[m[32m         * as `false`. After `response.end()` executes, the value will be `true`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         * @deprecated Since v13.4.0,v12.16.0 - Use `writableEnded`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly finished: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * True if headers were sent, false otherwise (read-only).[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly headersSent: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A reference to the original HTTP2 `request` object.[m
[32m+[m[32m         * @since v15.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly req: Http2ServerRequest;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a `Proxy` object that acts as a `net.Socket` (or `tls.TLSSocket`) but[m
[32m+[m[32m         * applies getters, setters, and methods based on HTTP/2 logic.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `destroyed`, `readable`, and `writable` properties will be retrieved from and[m
[32m+[m[32m         * set on `response.stream`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `destroy`, `emit`, `end`, `on` and `once` methods will be called on `response.stream`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `setTimeout` method will be called on `response.stream.session`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `pause`, `read`, `resume`, and `write` will throw an error with code `ERR_HTTP2_NO_SOCKET_MANIPULATION`. See `Http2Session and Sockets` for[m
[32m+[m[32m         * more information.[m
[32m+[m[32m         *[m
[32m+[m[32m         * All other interactions will be routed directly to the socket.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const http2 = require('node:http2');[m
[32m+[m[32m         * const server = http2.createServer((req, res) => {[m
[32m+[m[32m         *   const ip = req.socket.remoteAddress;[m
[32m+[m[32m         *   const port = req.socket.remotePort;[m
[32m+[m[32m         *   res.end(`Your IP address is ${ip} and your source port is ${port}.`);[m
[32m+[m[32m         * }).listen(3000);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly socket: net.Socket | tls.TLSSocket;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `Http2Stream` object backing the response.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly stream: ServerHttp2Stream;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When true, the Date header will be automatically generated and sent in[m
[32m+[m[32m         * the response if it is not already present in the headers. Defaults to true.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This should only be disabled for testing; HTTP requires the Date header[m
[32m+[m[32m         * in responses.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        sendDate: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When using implicit headers (not calling `response.writeHead()` explicitly),[m
[32m+[m[32m         * this property controls the status code that will be sent to the client when[m
[32m+[m[32m         * the headers get flushed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * response.statusCode = 404;[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * After response header was sent to the client, this property indicates the[m
[32m+[m[32m         * status code which was sent out.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        statusCode: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Status message is not supported by HTTP/2 (RFC 7540 8.1.2.4). It returns[m
[32m+[m[32m         * an empty string.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        statusMessage: "";[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method adds HTTP trailing headers (a header but at the end of the[m
[32m+[m[32m         * message) to the response.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Attempting to set a header field name or value that contains invalid characters[m
[32m+[m[32m         * will result in a `TypeError` being thrown.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        addTrailers(trailers: OutgoingHttpHeaders): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method signals to the server that all of the response headers and body[m
[32m+[m[32m         * have been sent; that server should consider this message complete.[m
[32m+[m[32m         * The method, `response.end()`, MUST be called on each response.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `data` is specified, it is equivalent to calling `response.write(data, encoding)` followed by `response.end(callback)`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `callback` is specified, it will be called when the response stream[m
[32m+[m[32m         * is finished.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        end(callback?: () => void): this;[m
[32m+[m[32m        end(data: string | Uint8Array, callback?: () => void): this;[m
[32m+[m[32m        end(data: string | Uint8Array, encoding: BufferEncoding, callback?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Reads out a header that has already been queued but not sent to the client.[m
[32m+[m[32m         * The name is case-insensitive.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const contentType = response.getHeader('content-type');[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getHeader(name: string): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns an array containing the unique names of the current outgoing headers.[m
[32m+[m[32m         * All header names are lowercase.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * response.setHeader('Foo', 'bar');[m
[32m+[m[32m         * response.setHeader('Set-Cookie', ['foo=bar', 'bar=baz']);[m
[32m+[m[32m         *[m
[32m+[m[32m         * const headerNames = response.getHeaderNames();[m
[32m+[m[32m         * // headerNames === ['foo', 'set-cookie'][m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getHeaderNames(): string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a shallow copy of the current outgoing headers. Since a shallow copy[m
[32m+[m[32m         * is used, array values may be mutated without additional calls to various[m
[32m+[m[32m         * header-related http module methods. The keys of the returned object are the[m
[32m+[m[32m         * header names and the values are the respective header values. All header names[m
[32m+[m[32m         * are lowercase.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The object returned by the `response.getHeaders()` method _does not_ prototypically inherit from the JavaScript `Object`. This means that typical `Object` methods such as `obj.toString()`,[m
[32m+[m[32m         * `obj.hasOwnProperty()`, and others[m
[32m+[m[32m         * are not defined and _will not work_.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * response.setHeader('Foo', 'bar');[m
[32m+[m[32m         * response.setHeader('Set-Cookie', ['foo=bar', 'bar=baz']);[m
[32m+[m[32m         *[m
[32m+[m[32m         * const headers = response.getHeaders();[m
[32m+[m[32m         * // headers === { foo: 'bar', 'set-cookie': ['foo=bar', 'bar=baz'] }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getHeaders(): OutgoingHttpHeaders;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` if the header identified by `name` is currently set in the[m
[32m+[m[32m         * outgoing headers. The header name matching is case-insensitive.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const hasContentType = response.hasHeader('content-type');[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        hasHeader(name: string): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Removes a header that has been queued for implicit sending.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * response.removeHeader('Content-Encoding');[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        removeHeader(name: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets a single header value for implicit headers. If this header already exists[m
[32m+[m[32m         * in the to-be-sent headers, its value will be replaced. Use an array of strings[m
[32m+[m[32m         * here to send multiple headers with the same name.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * response.setHeader('Content-Type', 'text/html; charset=utf-8');[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * or[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * response.setHeader('Set-Cookie', ['type=ninja', 'language=javascript']);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Attempting to set a header field name or value that contains invalid characters[m
[32m+[m[32m         * will result in a `TypeError` being thrown.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When headers have been set with `response.setHeader()`, they will be merged[m
[32m+[m[32m         * with any headers passed to `response.writeHead()`, with the headers passed[m
[32m+[m[32m         * to `response.writeHead()` given precedence.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Returns content-type = text/plain[m
[32m+[m[32m         * const server = http2.createServer((req, res) => {[m
[32m+[m[32m         *   res.setHeader('Content-Type', 'text/html; charset=utf-8');[m
[32m+[m[32m         *   res.setHeader('X-Foo', 'bar');[m
[32m+[m[32m         *   res.writeHead(200, { 'Content-Type': 'text/plain; charset=utf-8' });[m
[32m+[m[32m         *   res.end('ok');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setHeader(name: string, value: number | string | readonly string[]): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the `Http2Stream`'s timeout value to `msecs`. If a callback is[m
[32m+[m[32m         * provided, then it is added as a listener on the `'timeout'` event on[m
[32m+[m[32m         * the response object.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If no `'timeout'` listener is added to the request, the response, or[m
[32m+[m[32m         * the server, then `Http2Stream` s are destroyed when they time out. If a[m
[32m+[m[32m         * handler is assigned to the request, the response, or the server's `'timeout'` events, timed out sockets must be handled explicitly.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setTimeout(msecs: number, callback?: () => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If this method is called and `response.writeHead()` has not been called,[m
[32m+[m[32m         * it will switch to implicit header mode and flush the implicit headers.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This sends a chunk of the response body. This method may[m
[32m+[m[32m         * be called multiple times to provide successive parts of the body.[m
[32m+[m[32m         *[m
[32m+[m[32m         * In the `node:http` module, the response body is omitted when the[m
[32m+[m[32m         * request is a HEAD request. Similarly, the `204` and `304` responses _must not_ include a message body.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `chunk` can be a string or a buffer. If `chunk` is a string,[m
[32m+[m[32m         * the second parameter specifies how to encode it into a byte stream.[m
[32m+[m[32m         * By default the `encoding` is `'utf8'`. `callback` will be called when this chunk[m
[32m+[m[32m         * of data is flushed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This is the raw HTTP body and has nothing to do with higher-level multi-part[m
[32m+[m[32m         * body encodings that may be used.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The first time `response.write()` is called, it will send the buffered[m
[32m+[m[32m         * header information and the first chunk of the body to the client. The second[m
[32m+[m[32m         * time `response.write()` is called, Node.js assumes data will be streamed,[m
[32m+[m[32m         * and sends the new data separately. That is, the response is buffered up to the[m
[32m+[m[32m         * first chunk of the body.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Returns `true` if the entire data was flushed successfully to the kernel[m
[32m+[m[32m         * buffer. Returns `false` if all or part of the data was queued in user memory.`'drain'` will be emitted when the buffer is free again.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        write(chunk: string | Uint8Array, callback?: (err: Error) => void): boolean;[m
[32m+[m[32m        write(chunk: string | Uint8Array, encoding: BufferEncoding, callback?: (err: Error) => void): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends a status `100 Continue` to the client, indicating that the request body[m
[32m+[m[32m         * should be sent. See the `'checkContinue'` event on `Http2Server` and `Http2SecureServer`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        writeContinue(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends a status `103 Early Hints` to the client with a Link header,[m
[32m+[m[32m         * indicating that the user agent can preload/preconnect the linked resources.[m
[32m+[m[32m         * The `hints` is an object containing the values of headers to be sent with[m
[32m+[m[32m         * early hints message.[m
[32m+[m[32m         *[m
[32m+[m[32m         * **Example**[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const earlyHintsLink = '</styles.css>; rel=preload; as=style';[m
[32m+[m[32m         * response.writeEarlyHints({[m
[32m+[m[32m         *   'link': earlyHintsLink,[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * const earlyHintsLinks = [[m
[32m+[m[32m         *   '</styles.css>; rel=preload; as=style',[m
[32m+[m[32m         *   '</scripts.js>; rel=preload; as=script',[m
[32m+[m[32m         * ];[m
[32m+[m[32m         * response.writeEarlyHints({[m
[32m+[m[32m         *   'link': earlyHintsLinks,[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v18.11.0[m
[32m+[m[32m         */[m
[32m+[m[32m        writeEarlyHints(hints: Record<string, string | string[]>): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends a response header to the request. The status code is a 3-digit HTTP[m
[32m+[m[32m         * status code, like `404`. The last argument, `headers`, are the response headers.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Returns a reference to the `Http2ServerResponse`, so that calls can be chained.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For compatibility with `HTTP/1`, a human-readable `statusMessage` may be[m
[32m+[m[32m         * passed as the second argument. However, because the `statusMessage` has no[m
[32m+[m[32m         * meaning within HTTP/2, the argument will have no effect and a process warning[m
[32m+[m[32m         * will be emitted.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const body = 'hello world';[m
[32m+[m[32m         * response.writeHead(200, {[m
[32m+[m[32m         *   'Content-Length': Buffer.byteLength(body),[m
[32m+[m[32m         *   'Content-Type': 'text/plain; charset=utf-8',[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * `Content-Length` is given in bytes not characters. The`Buffer.byteLength()` API may be used to determine the number of bytes in a[m
[32m+[m[32m         * given encoding. On outbound messages, Node.js does not check if Content-Length[m
[32m+[m[32m         * and the length of the body being transmitted are equal or not. However, when[m
[32m+[m[32m         * receiving messages, Node.js will automatically reject messages when the `Content-Length` does not match the actual payload size.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method may be called at most one time on a message before `response.end()` is called.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `response.write()` or `response.end()` are called before calling[m
[32m+[m[32m         * this, the implicit/mutable headers will be calculated and call this function.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When headers have been set with `response.setHeader()`, they will be merged[m
[32m+[m[32m         * with any headers passed to `response.writeHead()`, with the headers passed[m
[32m+[m[32m         * to `response.writeHead()` given precedence.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Returns content-type = text/plain[m
[32m+[m[32m         * const server = http2.createServer((req, res) => {[m
[32m+[m[32m         *   res.setHeader('Content-Type', 'text/html; charset=utf-8');[m
[32m+[m[32m         *   res.setHeader('X-Foo', 'bar');[m
[32m+[m[32m         *   res.writeHead(200, { 'Content-Type': 'text/plain; charset=utf-8' });[m
[32m+[m[32m         *   res.end('ok');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Attempting to set a header field name or value that contains invalid characters[m
[32m+[m[32m         * will result in a `TypeError` being thrown.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        writeHead(statusCode: number, headers?: OutgoingHttpHeaders): this;[m
[32m+[m[32m        writeHead(statusCode: number, statusMessage: string, headers?: OutgoingHttpHeaders): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Call `http2stream.pushStream()` with the given headers, and wrap the[m
[32m+[m[32m         * given `Http2Stream` on a newly created `Http2ServerResponse` as the callback[m
[32m+[m[32m         * parameter if successful. When `Http2ServerRequest` is closed, the callback is[m
[32m+[m[32m         * called with an error `ERR_HTTP2_INVALID_STREAM`.[m
[32m+[m[32m         * @since v8.4.0[m
[32m+[m[32m         * @param headers An object describing the headers[m
[32m+[m[32m         * @param callback Called once `http2stream.pushStream()` is finished, or either when the attempt to create the pushed `Http2Stream` has failed or has been rejected, or the state of[m
[32m+[m[32m         * `Http2ServerRequest` is closed prior to calling the `http2stream.pushStream()` method[m
[32m+[m[32m         */[m
[32m+[m[32m        createPushResponse([m
[32m+[m[32m            headers: OutgoingHttpHeaders,[m
[32m+[m[32m            callback: (err: Error | null, res: Http2ServerResponse) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        addListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        addListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "drain"): boolean;[m
[32m+[m[32m        emit(event: "error", error: Error): boolean;[m
[32m+[m[32m        emit(event: "finish"): boolean;[m
[32m+[m[32m        emit(event: "pipe", src: stream.Readable): boolean;[m
[32m+[m[32m        emit(event: "unpipe", src: stream.Readable): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "drain", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        on(event: "finish", listener: () => void): this;[m
[32m+[m[32m        on(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        on(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "drain", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        once(event: "finish", listener: () => void): this;[m
[32m+[m[32m        once(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        once(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (error: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "pipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "unpipe", listener: (src: stream.Readable) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    export namespace constants {[m
[32m+[m[32m        const NGHTTP2_SESSION_SERVER: number;[m
[32m+[m[32m        const NGHTTP2_SESSION_CLIENT: number;[m
[32m+[m[32m        const NGHTTP2_STREAM_STATE_IDLE: number;[m
[32m+[m[32m        const NGHTTP2_STREAM_STATE_OPEN: number;[m
[32m+[m[32m        const NGHTTP2_STREAM_STATE_RESERVED_LOCAL: number;[m
[32m+[m[32m        const NGHTTP2_STREAM_STATE_RESERVED_REMOTE: number;[m
[32m+[m[32m        const NGHTTP2_STREAM_STATE_HALF_CLOSED_LOCAL: number;[m
[32m+[m[32m        const NGHTTP2_STREAM_STATE_HALF_CLOSED_REMOTE: number;[m
[32m+[m[32m        const NGHTTP2_STREAM_STATE_CLOSED: number;[m
[32m+[m[32m        const NGHTTP2_NO_ERROR: number;[m
[32m+[m[32m        const NGHTTP2_PROTOCOL_ERROR: number;[m
[32m+[m[32m        const NGHTTP2_INTERNAL_ERROR: number;[m
[32m+[m[32m        const NGHTTP2_FLOW_CONTROL_ERROR: number;[m
[32m+[m[32m        const NGHTTP2_SETTINGS_TIMEOUT: number;[m
[32m+[m[32m        const NGHTTP2_STREAM_CLOSED: number;[m
[32m+[m[32m        const NGHTTP2_FRAME_SIZE_ERROR: number;[m
[32m+[m[32m        const NGHTTP2_REFUSED_STREAM: number;[m
[32m+[m[32m        const NGHTTP2_CANCEL: number;[m
[32m+[m[32m        const NGHTTP2_COMPRESSION_ERROR: number;[m
[32m+[m[32m        const NGHTTP2_CONNECT_ERROR: number;[m
[32m+[m[32m        const NGHTTP2_ENHANCE_YOUR_CALM: number;[m
[32m+[m[32m        const NGHTTP2_INADEQUATE_SECURITY: number;[m
[32m+[m[32m        const NGHTTP2_HTTP_1_1_REQUIRED: number;[m
[32m+[m[32m        const NGHTTP2_ERR_FRAME_SIZE_ERROR: number;[m
[32m+[m[32m        const NGHTTP2_FLAG_NONE: number;[m
[32m+[m[32m        const NGHTTP2_FLAG_END_STREAM: number;[m
[32m+[m[32m        const NGHTTP2_FLAG_END_HEADERS: number;[m
[32m+[m[32m        const NGHTTP2_FLAG_ACK: number;[m
[32m+[m[32m        const NGHTTP2_FLAG_PADDED: number;[m
[32m+[m[32m        const NGHTTP2_FLAG_PRIORITY: number;[m
[32m+[m[32m        const DEFAULT_SETTINGS_HEADER_TABLE_SIZE: number;[m
[32m+[m[32m        const DEFAULT_SETTINGS_ENABLE_PUSH: number;[m
[32m+[m[32m        const DEFAULT_SETTINGS_INITIAL_WINDOW_SIZE: number;[m
[32m+[m[32m        const DEFAULT_SETTINGS_MAX_FRAME_SIZE: number;[m
[32m+[m[32m        const MAX_MAX_FRAME_SIZE: number;[m
[32m+[m[32m        const MIN_MAX_FRAME_SIZE: number;[m
[32m+[m[32m        const MAX_INITIAL_WINDOW_SIZE: number;[m
[32m+[m[32m        const NGHTTP2_DEFAULT_WEIGHT: number;[m
[32m+[m[32m        const NGHTTP2_SETTINGS_HEADER_TABLE_SIZE: number;[m
[32m+[m[32m        const NGHTTP2_SETTINGS_ENABLE_PUSH: number;[m
[32m+[m[32m        const NGHTTP2_SETTINGS_MAX_CONCURRENT_STREAMS: number;[m
[32m+[m[32m        const NGHTTP2_SETTINGS_INITIAL_WINDOW_SIZE: number;[m
[32m+[m[32m        const NGHTTP2_SETTINGS_MAX_FRAME_SIZE: number;[m
[32m+[m[32m        const NGHTTP2_SETTINGS_MAX_HEADER_LIST_SIZE: number;[m
[32m+[m[32m        const PADDING_STRATEGY_NONE: number;[m
[32m+[m[32m        const PADDING_STRATEGY_MAX: number;[m
[32m+[m[32m        const PADDING_STRATEGY_CALLBACK: number;[m
[32m+[m[32m        const HTTP2_HEADER_STATUS: string;[m
[32m+[m[32m        const HTTP2_HEADER_METHOD: string;[m
[32m+[m[32m        const HTTP2_HEADER_AUTHORITY: string;[m
[32m+[m[32m        const HTTP2_HEADER_SCHEME: string;[m
[32m+[m[32m        const HTTP2_HEADER_PATH: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCEPT_CHARSET: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCEPT_ENCODING: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCEPT_LANGUAGE: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCEPT_RANGES: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCEPT: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCESS_CONTROL_ALLOW_CREDENTIALS: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCESS_CONTROL_ALLOW_HEADERS: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCESS_CONTROL_ALLOW_METHODS: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCESS_CONTROL_ALLOW_ORIGIN: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCESS_CONTROL_EXPOSE_HEADERS: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCESS_CONTROL_REQUEST_HEADERS: string;[m
[32m+[m[32m        const HTTP2_HEADER_ACCESS_CONTROL_REQUEST_METHOD: string;[m
[32m+[m[32m        const HTTP2_HEADER_AGE: string;[m
[32m+[m[32m        const HTTP2_HEADER_ALLOW: string;[m
[32m+[m[32m        const HTTP2_HEADER_AUTHORIZATION: string;[m
[32m+[m[32m        const HTTP2_HEADER_CACHE_CONTROL: string;[m
[32m+[m[32m        const HTTP2_HEADER_CONNECTION: string;[m
[32m+[m[32m        const HTTP2_HEADER_CONTENT_DISPOSITION: string;[m
[32m+[m[32m        const HTTP2_HEADER_CONTENT_ENCODING: string;[m
[32m+[m[32m        const HTTP2_HEADER_CONTENT_LANGUAGE: string;[m
[32m+[m[32m        const HTTP2_HEADER_CONTENT_LENGTH: string;[m
[32m+[m[32m        const HTTP2_HEADER_CONTENT_LOCATION: string;[m
[32m+[m[32m        const HTTP2_HEADER_CONTENT_MD5: string;[m
[32m+[m[32m        const HTTP2_HEADER_CONTENT_RANGE: string;[m
[32m+[m[32m        const HTTP2_HEADER_CONTENT_TYPE: string;[m
[32m+[m[32m        const HTTP2_HEADER_COOKIE: string;[m
[32m+[m[32m        const HTTP2_HEADER_DATE: string;[m
[32m+[m[32m        const HTTP2_HEADER_ETAG: string;[m
[32m+[m[32m        const HTTP2_HEADER_EXPECT: string;[m
[32m+[m[32m        const HTTP2_HEADER_EXPIRES: string;[m
[32m+[m[32m        const HTTP2_HEADER_FROM: string;[m
[32m+[m[32m        const HTTP2_HEADER_HOST: string;[m
[32m+[m[32m        const HTTP2_HEADER_IF_MATCH: string;[m
[32m+[m[32m        const HTTP2_HEADER_IF_MODIFIED_SINCE: string;[m
[32m+[m[32m        const HTTP2_HEADER_IF_NONE_MATCH: string;[m
[32m+[m[32m        const HTTP2_HEADER_IF_RANGE: string;[m
[32m+[m[32m        const HTTP2_HEADER_IF_UNMODIFIED_SINCE: string;[m
[32m+[m[32m        const HTTP2_HEADER_LAST_MODIFIED: string;[m
[32m+[m[32m        const HTTP2_HEADER_LINK: string;[m
[32m+[m[32m        const HTTP2_HEADER_LOCATION: string;[m
[32m+[m[32m        const HTTP2_HEADER_MAX_FORWARDS: string;[m
[32m+[m[32m        const HTTP2_HEADER_PREFER: string;[m
[32m+[m[32m        const HTTP2_HEADER_PROXY_AUTHENTICATE: string;[m
[32m+[m[32m        const HTTP2_HEADER_PROXY_AUTHORIZATION: string;[m
[32m+[m[32m        const HTTP2_HEADER_RANGE: string;[m
[32m+[m[32m        const HTTP2_HEADER_REFERER: string;[m
[32m+[m[32m        const HTTP2_HEADER_REFRESH: string;[m
[32m+[m[32m        const HTTP2_HEADER_RETRY_AFTER: string;[m
[32m+[m[32m        const HTTP2_HEADER_SERVER: string;[m
[32m+[m[32m        const HTTP2_HEADER_SET_COOKIE: string;[m
[32m+[m[32m        const HTTP2_HEADER_STRICT_TRANSPORT_SECURITY: string;[m
[32m+[m[32m        const HTTP2_HEADER_TRANSFER_ENCODING: string;[m
[32m+[m[32m        const HTTP2_HEADER_TE: string;[m
[32m+[m[32m        const HTTP2_HEADER_UPGRADE: string;[m
[32m+[m[32m        const HTTP2_HEADER_USER_AGENT: string;[m
[32m+[m[32m        const HTTP2_HEADER_VARY: string;[m
[32m+[m[32m        const HTTP2_HEADER_VIA: string;[m
[32m+[m[32m        const HTTP2_HEADER_WWW_AUTHENTICATE: string;[m
[32m+[m[32m        const HTTP2_HEADER_HTTP2_SETTINGS: string;[m
[32m+[m[32m        const HTTP2_HEADER_KEEP_ALIVE: string;[m
[32m+[m[32m        const HTTP2_HEADER_PROXY_CONNECTION: string;[m
[32m+[m[32m        const HTTP2_METHOD_ACL: string;[m
[32m+[m[32m        const HTTP2_METHOD_BASELINE_CONTROL: string;[m
[32m+[m[32m        const HTTP2_METHOD_BIND: string;[m
[32m+[m[32m        const HTTP2_METHOD_CHECKIN: string;[m
[32m+[m[32m        const HTTP2_METHOD_CHECKOUT: string;[m
[32m+[m[32m        const HTTP2_METHOD_CONNECT: string;[m
[32m+[m[32m        const HTTP2_METHOD_COPY: string;[m
[32m+[m[32m        const HTTP2_METHOD_DELETE: string;[m
[32m+[m[32m        const HTTP2_METHOD_GET: string;[m
[32m+[m[32m        const HTTP2_METHOD_HEAD: string;[m
[32m+[m[32m        const HTTP2_METHOD_LABEL: string;[m
[32m+[m[32m        const HTTP2_METHOD_LINK: string;[m
[32m+[m[32m        const HTTP2_METHOD_LOCK: string;[m
[32m+[m[32m        const HTTP2_METHOD_MERGE: string;[m
[32m+[m[32m        const HTTP2_METHOD_MKACTIVITY: string;[m
[32m+[m[32m        const HTTP2_METHOD_MKCALENDAR: string;[m
[32m+[m[32m        const HTTP2_METHOD_MKCOL: string;[m
[32m+[m[32m        const HTTP2_METHOD_MKREDIRECTREF: string;[m
[32m+[m[32m        const HTTP2_METHOD_MKWORKSPACE: string;[m
[32m+[m[32m        const HTTP2_METHOD_MOVE: string;[m
[32m+[m[32m        const HTTP2_METHOD_OPTIONS: string;[m
[32m+[m[32m        const HTTP2_METHOD_ORDERPATCH: string;[m
[32m+[m[32m        const HTTP2_METHOD_PATCH: string;[m
[32m+[m[32m        const HTTP2_METHOD_POST: string;[m
[32m+[m[32m        const HTTP2_METHOD_PRI: string;[m
[32m+[m[32m        const HTTP2_METHOD_PROPFIND: string;[m
[32m+[m[32m        const HTTP2_METHOD_PROPPATCH: string;[m
[32m+[m[32m        const HTTP2_METHOD_PUT: string;[m
[32m+[m[32m        const HTTP2_METHOD_REBIND: string;[m
[32m+[m[32m        const HTTP2_METHOD_REPORT: string;[m
[32m+[m[32m        const HTTP2_METHOD_SEARCH: string;[m
[32m+[m[32m        const HTTP2_METHOD_TRACE: string;[m
[32m+[m[32m        const HTTP2_METHOD_UNBIND: string;[m
[32m+[m[32m        const HTTP2_METHOD_UNCHECKOUT: string;[m
[32m+[m[32m        const HTTP2_METHOD_UNLINK: string;[m
[32m+[m[32m        const HTTP2_METHOD_UNLOCK: string;[m
[32m+[m[32m        const HTTP2_METHOD_UPDATE: string;[m
[32m+[m[32m        const HTTP2_METHOD_UPDATEREDIRECTREF: string;[m
[32m+[m[32m        const HTTP2_METHOD_VERSION_CONTROL: string;[m
[32m+[m[32m        const HTTP_STATUS_CONTINUE: number;[m
[32m+[m[32m        const HTTP_STATUS_SWITCHING_PROTOCOLS: number;[m
[32m+[m[32m        const HTTP_STATUS_PROCESSING: number;[m
[32m+[m[32m        const HTTP_STATUS_OK: number;[m
[32m+[m[32m        const HTTP_STATUS_CREATED: number;[m
[32m+[m[32m        const HTTP_STATUS_ACCEPTED: number;[m
[32m+[m[32m        const HTTP_STATUS_NON_AUTHORITATIVE_INFORMATION: number;[m
[32m+[m[32m        const HTTP_STATUS_NO_CONTENT: number;[m
[32m+[m[32m        const HTTP_STATUS_RESET_CONTENT: number;[m
[32m+[m[32m        const HTTP_STATUS_PARTIAL_CONTENT: number;[m
[32m+[m[32m        const HTTP_STATUS_MULTI_STATUS: number;[m
[32m+[m[32m        const HTTP_STATUS_ALREADY_REPORTED: number;[m
[32m+[m[32m        const HTTP_STATUS_IM_USED: number;[m
[32m+[m[32m        const HTTP_STATUS_MULTIPLE_CHOICES: number;[m
[32m+[m[32m        const HTTP_STATUS_MOVED_PERMANENTLY: number;[m
[32m+[m[32m        const HTTP_STATUS_FOUND: number;[m
[32m+[m[32m        const HTTP_STATUS_SEE_OTHER: number;[m
[32m+[m[32m        const HTTP_STATUS_NOT_MODIFIED: number;[m
[32m+[m[32m        const HTTP_STATUS_USE_PROXY: number;[m
[32m+[m[32m        const HTTP_STATUS_TEMPORARY_REDIRECT: number;[m
[32m+[m[32m        const HTTP_STATUS_PERMANENT_REDIRECT: number;[m
[32m+[m[32m        const HTTP_STATUS_BAD_REQUEST: number;[m
[32m+[m[32m        const HTTP_STATUS_UNAUTHORIZED: number;[m
[32m+[m[32m        const HTTP_STATUS_PAYMENT_REQUIRED: number;[m
[32m+[m[32m        const HTTP_STATUS_FORBIDDEN: number;[m
[32m+[m[32m        const HTTP_STATUS_NOT_FOUND: number;[m
[32m+[m[32m        const HTTP_STATUS_METHOD_NOT_ALLOWED: number;[m
[32m+[m[32m        const HTTP_STATUS_NOT_ACCEPTABLE: number;[m
[32m+[m[32m        const HTTP_STATUS_PROXY_AUTHENTICATION_REQUIRED: number;[m
[32m+[m[32m        const HTTP_STATUS_REQUEST_TIMEOUT: number;[m
[32m+[m[32m        const HTTP_STATUS_CONFLICT: number;[m
[32m+[m[32m        const HTTP_STATUS_GONE: number;[m
[32m+[m[32m        const HTTP_STATUS_LENGTH_REQUIRED: number;[m
[32m+[m[32m        const HTTP_STATUS_PRECONDITION_FAILED: number;[m
[32m+[m[32m        const HTTP_STATUS_PAYLOAD_TOO_LARGE: number;[m
[32m+[m[32m        const HTTP_STATUS_URI_TOO_LONG: number;[m
[32m+[m[32m        const HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE: number;[m
[32m+[m[32m        const HTTP_STATUS_RANGE_NOT_SATISFIABLE: number;[m
[32m+[m[32m        const HTTP_STATUS_EXPECTATION_FAILED: number;[m
[32m+[m[32m        const HTTP_STATUS_TEAPOT: number;[m
[32m+[m[32m        const HTTP_STATUS_MISDIRECTED_REQUEST: number;[m
[32m+[m[32m        const HTTP_STATUS_UNPROCESSABLE_ENTITY: number;[m
[32m+[m[32m        const HTTP_STATUS_LOCKED: number;[m
[32m+[m[32m        const HTTP_STATUS_FAILED_DEPENDENCY: number;[m
[32m+[m[32m        const HTTP_STATUS_UNORDERED_COLLECTION: number;[m
[32m+[m[32m        const HTTP_STATUS_UPGRADE_REQUIRED: number;[m
[32m+[m[32m        const HTTP_STATUS_PRECONDITION_REQUIRED: number;[m
[32m+[m[32m        const HTTP_STATUS_TOO_MANY_REQUESTS: number;[m
[32m+[m[32m        const HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE: number;[m
[32m+[m[32m        const HTTP_STATUS_UNAVAILABLE_FOR_LEGAL_REASONS: number;[m
[32m+[m[32m        const HTTP_STATUS_INTERNAL_SERVER_ERROR: number;[m
[32m+[m[32m        const HTTP_STATUS_NOT_IMPLEMENTED: number;[m
[32m+[m[32m        const HTTP_STATUS_BAD_GATEWAY: number;[m
[32m+[m[32m        const HTTP_STATUS_SERVICE_UNAVAILABLE: number;[m
[32m+[m[32m        const HTTP_STATUS_GATEWAY_TIMEOUT: number;[m
[32m+[m[32m        const HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED: number;[m
[32m+[m[32m        const HTTP_STATUS_VARIANT_ALSO_NEGOTIATES: number;[m
[32m+[m[32m        const HTTP_STATUS_INSUFFICIENT_STORAGE: number;[m
[32m+[m[32m        const HTTP_STATUS_LOOP_DETECTED: number;[m
[32m+[m[32m        const HTTP_STATUS_BANDWIDTH_LIMIT_EXCEEDED: number;[m
[32m+[m[32m        const HTTP_STATUS_NOT_EXTENDED: number;[m
[32m+[m[32m        const HTTP_STATUS_NETWORK_AUTHENTICATION_REQUIRED: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This symbol can be set as a property on the HTTP/2 headers object with[m
[32m+[m[32m     * an array value in order to provide a list of headers considered sensitive.[m
[32m+[m[32m     */[m
[32m+[m[32m    export const sensitiveHeaders: symbol;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns an object containing the default settings for an `Http2Session` instance. This method returns a new object instance every time it is called[m
[32m+[m[32m     * so instances returned may be safely modified for use.[m
[32m+[m[32m     * @since v8.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function getDefaultSettings(): Settings;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a `Buffer` instance containing serialized representation of the given[m
[32m+[m[32m     * HTTP/2 settings as specified in the [HTTP/2](https://tools.ietf.org/html/rfc7540) specification. This is intended[m
[32m+[m[32m     * for use with the `HTTP2-Settings` header field.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const http2 = require('node:http2');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const packed = http2.getPackedSettings({ enablePush: false });[m
[32m+[m[32m     *[m
[32m+[m[32m     * console.log(packed.toString('base64'));[m
[32m+[m[32m     * // Prints: AAIAAAAA[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v8.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function getPackedSettings(settings: Settings): Buffer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a `HTTP/2 Settings Object` containing the deserialized settings from[m
[32m+[m[32m     * the given `Buffer` as generated by `http2.getPackedSettings()`.[m
[32m+[m[32m     * @since v8.4.0[m
[32m+[m[32m     * @param buf The packed settings.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function getUnpackedSettings(buf: Uint8Array): Settings;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a `net.Server` instance that creates and manages `Http2Session` instances.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Since there are no browsers known that support [unencrypted HTTP/2](https://http2.github.io/faq/#does-http2-require-encryption), the use of {@link createSecureServer} is necessary when[m
[32m+[m[32m     * communicating[m
[32m+[m[32m     * with browser clients.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const http2 = require('node:http2');[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Create an unencrypted HTTP/2 server.[m
[32m+[m[32m     * // Since there are no browsers known that support[m
[32m+[m[32m     * // unencrypted HTTP/2, the use of `http2.createSecureServer()`[m
[32m+[m[32m     * // is necessary when communicating with browser clients.[m
[32m+[m[32m     * const server = http2.createServer();[m
[32m+[m[32m     *[m
[32m+[m[32m     * server.on('stream', (stream, headers) => {[m
[32m+[m[32m     *   stream.respond({[m
[32m+[m[32m     *     'content-type': 'text/html; charset=utf-8',[m
[32m+[m[32m     *     ':status': 200,[m
[32m+[m[32m     *   });[m
[32m+[m[32m     *   stream.end('<h1>Hello World</h1>');[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * server.listen(8000);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v8.4.0[m
[32m+[m[32m     * @param onRequestHandler See `Compatibility API`[m
[32m+[m[32m     */[m
[32m+[m[32m    export function createServer([m
[32m+[m[32m        onRequestHandler?: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m    ): Http2Server;[m
[32m+[m[32m    export function createServer([m
[32m+[m[32m        options: ServerOptions,[m
[32m+[m[32m        onRequestHandler?: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m    ): Http2Server;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a `tls.Server` instance that creates and manages `Http2Session` instances.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const http2 = require('node:http2');[m
[32m+[m[32m     * const fs = require('node:fs');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const options = {[m
[32m+[m[32m     *   key: fs.readFileSync('server-key.pem'),[m
[32m+[m[32m     *   cert: fs.readFileSync('server-cert.pem'),[m
[32m+[m[32m     * };[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Create a secure HTTP/2 server[m
[32m+[m[32m     * const server = http2.createSecureServer(options);[m
[32m+[m[32m     *[m
[32m+[m[32m     * server.on('stream', (stream, headers) => {[m
[32m+[m[32m     *   stream.respond({[m
[32m+[m[32m     *     'content-type': 'text/html; charset=utf-8',[m
[32m+[m[32m     *     ':status': 200,[m
[32m+[m[32m     *   });[m
[32m+[m[32m     *   stream.end('<h1>Hello World</h1>');[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * server.listen(8443);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v8.4.0[m
[32m+[m[32m     * @param onRequestHandler See `Compatibility API`[m
[32m+[m[32m     */[m
[32m+[m[32m    export function createSecureServer([m
[32m+[m[32m        onRequestHandler?: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m    ): Http2SecureServer;[m
[32m+[m[32m    export function createSecureServer([m
[32m+[m[32m        options: SecureServerOptions,[m
[32m+[m[32m        onRequestHandler?: (request: Http2ServerRequest, response: Http2ServerResponse) => void,[m
[32m+[m[32m    ): Http2SecureServer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a `ClientHttp2Session` instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const http2 = require('node:http2');[m
[32m+[m[32m     * const client = http2.connect('https://localhost:1234');[m
[32m+[m[32m     *[m
[32m+[m[32m     * // Use the client[m
[32m+[m[32m     *[m
[32m+[m[32m     * client.close();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v8.4.0[m
[32m+[m[32m     * @param authority The remote HTTP/2 server to connect to. This must be in the form of a minimal, valid URL with the `http://` or `https://` prefix, host name, and IP port (if a non-default port[m
[32m+[m[32m     * is used). Userinfo (user ID and password), path, querystring, and fragment details in the URL will be ignored.[m
[32m+[m[32m     * @param listener Will be registered as a one-time listener of the {@link 'connect'} event.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function connect([m
[32m+[m[32m        authority: string | url.URL,[m
[32m+[m[32m        listener: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void,[m
[32m+[m[32m    ): ClientHttp2Session;[m
[32m+[m[32m    export function connect([m
[32m+[m[32m        authority: string | url.URL,[m
[32m+[m[32m        options?: ClientSessionOptions | SecureClientSessionOptions,[m
[32m+[m[32m        listener?: (session: ClientHttp2Session, socket: net.Socket | tls.TLSSocket) => void,[m
[32m+[m[32m    ): ClientHttp2Session;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Create an HTTP/2 server session from an existing socket.[m
[32m+[m[32m     * @param socket A Duplex Stream[m
[32m+[m[32m     * @param options Any `{@link createServer}` options can be provided.[m
[32m+[m[32m     * @since v20.12.0[m
[32m+[m[32m     */[m
[32m+[m[32m    export function performServerHandshake(socket: stream.Duplex, options?: ServerOptions): ServerHttp2Session;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:http2" {[m
[32m+[m[32m    export * from "http2";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/https.d.ts b/node_modules/@types/node/https.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..3a821e3[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/https.d.ts[m
[36m@@ -0,0 +1,550 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * HTTPS is the HTTP protocol over TLS/SSL. In Node.js this is implemented as a[m
[32m+[m[32m * separate module.[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/https.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "https" {[m
[32m+[m[32m    import { Duplex } from "node:stream";[m
[32m+[m[32m    import * as tls from "node:tls";[m
[32m+[m[32m    import * as http from "node:http";[m
[32m+[m[32m    import { URL } from "node:url";[m
[32m+[m[32m    type ServerOptions<[m
[32m+[m[32m        Request extends typeof http.IncomingMessage = typeof http.IncomingMessage,[m
[32m+[m[32m        Response extends typeof http.ServerResponse = typeof http.ServerResponse,[m
[32m+[m[32m    > = tls.SecureContextOptions & tls.TlsOptions & http.ServerOptions<Request, Response>;[m
[32m+[m[32m    type RequestOptions =[m
[32m+[m[32m        & http.RequestOptions[m
[32m+[m[32m        & tls.SecureContextOptions[m
[32m+[m[32m        & {[m
[32m+[m[32m            checkServerIdentity?: typeof tls.checkServerIdentity | undefined;[m
[32m+[m[32m            rejectUnauthorized?: boolean | undefined; // Defaults to true[m
[32m+[m[32m            servername?: string | undefined; // SNI TLS Extension[m
[32m+[m[32m        };[m
[32m+[m[32m    interface AgentOptions extends http.AgentOptions, tls.ConnectionOptions {[m
[32m+[m[32m        rejectUnauthorized?: boolean | undefined;[m
[32m+[m[32m        maxCachedSessions?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An `Agent` object for HTTPS similar to `http.Agent`. See {@link request} for more information.[m
[32m+[m[32m     * @since v0.4.5[m
[32m+[m[32m     */[m
[32m+[m[32m    class Agent extends http.Agent {[m
[32m+[m[32m        constructor(options?: AgentOptions);[m
[32m+[m[32m        options: AgentOptions;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface Server<[m
[32m+[m[32m        Request extends typeof http.IncomingMessage = typeof http.IncomingMessage,[m
[32m+[m[32m        Response extends typeof http.ServerResponse = typeof http.ServerResponse,[m
[32m+[m[32m    > extends http.Server<Request, Response> {}[m
[32m+[m[32m    /**[m
[32m+[m[32m     * See `http.Server` for more information.[m
[32m+[m[32m     * @since v0.3.4[m
[32m+[m[32m     */[m
[32m+[m[32m    class Server<[m
[32m+[m[32m        Request extends typeof http.IncomingMessage = typeof http.IncomingMessage,[m
[32m+[m[32m        Response extends typeof http.ServerResponse = typeof http.ServerResponse,[m
[32m+[m[32m    > extends tls.Server {[m
[32m+[m[32m        constructor(requestListener?: http.RequestListener<Request, Response>);[m
[32m+[m[32m        constructor([m
[32m+[m[32m            options: ServerOptions<Request, Response>,[m
[32m+[m[32m            requestListener?: http.RequestListener<Request, Response>,[m
[32m+[m[32m        );[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Closes all connections connected to this server.[m
[32m+[m[32m         * @since v18.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        closeAllConnections(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Closes all connections connected to this server which are not sending a request or waiting for a response.[m
[32m+[m[32m         * @since v18.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        closeIdleConnections(): void;[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "keylog", listener: (line: Buffer, tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "newSession",[m
[32m+[m[32m            listener: (sessionId: Buffer, sessionData: Buffer, callback: (err: Error, resp: Buffer) => void) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "OCSPRequest",[m
[32m+[m[32m            listener: ([m
[32m+[m[32m                certificate: Buffer,[m
[32m+[m[32m                issuer: Buffer,[m
[32m+[m[32m                callback: (err: Error | null, resp: Buffer) => void,[m
[32m+[m[32m            ) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "resumeSession",[m
[32m+[m[32m            listener: (sessionId: Buffer, callback: (err: Error, sessionData: Buffer) => void) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "secureConnection", listener: (tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        addListener(event: "tlsClientError", listener: (err: Error, tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "connection", listener: (socket: Duplex) => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "checkContinue", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        addListener(event: "checkExpectation", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        addListener(event: "clientError", listener: (err: Error, socket: Duplex) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "request", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "upgrade",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        emit(event: string, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: "keylog", line: Buffer, tlsSocket: tls.TLSSocket): boolean;[m
[32m+[m[32m        emit([m
[32m+[m[32m            event: "newSession",[m
[32m+[m[32m            sessionId: Buffer,[m
[32m+[m[32m            sessionData: Buffer,[m
[32m+[m[32m            callback: (err: Error, resp: Buffer) => void,[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        emit([m
[32m+[m[32m            event: "OCSPRequest",[m
[32m+[m[32m            certificate: Buffer,[m
[32m+[m[32m            issuer: Buffer,[m
[32m+[m[32m            callback: (err: Error | null, resp: Buffer) => void,[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        emit(event: "resumeSession", sessionId: Buffer, callback: (err: Error, sessionData: Buffer) => void): boolean;[m
[32m+[m[32m        emit(event: "secureConnection", tlsSocket: tls.TLSSocket): boolean;[m
[32m+[m[32m        emit(event: "tlsClientError", err: Error, tlsSocket: tls.TLSSocket): boolean;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "connection", socket: Duplex): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: "listening"): boolean;[m
[32m+[m[32m        emit([m
[32m+[m[32m            event: "checkContinue",[m
[32m+[m[32m            req: InstanceType<Request>,[m
[32m+[m[32m            res: InstanceType<Response> & {[m
[32m+[m[32m                req: InstanceType<Request>;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        emit([m
[32m+[m[32m            event: "checkExpectation",[m
[32m+[m[32m            req: InstanceType<Request>,[m
[32m+[m[32m            res: InstanceType<Response> & {[m
[32m+[m[32m                req: InstanceType<Request>;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        emit(event: "clientError", err: Error, socket: Duplex): boolean;[m
[32m+[m[32m        emit(event: "connect", req: InstanceType<Request>, socket: Duplex, head: Buffer): boolean;[m
[32m+[m[32m        emit([m
[32m+[m[32m            event: "request",[m
[32m+[m[32m            req: InstanceType<Request>,[m
[32m+[m[32m            res: InstanceType<Response> & {[m
[32m+[m[32m                req: InstanceType<Request>;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): boolean;[m
[32m+[m[32m        emit(event: "upgrade", req: InstanceType<Request>, socket: Duplex, head: Buffer): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "keylog", listener: (line: Buffer, tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "newSession",[m
[32m+[m[32m            listener: (sessionId: Buffer, sessionData: Buffer, callback: (err: Error, resp: Buffer) => void) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "OCSPRequest",[m
[32m+[m[32m            listener: ([m
[32m+[m[32m                certificate: Buffer,[m
[32m+[m[32m                issuer: Buffer,[m
[32m+[m[32m                callback: (err: Error | null, resp: Buffer) => void,[m
[32m+[m[32m            ) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "resumeSession",[m
[32m+[m[32m            listener: (sessionId: Buffer, callback: (err: Error, sessionData: Buffer) => void) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on(event: "secureConnection", listener: (tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        on(event: "tlsClientError", listener: (err: Error, tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "connection", listener: (socket: Duplex) => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "listening", listener: () => void): this;[m
[32m+[m[32m        on(event: "checkContinue", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        on(event: "checkExpectation", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        on(event: "clientError", listener: (err: Error, socket: Duplex) => void): this;[m
[32m+[m[32m        on(event: "connect", listener: (req: InstanceType<Request>, socket: Duplex, head: Buffer) => void): this;[m
[32m+[m[32m        on(event: "request", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        on(event: "upgrade", listener: (req: InstanceType<Request>, socket: Duplex, head: Buffer) => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "keylog", listener: (line: Buffer, tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "newSession",[m
[32m+[m[32m            listener: (sessionId: Buffer, sessionData: Buffer, callback: (err: Error, resp: Buffer) => void) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "OCSPRequest",[m
[32m+[m[32m            listener: ([m
[32m+[m[32m                certificate: Buffer,[m
[32m+[m[32m                issuer: Buffer,[m
[32m+[m[32m                callback: (err: Error | null, resp: Buffer) => void,[m
[32m+[m[32m            ) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "resumeSession",[m
[32m+[m[32m            listener: (sessionId: Buffer, callback: (err: Error, sessionData: Buffer) => void) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: "secureConnection", listener: (tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        once(event: "tlsClientError", listener: (err: Error, tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "connection", listener: (socket: Duplex) => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "listening", listener: () => void): this;[m
[32m+[m[32m        once(event: "checkContinue", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        once(event: "checkExpectation", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        once(event: "clientError", listener: (err: Error, socket: Duplex) => void): this;[m
[32m+[m[32m        once(event: "connect", listener: (req: InstanceType<Request>, socket: Duplex, head: Buffer) => void): this;[m
[32m+[m[32m        once(event: "request", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        once(event: "upgrade", listener: (req: InstanceType<Request>, socket: Duplex, head: Buffer) => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "keylog", listener: (line: Buffer, tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "newSession",[m
[32m+[m[32m            listener: (sessionId: Buffer, sessionData: Buffer, callback: (err: Error, resp: Buffer) => void) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "OCSPRequest",[m
[32m+[m[32m            listener: ([m
[32m+[m[32m                certificate: Buffer,[m
[32m+[m[32m                issuer: Buffer,[m
[32m+[m[32m                callback: (err: Error | null, resp: Buffer) => void,[m
[32m+[m[32m            ) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "resumeSession",[m
[32m+[m[32m            listener: (sessionId: Buffer, callback: (err: Error, sessionData: Buffer) => void) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "secureConnection", listener: (tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        prependListener(event: "tlsClientError", listener: (err: Error, tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "connection", listener: (socket: Duplex) => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "checkContinue", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependListener(event: "checkExpectation", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependListener(event: "clientError", listener: (err: Error, socket: Duplex) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "request", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "upgrade",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "keylog", listener: (line: Buffer, tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "newSession",[m
[32m+[m[32m            listener: (sessionId: Buffer, sessionData: Buffer, callback: (err: Error, resp: Buffer) => void) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "OCSPRequest",[m
[32m+[m[32m            listener: ([m
[32m+[m[32m                certificate: Buffer,[m
[32m+[m[32m                issuer: Buffer,[m
[32m+[m[32m                callback: (err: Error | null, resp: Buffer) => void,[m
[32m+[m[32m            ) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "resumeSession",[m
[32m+[m[32m            listener: (sessionId: Buffer, callback: (err: Error, sessionData: Buffer) => void) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "secureConnection", listener: (tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "tlsClientError", listener: (err: Error, tlsSocket: tls.TLSSocket) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "connection", listener: (socket: Duplex) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "checkContinue", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependOnceListener(event: "checkExpectation", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependOnceListener(event: "clientError", listener: (err: Error, socket: Duplex) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "connect",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "request", listener: http.RequestListener<Request, Response>): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "upgrade",[m
[32m+[m[32m            listener: (req: InstanceType<Request>, socket: Duplex, head: Buffer) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * // curl -k https://localhost:8000/[m
[32m+[m[32m     * const https = require('node:https');[m
[32m+[m[32m     * const fs = require('node:fs');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const options = {[m
[32m+[m[32m     *   key: fs.readFileSync('test/fixtures/keys/agent2-key.pem'),[m
[32m+[m[32m     *   cert: fs.readFileSync('test/fixtures/keys/agent2-cert.pem'),[m
[32m+[m[32m     * };[m
[32m+[m[32m     *[m
[32m+[m[32m     * https.createServer(options, (req, res) => {[m
[32m+[m[32m     *   res.writeHead(200);[m
[32m+[m[32m     *   res.end('hello world\n');[m
[32m+[m[32m     * }).listen(8000);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Or[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const https = require('node:https');[m
[32m+[m[32m     * const fs = require('node:fs');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const options = {[m
[32m+[m[32m     *   pfx: fs.readFileSync('test/fixtures/test_cert.pfx'),[m
[32m+[m[32m     *   passphrase: 'sample',[m
[32m+[m[32m     * };[m
[32m+[m[32m     *[m
[32m+[m[32m     * https.createServer(options, (req, res) => {[m
[32m+[m[32m     *   res.writeHead(200);[m
[32m+[m[32m     *   res.end('hello world\n');[m
[32m+[m[32m     * }).listen(8000);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.3.4[m
[32m+[m[32m     * @param options Accepts `options` from `createServer`, `createSecureContext` and `createServer`.[m
[32m+[m[32m     * @param requestListener A listener to be added to the `'request'` event.[m
[32m+[m[32m     */[m
[32m+[m[32m    function createServer<[m
[32m+[m[32m        Request extends typeof http.IncomingMessage = typeof http.IncomingMessage,[m
[32m+[m[32m        Response extends typeof http.ServerResponse = typeof http.ServerResponse,[m
[32m+[m[32m    >(requestListener?: http.RequestListener<Request, Response>): Server<Request, Response>;[m
[32m+[m[32m    function createServer<[m
[32m+[m[32m        Request extends typeof http.IncomingMessage = typeof http.IncomingMessage,[m
[32m+[m[32m        Response extends typeof http.ServerResponse = typeof http.ServerResponse,[m
[32m+[m[32m    >([m
[32m+[m[32m        options: ServerOptions<Request, Response>,[m
[32m+[m[32m        requestListener?: http.RequestListener<Request, Response>,[m
[32m+[m[32m    ): Server<Request, Response>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Makes a request to a secure web server.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The following additional `options` from `tls.connect()` are also accepted: `ca`, `cert`, `ciphers`, `clientCertEngine`, `crl`, `dhparam`, `ecdhCurve`, `honorCipherOrder`, `key`, `passphrase`,[m
[32m+[m[32m     * `pfx`, `rejectUnauthorized`, `secureOptions`, `secureProtocol`, `servername`, `sessionIdContext`, `highWaterMark`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `options` can be an object, a string, or a `URL` object. If `options` is a[m
[32m+[m[32m     * string, it is automatically parsed with `new URL()`. If it is a `URL` object, it will be automatically converted to an ordinary `options` object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `https.request()` returns an instance of the `http.ClientRequest` class. The `ClientRequest` instance is a writable stream. If one needs to[m
[32m+[m[32m     * upload a file with a POST request, then write to the `ClientRequest` object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const https = require('node:https');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const options = {[m
[32m+[m[32m     *   hostname: 'encrypted.google.com',[m
[32m+[m[32m     *   port: 443,[m
[32m+[m[32m     *   path: '/',[m
[32m+[m[32m     *   method: 'GET',[m
[32m+[m[32m     * };[m
[32m+[m[32m     *[m
[32m+[m[32m     * const req = https.request(options, (res) => {[m
[32m+[m[32m     *   console.log('statusCode:', res.statusCode);[m
[32m+[m[32m     *   console.log('headers:', res.headers);[m
[32m+[m[32m     *[m
[32m+[m[32m     *   res.on('data', (d) => {[m
[32m+[m[32m     *     process.stdout.write(d);[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * req.on('error', (e) => {[m
[32m+[m[32m     *   console.error(e);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * req.end();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example using options from `tls.connect()`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const options = {[m
[32m+[m[32m     *   hostname: 'encrypted.google.com',[m
[32m+[m[32m     *   port: 443,[m
[32m+[m[32m     *   path: '/',[m
[32m+[m[32m     *   method: 'GET',[m
[32m+[m[32m     *   key: fs.readFileSync('test/fixtures/keys/agent2-key.pem'),[m
[32m+[m[32m     *   cert: fs.readFileSync('test/fixtures/keys/agent2-cert.pem'),[m
[32m+[m[32m     * };[m
[32m+[m[32m     * options.agent = new https.Agent(options);[m
[32m+[m[32m     *[m
[32m+[m[32m     * const req = https.request(options, (res) => {[m
[32m+[m[32m     *   // ...[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Alternatively, opt out of connection pooling by not using an `Agent`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const options = {[m
[32m+[m[32m     *   hostname: 'encrypted.google.com',[m
[32m+[m[32m     *   port: 443,[m
[32m+[m[32m     *   path: '/',[m
[32m+[m[32m     *   method: 'GET',[m
[32m+[m[32m     *   key: fs.readFileSync('test/fixtures/keys/agent2-key.pem'),[m
[32m+[m[32m     *   cert: fs.readFileSync('test/fixtures/keys/agent2-cert.pem'),[m
[32m+[m[32m     *   agent: false,[m
[32m+[m[32m     * };[m
[32m+[m[32m     *[m
[32m+[m[32m     * const req = https.request(options, (res) => {[m
[32m+[m[32m     *   // ...[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example using a `URL` as `options`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const options = new URL('https://abc:xyz@example.com');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const req = https.request(options, (res) => {[m
[32m+[m[32m     *   // ...[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Example pinning on certificate fingerprint, or the public key (similar to`pin-sha256`):[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const tls = require('node:tls');[m
[32m+[m[32m     * const https = require('node:https');[m
[32m+[m[32m     * const crypto = require('node:crypto');[m
[32m+[m[32m     *[m
[32m+[m[32m     * function sha256(s) {[m
[32m+[m[32m     *   return crypto.createHash('sha256').update(s).digest('base64');[m
[32m+[m[32m     * }[m
[32m+[m[32m     * const options = {[m
[32m+[m[32m     *   hostname: 'github.com',[m
[32m+[m[32m     *   port: 443,[m
[32m+[m[32m     *   path: '/',[m
[32m+[m[32m     *   method: 'GET',[m
[32m+[m[32m     *   checkServerIdentity: function(host, cert) {[m
[32m+[m[32m     *     // Make sure the certificate is issued to the host we are connected to[m
[32m+[m[32m     *     const err = tls.checkServerIdentity(host, cert);[m
[32m+[m[32m     *     if (err) {[m
[32m+[m[32m     *       return err;[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *[m
[32m+[m[32m     *     // Pin the public key, similar to HPKP pin-sha256 pinning[m
[32m+[m[32m     *     const pubkey256 = 'pL1+qb9HTMRZJmuC/bB/ZI9d302BYrrqiVuRyW+DGrU=';[m
[32m+[m[32m     *     if (sha256(cert.pubkey) !== pubkey256) {[m
[32m+[m[32m     *       const msg = 'Certificate verification error: ' +[m
[32m+[m[32m     *         `The public key of '${cert.subject.CN}' ` +[m
[32m+[m[32m     *         'does not match our pinned fingerprint';[m
[32m+[m[32m     *       return new Error(msg);[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *[m
[32m+[m[32m     *     // Pin the exact certificate, rather than the pub key[m
[32m+[m[32m     *     const cert256 = '25:FE:39:32:D9:63:8C:8A:FC:A1:9A:29:87:' +[m
[32m+[m[32m     *       'D8:3E:4C:1D:98:DB:71:E4:1A:48:03:98:EA:22:6A:BD:8B:93:16';[m
[32m+[m[32m     *     if (cert.fingerprint256 !== cert256) {[m
[32m+[m[32m     *       const msg = 'Certificate verification error: ' +[m
[32m+[m[32m     *         `The certificate of '${cert.subject.CN}' ` +[m
[32m+[m[32m     *         'does not match our pinned fingerprint';[m
[32m+[m[32m     *       return new Error(msg);[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *[m
[32m+[m[32m     *     // This loop is informational only.[m
[32m+[m[32m     *     // Print the certificate and public key fingerprints of all certs in the[m
[32m+[m[32m     *     // chain. Its common to pin the public key of the issuer on the public[m
[32m+[m[32m     *     // internet, while pinning the public key of the service in sensitive[m
[32m+[m[32m     *     // environments.[m
[32m+[m[32m     *     do {[m
[32m+[m[32m     *       console.log('Subject Common Name:', cert.subject.CN);[m
[32m+[m[32m     *       console.log('  Certificate SHA256 fingerprint:', cert.fingerprint256);[m
[32m+[m[32m     *[m
[32m+[m[32m     *       hash = crypto.createHash('sha256');[m
[32m+[m[32m     *       console.log('  Public key ping-sha256:', sha256(cert.pubkey));[m
[32m+[m[32m     *[m
[32m+[m[32m     *       lastprint256 = cert.fingerprint256;[m
[32m+[m[32m     *       cert = cert.issuerCertificate;[m
[32m+[m[32m     *     } while (cert.fingerprint256 !== lastprint256);[m
[32m+[m[32m     *[m
[32m+[m[32m     *   },[m
[32m+[m[32m     * };[m
[32m+[m[32m     *[m
[32m+[m[32m     * options.agent = new https.Agent(options);[m
[32m+[m[32m     * const req = https.request(options, (res) => {[m
[32m+[m[32m     *   console.log('All OK. Server matched our pinned cert or public key');[m
[32m+[m[32m     *   console.log('statusCode:', res.statusCode);[m
[32m+[m[32m     *   // Print the HPKP values[m
[32m+[m[32m     *   console.log('headers:', res.headers['public-key-pins']);[m
[32m+[m[32m     *[m
[32m+[m[32m     *   res.on('data', (d) => {});[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * req.on('error', (e) => {[m
[32m+[m[32m     *   console.error(e.message);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * req.end();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Outputs for example:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```text[m
[32m+[m[32m     * Subject Common Name: github.com[m
[32m+[m[32m     *   Certificate SHA256 fingerprint: 25:FE:39:32:D9:63:8C:8A:FC:A1:9A:29:87:D8:3E:4C:1D:98:DB:71:E4:1A:48:03:98:EA:22:6A:BD:8B:93:16[m
[32m+[m[32m     *   Public key ping-sha256: pL1+qb9HTMRZJmuC/bB/ZI9d302BYrrqiVuRyW+DGrU=[m
[32m+[m[32m     * Subject Common Name: DigiCert SHA2 Extended Validation Server CA[m
[32m+[m[32m     *   Certificate SHA256 fingerprint: 40:3E:06:2A:26:53:05:91:13:28:5B:AF:80:A0:D4:AE:42:2C:84:8C:9F:78:FA:D0:1F:C9:4B:C5:B8:7F:EF:1A[m
[32m+[m[32m     *   Public key ping-sha256: RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=[m
[32m+[m[32m     * Subject Common Name: DigiCert High Assurance EV Root CA[m
[32m+[m[32m     *   Certificate SHA256 fingerprint: 74:31:E5:F4:C3:C1:CE:46:90:77:4F:0B:61:E0:54:40:88:3B:A9:A0:1E:D0:0B:A6:AB:D7:80:6E:D3:B1:18:CF[m
[32m+[m[32m     *   Public key ping-sha256: WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=[m
[32m+[m[32m     * All OK. Server matched our pinned cert or public key[m
[32m+[m[32m     * statusCode: 200[m
[32m+[m[32m     * headers: max-age=0; pin-sha256="WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18="; pin-sha256="RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=";[m
[32m+[m[32m     * pin-sha256="k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws="; pin-sha256="K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q="; pin-sha256="IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=";[m
[32m+[m[32m     * pin-sha256="iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0="; pin-sha256="LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A="; includeSubDomains[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.3.6[m
[32m+[m[32m     * @param options Accepts all `options` from `request`, with some differences in default values:[m
[32m+[m[32m     */[m
[32m+[m[32m    function request([m
[32m+[m[32m        options: RequestOptions | string | URL,[m
[32m+[m[32m        callback?: (res: http.IncomingMessage) => void,[m
[32m+[m[32m    ): http.ClientRequest;[m
[32m+[m[32m    function request([m
[32m+[m[32m        url: string | URL,[m
[32m+[m[32m        options: RequestOptions,[m
[32m+[m[32m        callback?: (res: http.IncomingMessage) => void,[m
[32m+[m[32m    ): http.ClientRequest;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Like `http.get()` but for HTTPS.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `options` can be an object, a string, or a `URL` object. If `options` is a[m
[32m+[m[32m     * string, it is automatically parsed with `new URL()`. If it is a `URL` object, it will be automatically converted to an ordinary `options` object.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const https = require('node:https');[m
[32m+[m[32m     *[m
[32m+[m[32m     * https.get('https://encrypted.google.com/', (res) => {[m
[32m+[m[32m     *   console.log('statusCode:', res.statusCode);[m
[32m+[m[32m     *   console.log('headers:', res.headers);[m
[32m+[m[32m     *[m
[32m+[m[32m     *   res.on('data', (d) => {[m
[32m+[m[32m     *     process.stdout.write(d);[m
[32m+[m[32m     *   });[m
[32m+[m[32m     *[m
[32m+[m[32m     * }).on('error', (e) => {[m
[32m+[m[32m     *   console.error(e);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.3.6[m
[32m+[m[32m     * @param options Accepts the same `options` as {@link request}, with the `method` always set to `GET`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function get([m
[32m+[m[32m        options: RequestOptions | string | URL,[m
[32m+[m[32m        callback?: (res: http.IncomingMessage) => void,[m
[32m+[m[32m    ): http.ClientRequest;[m
[32m+[m[32m    function get([m
[32m+[m[32m        url: string | URL,[m
[32m+[m[32m        options: RequestOptions,[m
[32m+[m[32m        callback?: (res: http.IncomingMessage) => void,[m
[32m+[m[32m    ): http.ClientRequest;[m
[32m+[m[32m    let globalAgent: Agent;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:https" {[m
[32m+[m[32m    export * from "https";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/index.d.ts b/node_modules/@types/node/index.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..e575985[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/index.d.ts[m
[36m@@ -0,0 +1,90 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * License for programmatically and manually incorporated[m
[32m+[m[32m * documentation aka. `JSDoc` from https://github.com/nodejs/node/tree/master/doc[m
[32m+[m[32m *[m
[32m+[m[32m * Copyright Node.js contributors. All rights reserved.[m
[32m+[m[32m * Permission is hereby granted, free of charge, to any person obtaining a copy[m
[32m+[m[32m * of this software and associated documentation files (the "Software"), to[m
[32m+[m[32m * deal in the Software without restriction, including without limitation the[m
[32m+[m[32m * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or[m
[32m+[m[32m * sell copies of the Software, and to permit persons to whom the Software is[m
[32m+[m[32m * furnished to do so, subject to the following conditions:[m
[32m+[m[32m *[m
[32m+[m[32m * The above copyright notice and this permission notice shall be included in[m
[32m+[m[32m * all copies or substantial portions of the Software.[m
[32m+[m[32m *[m
[32m+[m[32m * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR[m
[32m+[m[32m * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,[m
[32m+[m[32m * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE[m
[32m+[m[32m * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER[m
[32m+[m[32m * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING[m
[32m+[m[32m * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS[m
[32m+[m[32m * IN THE SOFTWARE.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m// NOTE: These definitions support NodeJS and TypeScript 4.9+.[m
[32m+[m
[32m+[m[32m// Reference required types from the default lib:[m
[32m+[m[32m/// <reference lib="es2020" />[m
[32m+[m[32m/// <reference lib="esnext.asynciterable" />[m
[32m+[m[32m/// <reference lib="esnext.intl" />[m
[32m+[m[32m/// <reference lib="esnext.bigint" />[m
[32m+[m
[32m+[m[32m// Base definitions for all NodeJS modules that are not specific to any version of TypeScript:[m
[32m+[m[32m/// <reference path="assert.d.ts" />[m
[32m+[m[32m/// <reference path="assert/strict.d.ts" />[m
[32m+[m[32m/// <reference path="globals.d.ts" />[m
[32m+[m[32m/// <reference path="async_hooks.d.ts" />[m
[32m+[m[32m/// <reference path="buffer.d.ts" />[m
[32m+[m[32m/// <reference path="child_process.d.ts" />[m
[32m+[m[32m/// <reference path="cluster.d.ts" />[m
[32m+[m[32m/// <reference path="console.d.ts" />[m
[32m+[m[32m/// <reference path="constants.d.ts" />[m
[32m+[m[32m/// <reference path="crypto.d.ts" />[m
[32m+[m[32m/// <reference path="dgram.d.ts" />[m
[32m+[m[32m/// <reference path="diagnostics_channel.d.ts" />[m
[32m+[m[32m/// <reference path="dns.d.ts" />[m
[32m+[m[32m/// <reference path="dns/promises.d.ts" />[m
[32m+[m[32m/// <reference path="dns/promises.d.ts" />[m
[32m+[m[32m/// <reference path="domain.d.ts" />[m
[32m+[m[32m/// <reference path="dom-events.d.ts" />[m
[32m+[m[32m/// <reference path="events.d.ts" />[m
[32m+[m[32m/// <reference path="fs.d.ts" />[m
[32m+[m[32m/// <reference path="fs/promises.d.ts" />[m
[32m+[m[32m/// <reference path="http.d.ts" />[m
[32m+[m[32m/// <reference path="http2.d.ts" />[m
[32m+[m[32m/// <reference path="https.d.ts" />[m
[32m+[m[32m/// <reference path="inspector.d.ts" />[m
[32m+[m[32m/// <reference path="module.d.ts" />[m
[32m+[m[32m/// <reference path="net.d.ts" />[m
[32m+[m[32m/// <reference path="os.d.ts" />[m
[32m+[m[32m/// <reference path="path.d.ts" />[m
[32m+[m[32m/// <reference path="perf_hooks.d.ts" />[m
[32m+[m[32m/// <reference path="process.d.ts" />[m
[32m+[m[32m/// <reference path="punycode.d.ts" />[m
[32m+[m[32m/// <reference path="querystring.d.ts" />[m
[32m+[m[32m/// <reference path="readline.d.ts" />[m
[32m+[m[32m/// <reference path="readline/promises.d.ts" />[m
[32m+[m[32m/// <reference path="repl.d.ts" />[m
[32m+[m[32m/// <reference path="sea.d.ts" />[m
[32m+[m[32m/// <reference path="sqlite.d.ts" />[m
[32m+[m[32m/// <reference path="stream.d.ts" />[m
[32m+[m[32m/// <reference path="stream/promises.d.ts" />[m
[32m+[m[32m/// <reference path="stream/consumers.d.ts" />[m
[32m+[m[32m/// <reference path="stream/web.d.ts" />[m
[32m+[m[32m/// <reference path="string_decoder.d.ts" />[m
[32m+[m[32m/// <reference path="test.d.ts" />[m
[32m+[m[32m/// <reference path="timers.d.ts" />[m
[32m+[m[32m/// <reference path="timers/promises.d.ts" />[m
[32m+[m[32m/// <reference path="tls.d.ts" />[m
[32m+[m[32m/// <reference path="trace_events.d.ts" />[m
[32m+[m[32m/// <reference path="tty.d.ts" />[m
[32m+[m[32m/// <reference path="url.d.ts" />[m
[32m+[m[32m/// <reference path="util.d.ts" />[m
[32m+[m[32m/// <reference path="v8.d.ts" />[m
[32m+[m[32m/// <reference path="vm.d.ts" />[m
[32m+[m[32m/// <reference path="wasi.d.ts" />[m
[32m+[m[32m/// <reference path="worker_threads.d.ts" />[m
[32m+[m[32m/// <reference path="zlib.d.ts" />[m
[32m+[m
[32m+[m[32m/// <reference path="globals.global.d.ts" />[m
[1mdiff --git a/node_modules/@types/node/inspector.d.ts b/node_modules/@types/node/inspector.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..9af410a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/inspector.d.ts[m
[36m@@ -0,0 +1,2746 @@[m
[32m+[m[32m// Type definitions for inspector[m
[32m+[m
[32m+[m[32m// These definitions are auto-generated.[m
[32m+[m[32m// Please see https://github.com/DefinitelyTyped/DefinitelyTyped/pull/19330[m
[32m+[m[32m// for more information.[m
[32m+[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:inspector` module provides an API for interacting with the V8[m
[32m+[m[32m * inspector.[m
[32m+[m[32m *[m
[32m+[m[32m * It can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import * as inspector from 'node:inspector/promises';[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * or[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import * as inspector from 'node:inspector';[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/inspector.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module 'inspector' {[m
[32m+[m[32m    import EventEmitter = require('node:events');[m
[32m+[m[32m    interface InspectorNotification<T> {[m
[32m+[m[32m        method: string;[m
[32m+[m[32m        params: T;[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace Schema {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Description of the protocol domain.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface Domain {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Domain name.[m
[32m+[m[32m             */[m
[32m+[m[32m            name: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Domain version.[m
[32m+[m[32m             */[m
[32m+[m[32m            version: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetDomainsReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * List of supported domains.[m
[32m+[m[32m             */[m
[32m+[m[32m            domains: Domain[];[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace Runtime {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Unique script identifier.[m
[32m+[m[32m         */[m
[32m+[m[32m        type ScriptId = string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Unique object identifier.[m
[32m+[m[32m         */[m
[32m+[m[32m        type RemoteObjectId = string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Primitive value which cannot be JSON-stringified.[m
[32m+[m[32m         */[m
[32m+[m[32m        type UnserializableValue = string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Mirror object referencing original JavaScript object.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface RemoteObject {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object type.[m
[32m+[m[32m             */[m
[32m+[m[32m            type: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object subtype hint. Specified for <code>object</code> type values only.[m
[32m+[m[32m             */[m
[32m+[m[32m            subtype?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object class (constructor) name. Specified for <code>object</code> type values only.[m
[32m+[m[32m             */[m
[32m+[m[32m            className?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Remote object value in case of primitive values or JSON values (if it was requested).[m
[32m+[m[32m             */[m
[32m+[m[32m            value?: any;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Primitive value which can not be JSON-stringified does not have <code>value</code>, but gets this property.[m
[32m+[m[32m             */[m
[32m+[m[32m            unserializableValue?: UnserializableValue | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * String representation of the object.[m
[32m+[m[32m             */[m
[32m+[m[32m            description?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Unique object identifier (for non-primitive values).[m
[32m+[m[32m             */[m
[32m+[m[32m            objectId?: RemoteObjectId | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Preview containing abbreviated property values. Specified for <code>object</code> type values only.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            preview?: ObjectPreview | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            customPreview?: CustomPreview | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        interface CustomPreview {[m
[32m+[m[32m            header: string;[m
[32m+[m[32m            hasBody: boolean;[m
[32m+[m[32m            formatterObjectId: RemoteObjectId;[m
[32m+[m[32m            bindRemoteObjectFunctionId: RemoteObjectId;[m
[32m+[m[32m            configObjectId?: RemoteObjectId | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Object containing abbreviated remote object value.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        interface ObjectPreview {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object type.[m
[32m+[m[32m             */[m
[32m+[m[32m            type: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object subtype hint. Specified for <code>object</code> type values only.[m
[32m+[m[32m             */[m
[32m+[m[32m            subtype?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * String representation of the object.[m
[32m+[m[32m             */[m
[32m+[m[32m            description?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True iff some of the properties or entries of the original object did not fit.[m
[32m+[m[32m             */[m
[32m+[m[32m            overflow: boolean;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * List of the properties.[m
[32m+[m[32m             */[m
[32m+[m[32m            properties: PropertyPreview[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * List of the entries. Specified for <code>map</code> and <code>set</code> subtype values only.[m
[32m+[m[32m             */[m
[32m+[m[32m            entries?: EntryPreview[] | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        interface PropertyPreview {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Property name.[m
[32m+[m[32m             */[m
[32m+[m[32m            name: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object type. Accessor means that the property itself is an accessor property.[m
[32m+[m[32m             */[m
[32m+[m[32m            type: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * User-friendly property value string.[m
[32m+[m[32m             */[m
[32m+[m[32m            value?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Nested value preview.[m
[32m+[m[32m             */[m
[32m+[m[32m            valuePreview?: ObjectPreview | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object subtype hint. Specified for <code>object</code> type values only.[m
[32m+[m[32m             */[m
[32m+[m[32m            subtype?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        interface EntryPreview {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Preview of the key. Specified for map-like collection entries.[m
[32m+[m[32m             */[m
[32m+[m[32m            key?: ObjectPreview | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Preview of the value.[m
[32m+[m[32m             */[m
[32m+[m[32m            value: ObjectPreview;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Object property descriptor.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface PropertyDescriptor {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Property name or symbol description.[m
[32m+[m[32m             */[m
[32m+[m[32m            name: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The value associated with the property.[m
[32m+[m[32m             */[m
[32m+[m[32m            value?: RemoteObject | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True if the value associated with the property may be changed (data descriptors only).[m
[32m+[m[32m             */[m
[32m+[m[32m            writable?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A function which serves as a getter for the property, or <code>undefined</code> if there is no getter (accessor descriptors only).[m
[32m+[m[32m             */[m
[32m+[m[32m            get?: RemoteObject | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A function which serves as a setter for the property, or <code>undefined</code> if there is no setter (accessor descriptors only).[m
[32m+[m[32m             */[m
[32m+[m[32m            set?: RemoteObject | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object.[m
[32m+[m[32m             */[m
[32m+[m[32m            configurable: boolean;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True if this property shows up during enumeration of the properties on the corresponding object.[m
[32m+[m[32m             */[m
[32m+[m[32m            enumerable: boolean;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True if the result was thrown during the evaluation.[m
[32m+[m[32m             */[m
[32m+[m[32m            wasThrown?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True if the property is owned for the object.[m
[32m+[m[32m             */[m
[32m+[m[32m            isOwn?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Property symbol object, if the property is of the <code>symbol</code> type.[m
[32m+[m[32m             */[m
[32m+[m[32m            symbol?: RemoteObject | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Object internal property descriptor. This property isn't normally visible in JavaScript code.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface InternalPropertyDescriptor {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Conventional property name.[m
[32m+[m[32m             */[m
[32m+[m[32m            name: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The value associated with the property.[m
[32m+[m[32m             */[m
[32m+[m[32m            value?: RemoteObject | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Represents function call argument. Either remote object id <code>objectId</code>, primitive <code>value</code>, unserializable primitive value or neither of (for undefined) them should be specified.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface CallArgument {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Primitive value or serializable javascript object.[m
[32m+[m[32m             */[m
[32m+[m[32m            value?: any;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Primitive value which can not be JSON-stringified.[m
[32m+[m[32m             */[m
[32m+[m[32m            unserializableValue?: UnserializableValue | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Remote object handle.[m
[32m+[m[32m             */[m
[32m+[m[32m            objectId?: RemoteObjectId | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Id of an execution context.[m
[32m+[m[32m         */[m
[32m+[m[32m        type ExecutionContextId = number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Description of an isolated world.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface ExecutionContextDescription {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Unique id of the execution context. It can be used to specify in which execution context script evaluation should be performed.[m
[32m+[m[32m             */[m
[32m+[m[32m            id: ExecutionContextId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Execution context origin.[m
[32m+[m[32m             */[m
[32m+[m[32m            origin: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Human readable name describing given context.[m
[32m+[m[32m             */[m
[32m+[m[32m            name: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Embedder-specific auxiliary data.[m
[32m+[m[32m             */[m
[32m+[m[32m            auxData?: {} | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Detailed information about exception (or error) that was thrown during script compilation or execution.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface ExceptionDetails {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception id.[m
[32m+[m[32m             */[m
[32m+[m[32m            exceptionId: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception text, which should be used together with exception object when available.[m
[32m+[m[32m             */[m
[32m+[m[32m            text: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Line number of the exception location (0-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            lineNumber: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Column number of the exception location (0-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            columnNumber: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Script ID of the exception location.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId?: ScriptId | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * URL of the exception location, to be used when the script was not reported.[m
[32m+[m[32m             */[m
[32m+[m[32m            url?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript stack trace if available.[m
[32m+[m[32m             */[m
[32m+[m[32m            stackTrace?: StackTrace | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception object if available.[m
[32m+[m[32m             */[m
[32m+[m[32m            exception?: RemoteObject | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the context where exception happened.[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextId?: ExecutionContextId | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Number of milliseconds since epoch.[m
[32m+[m[32m         */[m
[32m+[m[32m        type Timestamp = number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Stack entry for runtime errors and assertions.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface CallFrame {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript function name.[m
[32m+[m[32m             */[m
[32m+[m[32m            functionName: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script id.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: ScriptId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script name or url.[m
[32m+[m[32m             */[m
[32m+[m[32m            url: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script line number (0-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            lineNumber: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script column number (0-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            columnNumber: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Call frames for assertions or error messages.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface StackTrace {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * String label of this stack trace. For async traces this may be a name of the function that initiated the async call.[m
[32m+[m[32m             */[m
[32m+[m[32m            description?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript function name.[m
[32m+[m[32m             */[m
[32m+[m[32m            callFrames: CallFrame[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Asynchronous JavaScript stack trace that preceded this stack, if available.[m
[32m+[m[32m             */[m
[32m+[m[32m            parent?: StackTrace | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Asynchronous JavaScript stack trace that preceded this stack, if available.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            parentId?: StackTraceId | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Unique identifier of current debugger.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        type UniqueDebuggerId = string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If <code>debuggerId</code> is set stack trace comes from another debugger and can be resolved there. This allows to track cross-debugger calls. See <code>Runtime.StackTrace</code> and <code>Debugger.paused</code> for usages.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        interface StackTraceId {[m
[32m+[m[32m            id: string;[m
[32m+[m[32m            debuggerId?: UniqueDebuggerId | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EvaluateParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Expression to evaluate.[m
[32m+[m[32m             */[m
[32m+[m[32m            expression: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Symbolic group name that can be used to release multiple objects.[m
[32m+[m[32m             */[m
[32m+[m[32m            objectGroup?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Determines whether Command Line API should be available during the evaluation.[m
[32m+[m[32m             */[m
[32m+[m[32m            includeCommandLineAPI?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.[m
[32m+[m[32m             */[m
[32m+[m[32m            silent?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Specifies in which execution context to perform evaluation. If the parameter is omitted the evaluation will be performed in the context of the inspected page.[m
[32m+[m[32m             */[m
[32m+[m[32m            contextId?: ExecutionContextId | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether the result is expected to be a JSON object that should be sent by value.[m
[32m+[m[32m             */[m
[32m+[m[32m            returnByValue?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether preview should be generated for the result.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            generatePreview?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether execution should be treated as initiated by user in the UI.[m
[32m+[m[32m             */[m
[32m+[m[32m            userGesture?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether execution should <code>await</code> for resulting value and return once awaited promise is resolved.[m
[32m+[m[32m             */[m
[32m+[m[32m            awaitPromise?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface AwaitPromiseParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the promise.[m
[32m+[m[32m             */[m
[32m+[m[32m            promiseObjectId: RemoteObjectId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether the result is expected to be a JSON object that should be sent by value.[m
[32m+[m[32m             */[m
[32m+[m[32m            returnByValue?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether preview should be generated for the result.[m
[32m+[m[32m             */[m
[32m+[m[32m            generatePreview?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface CallFunctionOnParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Declaration of the function to call.[m
[32m+[m[32m             */[m
[32m+[m[32m            functionDeclaration: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the object to call function on. Either objectId or executionContextId should be specified.[m
[32m+[m[32m             */[m
[32m+[m[32m            objectId?: RemoteObjectId | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Call arguments. All call arguments must belong to the same JavaScript world as the target object.[m
[32m+[m[32m             */[m
[32m+[m[32m            arguments?: CallArgument[] | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.[m
[32m+[m[32m             */[m
[32m+[m[32m            silent?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether the result is expected to be a JSON object which should be sent by value.[m
[32m+[m[32m             */[m
[32m+[m[32m            returnByValue?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether preview should be generated for the result.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            generatePreview?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether execution should be treated as initiated by user in the UI.[m
[32m+[m[32m             */[m
[32m+[m[32m            userGesture?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether execution should <code>await</code> for resulting value and return once awaited promise is resolved.[m
[32m+[m[32m             */[m
[32m+[m[32m            awaitPromise?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Specifies execution context which global object will be used to call function on. Either executionContextId or objectId should be specified.[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextId?: ExecutionContextId | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Symbolic group name that can be used to release multiple objects. If objectGroup is not specified and objectId is, objectGroup will be inherited from object.[m
[32m+[m[32m             */[m
[32m+[m[32m            objectGroup?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetPropertiesParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the object to return properties for.[m
[32m+[m[32m             */[m
[32m+[m[32m            objectId: RemoteObjectId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * If true, returns properties belonging only to the element itself, not to its prototype chain.[m
[32m+[m[32m             */[m
[32m+[m[32m            ownProperties?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * If true, returns accessor properties (with getter/setter) only; internal properties are not returned either.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            accessorPropertiesOnly?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether preview should be generated for the results.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            generatePreview?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ReleaseObjectParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the object to release.[m
[32m+[m[32m             */[m
[32m+[m[32m            objectId: RemoteObjectId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ReleaseObjectGroupParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Symbolic object group name.[m
[32m+[m[32m             */[m
[32m+[m[32m            objectGroup: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetCustomObjectFormatterEnabledParameterType {[m
[32m+[m[32m            enabled: boolean;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface CompileScriptParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Expression to compile.[m
[32m+[m[32m             */[m
[32m+[m[32m            expression: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Source url to be set for the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            sourceURL: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Specifies whether the compiled script should be persisted.[m
[32m+[m[32m             */[m
[32m+[m[32m            persistScript: boolean;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Specifies in which execution context to perform script run. If the parameter is omitted the evaluation will be performed in the context of the inspected page.[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextId?: ExecutionContextId | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RunScriptParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of the script to run.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: ScriptId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Specifies in which execution context to perform script run. If the parameter is omitted the evaluation will be performed in the context of the inspected page.[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextId?: ExecutionContextId | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Symbolic group name that can be used to release multiple objects.[m
[32m+[m[32m             */[m
[32m+[m[32m            objectGroup?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.[m
[32m+[m[32m             */[m
[32m+[m[32m            silent?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Determines whether Command Line API should be available during the evaluation.[m
[32m+[m[32m             */[m
[32m+[m[32m            includeCommandLineAPI?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether the result is expected to be a JSON object which should be sent by value.[m
[32m+[m[32m             */[m
[32m+[m[32m            returnByValue?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether preview should be generated for the result.[m
[32m+[m[32m             */[m
[32m+[m[32m            generatePreview?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether execution should <code>await</code> for resulting value and return once awaited promise is resolved.[m
[32m+[m[32m             */[m
[32m+[m[32m            awaitPromise?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface QueryObjectsParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the prototype to return objects for.[m
[32m+[m[32m             */[m
[32m+[m[32m            prototypeObjectId: RemoteObjectId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GlobalLexicalScopeNamesParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Specifies in which execution context to lookup global scope variables.[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextId?: ExecutionContextId | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EvaluateReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Evaluation result.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: RemoteObject;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception details.[m
[32m+[m[32m             */[m
[32m+[m[32m            exceptionDetails?: ExceptionDetails | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface AwaitPromiseReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Promise result. Will contain rejected value if promise was rejected.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: RemoteObject;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception details if stack strace is available.[m
[32m+[m[32m             */[m
[32m+[m[32m            exceptionDetails?: ExceptionDetails | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface CallFunctionOnReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Call result.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: RemoteObject;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception details.[m
[32m+[m[32m             */[m
[32m+[m[32m            exceptionDetails?: ExceptionDetails | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetPropertiesReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object properties.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: PropertyDescriptor[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Internal object properties (only of the element itself).[m
[32m+[m[32m             */[m
[32m+[m[32m            internalProperties?: InternalPropertyDescriptor[] | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception details.[m
[32m+[m[32m             */[m
[32m+[m[32m            exceptionDetails?: ExceptionDetails | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface CompileScriptReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId?: ScriptId | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception details.[m
[32m+[m[32m             */[m
[32m+[m[32m            exceptionDetails?: ExceptionDetails | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RunScriptReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Run result.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: RemoteObject;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception details.[m
[32m+[m[32m             */[m
[32m+[m[32m            exceptionDetails?: ExceptionDetails | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface QueryObjectsReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Array with objects.[m
[32m+[m[32m             */[m
[32m+[m[32m            objects: RemoteObject;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GlobalLexicalScopeNamesReturnType {[m
[32m+[m[32m            names: string[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ExecutionContextCreatedEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A newly created execution context.[m
[32m+[m[32m             */[m
[32m+[m[32m            context: ExecutionContextDescription;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ExecutionContextDestroyedEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of the destroyed context[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextId: ExecutionContextId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ExceptionThrownEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Timestamp of the exception.[m
[32m+[m[32m             */[m
[32m+[m[32m            timestamp: Timestamp;[m
[32m+[m[32m            exceptionDetails: ExceptionDetails;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ExceptionRevokedEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Reason describing why exception was revoked.[m
[32m+[m[32m             */[m
[32m+[m[32m            reason: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The id of revoked exception, as reported in <code>exceptionThrown</code>.[m
[32m+[m[32m             */[m
[32m+[m[32m            exceptionId: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ConsoleAPICalledEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Type of the call.[m
[32m+[m[32m             */[m
[32m+[m[32m            type: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Call arguments.[m
[32m+[m[32m             */[m
[32m+[m[32m            args: RemoteObject[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the context where the call was made.[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextId: ExecutionContextId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Call timestamp.[m
[32m+[m[32m             */[m
[32m+[m[32m            timestamp: Timestamp;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Stack trace captured when the call was made.[m
[32m+[m[32m             */[m
[32m+[m[32m            stackTrace?: StackTrace | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Console context descriptor for calls on non-default console context (not console.*): 'anonymous#unique-logger-id' for call on unnamed context, 'name#unique-logger-id' for call on named context.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            context?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface InspectRequestedEventDataType {[m
[32m+[m[32m            object: RemoteObject;[m
[32m+[m[32m            hints: {};[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace Debugger {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Breakpoint identifier.[m
[32m+[m[32m         */[m
[32m+[m[32m        type BreakpointId = string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Call frame identifier.[m
[32m+[m[32m         */[m
[32m+[m[32m        type CallFrameId = string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Location in the source code.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface Location {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Script identifier as reported in the <code>Debugger.scriptParsed</code>.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: Runtime.ScriptId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Line number in the script (0-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            lineNumber: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Column number in the script (0-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            columnNumber?: number | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Location in the source code.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        interface ScriptPosition {[m
[32m+[m[32m            lineNumber: number;[m
[32m+[m[32m            columnNumber: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * JavaScript call frame. Array of call frames form the call stack.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface CallFrame {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Call frame identifier. This identifier is only valid while the virtual machine is paused.[m
[32m+[m[32m             */[m
[32m+[m[32m            callFrameId: CallFrameId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Name of the JavaScript function called on this call frame.[m
[32m+[m[32m             */[m
[32m+[m[32m            functionName: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Location in the source code.[m
[32m+[m[32m             */[m
[32m+[m[32m            functionLocation?: Location | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Location in the source code.[m
[32m+[m[32m             */[m
[32m+[m[32m            location: Location;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script name or url.[m
[32m+[m[32m             */[m
[32m+[m[32m            url: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Scope chain for this call frame.[m
[32m+[m[32m             */[m
[32m+[m[32m            scopeChain: Scope[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * <code>this</code> object for this call frame.[m
[32m+[m[32m             */[m
[32m+[m[32m            this: Runtime.RemoteObject;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The value being returned, if the function is at return point.[m
[32m+[m[32m             */[m
[32m+[m[32m            returnValue?: Runtime.RemoteObject | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Scope description.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface Scope {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Scope type.[m
[32m+[m[32m             */[m
[32m+[m[32m            type: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object representing the scope. For <code>global</code> and <code>with</code> scopes it represents the actual object; for the rest of the scopes, it is artificial transient object enumerating scope variables as its properties.[m
[32m+[m[32m             */[m
[32m+[m[32m            object: Runtime.RemoteObject;[m
[32m+[m[32m            name?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Location in the source code where scope starts[m
[32m+[m[32m             */[m
[32m+[m[32m            startLocation?: Location | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Location in the source code where scope ends[m
[32m+[m[32m             */[m
[32m+[m[32m            endLocation?: Location | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Search match for resource.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface SearchMatch {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Line number in resource content.[m
[32m+[m[32m             */[m
[32m+[m[32m            lineNumber: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Line with match content.[m
[32m+[m[32m             */[m
[32m+[m[32m            lineContent: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface BreakLocation {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Script identifier as reported in the <code>Debugger.scriptParsed</code>.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: Runtime.ScriptId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Line number in the script (0-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            lineNumber: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Column number in the script (0-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            columnNumber?: number | undefined;[m
[32m+[m[32m            type?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetBreakpointsActiveParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * New value for breakpoints active state.[m
[32m+[m[32m             */[m
[32m+[m[32m            active: boolean;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetSkipAllPausesParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * New value for skip pauses state.[m
[32m+[m[32m             */[m
[32m+[m[32m            skip: boolean;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetBreakpointByUrlParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Line number to set breakpoint at.[m
[32m+[m[32m             */[m
[32m+[m[32m            lineNumber: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * URL of the resources to set breakpoint on.[m
[32m+[m[32m             */[m
[32m+[m[32m            url?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Regex pattern for the URLs of the resources to set breakpoints on. Either <code>url</code> or <code>urlRegex</code> must be specified.[m
[32m+[m[32m             */[m
[32m+[m[32m            urlRegex?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Script hash of the resources to set breakpoint on.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptHash?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Offset in the line to set breakpoint at.[m
[32m+[m[32m             */[m
[32m+[m[32m            columnNumber?: number | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Expression to use as a breakpoint condition. When specified, debugger will only stop on the breakpoint if this expression evaluates to true.[m
[32m+[m[32m             */[m
[32m+[m[32m            condition?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetBreakpointParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Location to set breakpoint in.[m
[32m+[m[32m             */[m
[32m+[m[32m            location: Location;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Expression to use as a breakpoint condition. When specified, debugger will only stop on the breakpoint if this expression evaluates to true.[m
[32m+[m[32m             */[m
[32m+[m[32m            condition?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RemoveBreakpointParameterType {[m
[32m+[m[32m            breakpointId: BreakpointId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetPossibleBreakpointsParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Start of range to search possible breakpoint locations in.[m
[32m+[m[32m             */[m
[32m+[m[32m            start: Location;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * End of range to search possible breakpoint locations in (excluding). When not specified, end of scripts is used as end of range.[m
[32m+[m[32m             */[m
[32m+[m[32m            end?: Location | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Only consider locations which are in the same (non-nested) function as start.[m
[32m+[m[32m             */[m
[32m+[m[32m            restrictToFunction?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ContinueToLocationParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Location to continue to.[m
[32m+[m[32m             */[m
[32m+[m[32m            location: Location;[m
[32m+[m[32m            targetCallFrames?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface PauseOnAsyncCallParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Debugger will pause when async call with given stack trace is started.[m
[32m+[m[32m             */[m
[32m+[m[32m            parentStackTraceId: Runtime.StackTraceId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface StepIntoParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Debugger will issue additional Debugger.paused notification if any async task is scheduled before next pause.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            breakOnAsyncCall?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetStackTraceParameterType {[m
[32m+[m[32m            stackTraceId: Runtime.StackTraceId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SearchInContentParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of the script to search in.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: Runtime.ScriptId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * String to search for.[m
[32m+[m[32m             */[m
[32m+[m[32m            query: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * If true, search is case sensitive.[m
[32m+[m[32m             */[m
[32m+[m[32m            caseSensitive?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * If true, treats string parameter as regex.[m
[32m+[m[32m             */[m
[32m+[m[32m            isRegex?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetScriptSourceParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of the script to edit.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: Runtime.ScriptId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * New content of the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptSource: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             *  If true the change will not actually be applied. Dry run may be used to get result description without actually modifying the code.[m
[32m+[m[32m             */[m
[32m+[m[32m            dryRun?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RestartFrameParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Call frame identifier to evaluate on.[m
[32m+[m[32m             */[m
[32m+[m[32m            callFrameId: CallFrameId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetScriptSourceParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of the script to get source for.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: Runtime.ScriptId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetPauseOnExceptionsParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Pause on exceptions mode.[m
[32m+[m[32m             */[m
[32m+[m[32m            state: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EvaluateOnCallFrameParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Call frame identifier to evaluate on.[m
[32m+[m[32m             */[m
[32m+[m[32m            callFrameId: CallFrameId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Expression to evaluate.[m
[32m+[m[32m             */[m
[32m+[m[32m            expression: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * String object group name to put result into (allows rapid releasing resulting object handles using <code>releaseObjectGroup</code>).[m
[32m+[m[32m             */[m
[32m+[m[32m            objectGroup?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Specifies whether command line API should be available to the evaluated expression, defaults to false.[m
[32m+[m[32m             */[m
[32m+[m[32m            includeCommandLineAPI?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.[m
[32m+[m[32m             */[m
[32m+[m[32m            silent?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether the result is expected to be a JSON object that should be sent by value.[m
[32m+[m[32m             */[m
[32m+[m[32m            returnByValue?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether preview should be generated for the result.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            generatePreview?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether to throw an exception if side effect cannot be ruled out during evaluation.[m
[32m+[m[32m             */[m
[32m+[m[32m            throwOnSideEffect?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetVariableValueParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * 0-based number of scope as was listed in scope chain. Only 'local', 'closure' and 'catch' scope types are allowed. Other scopes could be manipulated manually.[m
[32m+[m[32m             */[m
[32m+[m[32m            scopeNumber: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Variable name.[m
[32m+[m[32m             */[m
[32m+[m[32m            variableName: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * New variable value.[m
[32m+[m[32m             */[m
[32m+[m[32m            newValue: Runtime.CallArgument;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of callframe that holds variable.[m
[32m+[m[32m             */[m
[32m+[m[32m            callFrameId: CallFrameId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetReturnValueParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * New return value.[m
[32m+[m[32m             */[m
[32m+[m[32m            newValue: Runtime.CallArgument;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetAsyncCallStackDepthParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Maximum depth of async call stacks. Setting to <code>0</code> will effectively disable collecting async call stacks (default).[m
[32m+[m[32m             */[m
[32m+[m[32m            maxDepth: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetBlackboxPatternsParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Array of regexps that will be used to check script url for blackbox state.[m
[32m+[m[32m             */[m
[32m+[m[32m            patterns: string[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetBlackboxedRangesParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: Runtime.ScriptId;[m
[32m+[m[32m            positions: ScriptPosition[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EnableReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Unique identifier of the debugger.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            debuggerId: Runtime.UniqueDebuggerId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetBreakpointByUrlReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of the created breakpoint for further reference.[m
[32m+[m[32m             */[m
[32m+[m[32m            breakpointId: BreakpointId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * List of the locations this breakpoint resolved into upon addition.[m
[32m+[m[32m             */[m
[32m+[m[32m            locations: Location[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetBreakpointReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of the created breakpoint for further reference.[m
[32m+[m[32m             */[m
[32m+[m[32m            breakpointId: BreakpointId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Location this breakpoint resolved into.[m
[32m+[m[32m             */[m
[32m+[m[32m            actualLocation: Location;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetPossibleBreakpointsReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * List of the possible breakpoint locations.[m
[32m+[m[32m             */[m
[32m+[m[32m            locations: BreakLocation[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetStackTraceReturnType {[m
[32m+[m[32m            stackTrace: Runtime.StackTrace;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SearchInContentReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * List of search matches.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: SearchMatch[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetScriptSourceReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * New stack trace in case editing has happened while VM was stopped.[m
[32m+[m[32m             */[m
[32m+[m[32m            callFrames?: CallFrame[] | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether current call stack  was modified after applying the changes.[m
[32m+[m[32m             */[m
[32m+[m[32m            stackChanged?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Async stack trace, if any.[m
[32m+[m[32m             */[m
[32m+[m[32m            asyncStackTrace?: Runtime.StackTrace | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Async stack trace, if any.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            asyncStackTraceId?: Runtime.StackTraceId | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception details if any.[m
[32m+[m[32m             */[m
[32m+[m[32m            exceptionDetails?: Runtime.ExceptionDetails | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface RestartFrameReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * New stack trace.[m
[32m+[m[32m             */[m
[32m+[m[32m            callFrames: CallFrame[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Async stack trace, if any.[m
[32m+[m[32m             */[m
[32m+[m[32m            asyncStackTrace?: Runtime.StackTrace | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Async stack trace, if any.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            asyncStackTraceId?: Runtime.StackTraceId | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetScriptSourceReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Script source.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptSource: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EvaluateOnCallFrameReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object wrapper for the evaluation result.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: Runtime.RemoteObject;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Exception details.[m
[32m+[m[32m             */[m
[32m+[m[32m            exceptionDetails?: Runtime.ExceptionDetails | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ScriptParsedEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the script parsed.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: Runtime.ScriptId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * URL or name of the script parsed (if any).[m
[32m+[m[32m             */[m
[32m+[m[32m            url: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Line offset of the script within the resource with given URL (for script tags).[m
[32m+[m[32m             */[m
[32m+[m[32m            startLine: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Column offset of the script within the resource with given URL.[m
[32m+[m[32m             */[m
[32m+[m[32m            startColumn: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Last line of the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            endLine: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Length of the last line of the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            endColumn: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Specifies script creation context.[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextId: Runtime.ExecutionContextId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Content hash of the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            hash: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Embedder-specific auxiliary data.[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextAuxData?: {} | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True, if this script is generated as a result of the live edit operation.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            isLiveEdit?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * URL of source map associated with script (if any).[m
[32m+[m[32m             */[m
[32m+[m[32m            sourceMapURL?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True, if this script has sourceURL.[m
[32m+[m[32m             */[m
[32m+[m[32m            hasSourceURL?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True, if this script is ES6 module.[m
[32m+[m[32m             */[m
[32m+[m[32m            isModule?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * This script length.[m
[32m+[m[32m             */[m
[32m+[m[32m            length?: number | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript top stack frame of where the script parsed event was triggered if available.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            stackTrace?: Runtime.StackTrace | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ScriptFailedToParseEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the script parsed.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: Runtime.ScriptId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * URL or name of the script parsed (if any).[m
[32m+[m[32m             */[m
[32m+[m[32m            url: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Line offset of the script within the resource with given URL (for script tags).[m
[32m+[m[32m             */[m
[32m+[m[32m            startLine: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Column offset of the script within the resource with given URL.[m
[32m+[m[32m             */[m
[32m+[m[32m            startColumn: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Last line of the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            endLine: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Length of the last line of the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            endColumn: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Specifies script creation context.[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextId: Runtime.ExecutionContextId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Content hash of the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            hash: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Embedder-specific auxiliary data.[m
[32m+[m[32m             */[m
[32m+[m[32m            executionContextAuxData?: {} | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * URL of source map associated with script (if any).[m
[32m+[m[32m             */[m
[32m+[m[32m            sourceMapURL?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True, if this script has sourceURL.[m
[32m+[m[32m             */[m
[32m+[m[32m            hasSourceURL?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * True, if this script is ES6 module.[m
[32m+[m[32m             */[m
[32m+[m[32m            isModule?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * This script length.[m
[32m+[m[32m             */[m
[32m+[m[32m            length?: number | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript top stack frame of where the script parsed event was triggered if available.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            stackTrace?: Runtime.StackTrace | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface BreakpointResolvedEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Breakpoint unique identifier.[m
[32m+[m[32m             */[m
[32m+[m[32m            breakpointId: BreakpointId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Actual breakpoint location.[m
[32m+[m[32m             */[m
[32m+[m[32m            location: Location;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface PausedEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Call stack the virtual machine stopped on.[m
[32m+[m[32m             */[m
[32m+[m[32m            callFrames: CallFrame[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Pause reason.[m
[32m+[m[32m             */[m
[32m+[m[32m            reason: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Object containing break-specific auxiliary properties.[m
[32m+[m[32m             */[m
[32m+[m[32m            data?: {} | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Hit breakpoints IDs[m
[32m+[m[32m             */[m
[32m+[m[32m            hitBreakpoints?: string[] | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Async stack trace, if any.[m
[32m+[m[32m             */[m
[32m+[m[32m            asyncStackTrace?: Runtime.StackTrace | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Async stack trace, if any.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            asyncStackTraceId?: Runtime.StackTraceId | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Just scheduled async call will have this stack trace as parent stack during async execution. This field is available only after <code>Debugger.stepInto</code> call with <code>breakOnAsynCall</code> flag.[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            asyncCallStackTraceId?: Runtime.StackTraceId | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace Console {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Console message.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface ConsoleMessage {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Message source.[m
[32m+[m[32m             */[m
[32m+[m[32m            source: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Message severity.[m
[32m+[m[32m             */[m
[32m+[m[32m            level: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Message text.[m
[32m+[m[32m             */[m
[32m+[m[32m            text: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * URL of the message origin.[m
[32m+[m[32m             */[m
[32m+[m[32m            url?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Line number in the resource that generated this message (1-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            line?: number | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Column number in the resource that generated this message (1-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            column?: number | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface MessageAddedEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Console message that has been added.[m
[32m+[m[32m             */[m
[32m+[m[32m            message: ConsoleMessage;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace Profiler {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Profile node. Holds callsite information, execution statistics and child nodes.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface ProfileNode {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Unique id of the node.[m
[32m+[m[32m             */[m
[32m+[m[32m            id: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Function location.[m
[32m+[m[32m             */[m
[32m+[m[32m            callFrame: Runtime.CallFrame;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Number of samples where this node was on top of the call stack.[m
[32m+[m[32m             */[m
[32m+[m[32m            hitCount?: number | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Child node ids.[m
[32m+[m[32m             */[m
[32m+[m[32m            children?: number[] | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The reason of being not optimized. The function may be deoptimized or marked as don't optimize.[m
[32m+[m[32m             */[m
[32m+[m[32m            deoptReason?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * An array of source position ticks.[m
[32m+[m[32m             */[m
[32m+[m[32m            positionTicks?: PositionTickInfo[] | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Profile.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface Profile {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The list of profile nodes. First item is the root node.[m
[32m+[m[32m             */[m
[32m+[m[32m            nodes: ProfileNode[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Profiling start timestamp in microseconds.[m
[32m+[m[32m             */[m
[32m+[m[32m            startTime: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Profiling end timestamp in microseconds.[m
[32m+[m[32m             */[m
[32m+[m[32m            endTime: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Ids of samples top nodes.[m
[32m+[m[32m             */[m
[32m+[m[32m            samples?: number[] | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Time intervals between adjacent samples in microseconds. The first delta is relative to the profile startTime.[m
[32m+[m[32m             */[m
[32m+[m[32m            timeDeltas?: number[] | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specifies a number of samples attributed to a certain source position.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface PositionTickInfo {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Source line number (1-based).[m
[32m+[m[32m             */[m
[32m+[m[32m            line: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Number of samples attributed to the source line.[m
[32m+[m[32m             */[m
[32m+[m[32m            ticks: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Coverage data for a source range.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface CoverageRange {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script source offset for the range start.[m
[32m+[m[32m             */[m
[32m+[m[32m            startOffset: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script source offset for the range end.[m
[32m+[m[32m             */[m
[32m+[m[32m            endOffset: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Collected execution count of the source range.[m
[32m+[m[32m             */[m
[32m+[m[32m            count: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Coverage data for a JavaScript function.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface FunctionCoverage {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript function name.[m
[32m+[m[32m             */[m
[32m+[m[32m            functionName: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Source ranges inside the function with coverage data.[m
[32m+[m[32m             */[m
[32m+[m[32m            ranges: CoverageRange[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether coverage data for this function has block granularity.[m
[32m+[m[32m             */[m
[32m+[m[32m            isBlockCoverage: boolean;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Coverage data for a JavaScript script.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface ScriptCoverage {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script id.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: Runtime.ScriptId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script name or url.[m
[32m+[m[32m             */[m
[32m+[m[32m            url: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Functions contained in the script that has coverage data.[m
[32m+[m[32m             */[m
[32m+[m[32m            functions: FunctionCoverage[];[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Describes a type collected during runtime.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        interface TypeObject {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Name of a type collected with type profiling.[m
[32m+[m[32m             */[m
[32m+[m[32m            name: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Source offset and types for a parameter or return value.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        interface TypeProfileEntry {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Source offset of the parameter or end of function for return values.[m
[32m+[m[32m             */[m
[32m+[m[32m            offset: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The types for this parameter or return value.[m
[32m+[m[32m             */[m
[32m+[m[32m            types: TypeObject[];[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Type profile data collected during runtime for a JavaScript script.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        interface ScriptTypeProfile {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script id.[m
[32m+[m[32m             */[m
[32m+[m[32m            scriptId: Runtime.ScriptId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * JavaScript script name or url.[m
[32m+[m[32m             */[m
[32m+[m[32m            url: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Type profile entries for parameters and return values of the functions in the script.[m
[32m+[m[32m             */[m
[32m+[m[32m            entries: TypeProfileEntry[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SetSamplingIntervalParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * New sampling interval in microseconds.[m
[32m+[m[32m             */[m
[32m+[m[32m            interval: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface StartPreciseCoverageParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Collect accurate call counts beyond simple 'covered' or 'not covered'.[m
[32m+[m[32m             */[m
[32m+[m[32m            callCount?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Collect block-based coverage.[m
[32m+[m[32m             */[m
[32m+[m[32m            detailed?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface StopReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Recorded profile.[m
[32m+[m[32m             */[m
[32m+[m[32m            profile: Profile;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface TakePreciseCoverageReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Coverage data for the current isolate.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: ScriptCoverage[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetBestEffortCoverageReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Coverage data for the current isolate.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: ScriptCoverage[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface TakeTypeProfileReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Type profile for all scripts since startTypeProfile() was turned on.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: ScriptTypeProfile[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ConsoleProfileStartedEventDataType {[m
[32m+[m[32m            id: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Location of console.profile().[m
[32m+[m[32m             */[m
[32m+[m[32m            location: Debugger.Location;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Profile title passed as an argument to console.profile().[m
[32m+[m[32m             */[m
[32m+[m[32m            title?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ConsoleProfileFinishedEventDataType {[m
[32m+[m[32m            id: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Location of console.profileEnd().[m
[32m+[m[32m             */[m
[32m+[m[32m            location: Debugger.Location;[m
[32m+[m[32m            profile: Profile;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Profile title passed as an argument to console.profile().[m
[32m+[m[32m             */[m
[32m+[m[32m            title?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace HeapProfiler {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Heap snapshot object id.[m
[32m+[m[32m         */[m
[32m+[m[32m        type HeapSnapshotObjectId = string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sampling Heap Profile node. Holds callsite information, allocation statistics and child nodes.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface SamplingHeapProfileNode {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Function location.[m
[32m+[m[32m             */[m
[32m+[m[32m            callFrame: Runtime.CallFrame;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Allocations size in bytes for the node excluding children.[m
[32m+[m[32m             */[m
[32m+[m[32m            selfSize: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Child nodes.[m
[32m+[m[32m             */[m
[32m+[m[32m            children: SamplingHeapProfileNode[];[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Profile.[m
[32m+[m[32m         */[m
[32m+[m[32m        interface SamplingHeapProfile {[m
[32m+[m[32m            head: SamplingHeapProfileNode;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface StartTrackingHeapObjectsParameterType {[m
[32m+[m[32m            trackAllocations?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface StopTrackingHeapObjectsParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * If true 'reportHeapSnapshotProgress' events will be generated while snapshot is being taken when the tracking is stopped.[m
[32m+[m[32m             */[m
[32m+[m[32m            reportProgress?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface TakeHeapSnapshotParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * If true 'reportHeapSnapshotProgress' events will be generated while snapshot is being taken.[m
[32m+[m[32m             */[m
[32m+[m[32m            reportProgress?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetObjectByHeapObjectIdParameterType {[m
[32m+[m[32m            objectId: HeapSnapshotObjectId;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Symbolic group name that can be used to release multiple objects.[m
[32m+[m[32m             */[m
[32m+[m[32m            objectGroup?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface AddInspectedHeapObjectParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Heap snapshot object id to be accessible by means of $x command line API.[m
[32m+[m[32m             */[m
[32m+[m[32m            heapObjectId: HeapSnapshotObjectId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetHeapObjectIdParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the object to get heap object id for.[m
[32m+[m[32m             */[m
[32m+[m[32m            objectId: Runtime.RemoteObjectId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface StartSamplingParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Average sample interval in bytes. Poisson distribution is used for the intervals. The default value is 32768 bytes.[m
[32m+[m[32m             */[m
[32m+[m[32m            samplingInterval?: number | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetObjectByHeapObjectIdReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Evaluation result.[m
[32m+[m[32m             */[m
[32m+[m[32m            result: Runtime.RemoteObject;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetHeapObjectIdReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Id of the heap snapshot object corresponding to the passed remote object id.[m
[32m+[m[32m             */[m
[32m+[m[32m            heapSnapshotObjectId: HeapSnapshotObjectId;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface StopSamplingReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Recorded sampling heap profile.[m
[32m+[m[32m             */[m
[32m+[m[32m            profile: SamplingHeapProfile;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetSamplingProfileReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Return the sampling profile being collected.[m
[32m+[m[32m             */[m
[32m+[m[32m            profile: SamplingHeapProfile;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface AddHeapSnapshotChunkEventDataType {[m
[32m+[m[32m            chunk: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ReportHeapSnapshotProgressEventDataType {[m
[32m+[m[32m            done: number;[m
[32m+[m[32m            total: number;[m
[32m+[m[32m            finished?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface LastSeenObjectIdEventDataType {[m
[32m+[m[32m            lastSeenObjectId: number;[m
[32m+[m[32m            timestamp: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface HeapStatsUpdateEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * An array of triplets. Each triplet describes a fragment. The first integer is the fragment index, the second integer is a total count of objects for the fragment, the third integer is a total size of the objects for the fragment.[m
[32m+[m[32m             */[m
[32m+[m[32m            statsUpdate: number[];[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace NodeTracing {[m
[32m+[m[32m        interface TraceConfig {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Controls how the trace buffer stores data.[m
[32m+[m[32m             */[m
[32m+[m[32m            recordMode?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Included category filters.[m
[32m+[m[32m             */[m
[32m+[m[32m            includedCategories: string[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface StartParameterType {[m
[32m+[m[32m            traceConfig: TraceConfig;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface GetCategoriesReturnType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A list of supported tracing categories.[m
[32m+[m[32m             */[m
[32m+[m[32m            categories: string[];[m
[32m+[m[32m        }[m
[32m+[m[32m        interface DataCollectedEventDataType {[m
[32m+[m[32m            value: Array<{}>;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace NodeWorker {[m
[32m+[m[32m        type WorkerID = string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Unique identifier of attached debugging session.[m
[32m+[m[32m         */[m
[32m+[m[32m        type SessionID = string;[m
[32m+[m[32m        interface WorkerInfo {[m
[32m+[m[32m            workerId: WorkerID;[m
[32m+[m[32m            type: string;[m
[32m+[m[32m            title: string;[m
[32m+[m[32m            url: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SendMessageToWorkerParameterType {[m
[32m+[m[32m            message: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of the session.[m
[32m+[m[32m             */[m
[32m+[m[32m            sessionId: SessionID;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface EnableParameterType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Whether to new workers should be paused until the frontend sends `Runtime.runIfWaitingForDebugger`[m
[32m+[m[32m             * message to run them.[m
[32m+[m[32m             */[m
[32m+[m[32m            waitForDebuggerOnStart: boolean;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface DetachParameterType {[m
[32m+[m[32m            sessionId: SessionID;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface AttachedToWorkerEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier assigned to the session used to send/receive messages.[m
[32m+[m[32m             */[m
[32m+[m[32m            sessionId: SessionID;[m
[32m+[m[32m            workerInfo: WorkerInfo;[m
[32m+[m[32m            waitingForDebugger: boolean;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface DetachedFromWorkerEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Detached session identifier.[m
[32m+[m[32m             */[m
[32m+[m[32m            sessionId: SessionID;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ReceivedMessageFromWorkerEventDataType {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Identifier of a session which sends a message.[m
[32m+[m[32m             */[m
[32m+[m[32m            sessionId: SessionID;[m
[32m+[m[32m            message: string;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace NodeRuntime {[m
[32m+[m[32m        interface NotifyWhenWaitingForDisconnectParameterType {[m
[32m+[m[32m            enabled: boolean;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `inspector.Session` is used for dispatching messages to the V8 inspector[m
[32m+[m[32m     * back-end and receiving message responses and notifications.[m
[32m+[m[32m     */[m
[32m+[m[32m    class Session extends EventEmitter {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Create a new instance of the inspector.Session class.[m
[32m+[m[32m         * The inspector session needs to be connected through session.connect() before the messages can be dispatched to the inspector backend.[m
[32m+[m[32m         */[m
[32m+[m[32m        constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Connects a session to the inspector back-end.[m
[32m+[m[32m         * @since v8.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        connect(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Immediately close the session. All pending message callbacks will be called[m
[32m+[m[32m         * with an error. `session.connect()` will need to be called to be able to send[m
[32m+[m[32m         * messages again. Reconnected session will lose all inspector state, such as[m
[32m+[m[32m         * enabled agents or configured breakpoints.[m
[32m+[m[32m         * @since v8.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        disconnect(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Posts a message to the inspector back-end. `callback` will be notified when[m
[32m+[m[32m         * a response is received. `callback` is a function that accepts two optional[m
[32m+[m[32m         * arguments: error and message-specific result.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * session.post('Runtime.evaluate', { expression: '2 + 2' },[m
[32m+[m[32m         *              (error, { result }) => console.log(result));[m
[32m+[m[32m         * // Output: { type: 'number', value: 4, description: '4' }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The latest version of the V8 inspector protocol is published on the [Chrome DevTools Protocol Viewer](https://chromedevtools.github.io/devtools-protocol/v8/).[m
[32m+[m[32m         *[m
[32m+[m[32m         * Node.js inspector supports all the Chrome DevTools Protocol domains declared[m
[32m+[m[32m         * by V8\. Chrome DevTools Protocol domain provides an interface for interacting[m
[32m+[m[32m         * with one of the runtime agents used to inspect the application state and listen[m
[32m+[m[32m         * to the run-time events.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ## Example usage[m
[32m+[m[32m         *[m
[32m+[m[32m         * Apart from the debugger, various V8 Profilers are available through the DevTools[m
[32m+[m[32m         * protocol.[m
[32m+[m[32m         * @since v8.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: string, params?: {}, callback?: (err: Error | null, params?: {}) => void): void;[m
[32m+[m[32m        post(method: string, callback?: (err: Error | null, params?: {}) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns supported domains.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Schema.getDomains', callback?: (err: Error | null, params: Schema.GetDomainsReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Evaluates expression on global object.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.evaluate', params?: Runtime.EvaluateParameterType, callback?: (err: Error | null, params: Runtime.EvaluateReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.evaluate', callback?: (err: Error | null, params: Runtime.EvaluateReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Add handler to promise with given promise object id.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.awaitPromise', params?: Runtime.AwaitPromiseParameterType, callback?: (err: Error | null, params: Runtime.AwaitPromiseReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.awaitPromise', callback?: (err: Error | null, params: Runtime.AwaitPromiseReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calls function with given declaration on the given object. Object group of the result is inherited from the target object.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.callFunctionOn', params?: Runtime.CallFunctionOnParameterType, callback?: (err: Error | null, params: Runtime.CallFunctionOnReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.callFunctionOn', callback?: (err: Error | null, params: Runtime.CallFunctionOnReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns properties of a given object. Object group of the result is inherited from the target object.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.getProperties', params?: Runtime.GetPropertiesParameterType, callback?: (err: Error | null, params: Runtime.GetPropertiesReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.getProperties', callback?: (err: Error | null, params: Runtime.GetPropertiesReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Releases remote object with given id.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.releaseObject', params?: Runtime.ReleaseObjectParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.releaseObject', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Releases all remote objects that belong to a given group.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.releaseObjectGroup', params?: Runtime.ReleaseObjectGroupParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.releaseObjectGroup', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Tells inspected instance to run if it was waiting for debugger to attach.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.runIfWaitingForDebugger', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enables reporting of execution contexts creation by means of <code>executionContextCreated</code> event. When the reporting gets enabled the event will be sent immediately for each existing execution context.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.enable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Disables reporting of execution contexts creation.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.disable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Discards collected exceptions and console API calls.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.discardConsoleEntries', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.setCustomObjectFormatterEnabled', params?: Runtime.SetCustomObjectFormatterEnabledParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.setCustomObjectFormatterEnabled', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Compiles expression.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.compileScript', params?: Runtime.CompileScriptParameterType, callback?: (err: Error | null, params: Runtime.CompileScriptReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.compileScript', callback?: (err: Error | null, params: Runtime.CompileScriptReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Runs script with given id in a given context.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Runtime.runScript', params?: Runtime.RunScriptParameterType, callback?: (err: Error | null, params: Runtime.RunScriptReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.runScript', callback?: (err: Error | null, params: Runtime.RunScriptReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.queryObjects', params?: Runtime.QueryObjectsParameterType, callback?: (err: Error | null, params: Runtime.QueryObjectsReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Runtime.queryObjects', callback?: (err: Error | null, params: Runtime.QueryObjectsReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns all let, const and class variables from global scope.[m
[32m+[m[32m         */[m
[32m+[m[32m        post([m
[32m+[m[32m            method: 'Runtime.globalLexicalScopeNames',[m
[32m+[m[32m            params?: Runtime.GlobalLexicalScopeNamesParameterType,[m
[32m+[m[32m            callback?: (err: Error | null, params: Runtime.GlobalLexicalScopeNamesReturnType) => void[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        post(method: 'Runtime.globalLexicalScopeNames', callback?: (err: Error | null, params: Runtime.GlobalLexicalScopeNamesReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enables debugger for the given page. Clients should not assume that the debugging has been enabled until the result for this command is received.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.enable', callback?: (err: Error | null, params: Debugger.EnableReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Disables debugger for given page.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.disable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Activates / deactivates all breakpoints on the page.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setBreakpointsActive', params?: Debugger.SetBreakpointsActiveParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setBreakpointsActive', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Makes page not interrupt on any pauses (breakpoint, exception, dom exception etc).[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setSkipAllPauses', params?: Debugger.SetSkipAllPausesParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setSkipAllPauses', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets JavaScript breakpoint at given location specified either by URL or URL regex. Once this command is issued, all existing parsed scripts will have breakpoints resolved and returned in <code>locations</code> property. Further matching script parsing will result in subsequent <code>breakpointResolved</code> events issued. This logical breakpoint will survive page reloads.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setBreakpointByUrl', params?: Debugger.SetBreakpointByUrlParameterType, callback?: (err: Error | null, params: Debugger.SetBreakpointByUrlReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setBreakpointByUrl', callback?: (err: Error | null, params: Debugger.SetBreakpointByUrlReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets JavaScript breakpoint at a given location.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setBreakpoint', params?: Debugger.SetBreakpointParameterType, callback?: (err: Error | null, params: Debugger.SetBreakpointReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setBreakpoint', callback?: (err: Error | null, params: Debugger.SetBreakpointReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Removes JavaScript breakpoint.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.removeBreakpoint', params?: Debugger.RemoveBreakpointParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.removeBreakpoint', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns possible locations for breakpoint. scriptId in start and end range locations should be the same.[m
[32m+[m[32m         */[m
[32m+[m[32m        post([m
[32m+[m[32m            method: 'Debugger.getPossibleBreakpoints',[m
[32m+[m[32m            params?: Debugger.GetPossibleBreakpointsParameterType,[m
[32m+[m[32m            callback?: (err: Error | null, params: Debugger.GetPossibleBreakpointsReturnType) => void[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        post(method: 'Debugger.getPossibleBreakpoints', callback?: (err: Error | null, params: Debugger.GetPossibleBreakpointsReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Continues execution until specific location is reached.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.continueToLocation', params?: Debugger.ContinueToLocationParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.continueToLocation', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.pauseOnAsyncCall', params?: Debugger.PauseOnAsyncCallParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.pauseOnAsyncCall', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Steps over the statement.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.stepOver', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Steps into the function call.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.stepInto', params?: Debugger.StepIntoParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.stepInto', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Steps out of the function call.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.stepOut', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Stops on the next JavaScript statement.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.pause', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method is deprecated - use Debugger.stepInto with breakOnAsyncCall and Debugger.pauseOnAsyncTask instead. Steps into next scheduled async task if any is scheduled before next pause. Returns success when async task is actually scheduled, returns error if no task were scheduled or another scheduleStepIntoAsync was called.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.scheduleStepIntoAsync', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Resumes JavaScript execution.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.resume', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns stack trace with given <code>stackTraceId</code>.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.getStackTrace', params?: Debugger.GetStackTraceParameterType, callback?: (err: Error | null, params: Debugger.GetStackTraceReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.getStackTrace', callback?: (err: Error | null, params: Debugger.GetStackTraceReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Searches for given string in script content.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.searchInContent', params?: Debugger.SearchInContentParameterType, callback?: (err: Error | null, params: Debugger.SearchInContentReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.searchInContent', callback?: (err: Error | null, params: Debugger.SearchInContentReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Edits JavaScript source live.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setScriptSource', params?: Debugger.SetScriptSourceParameterType, callback?: (err: Error | null, params: Debugger.SetScriptSourceReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setScriptSource', callback?: (err: Error | null, params: Debugger.SetScriptSourceReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Restarts particular call frame from the beginning.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.restartFrame', params?: Debugger.RestartFrameParameterType, callback?: (err: Error | null, params: Debugger.RestartFrameReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.restartFrame', callback?: (err: Error | null, params: Debugger.RestartFrameReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns source for the script with given id.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.getScriptSource', params?: Debugger.GetScriptSourceParameterType, callback?: (err: Error | null, params: Debugger.GetScriptSourceReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.getScriptSource', callback?: (err: Error | null, params: Debugger.GetScriptSourceReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Defines pause on exceptions state. Can be set to stop on all exceptions, uncaught exceptions or no exceptions. Initial pause on exceptions state is <code>none</code>.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setPauseOnExceptions', params?: Debugger.SetPauseOnExceptionsParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setPauseOnExceptions', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Evaluates expression on a given call frame.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.evaluateOnCallFrame', params?: Debugger.EvaluateOnCallFrameParameterType, callback?: (err: Error | null, params: Debugger.EvaluateOnCallFrameReturnType) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.evaluateOnCallFrame', callback?: (err: Error | null, params: Debugger.EvaluateOnCallFrameReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Changes value of variable in a callframe. Object-based scopes are not supported and must be mutated manually.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setVariableValue', params?: Debugger.SetVariableValueParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setVariableValue', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Changes return value in top frame. Available only at return break position.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setReturnValue', params?: Debugger.SetReturnValueParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setReturnValue', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enables or disables async call stacks tracking.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setAsyncCallStackDepth', params?: Debugger.SetAsyncCallStackDepthParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setAsyncCallStackDepth', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Replace previous blackbox patterns with passed ones. Forces backend to skip stepping/pausing in scripts with url matching one of the patterns. VM will try to leave blackboxed script by performing 'step in' several times, finally resorting to 'step out' if unsuccessful.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setBlackboxPatterns', params?: Debugger.SetBlackboxPatternsParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setBlackboxPatterns', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Makes backend skip steps in the script in blackboxed ranges. VM will try leave blacklisted scripts by performing 'step in' several times, finally resorting to 'step out' if unsuccessful. Positions array contains positions where blackbox state is changed. First interval isn't blackboxed. Array should be sorted.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Debugger.setBlackboxedRanges', params?: Debugger.SetBlackboxedRangesParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Debugger.setBlackboxedRanges', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enables console domain, sends the messages collected so far to the client by means of the <code>messageAdded</code> notification.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Console.enable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Disables console domain, prevents further console messages from being reported to the client.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Console.disable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Does nothing.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Console.clearMessages', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Profiler.enable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Profiler.disable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Changes CPU profiler sampling interval. Must be called before CPU profiles recording started.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Profiler.setSamplingInterval', params?: Profiler.SetSamplingIntervalParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Profiler.setSamplingInterval', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Profiler.start', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Profiler.stop', callback?: (err: Error | null, params: Profiler.StopReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enable precise code coverage. Coverage data for JavaScript executed before enabling precise code coverage may be incomplete. Enabling prevents running optimized code and resets execution counters.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Profiler.startPreciseCoverage', params?: Profiler.StartPreciseCoverageParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'Profiler.startPreciseCoverage', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Disable precise code coverage. Disabling releases unnecessary execution count records and allows executing optimized code.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Profiler.stopPreciseCoverage', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Collect coverage data for the current isolate, and resets execution counters. Precise code coverage needs to have started.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Profiler.takePreciseCoverage', callback?: (err: Error | null, params: Profiler.TakePreciseCoverageReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Collect coverage data for the current isolate. The coverage data may be incomplete due to garbage collection.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Profiler.getBestEffortCoverage', callback?: (err: Error | null, params: Profiler.GetBestEffortCoverageReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enable type profile.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Profiler.startTypeProfile', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Disable type profile. Disabling releases type profile data collected so far.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Profiler.stopTypeProfile', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Collect type profile.[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'Profiler.takeTypeProfile', callback?: (err: Error | null, params: Profiler.TakeTypeProfileReturnType) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.enable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.disable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.startTrackingHeapObjects', params?: HeapProfiler.StartTrackingHeapObjectsParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.startTrackingHeapObjects', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.stopTrackingHeapObjects', params?: HeapProfiler.StopTrackingHeapObjectsParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.stopTrackingHeapObjects', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.takeHeapSnapshot', params?: HeapProfiler.TakeHeapSnapshotParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.takeHeapSnapshot', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.collectGarbage', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post([m
[32m+[m[32m            method: 'HeapProfiler.getObjectByHeapObjectId',[m
[32m+[m[32m            params?: HeapProfiler.GetObjectByHeapObjectIdParameterType,[m
[32m+[m[32m            callback?: (err: Error | null, params: HeapProfiler.GetObjectByHeapObjectIdReturnType) => void[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.getObjectByHeapObjectId', callback?: (err: Error | null, params: HeapProfiler.GetObjectByHeapObjectIdReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enables console to refer to the node with given id via $x (see Command Line API for more details $x functions).[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'HeapProfiler.addInspectedHeapObject', params?: HeapProfiler.AddInspectedHeapObjectParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.addInspectedHeapObject', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.getHeapObjectId', params?: HeapProfiler.GetHeapObjectIdParameterType, callback?: (err: Error | null, params: HeapProfiler.GetHeapObjectIdReturnType) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.getHeapObjectId', callback?: (err: Error | null, params: HeapProfiler.GetHeapObjectIdReturnType) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.startSampling', params?: HeapProfiler.StartSamplingParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.startSampling', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.stopSampling', callback?: (err: Error | null, params: HeapProfiler.StopSamplingReturnType) => void): void;[m
[32m+[m[32m        post(method: 'HeapProfiler.getSamplingProfile', callback?: (err: Error | null, params: HeapProfiler.GetSamplingProfileReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Gets supported tracing categories.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'NodeTracing.getCategories', callback?: (err: Error | null, params: NodeTracing.GetCategoriesReturnType) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Start trace events collection.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'NodeTracing.start', params?: NodeTracing.StartParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'NodeTracing.start', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Stop trace events collection. Remaining collected events will be sent as a sequence of[m
[32m+[m[32m         * dataCollected events followed by tracingComplete event.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'NodeTracing.stop', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends protocol message over session with given id.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'NodeWorker.sendMessageToWorker', params?: NodeWorker.SendMessageToWorkerParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'NodeWorker.sendMessageToWorker', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Instructs the inspector to attach to running workers. Will also attach to new workers[m
[32m+[m[32m         * as they start[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'NodeWorker.enable', params?: NodeWorker.EnableParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'NodeWorker.enable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Detaches from all running workers and disables attaching to new workers as they are started.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'NodeWorker.disable', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Detached from the worker with given sessionId.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'NodeWorker.detach', params?: NodeWorker.DetachParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'NodeWorker.detach', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enable the `NodeRuntime.waitingForDisconnect`.[m
[32m+[m[32m         */[m
[32m+[m[32m        post(method: 'NodeRuntime.notifyWhenWaitingForDisconnect', params?: NodeRuntime.NotifyWhenWaitingForDisconnectParameterType, callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        post(method: 'NodeRuntime.notifyWhenWaitingForDisconnect', callback?: (err: Error | null) => void): void;[m
[32m+[m[32m        // Events[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted when any notification from the V8 Inspector is received.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'inspectorNotification', listener: (message: InspectorNotification<{}>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when new execution context is created.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when execution context is destroyed.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when all executionContexts were cleared in browser[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when exception was thrown and unhandled.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when unhandled exception was revoked.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when console API was called.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when virtual machine fails to parse the script.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when breakpoint is resolved to an actual script and location.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when the virtual machine resumed execution.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Debugger.resumed', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when new console message is added.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sent when new profile recording is started using console.profile() call.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[32m+[m[32m        addListener(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[32m+[m[32m        addListener(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[32m+[m[32m        addListener(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[32m+[m[32m        addListener(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Contains an bucket of collected trace events.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[32m+[m[32m         * delivered via dataCollected events.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when attached to a worker.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when detached from the worker.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Notifies about a new protocol message received from the session[m
[32m+[m[32m         * (session ID is provided in attachedToWorker notification).[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[32m+[m[32m         * enabled.[m
[32m+[m[32m         * It is fired when the Node process finished all code execution and is[m
[32m+[m[32m         * waiting for all frontends to disconnect.[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: 'inspectorNotification', message: InspectorNotification<{}>): boolean;[m
[32m+[m[32m        emit(event: 'Runtime.executionContextCreated', message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Runtime.executionContextDestroyed', message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Runtime.executionContextsCleared'): boolean;[m
[32m+[m[32m        emit(event: 'Runtime.exceptionThrown', message: InspectorNotification<Runtime.ExceptionThrownEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Runtime.exceptionRevoked', message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Runtime.consoleAPICalled', message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Runtime.inspectRequested', message: InspectorNotification<Runtime.InspectRequestedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Debugger.scriptParsed', message: InspectorNotification<Debugger.ScriptParsedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Debugger.scriptFailedToParse', message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Debugger.breakpointResolved', message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Debugger.paused', message: InspectorNotification<Debugger.PausedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Debugger.resumed'): boolean;[m
[32m+[m[32m        emit(event: 'Console.messageAdded', message: InspectorNotification<Console.MessageAddedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Profiler.consoleProfileStarted', message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'Profiler.consoleProfileFinished', message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'HeapProfiler.addHeapSnapshotChunk', message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'HeapProfiler.resetProfiles'): boolean;[m
[32m+[m[32m        emit(event: 'HeapProfiler.reportHeapSnapshotProgress', message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'HeapProfiler.lastSeenObjectId', message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'HeapProfiler.heapStatsUpdate', message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'NodeTracing.dataCollected', message: InspectorNotification<NodeTracing.DataCollectedEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'NodeTracing.tracingComplete'): boolean;[m
[32m+[m[32m        emit(event: 'NodeWorker.attachedToWorker', message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'NodeWorker.detachedFromWorker', message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'NodeWorker.receivedMessageFromWorker', message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>): boolean;[m
[32m+[m[32m        emit(event: 'NodeRuntime.waitingForDisconnect'): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted when any notification from the V8 Inspector is received.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'inspectorNotification', listener: (message: InspectorNotification<{}>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when new execution context is created.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when execution context is destroyed.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when all executionContexts were cleared in browser[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when exception was thrown and unhandled.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when unhandled exception was revoked.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when console API was called.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when virtual machine fails to parse the script.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when breakpoint is resolved to an actual script and location.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when the virtual machine resumed execution.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Debugger.resumed', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when new console message is added.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sent when new profile recording is started using console.profile() call.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[32m+[m[32m        on(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[32m+[m[32m        on(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[32m+[m[32m        on(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[32m+[m[32m        on(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Contains an bucket of collected trace events.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[32m+[m[32m         * delivered via dataCollected events.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when attached to a worker.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when detached from the worker.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Notifies about a new protocol message received from the session[m
[32m+[m[32m         * (session ID is provided in attachedToWorker notification).[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[32m+[m[32m         * enabled.[m
[32m+[m[32m         * It is fired when the Node process finished all code execution and is[m
[32m+[m[32m         * waiting for all frontends to disconnect.[m
[32m+[m[32m         */[m
[32m+[m[32m        on(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted when any notification from the V8 Inspector is received.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'inspectorNotification', listener: (message: InspectorNotification<{}>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when new execution context is created.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when execution context is destroyed.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when all executionContexts were cleared in browser[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when exception was thrown and unhandled.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when unhandled exception was revoked.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when console API was called.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when virtual machine fails to parse the script.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when breakpoint is resolved to an actual script and location.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when the virtual machine resumed execution.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Debugger.resumed', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when new console message is added.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sent when new profile recording is started using console.profile() call.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[32m+[m[32m        once(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[32m+[m[32m        once(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[32m+[m[32m        once(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[32m+[m[32m        once(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Contains an bucket of collected trace events.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[32m+[m[32m         * delivered via dataCollected events.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when attached to a worker.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when detached from the worker.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Notifies about a new protocol message received from the session[m
[32m+[m[32m         * (session ID is provided in attachedToWorker notification).[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[32m+[m[32m         * enabled.[m
[32m+[m[32m         * It is fired when the Node process finished all code execution and is[m
[32m+[m[32m         * waiting for all frontends to disconnect.[m
[32m+[m[32m         */[m
[32m+[m[32m        once(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted when any notification from the V8 Inspector is received.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'inspectorNotification', listener: (message: InspectorNotification<{}>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when new execution context is created.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when execution context is destroyed.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when all executionContexts were cleared in browser[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when exception was thrown and unhandled.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when unhandled exception was revoked.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when console API was called.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when virtual machine fails to parse the script.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when breakpoint is resolved to an actual script and location.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when the virtual machine resumed execution.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Debugger.resumed', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when new console message is added.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sent when new profile recording is started using console.profile() call.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[32m+[m[32m        prependListener(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[32m+[m[32m        prependListener(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[32m+[m[32m        prependListener(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[32m+[m[32m        prependListener(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Contains an bucket of collected trace events.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[32m+[m[32m         * delivered via dataCollected events.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when attached to a worker.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when detached from the worker.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Notifies about a new protocol message received from the session[m
[32m+[m[32m         * (session ID is provided in attachedToWorker notification).[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[32m+[m[32m         * enabled.[m
[32m+[m[32m         * It is fired when the Node process finished all code execution and is[m
[32m+[m[32m         * waiting for all frontends to disconnect.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependListener(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Emitted when any notification from the V8 Inspector is received.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'inspectorNotification', listener: (message: InspectorNotification<{}>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when new execution context is created.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Runtime.executionContextCreated', listener: (message: InspectorNotification<Runtime.ExecutionContextCreatedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when execution context is destroyed.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Runtime.executionContextDestroyed', listener: (message: InspectorNotification<Runtime.ExecutionContextDestroyedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when all executionContexts were cleared in browser[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Runtime.executionContextsCleared', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when exception was thrown and unhandled.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Runtime.exceptionThrown', listener: (message: InspectorNotification<Runtime.ExceptionThrownEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when unhandled exception was revoked.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Runtime.exceptionRevoked', listener: (message: InspectorNotification<Runtime.ExceptionRevokedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when console API was called.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Runtime.consoleAPICalled', listener: (message: InspectorNotification<Runtime.ConsoleAPICalledEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when object should be inspected (for example, as a result of inspect() command line API call).[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Runtime.inspectRequested', listener: (message: InspectorNotification<Runtime.InspectRequestedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when virtual machine parses script. This event is also fired for all known and uncollected scripts upon enabling debugger.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Debugger.scriptParsed', listener: (message: InspectorNotification<Debugger.ScriptParsedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when virtual machine fails to parse the script.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Debugger.scriptFailedToParse', listener: (message: InspectorNotification<Debugger.ScriptFailedToParseEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when breakpoint is resolved to an actual script and location.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Debugger.breakpointResolved', listener: (message: InspectorNotification<Debugger.BreakpointResolvedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Debugger.paused', listener: (message: InspectorNotification<Debugger.PausedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Fired when the virtual machine resumed execution.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Debugger.resumed', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when new console message is added.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Console.messageAdded', listener: (message: InspectorNotification<Console.MessageAddedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sent when new profile recording is started using console.profile() call.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'Profiler.consoleProfileStarted', listener: (message: InspectorNotification<Profiler.ConsoleProfileStartedEventDataType>) => void): this;[m
[32m+[m[32m        prependOnceListener(event: 'Profiler.consoleProfileFinished', listener: (message: InspectorNotification<Profiler.ConsoleProfileFinishedEventDataType>) => void): this;[m
[32m+[m[32m        prependOnceListener(event: 'HeapProfiler.addHeapSnapshotChunk', listener: (message: InspectorNotification<HeapProfiler.AddHeapSnapshotChunkEventDataType>) => void): this;[m
[32m+[m[32m        prependOnceListener(event: 'HeapProfiler.resetProfiles', listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: 'HeapProfiler.reportHeapSnapshotProgress', listener: (message: InspectorNotification<HeapProfiler.ReportHeapSnapshotProgressEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If heap objects tracking has been started then backend regularly sends a current value for last seen object id and corresponding timestamp. If the were changes in the heap since last event then one or more heapStatsUpdate events will be sent before a new lastSeenObjectId event.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'HeapProfiler.lastSeenObjectId', listener: (message: InspectorNotification<HeapProfiler.LastSeenObjectIdEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If heap objects tracking has been started then backend may send update for one or more fragments[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'HeapProfiler.heapStatsUpdate', listener: (message: InspectorNotification<HeapProfiler.HeapStatsUpdateEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Contains an bucket of collected trace events.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'NodeTracing.dataCollected', listener: (message: InspectorNotification<NodeTracing.DataCollectedEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Signals that tracing is stopped and there is no trace buffers pending flush, all data were[m
[32m+[m[32m         * delivered via dataCollected events.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'NodeTracing.tracingComplete', listener: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when attached to a worker.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'NodeWorker.attachedToWorker', listener: (message: InspectorNotification<NodeWorker.AttachedToWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Issued when detached from the worker.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'NodeWorker.detachedFromWorker', listener: (message: InspectorNotification<NodeWorker.DetachedFromWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Notifies about a new protocol message received from the session[m
[32m+[m[32m         * (session ID is provided in attachedToWorker notification).[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'NodeWorker.receivedMessageFromWorker', listener: (message: InspectorNotification<NodeWorker.ReceivedMessageFromWorkerEventDataType>) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This event is fired instead of `Runtime.executionContextDestroyed` when[m
[32m+[m[32m         * enabled.[m
[32m+[m[32m         * It is fired when the Node process finished all code execution and is[m
[32m+[m[32m         * waiting for all frontends to disconnect.[m
[32m+[m[32m         */[m
[32m+[m[32m        prependOnceListener(event: 'NodeRuntime.waitingForDisconnect', listener: () => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Activate inspector on host and port. Equivalent to `node --inspect=[[host:]port]`, but can be done programmatically after node has[m
[32m+[m[32m     * started.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If wait is `true`, will block until a client has connected to the inspect port[m
[32m+[m[32m     * and flow control has been passed to the debugger client.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See the `security warning` regarding the `host` parameter usage.[m
[32m+[m[32m     * @param [port='what was specified on the CLI'] Port to listen on for inspector connections. Optional.[m
[32m+[m[32m     * @param [host='what was specified on the CLI'] Host to listen on for inspector connections. Optional.[m
[32m+[m[32m     * @param [wait=false] Block until a client has connected. Optional.[m
[32m+[m[32m     * @returns Disposable that calls `inspector.close()`.[m
[32m+[m[32m     */[m
[32m+[m[32m    function open(port?: number, host?: string, wait?: boolean): Disposable;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Deactivate the inspector. Blocks until there are no active connections.[m
[32m+[m[32m     */[m
[32m+[m[32m    function close(): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Return the URL of the active inspector, or `undefined` if there is none.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```console[m
[32m+[m[32m     * $ node --inspect -p 'inspector.url()'[m
[32m+[m[32m     * Debugger listening on ws://127.0.0.1:9229/166e272e-7a30-4d09-97ce-f1c012b43c34[m
[32m+[m[32m     * For help, see: https://nodejs.org/en/docs/inspector[m
[32m+[m[32m     * ws://127.0.0.1:9229/166e272e-7a30-4d09-97ce-f1c012b43c34[m
[32m+[m[32m     *[m
[32m+[m[32m     * $ node --inspect=localhost:3000 -p 'inspector.url()'[m
[32m+[m[32m     * Debugger listening on ws://localhost:3000/51cf8d0e-3c36-4c59-8efd-54519839e56a[m
[32m+[m[32m     * For help, see: https://nodejs.org/en/docs/inspector[m
[32m+[m[32m     * ws://localhost:3000/51cf8d0e-3c36-4c59-8efd-54519839e56a[m
[32m+[m[32m     *[m
[32m+[m[32m     * $ node -p 'inspector.url()'[m
[32m+[m[32m     * undefined[m
[32m+[m[32m     * ```[m
[32m+[m[32m     */[m
[32m+[m[32m    function url(): string | undefined;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Blocks until a client (existing or connected later) has sent `Runtime.runIfWaitingForDebugger` command.[m
[32m+[m[32m     *[m
[32m+[m[32m     * An exception will be thrown if there is no active inspector.[m
[32m+[m[32m     * @since v12.7.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function waitForDebugger(): void;[m
[32m+[m[32m}[m
[32m+[m[32m/**[m
[32m+[m[32m * The inspector module provides an API for interacting with the V8 inspector.[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module 'node:inspector' {[m
[32m+[m[32m    export * from 'inspector';[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/module.d.ts b/node_modules/@types/node/module.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..0d60bb1[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/module.d.ts[m
[36m@@ -0,0 +1,301 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * @since v0.3.7[m
[32m+[m[32m * @experimental[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "module" {[m
[32m+[m[32m    import { URL } from "node:url";[m
[32m+[m[32m    import { MessagePort } from "node:worker_threads";[m
[32m+[m[32m    namespace Module {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `module.syncBuiltinESMExports()` method updates all the live bindings for[m
[32m+[m[32m         * builtin `ES Modules` to match the properties of the `CommonJS` exports. It[m
[32m+[m[32m         * does not add or remove exported names from the `ES Modules`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         * const assert = require('node:assert');[m
[32m+[m[32m         * const { syncBuiltinESMExports } = require('node:module');[m
[32m+[m[32m         *[m
[32m+[m[32m         * fs.readFile = newAPI;[m
[32m+[m[32m         *[m
[32m+[m[32m         * delete fs.readFileSync;[m
[32m+[m[32m         *[m
[32m+[m[32m         * function newAPI() {[m
[32m+[m[32m         *   // ...[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * fs.newAPI = newAPI;[m
[32m+[m[32m         *[m
[32m+[m[32m         * syncBuiltinESMExports();[m
[32m+[m[32m         *[m
[32m+[m[32m         * import('node:fs').then((esmFS) => {[m
[32m+[m[32m         *   // It syncs the existing readFile property with the new value[m
[32m+[m[32m         *   assert.strictEqual(esmFS.readFile, newAPI);[m
[32m+[m[32m         *   // readFileSync has been deleted from the required fs[m
[32m+[m[32m         *   assert.strictEqual('readFileSync' in fs, false);[m
[32m+[m[32m         *   // syncBuiltinESMExports() does not remove readFileSync from esmFS[m
[32m+[m[32m         *   assert.strictEqual('readFileSync' in esmFS, true);[m
[32m+[m[32m         *   // syncBuiltinESMExports() does not add names[m
[32m+[m[32m         *   assert.strictEqual(esmFS.newAPI, undefined);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v12.12.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function syncBuiltinESMExports(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `path` is the resolved path for the file for which a corresponding source map[m
[32m+[m[32m         * should be fetched.[m
[32m+[m[32m         * @since v13.7.0, v12.17.0[m
[32m+[m[32m         * @return Returns `module.SourceMap` if a source map is found, `undefined` otherwise.[m
[32m+[m[32m         */[m
[32m+[m[32m        function findSourceMap(path: string, error?: Error): SourceMap;[m
[32m+[m[32m        interface SourceMapPayload {[m
[32m+[m[32m            file: string;[m
[32m+[m[32m            version: number;[m
[32m+[m[32m            sources: string[];[m
[32m+[m[32m            sourcesContent: string[];[m
[32m+[m[32m            names: string[];[m
[32m+[m[32m            mappings: string;[m
[32m+[m[32m            sourceRoot: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SourceMapping {[m
[32m+[m[32m            generatedLine: number;[m
[32m+[m[32m            generatedColumn: number;[m
[32m+[m[32m            originalSource: string;[m
[32m+[m[32m            originalLine: number;[m
[32m+[m[32m            originalColumn: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface SourceOrigin {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The name of the range in the source map, if one was provided[m
[32m+[m[32m             */[m
[32m+[m[32m            name?: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The file name of the original source, as reported in the SourceMap[m
[32m+[m[32m             */[m
[32m+[m[32m            fileName: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The 1-indexed lineNumber of the corresponding call site in the original source[m
[32m+[m[32m             */[m
[32m+[m[32m            lineNumber: number;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The 1-indexed columnNumber of the corresponding call site in the original source[m
[32m+[m[32m             */[m
[32m+[m[32m            columnNumber: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v13.7.0, v12.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        class SourceMap {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Getter for the payload used to construct the `SourceMap` instance.[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly payload: SourceMapPayload;[m
[32m+[m[32m            constructor(payload: SourceMapPayload);[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Given a line offset and column offset in the generated source[m
[32m+[m[32m             * file, returns an object representing the SourceMap range in the[m
[32m+[m[32m             * original file if found, or an empty object if not.[m
[32m+[m[32m             *[m
[32m+[m[32m             * The object returned contains the following keys:[m
[32m+[m[32m             *[m
[32m+[m[32m             * The returned value represents the raw range as it appears in the[m
[32m+[m[32m             * SourceMap, based on zero-indexed offsets, _not_ 1-indexed line and[m
[32m+[m[32m             * column numbers as they appear in Error messages and CallSite[m
[32m+[m[32m             * objects.[m
[32m+[m[32m             *[m
[32m+[m[32m             * To get the corresponding 1-indexed line and column numbers from a[m
[32m+[m[32m             * lineNumber and columnNumber as they are reported by Error stacks[m
[32m+[m[32m             * and CallSite objects, use `sourceMap.findOrigin(lineNumber, columnNumber)`[m
[32m+[m[32m             * @param lineOffset The zero-indexed line number offset in the generated source[m
[32m+[m[32m             * @param columnOffset The zero-indexed column number offset in the generated source[m
[32m+[m[32m             */[m
[32m+[m[32m            findEntry(lineOffset: number, columnOffset: number): SourceMapping;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Given a 1-indexed `lineNumber` and `columnNumber` from a call site in the generated source,[m
[32m+[m[32m             * find the corresponding call site location in the original source.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If the `lineNumber` and `columnNumber` provided are not found in any source map,[m
[32m+[m[32m             * then an empty object is returned.[m
[32m+[m[32m             * @param lineNumber The 1-indexed line number of the call site in the generated source[m
[32m+[m[32m             * @param columnNumber The 1-indexed column number of the call site in the generated source[m
[32m+[m[32m             */[m
[32m+[m[32m            findOrigin(lineNumber: number, columnNumber: number): SourceOrigin | {};[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ImportAttributes extends NodeJS.Dict<string> {[m
[32m+[m[32m            type?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        type ModuleFormat = "builtin" | "commonjs" | "json" | "module" | "wasm";[m
[32m+[m[32m        type ModuleSource = string | ArrayBuffer | NodeJS.TypedArray;[m
[32m+[m[32m        interface GlobalPreloadContext {[m
[32m+[m[32m            port: MessagePort;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated This hook will be removed in a future version.[m
[32m+[m[32m         * Use `initialize` instead. When a loader has an `initialize` export, `globalPreload` will be ignored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Sometimes it might be necessary to run some code inside of the same global scope that the application runs in.[m
[32m+[m[32m         * This hook allows the return of a string that is run as a sloppy-mode script on startup.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @param context Information to assist the preload code[m
[32m+[m[32m         * @return Code to run before application startup[m
[32m+[m[32m         */[m
[32m+[m[32m        type GlobalPreloadHook = (context: GlobalPreloadContext) => string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `initialize` hook provides a way to define a custom function that runs in the hooks thread[m
[32m+[m[32m         * when the hooks module is initialized. Initialization happens when the hooks module is registered via `register`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This hook can receive data from a `register` invocation, including ports and other transferrable objects.[m
[32m+[m[32m         * The return value of `initialize` can be a `Promise`, in which case it will be awaited before the main application thread execution resumes.[m
[32m+[m[32m         */[m
[32m+[m[32m        type InitializeHook<Data = any> = (data: Data) => void | Promise<void>;[m
[32m+[m[32m        interface ResolveHookContext {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Export conditions of the relevant `package.json`[m
[32m+[m[32m             */[m
[32m+[m[32m            conditions: string[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             *  An object whose key-value pairs represent the assertions for the module to import[m
[32m+[m[32m             */[m
[32m+[m[32m            importAttributes: ImportAttributes;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The module importing this one, or undefined if this is the Node.js entry point[m
[32m+[m[32m             */[m
[32m+[m[32m            parentURL: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ResolveFnOutput {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A hint to the load hook (it might be ignored)[m
[32m+[m[32m             */[m
[32m+[m[32m            format?: ModuleFormat | null | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The import attributes to use when caching the module (optional; if excluded the input will be used)[m
[32m+[m[32m             */[m
[32m+[m[32m            importAttributes?: ImportAttributes | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A signal that this hook intends to terminate the chain of `resolve` hooks.[m
[32m+[m[32m             * @default false[m
[32m+[m[32m             */[m
[32m+[m[32m            shortCircuit?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The absolute URL to which this input resolves[m
[32m+[m[32m             */[m
[32m+[m[32m            url: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `resolve` hook chain is responsible for resolving file URL for a given module specifier and parent URL, and optionally its format (such as `'module'`) as a hint to the `load` hook.[m
[32m+[m[32m         * If a format is specified, the load hook is ultimately responsible for providing the final `format` value (and it is free to ignore the hint provided by `resolve`);[m
[32m+[m[32m         * if `resolve` provides a format, a custom `load` hook is required even if only to pass the value to the Node.js default `load` hook.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @param specifier The specified URL path of the module to be resolved[m
[32m+[m[32m         * @param context[m
[32m+[m[32m         * @param nextResolve The subsequent `resolve` hook in the chain, or the Node.js default `resolve` hook after the last user-supplied resolve hook[m
[32m+[m[32m         */[m
[32m+[m[32m        type ResolveHook = ([m
[32m+[m[32m            specifier: string,[m
[32m+[m[32m            context: ResolveHookContext,[m
[32m+[m[32m            nextResolve: ([m
[32m+[m[32m                specifier: string,[m
[32m+[m[32m                context?: ResolveHookContext,[m
[32m+[m[32m            ) => ResolveFnOutput | Promise<ResolveFnOutput>,[m
[32m+[m[32m        ) => ResolveFnOutput | Promise<ResolveFnOutput>;[m
[32m+[m[32m        interface LoadHookContext {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Export conditions of the relevant `package.json`[m
[32m+[m[32m             */[m
[32m+[m[32m            conditions: string[];[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The format optionally supplied by the `resolve` hook chain[m
[32m+[m[32m             */[m
[32m+[m[32m            format: ModuleFormat;[m
[32m+[m[32m            /**[m
[32m+[m[32m             *  An object whose key-value pairs represent the assertions for the module to import[m
[32m+[m[32m             */[m
[32m+[m[32m            importAttributes: ImportAttributes;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface LoadFnOutput {[m
[32m+[m[32m            format: ModuleFormat;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A signal that this hook intends to terminate the chain of `resolve` hooks.[m
[32m+[m[32m             * @default false[m
[32m+[m[32m             */[m
[32m+[m[32m            shortCircuit?: boolean | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The source for Node.js to evaluate[m
[32m+[m[32m             */[m
[32m+[m[32m            source?: ModuleSource;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `load` hook provides a way to define a custom method of determining how a URL should be interpreted, retrieved, and parsed.[m
[32m+[m[32m         * It is also in charge of validating the import assertion.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @param url The URL/path of the module to be loaded[m
[32m+[m[32m         * @param context Metadata about the module[m
[32m+[m[32m         * @param nextLoad The subsequent `load` hook in the chain, or the Node.js default `load` hook after the last user-supplied `load` hook[m
[32m+[m[32m         */[m
[32m+[m[32m        type LoadHook = ([m
[32m+[m[32m            url: string,[m
[32m+[m[32m            context: LoadHookContext,[m
[32m+[m[32m            nextLoad: (url: string, context?: LoadHookContext) => LoadFnOutput | Promise<LoadFnOutput>,[m
[32m+[m[32m        ) => LoadFnOutput | Promise<LoadFnOutput>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface RegisterOptions<Data> {[m
[32m+[m[32m        parentURL: string | URL;[m
[32m+[m[32m        data?: Data | undefined;[m
[32m+[m[32m        transferList?: any[] | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface Module extends NodeModule {}[m
[32m+[m[32m    class Module {[m
[32m+[m[32m        static runMain(): void;[m
[32m+[m[32m        static wrap(code: string): string;[m
[32m+[m[32m        static createRequire(path: string | URL): NodeRequire;[m
[32m+[m[32m        static builtinModules: string[];[m
[32m+[m[32m        static isBuiltin(moduleName: string): boolean;[m
[32m+[m[32m        static Module: typeof Module;[m
[32m+[m[32m        static register<Data = any>([m
[32m+[m[32m            specifier: string | URL,[m
[32m+[m[32m            parentURL?: string | URL,[m
[32m+[m[32m            options?: RegisterOptions<Data>,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        static register<Data = any>(specifier: string | URL, options?: RegisterOptions<Data>): void;[m
[32m+[m[32m        constructor(id: string, parent?: Module);[m
[32m+[m[32m    }[m
[32m+[m[32m    global {[m
[32m+[m[32m        interface ImportMeta {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The directory name of the current module. This is the same as the `path.dirname()` of the `import.meta.filename`.[m
[32m+[m[32m             * **Caveat:** only present on `file:` modules.[m
[32m+[m[32m             */[m
[32m+[m[32m            dirname: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The full absolute path and filename of the current module, with symlinks resolved.[m
[32m+[m[32m             * This is the same as the `url.fileURLToPath()` of the `import.meta.url`.[m
[32m+[m[32m             * **Caveat:** only local modules support this property. Modules not using the `file:` protocol will not provide it.[m
[32m+[m[32m             */[m
[32m+[m[32m            filename: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The absolute `file:` URL of the module.[m
[32m+[m[32m             */[m
[32m+[m[32m            url: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Provides a module-relative resolution function scoped to each module, returning[m
[32m+[m[32m             * the URL string.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Second `parent` parameter is only used when the `--experimental-import-meta-resolve`[m
[32m+[m[32m             * command flag enabled.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @since v20.6.0[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param specifier The module specifier to resolve relative to `parent`.[m
[32m+[m[32m             * @param parent The absolute parent module URL to resolve from.[m
[32m+[m[32m             * @returns The absolute (`file:`) URL string for the resolved module.[m
[32m+[m[32m             */[m
[32m+[m[32m            resolve(specifier: string, parent?: string | URL | undefined): string;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    export = Module;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:module" {[m
[32m+[m[32m    import module = require("module");[m
[32m+[m[32m    export = module;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/net.d.ts b/node_modules/@types/node/net.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..15ed7b7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/net.d.ts[m
[36m@@ -0,0 +1,999 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * > Stability: 2 - Stable[m
[32m+[m[32m *[m
[32m+[m[32m * The `node:net` module provides an asynchronous network API for creating stream-based[m
[32m+[m[32m * TCP or `IPC` servers ({@link createServer}) and clients[m
[32m+[m[32m * ({@link createConnection}).[m
[32m+[m[32m *[m
[32m+[m[32m * It can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const net = require('node:net');[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/net.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "net" {[m
[32m+[m[32m    import * as stream from "node:stream";[m
[32m+[m[32m    import { Abortable, EventEmitter } from "node:events";[m
[32m+[m[32m    import * as dns from "node:dns";[m
[32m+[m[32m    type LookupFunction = ([m
[32m+[m[32m        hostname: string,[m
[32m+[m[32m        options: dns.LookupOptions,[m
[32m+[m[32m        callback: (err: NodeJS.ErrnoException | null, address: string | dns.LookupAddress[], family?: number) => void,[m
[32m+[m[32m    ) => void;[m
[32m+[m[32m    interface AddressInfo {[m
[32m+[m[32m        address: string;[m
[32m+[m[32m        family: string;[m
[32m+[m[32m        port: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface SocketConstructorOpts {[m
[32m+[m[32m        fd?: number | undefined;[m
[32m+[m[32m        allowHalfOpen?: boolean | undefined;[m
[32m+[m[32m        readable?: boolean | undefined;[m
[32m+[m[32m        writable?: boolean | undefined;[m
[32m+[m[32m        signal?: AbortSignal;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface OnReadOpts {[m
[32m+[m[32m        buffer: Uint8Array | (() => Uint8Array);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function is called for every chunk of incoming data.[m
[32m+[m[32m         * Two arguments are passed to it: the number of bytes written to buffer and a reference to buffer.[m
[32m+[m[32m         * Return false from this function to implicitly pause() the socket.[m
[32m+[m[32m         */[m
[32m+[m[32m        callback(bytesWritten: number, buf: Uint8Array): boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ConnectOpts {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If specified, incoming data is stored in a single buffer and passed to the supplied callback when data arrives on the socket.[m
[32m+[m[32m         * Note: this will cause the streaming functionality to not provide any data, however events like 'error', 'end', and 'close' will[m
[32m+[m[32m         * still be emitted as normal and methods like pause() and resume() will also behave as expected.[m
[32m+[m[32m         */[m
[32m+[m[32m        onread?: OnReadOpts | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface TcpSocketConnectOpts extends ConnectOpts {[m
[32m+[m[32m        port: number;[m
[32m+[m[32m        host?: string | undefined;[m
[32m+[m[32m        localAddress?: string | undefined;[m
[32m+[m[32m        localPort?: number | undefined;[m
[32m+[m[32m        hints?: number | undefined;[m
[32m+[m[32m        family?: number | undefined;[m
[32m+[m[32m        lookup?: LookupFunction | undefined;[m
[32m+[m[32m        noDelay?: boolean | undefined;[m
[32m+[m[32m        keepAlive?: boolean | undefined;[m
[32m+[m[32m        keepAliveInitialDelay?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v18.13.0[m
[32m+[m[32m         */[m
[32m+[m[32m        autoSelectFamily?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v18.13.0[m
[32m+[m[32m         */[m
[32m+[m[32m        autoSelectFamilyAttemptTimeout?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface IpcSocketConnectOpts extends ConnectOpts {[m
[32m+[m[32m        path: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    type SocketConnectOpts = TcpSocketConnectOpts | IpcSocketConnectOpts;[m
[32m+[m[32m    type SocketReadyState = "opening" | "open" | "readOnly" | "writeOnly" | "closed";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This class is an abstraction of a TCP socket or a streaming `IPC` endpoint[m
[32m+[m[32m     * (uses named pipes on Windows, and Unix domain sockets otherwise). It is also[m
[32m+[m[32m     * an `EventEmitter`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * A `net.Socket` can be created by the user and used directly to interact with[m
[32m+[m[32m     * a server. For example, it is returned by {@link createConnection},[m
[32m+[m[32m     * so the user can use it to talk to the server.[m
[32m+[m[32m     *[m
[32m+[m[32m     * It can also be created by Node.js and passed to the user when a connection[m
[32m+[m[32m     * is received. For example, it is passed to the listeners of a `'connection'` event emitted on a {@link Server}, so the user can use[m
[32m+[m[32m     * it to interact with the client.[m
[32m+[m[32m     * @since v0.3.4[m
[32m+[m[32m     */[m
[32m+[m[32m    class Socket extends stream.Duplex {[m
[32m+[m[32m        constructor(options?: SocketConstructorOpts);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Destroys the socket after all data is written. If the `finish` event was already emitted the socket is destroyed immediately.[m
[32m+[m[32m         * If the socket is still writable it implicitly calls `socket.end()`.[m
[32m+[m[32m         * @since v0.3.4[m
[32m+[m[32m         */[m
[32m+[m[32m        destroySoon(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sends data on the socket. The second parameter specifies the encoding in the[m
[32m+[m[32m         * case of a string. It defaults to UTF8 encoding.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Returns `true` if the entire data was flushed successfully to the kernel[m
[32m+[m[32m         * buffer. Returns `false` if all or part of the data was queued in user memory.`'drain'` will be emitted when the buffer is again free.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `callback` parameter will be executed when the data is finally[m
[32m+[m[32m         * written out, which may not be immediately.[m
[32m+[m[32m         *[m
[32m+[m[32m         * See `Writable` stream `write()` method for more[m
[32m+[m[32m         * information.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         * @param [encoding='utf8'] Only used when data is `string`.[m
[32m+[m[32m         */[m
[32m+[m[32m        write(buffer: Uint8Array | string, cb?: (err?: Error) => void): boolean;[m
[32m+[m[32m        write(str: Uint8Array | string, encoding?: BufferEncoding, cb?: (err?: Error) => void): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Initiate a connection on a given socket.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Possible signatures:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `socket.connect(options[, connectListener])`[m
[32m+[m[32m         * * `socket.connect(path[, connectListener])` for `IPC` connections.[m
[32m+[m[32m         * * `socket.connect(port[, host][, connectListener])` for TCP connections.[m
[32m+[m[32m         * * Returns: `net.Socket` The socket itself.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This function is asynchronous. When the connection is established, the `'connect'` event will be emitted. If there is a problem connecting,[m
[32m+[m[32m         * instead of a `'connect'` event, an `'error'` event will be emitted with[m
[32m+[m[32m         * the error passed to the `'error'` listener.[m
[32m+[m[32m         * The last parameter `connectListener`, if supplied, will be added as a listener[m
[32m+[m[32m         * for the `'connect'` event **once**.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This function should only be used for reconnecting a socket after`'close'` has been emitted or otherwise it may lead to undefined[m
[32m+[m[32m         * behavior.[m
[32m+[m[32m         */[m
[32m+[m[32m        connect(options: SocketConnectOpts, connectionListener?: () => void): this;[m
[32m+[m[32m        connect(port: number, host: string, connectionListener?: () => void): this;[m
[32m+[m[32m        connect(port: number, connectionListener?: () => void): this;[m
[32m+[m[32m        connect(path: string, connectionListener?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Set the encoding for the socket as a `Readable Stream`. See `readable.setEncoding()` for more information.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         * @return The socket itself.[m
[32m+[m[32m         */[m
[32m+[m[32m        setEncoding(encoding?: BufferEncoding): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Pauses the reading of data. That is, `'data'` events will not be emitted.[m
[32m+[m[32m         * Useful to throttle back an upload.[m
[32m+[m[32m         * @return The socket itself.[m
[32m+[m[32m         */[m
[32m+[m[32m        pause(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Close the TCP connection by sending an RST packet and destroy the stream.[m
[32m+[m[32m         * If this TCP socket is in connecting status, it will send an RST packet and destroy this TCP socket once it is connected.[m
[32m+[m[32m         * Otherwise, it will call `socket.destroy` with an `ERR_SOCKET_CLOSED` Error.[m
[32m+[m[32m         * If this is not a TCP socket (for example, a pipe), calling this method will immediately throw an `ERR_INVALID_HANDLE_TYPE` Error.[m
[32m+[m[32m         * @since v18.3.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        resetAndDestroy(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Resumes reading after a call to `socket.pause()`.[m
[32m+[m[32m         * @return The socket itself.[m
[32m+[m[32m         */[m
[32m+[m[32m        resume(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the socket to timeout after `timeout` milliseconds of inactivity on[m
[32m+[m[32m         * the socket. By default `net.Socket` do not have a timeout.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When an idle timeout is triggered the socket will receive a `'timeout'` event but the connection will not be severed. The user must manually call `socket.end()` or `socket.destroy()` to[m
[32m+[m[32m         * end the connection.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * socket.setTimeout(3000);[m
[32m+[m[32m         * socket.on('timeout', () => {[m
[32m+[m[32m         *   console.log('socket timeout');[m
[32m+[m[32m         *   socket.end();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `timeout` is 0, then the existing idle timeout is disabled.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `callback` parameter will be added as a one-time listener for the `'timeout'` event.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         * @return The socket itself.[m
[32m+[m[32m         */[m
[32m+[m[32m        setTimeout(timeout: number, callback?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enable/disable the use of Nagle's algorithm.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When a TCP connection is created, it will have Nagle's algorithm enabled.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Nagle's algorithm delays data before it is sent via the network. It attempts[m
[32m+[m[32m         * to optimize throughput at the expense of latency.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Passing `true` for `noDelay` or not passing an argument will disable Nagle's[m
[32m+[m[32m         * algorithm for the socket. Passing `false` for `noDelay` will enable Nagle's[m
[32m+[m[32m         * algorithm.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         * @param [noDelay=true][m
[32m+[m[32m         * @return The socket itself.[m
[32m+[m[32m         */[m
[32m+[m[32m        setNoDelay(noDelay?: boolean): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enable/disable keep-alive functionality, and optionally set the initial[m
[32m+[m[32m         * delay before the first keepalive probe is sent on an idle socket.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Set `initialDelay` (in milliseconds) to set the delay between the last[m
[32m+[m[32m         * data packet received and the first keepalive probe. Setting `0` for`initialDelay` will leave the value unchanged from the default[m
[32m+[m[32m         * (or previous) setting.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Enabling the keep-alive functionality will set the following socket options:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `SO_KEEPALIVE=1`[m
[32m+[m[32m         * * `TCP_KEEPIDLE=initialDelay`[m
[32m+[m[32m         * * `TCP_KEEPCNT=10`[m
[32m+[m[32m         * * `TCP_KEEPINTVL=1`[m
[32m+[m[32m         * @since v0.1.92[m
[32m+[m[32m         * @param [enable=false][m
[32m+[m[32m         * @param [initialDelay=0][m
[32m+[m[32m         * @return The socket itself.[m
[32m+[m[32m         */[m
[32m+[m[32m        setKeepAlive(enable?: boolean, initialDelay?: number): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the bound `address`, the address `family` name and `port` of the[m
[32m+[m[32m         * socket as reported by the operating system:`{ port: 12346, family: 'IPv4', address: '127.0.0.1' }`[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         */[m
[32m+[m[32m        address(): AddressInfo | {};[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calling `unref()` on a socket will allow the program to exit if this is the only[m
[32m+[m[32m         * active socket in the event system. If the socket is already `unref`ed calling`unref()` again will have no effect.[m
[32m+[m[32m         * @since v0.9.1[m
[32m+[m[32m         * @return The socket itself.[m
[32m+[m[32m         */[m
[32m+[m[32m        unref(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Opposite of `unref()`, calling `ref()` on a previously `unref`ed socket will _not_ let the program exit if it's the only socket left (the default behavior).[m
[32m+[m[32m         * If the socket is `ref`ed calling `ref` again will have no effect.[m
[32m+[m[32m         * @since v0.9.1[m
[32m+[m[32m         * @return The socket itself.[m
[32m+[m[32m         */[m
[32m+[m[32m        ref(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property is only present if the family autoselection algorithm is enabled in `socket.connect(options)`[m
[32m+[m[32m         * and it is an array of the addresses that have been attempted.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Each address is a string in the form of `$IP:$PORT`.[m
[32m+[m[32m         * If the connection was successful, then the last address is the one that the socket is currently connected to.[m
[32m+[m[32m         * @since v19.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly autoSelectFamilyAttemptedAddresses: string[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property shows the number of characters buffered for writing. The buffer[m
[32m+[m[32m         * may contain strings whose length after encoding is not yet known. So this number[m
[32m+[m[32m         * is only an approximation of the number of bytes in the buffer.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `net.Socket` has the property that `socket.write()` always works. This is to[m
[32m+[m[32m         * help users get up and running quickly. The computer cannot always keep up[m
[32m+[m[32m         * with the amount of data that is written to a socket. The network connection[m
[32m+[m[32m         * simply might be too slow. Node.js will internally queue up the data written to a[m
[32m+[m[32m         * socket and send it out over the wire when it is possible.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The consequence of this internal buffering is that memory may grow.[m
[32m+[m[32m         * Users who experience large or growing `bufferSize` should attempt to[m
[32m+[m[32m         * "throttle" the data flows in their program with `socket.pause()` and `socket.resume()`.[m
[32m+[m[32m         * @since v0.3.8[m
[32m+[m[32m         * @deprecated Since v14.6.0 - Use `writableLength` instead.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly bufferSize: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The amount of received bytes.[m
[32m+[m[32m         * @since v0.5.3[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly bytesRead: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The amount of bytes sent.[m
[32m+[m[32m         * @since v0.5.3[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly bytesWritten: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, `socket.connect(options[, connectListener])` was[m
[32m+[m[32m         * called and has not yet finished. It will stay `true` until the socket becomes[m
[32m+[m[32m         * connected, then it is set to `false` and the `'connect'` event is emitted. Note[m
[32m+[m[32m         * that the `socket.connect(options[, connectListener])` callback is a listener for the `'connect'` event.[m
[32m+[m[32m         * @since v6.1.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly connecting: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This is `true` if the socket is not connected yet, either because `.connect()`has not yet been called or because it is still in the process of connecting[m
[32m+[m[32m         * (see `socket.connecting`).[m
[32m+[m[32m         * @since v11.2.0, v10.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly pending: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * See `writable.destroyed` for further details.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly destroyed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The string representation of the local IP address the remote client is[m
[32m+[m[32m         * connecting on. For example, in a server listening on `'0.0.0.0'`, if a client[m
[32m+[m[32m         * connects on `'192.168.1.1'`, the value of `socket.localAddress` would be`'192.168.1.1'`.[m
[32m+[m[32m         * @since v0.9.6[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly localAddress?: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The numeric representation of the local port. For example, `80` or `21`.[m
[32m+[m[32m         * @since v0.9.6[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly localPort?: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The string representation of the local IP family. `'IPv4'` or `'IPv6'`.[m
[32m+[m[32m         * @since v18.8.0, v16.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly localFamily?: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property represents the state of the connection as a string.[m
[32m+[m[32m         *[m
[32m+[m[32m         * * If the stream is connecting `socket.readyState` is `opening`.[m
[32m+[m[32m         * * If the stream is readable and writable, it is `open`.[m
[32m+[m[32m         * * If the stream is readable and not writable, it is `readOnly`.[m
[32m+[m[32m         * * If the stream is not readable and writable, it is `writeOnly`.[m
[32m+[m[32m         * @since v0.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly readyState: SocketReadyState;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The string representation of the remote IP address. For example,`'74.125.127.100'` or `'2001:4860:a005::68'`. Value may be `undefined` if[m
[32m+[m[32m         * the socket is destroyed (for example, if the client disconnected).[m
[32m+[m[32m         * @since v0.5.10[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly remoteAddress?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The string representation of the remote IP family. `'IPv4'` or `'IPv6'`. Value may be `undefined` if[m
[32m+[m[32m         * the socket is destroyed (for example, if the client disconnected).[m
[32m+[m[32m         * @since v0.11.14[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly remoteFamily?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The numeric representation of the remote port. For example, `80` or `21`. Value may be `undefined` if[m
[32m+[m[32m         * the socket is destroyed (for example, if the client disconnected).[m
[32m+[m[32m         * @since v0.5.10[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly remotePort?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The socket timeout in milliseconds as set by `socket.setTimeout()`.[m
[32m+[m[32m         * It is `undefined` if a timeout has not been set.[m
[32m+[m[32m         * @since v10.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly timeout?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Half-closes the socket. i.e., it sends a FIN packet. It is possible the[m
[32m+[m[32m         * server will still send some data.[m
[32m+[m[32m         *[m
[32m+[m[32m         * See `writable.end()` for further details.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         * @param [encoding='utf8'] Only used when data is `string`.[m
[32m+[m[32m         * @param callback Optional callback for when the socket is finished.[m
[32m+[m[32m         * @return The socket itself.[m
[32m+[m[32m         */[m
[32m+[m[32m        end(callback?: () => void): this;[m
[32m+[m[32m        end(buffer: Uint8Array | string, callback?: () => void): this;[m
[32m+[m[32m        end(str: Uint8Array | string, encoding?: BufferEncoding, callback?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         *   1. close[m
[32m+[m[32m         *   2. connect[m
[32m+[m[32m         *   3. connectionAttempt[m
[32m+[m[32m         *   4. connectionAttemptFailed[m
[32m+[m[32m         *   5. connectionAttemptTimeout[m
[32m+[m[32m         *   6. data[m
[32m+[m[32m         *   7. drain[m
[32m+[m[32m         *   8. end[m
[32m+[m[32m         *   9. error[m
[32m+[m[32m         *   10. lookup[m
[32m+[m[32m         *   11. ready[m
[32m+[m[32m         *   12. timeout[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: (hadError: boolean) => void): this;[m
[32m+[m[32m        addListener(event: "connect", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "connectionAttempt", listener: (ip: string, port: number, family: number) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "connectionAttemptFailed",[m
[32m+[m[32m            listener: (ip: string, port: number, family: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "connectionAttemptTimeout",[m
[32m+[m[32m            listener: (ip: string, port: number, family: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "data", listener: (data: Buffer) => void): this;[m
[32m+[m[32m        addListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener([m
[32m+[m[32m            event: "lookup",[m
[32m+[m[32m            listener: (err: Error, address: string, family: string | number, host: string) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        addListener(event: "ready", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: "close", hadError: boolean): boolean;[m
[32m+[m[32m        emit(event: "connect"): boolean;[m
[32m+[m[32m        emit(event: "connectionAttempt", ip: string, port: number, family: number): boolean;[m
[32m+[m[32m        emit(event: "connectionAttemptFailed", ip: string, port: number, family: number): boolean;[m
[32m+[m[32m        emit(event: "connectionAttemptTimeout", ip: string, port: number, family: number): boolean;[m
[32m+[m[32m        emit(event: "data", data: Buffer): boolean;[m
[32m+[m[32m        emit(event: "drain"): boolean;[m
[32m+[m[32m        emit(event: "end"): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: "lookup", err: Error, address: string, family: string | number, host: string): boolean;[m
[32m+[m[32m        emit(event: "ready"): boolean;[m
[32m+[m[32m        emit(event: "timeout"): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "close", listener: (hadError: boolean) => void): this;[m
[32m+[m[32m        on(event: "connect", listener: () => void): this;[m
[32m+[m[32m        on(event: "connectionAttempt", listener: (ip: string, port: number, family: number) => void): this;[m
[32m+[m[32m        on(event: "connectionAttemptFailed", listener: (ip: string, port: number, family: number) => void): this;[m
[32m+[m[32m        on(event: "connectionAttemptTimeout", listener: (ip: string, port: number, family: number) => void): this;[m
[32m+[m[32m        on(event: "data", listener: (data: Buffer) => void): this;[m
[32m+[m[32m        on(event: "drain", listener: () => void): this;[m
[32m+[m[32m        on(event: "end", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on([m
[32m+[m[32m            event: "lookup",[m
[32m+[m[32m            listener: (err: Error, address: string, family: string | number, host: string) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        on(event: "ready", listener: () => void): this;[m
[32m+[m[32m        on(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: (hadError: boolean) => void): this;[m
[32m+[m[32m        once(event: "connectionAttempt", listener: (ip: string, port: number, family: number) => void): this;[m
[32m+[m[32m        once(event: "connectionAttemptFailed", listener: (ip: string, port: number, family: number) => void): this;[m
[32m+[m[32m        once(event: "connectionAttemptTimeout", listener: (ip: string, port: number, family: number) => void): this;[m
[32m+[m[32m        once(event: "connect", listener: () => void): this;[m
[32m+[m[32m        once(event: "data", listener: (data: Buffer) => void): this;[m
[32m+[m[32m        once(event: "drain", listener: () => void): this;[m
[32m+[m[32m        once(event: "end", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once([m
[32m+[m[32m            event: "lookup",[m
[32m+[m[32m            listener: (err: Error, address: string, family: string | number, host: string) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        once(event: "ready", listener: () => void): this;[m
[32m+[m[32m        once(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: (hadError: boolean) => void): this;[m
[32m+[m[32m        prependListener(event: "connect", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "connectionAttempt", listener: (ip: string, port: number, family: number) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "connectionAttemptFailed",[m
[32m+[m[32m            listener: (ip: string, port: number, family: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "connectionAttemptTimeout",[m
[32m+[m[32m            listener: (ip: string, port: number, family: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "data", listener: (data: Buffer) => void): this;[m
[32m+[m[32m        prependListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener([m
[32m+[m[32m            event: "lookup",[m
[32m+[m[32m            listener: (err: Error, address: string, family: string | number, host: string) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependListener(event: "ready", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: (hadError: boolean) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "connect", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "connectionAttempt",[m
[32m+[m[32m            listener: (ip: string, port: number, family: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "connectionAttemptFailed",[m
[32m+[m[32m            listener: (ip: string, port: number, family: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "connectionAttemptTimeout",[m
[32m+[m[32m            listener: (ip: string, port: number, family: number) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "data", listener: (data: Buffer) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener([m
[32m+[m[32m            event: "lookup",[m
[32m+[m[32m            listener: (err: Error, address: string, family: string | number, host: string) => void,[m
[32m+[m[32m        ): this;[m
[32m+[m[32m        prependOnceListener(event: "ready", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "timeout", listener: () => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ListenOptions extends Abortable {[m
[32m+[m[32m        port?: number | undefined;[m
[32m+[m[32m        host?: string | undefined;[m
[32m+[m[32m        backlog?: number | undefined;[m
[32m+[m[32m        path?: string | undefined;[m
[32m+[m[32m        exclusive?: boolean | undefined;[m
[32m+[m[32m        readableAll?: boolean | undefined;[m
[32m+[m[32m        writableAll?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        ipv6Only?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ServerOpts {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Indicates whether half-opened TCP connections are allowed.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        allowHalfOpen?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Indicates whether the socket should be paused on incoming connections.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        pauseOnConnect?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If set to `true`, it disables the use of Nagle's algorithm immediately after a new incoming connection is received.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         * @since v16.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        noDelay?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If set to `true`, it enables keep-alive functionality on the socket immediately after a new incoming connection is received,[m
[32m+[m[32m         * similarly on what is done in `socket.setKeepAlive([enable][, initialDelay])`.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         * @since v16.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        keepAlive?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If set to a positive number, it sets the initial delay before the first keepalive probe is sent on an idle socket.[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         * @since v16.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        keepAliveInitialDelay?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface DropArgument {[m
[32m+[m[32m        localAddress?: string;[m
[32m+[m[32m        localPort?: number;[m
[32m+[m[32m        localFamily?: string;[m
[32m+[m[32m        remoteAddress?: string;[m
[32m+[m[32m        remotePort?: number;[m
[32m+[m[32m        remoteFamily?: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This class is used to create a TCP or `IPC` server.[m
[32m+[m[32m     * @since v0.1.90[m
[32m+[m[32m     */[m
[32m+[m[32m    class Server extends EventEmitter {[m
[32m+[m[32m        constructor(connectionListener?: (socket: Socket) => void);[m
[32m+[m[32m        constructor(options?: ServerOpts, connectionListener?: (socket: Socket) => void);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Start a server listening for connections. A `net.Server` can be a TCP or[m
[32m+[m[32m         * an `IPC` server depending on what it listens to.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Possible signatures:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `server.listen(handle[, backlog][, callback])`[m
[32m+[m[32m         * * `server.listen(options[, callback])`[m
[32m+[m[32m         * * `server.listen(path[, backlog][, callback])` for `IPC` servers[m
[32m+[m[32m         * * `server.listen([port[, host[, backlog]]][, callback])` for TCP servers[m
[32m+[m[32m         *[m
[32m+[m[32m         * This function is asynchronous. When the server starts listening, the `'listening'` event will be emitted. The last parameter `callback`will be added as a listener for the `'listening'`[m
[32m+[m[32m         * event.[m
[32m+[m[32m         *[m
[32m+[m[32m         * All `listen()` methods can take a `backlog` parameter to specify the maximum[m
[32m+[m[32m         * length of the queue of pending connections. The actual length will be determined[m
[32m+[m[32m         * by the OS through sysctl settings such as `tcp_max_syn_backlog` and `somaxconn` on Linux. The default value of this parameter is 511 (not 512).[m
[32m+[m[32m         *[m
[32m+[m[32m         * All {@link Socket} are set to `SO_REUSEADDR` (see [`socket(7)`](https://man7.org/linux/man-pages/man7/socket.7.html) for[m
[32m+[m[32m         * details).[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `server.listen()` method can be called again if and only if there was an[m
[32m+[m[32m         * error during the first `server.listen()` call or `server.close()` has been[m
[32m+[m[32m         * called. Otherwise, an `ERR_SERVER_ALREADY_LISTEN` error will be thrown.[m
[32m+[m[32m         *[m
[32m+[m[32m         * One of the most common errors raised when listening is `EADDRINUSE`.[m
[32m+[m[32m         * This happens when another server is already listening on the requested`port`/`path`/`handle`. One way to handle this would be to retry[m
[32m+[m[32m         * after a certain amount of time:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * server.on('error', (e) => {[m
[32m+[m[32m         *   if (e.code === 'EADDRINUSE') {[m
[32m+[m[32m         *     console.error('Address in use, retrying...');[m
[32m+[m[32m         *     setTimeout(() => {[m
[32m+[m[32m         *       server.close();[m
[32m+[m[32m         *       server.listen(PORT, HOST);[m
[32m+[m[32m         *     }, 1000);[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         */[m
[32m+[m[32m        listen(port?: number, hostname?: string, backlog?: number, listeningListener?: () => void): this;[m
[32m+[m[32m        listen(port?: number, hostname?: string, listeningListener?: () => void): this;[m
[32m+[m[32m        listen(port?: number, backlog?: number, listeningListener?: () => void): this;[m
[32m+[m[32m        listen(port?: number, listeningListener?: () => void): this;[m
[32m+[m[32m        listen(path: string, backlog?: number, listeningListener?: () => void): this;[m
[32m+[m[32m        listen(path: string, listeningListener?: () => void): this;[m
[32m+[m[32m        listen(options: ListenOptions, listeningListener?: () => void): this;[m
[32m+[m[32m        listen(handle: any, backlog?: number, listeningListener?: () => void): this;[m
[32m+[m[32m        listen(handle: any, listeningListener?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Stops the server from accepting new connections and keeps existing[m
[32m+[m[32m         * connections. This function is asynchronous, the server is finally closed[m
[32m+[m[32m         * when all connections are ended and the server emits a `'close'` event.[m
[32m+[m[32m         * The optional `callback` will be called once the `'close'` event occurs. Unlike[m
[32m+[m[32m         * that event, it will be called with an `Error` as its only argument if the server[m
[32m+[m[32m         * was not open when it was closed.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         * @param callback Called when the server is closed.[m
[32m+[m[32m         */[m
[32m+[m[32m        close(callback?: (err?: Error) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the bound `address`, the address `family` name, and `port` of the server[m
[32m+[m[32m         * as reported by the operating system if listening on an IP socket[m
[32m+[m[32m         * (useful to find which port was assigned when getting an OS-assigned address):`{ port: 12346, family: 'IPv4', address: '127.0.0.1' }`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * For a server listening on a pipe or Unix domain socket, the name is returned[m
[32m+[m[32m         * as a string.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const server = net.createServer((socket) => {[m
[32m+[m[32m         *   socket.end('goodbye\n');[m
[32m+[m[32m         * }).on('error', (err) => {[m
[32m+[m[32m         *   // Handle errors here.[m
[32m+[m[32m         *   throw err;[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Grab an arbitrary unused port.[m
[32m+[m[32m         * server.listen(() => {[m
[32m+[m[32m         *   console.log('opened server on', server.address());[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * `server.address()` returns `null` before the `'listening'` event has been[m
[32m+[m[32m         * emitted or after calling `server.close()`.[m
[32m+[m[32m         * @since v0.1.90[m
[32m+[m[32m         */[m
[32m+[m[32m        address(): AddressInfo | string | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Asynchronously get the number of concurrent connections on the server. Works[m
[32m+[m[32m         * when sockets were sent to forks.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Callback should take two arguments `err` and `count`.[m
[32m+[m[32m         * @since v0.9.7[m
[32m+[m[32m         */[m
[32m+[m[32m        getConnections(cb: (error: Error | null, count: number) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Opposite of `unref()`, calling `ref()` on a previously `unref`ed server will _not_ let the program exit if it's the only server left (the default behavior).[m
[32m+[m[32m         * If the server is `ref`ed calling `ref()` again will have no effect.[m
[32m+[m[32m         * @since v0.9.1[m
[32m+[m[32m         */[m
[32m+[m[32m        ref(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calling `unref()` on a server will allow the program to exit if this is the only[m
[32m+[m[32m         * active server in the event system. If the server is already `unref`ed calling`unref()` again will have no effect.[m
[32m+[m[32m         * @since v0.9.1[m
[32m+[m[32m         */[m
[32m+[m[32m        unref(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Set this property to reject connections when the server's connection count gets[m
[32m+[m[32m         * high.[m
[32m+[m[32m         *[m
[32m+[m[32m         * It is not recommended to use this option once a socket has been sent to a child[m
[32m+[m[32m         * with `child_process.fork()`.[m
[32m+[m[32m         * @since v0.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        maxConnections: number;[m
[32m+[m[32m        connections: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Indicates whether or not the server is listening for connections.[m
[32m+[m[32m         * @since v5.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly listening: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         *   1. close[m
[32m+[m[32m         *   2. connection[m
[32m+[m[32m         *   3. error[m
[32m+[m[32m         *   4. listening[m
[32m+[m[32m         *   5. drop[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "connection", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "drop", listener: (data?: DropArgument) => void): this;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "connection", socket: Socket): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: "listening"): boolean;[m
[32m+[m[32m        emit(event: "drop", data?: DropArgument): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "connection", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "listening", listener: () => void): this;[m
[32m+[m[32m        on(event: "drop", listener: (data?: DropArgument) => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "connection", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "listening", listener: () => void): this;[m
[32m+[m[32m        once(event: "drop", listener: (data?: DropArgument) => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "connection", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "drop", listener: (data?: DropArgument) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "connection", listener: (socket: Socket) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "listening", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "drop", listener: (data?: DropArgument) => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calls {@link Server.close()} and returns a promise that fulfills when the server has closed.[m
[32m+[m[32m         * @since v20.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        [Symbol.asyncDispose](): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    type IPVersion = "ipv4" | "ipv6";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `BlockList` object can be used with some network APIs to specify rules for[m
[32m+[m[32m     * disabling inbound or outbound access to specific IP addresses, IP ranges, or[m
[32m+[m[32m     * IP subnets.[m
[32m+[m[32m     * @since v15.0.0, v14.18.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class BlockList {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Adds a rule to block the given IP address.[m
[32m+[m[32m         * @since v15.0.0, v14.18.0[m
[32m+[m[32m         * @param address An IPv4 or IPv6 address.[m
[32m+[m[32m         * @param [type='ipv4'] Either `'ipv4'` or `'ipv6'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        addAddress(address: string, type?: IPVersion): void;[m
[32m+[m[32m        addAddress(address: SocketAddress): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Adds a rule to block a range of IP addresses from `start` (inclusive) to`end` (inclusive).[m
[32m+[m[32m         * @since v15.0.0, v14.18.0[m
[32m+[m[32m         * @param start The starting IPv4 or IPv6 address in the range.[m
[32m+[m[32m         * @param end The ending IPv4 or IPv6 address in the range.[m
[32m+[m[32m         * @param [type='ipv4'] Either `'ipv4'` or `'ipv6'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        addRange(start: string, end: string, type?: IPVersion): void;[m
[32m+[m[32m        addRange(start: SocketAddress, end: SocketAddress): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Adds a rule to block a range of IP addresses specified as a subnet mask.[m
[32m+[m[32m         * @since v15.0.0, v14.18.0[m
[32m+[m[32m         * @param net The network IPv4 or IPv6 address.[m
[32m+[m[32m         * @param prefix The number of CIDR prefix bits. For IPv4, this must be a value between `0` and `32`. For IPv6, this must be between `0` and `128`.[m
[32m+[m[32m         * @param [type='ipv4'] Either `'ipv4'` or `'ipv6'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        addSubnet(net: SocketAddress, prefix: number): void;[m
[32m+[m[32m        addSubnet(net: string, prefix: number, type?: IPVersion): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns `true` if the given IP address matches any of the rules added to the`BlockList`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const blockList = new net.BlockList();[m
[32m+[m[32m         * blockList.addAddress('123.123.123.123');[m
[32m+[m[32m         * blockList.addRange('10.0.0.1', '10.0.0.10');[m
[32m+[m[32m         * blockList.addSubnet('8592:757c:efae:4e45::', 64, 'ipv6');[m
[32m+[m[32m         *[m
[32m+[m[32m         * console.log(blockList.check('123.123.123.123'));  // Prints: true[m
[32m+[m[32m         * console.log(blockList.check('10.0.0.3'));  // Prints: true[m
[32m+[m[32m         * console.log(blockList.check('222.111.111.222'));  // Prints: false[m
[32m+[m[32m         *[m
[32m+[m[32m         * // IPv6 notation for IPv4 addresses works:[m
[32m+[m[32m         * console.log(blockList.check('::ffff:7b7b:7b7b', 'ipv6')); // Prints: true[m
[32m+[m[32m         * console.log(blockList.check('::ffff:123.123.123.123', 'ipv6')); // Prints: true[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.0.0, v14.18.0[m
[32m+[m[32m         * @param address The IP address to check[m
[32m+[m[32m         * @param [type='ipv4'] Either `'ipv4'` or `'ipv6'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        check(address: SocketAddress): boolean;[m
[32m+[m[32m        check(address: string, type?: IPVersion): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The list of rules added to the blocklist.[m
[32m+[m[32m         * @since v15.0.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        rules: readonly string[];[m
[32m+[m[32m    }[m
[32m+[m[32m    interface TcpNetConnectOpts extends TcpSocketConnectOpts, SocketConstructorOpts {[m
[32m+[m[32m        timeout?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface IpcNetConnectOpts extends IpcSocketConnectOpts, SocketConstructorOpts {[m
[32m+[m[32m        timeout?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    type NetConnectOpts = TcpNetConnectOpts | IpcNetConnectOpts;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates a new TCP or `IPC` server.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `allowHalfOpen` is set to `true`, when the other end of the socket[m
[32m+[m[32m     * signals the end of transmission, the server will only send back the end of[m
[32m+[m[32m     * transmission when `socket.end()` is explicitly called. For example, in the[m
[32m+[m[32m     * context of TCP, when a FIN packed is received, a FIN packed is sent[m
[32m+[m[32m     * back only when `socket.end()` is explicitly called. Until then the[m
[32m+[m[32m     * connection is half-closed (non-readable but still writable). See `'end'` event and [RFC 1122](https://tools.ietf.org/html/rfc1122) (section 4.2.2.13) for more information.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `pauseOnConnect` is set to `true`, then the socket associated with each[m
[32m+[m[32m     * incoming connection will be paused, and no data will be read from its handle.[m
[32m+[m[32m     * This allows connections to be passed between processes without any data being[m
[32m+[m[32m     * read by the original process. To begin reading data from a paused socket, call `socket.resume()`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The server can be a TCP server or an `IPC` server, depending on what it `listen()` to.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Here is an example of a TCP echo server which listens for connections[m
[32m+[m[32m     * on port 8124:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const net = require('node:net');[m
[32m+[m[32m     * const server = net.createServer((c) => {[m
[32m+[m[32m     *   // 'connection' listener.[m
[32m+[m[32m     *   console.log('client connected');[m
[32m+[m[32m     *   c.on('end', () => {[m
[32m+[m[32m     *     console.log('client disconnected');[m
[32m+[m[32m     *   });[m
[32m+[m[32m     *   c.write('hello\r\n');[m
[32m+[m[32m     *   c.pipe(c);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * server.on('error', (err) => {[m
[32m+[m[32m     *   throw err;[m
[32m+[m[32m     * });[m
[32m+[m[32m     * server.listen(8124, () => {[m
[32m+[m[32m     *   console.log('server bound');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Test this by using `telnet`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```bash[m
[32m+[m[32m     * telnet localhost 8124[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * To listen on the socket `/tmp/echo.sock`:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * server.listen('/tmp/echo.sock', () => {[m
[32m+[m[32m     *   console.log('server bound');[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Use `nc` to connect to a Unix domain socket server:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```bash[m
[32m+[m[32m     * nc -U /tmp/echo.sock[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.5.0[m
[32m+[m[32m     * @param connectionListener Automatically set as a listener for the {@link 'connection'} event.[m
[32m+[m[32m     */[m
[32m+[m[32m    function createServer(connectionListener?: (socket: Socket) => void): Server;[m
[32m+[m[32m    function createServer(options?: ServerOpts, connectionListener?: (socket: Socket) => void): Server;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Aliases to {@link createConnection}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Possible signatures:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * {@link connect}[m
[32m+[m[32m     * * {@link connect} for `IPC` connections.[m
[32m+[m[32m     * * {@link connect} for TCP connections.[m
[32m+[m[32m     */[m
[32m+[m[32m    function connect(options: NetConnectOpts, connectionListener?: () => void): Socket;[m
[32m+[m[32m    function connect(port: number, host?: string, connectionListener?: () => void): Socket;[m
[32m+[m[32m    function connect(path: string, connectionListener?: () => void): Socket;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A factory function, which creates a new {@link Socket},[m
[32m+[m[32m     * immediately initiates connection with `socket.connect()`,[m
[32m+[m[32m     * then returns the `net.Socket` that starts the connection.[m
[32m+[m[32m     *[m
[32m+[m[32m     * When the connection is established, a `'connect'` event will be emitted[m
[32m+[m[32m     * on the returned socket. The last parameter `connectListener`, if supplied,[m
[32m+[m[32m     * will be added as a listener for the `'connect'` event **once**.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Possible signatures:[m
[32m+[m[32m     *[m
[32m+[m[32m     * * {@link createConnection}[m
[32m+[m[32m     * * {@link createConnection} for `IPC` connections.[m
[32m+[m[32m     * * {@link createConnection} for TCP connections.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The {@link connect} function is an alias to this function.[m
[32m+[m[32m     */[m
[32m+[m[32m    function createConnection(options: NetConnectOpts, connectionListener?: () => void): Socket;[m
[32m+[m[32m    function createConnection(port: number, host?: string, connectionListener?: () => void): Socket;[m
[32m+[m[32m    function createConnection(path: string, connectionListener?: () => void): Socket;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Gets the current default value of the `autoSelectFamily` option of `socket.connect(options)`.[m
[32m+[m[32m     * The initial default value is `true`, unless the command line option`--no-network-family-autoselection` is provided.[m
[32m+[m[32m     * @since v19.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function getDefaultAutoSelectFamily(): boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sets the default value of the `autoSelectFamily` option of `socket.connect(options)`.[m
[32m+[m[32m     * @since v19.4.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function setDefaultAutoSelectFamily(value: boolean): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Gets the current default value of the `autoSelectFamilyAttemptTimeout` option of `socket.connect(options)`.[m
[32m+[m[32m     * The initial default value is `250` or the value specified via the command line option `--network-family-autoselection-attempt-timeout`.[m
[32m+[m[32m     * @returns The current default value of the `autoSelectFamilyAttemptTimeout` option.[m
[32m+[m[32m     * @since v19.8.0, v18.8.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function getDefaultAutoSelectFamilyAttemptTimeout(): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Sets the default value of the `autoSelectFamilyAttemptTimeout` option of `socket.connect(options)`.[m
[32m+[m[32m     * @param value The new default value, which must be a positive number. If the number is less than `10`, the value `10` is used instead. The initial default value is `250` or the value specified via the command line[m
[32m+[m[32m     * option `--network-family-autoselection-attempt-timeout`.[m
[32m+[m[32m     * @since v19.8.0, v18.8.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function setDefaultAutoSelectFamilyAttemptTimeout(value: number): void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns `6` if `input` is an IPv6 address. Returns `4` if `input` is an IPv4[m
[32m+[m[32m     * address in [dot-decimal notation](https://en.wikipedia.org/wiki/Dot-decimal_notation) with no leading zeroes. Otherwise, returns`0`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * net.isIP('::1'); // returns 6[m
[32m+[m[32m     * net.isIP('127.0.0.1'); // returns 4[m
[32m+[m[32m     * net.isIP('127.000.000.001'); // returns 0[m
[32m+[m[32m     * net.isIP('127.0.0.1/24'); // returns 0[m
[32m+[m[32m     * net.isIP('fhqwhgads'); // returns 0[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.3.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function isIP(input: string): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns `true` if `input` is an IPv4 address in [dot-decimal notation](https://en.wikipedia.org/wiki/Dot-decimal_notation) with no[m
[32m+[m[32m     * leading zeroes. Otherwise, returns `false`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * net.isIPv4('127.0.0.1'); // returns true[m
[32m+[m[32m     * net.isIPv4('127.000.000.001'); // returns false[m
[32m+[m[32m     * net.isIPv4('127.0.0.1/24'); // returns false[m
[32m+[m[32m     * net.isIPv4('fhqwhgads'); // returns false[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.3.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function isIPv4(input: string): boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns `true` if `input` is an IPv6 address. Otherwise, returns `false`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * net.isIPv6('::1'); // returns true[m
[32m+[m[32m     * net.isIPv6('fhqwhgads'); // returns false[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.3.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function isIPv6(input: string): boolean;[m
[32m+[m[32m    interface SocketAddressInitOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The network address as either an IPv4 or IPv6 string.[m
[32m+[m[32m         * @default 127.0.0.1[m
[32m+[m[32m         */[m
[32m+[m[32m        address?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @default `'ipv4'`[m
[32m+[m[32m         */[m
[32m+[m[32m        family?: IPVersion | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An IPv6 flow-label used only if `family` is `'ipv6'`.[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         */[m
[32m+[m[32m        flowlabel?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An IP port.[m
[32m+[m[32m         * @default 0[m
[32m+[m[32m         */[m
[32m+[m[32m        port?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v15.14.0, v14.18.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class SocketAddress {[m
[32m+[m[32m        constructor(options: SocketAddressInitOptions);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Either \`'ipv4'\` or \`'ipv6'\`.[m
[32m+[m[32m         * @since v15.14.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly address: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Either \`'ipv4'\` or \`'ipv6'\`.[m
[32m+[m[32m         * @since v15.14.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly family: IPVersion;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v15.14.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly port: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v15.14.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly flowlabel: number;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:net" {[m
[32m+[m[32m    export * from "net";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/os.d.ts b/node_modules/@types/node/os.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..d0593ff[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/os.d.ts[m
[36m@@ -0,0 +1,495 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:os` module provides operating system-related utility methods and[m
[32m+[m[32m * properties. It can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const os = require('node:os');[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/os.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "os" {[m
[32m+[m[32m    interface CpuInfo {[m
[32m+[m[32m        model: string;[m
[32m+[m[32m        speed: number;[m
[32m+[m[32m        times: {[m
[32m+[m[32m            /** The number of milliseconds the CPU has spent in user mode. */[m
[32m+[m[32m            user: number;[m
[32m+[m[32m            /** The number of milliseconds the CPU has spent in nice mode. */[m
[32m+[m[32m            nice: number;[m
[32m+[m[32m            /** The number of milliseconds the CPU has spent in sys mode. */[m
[32m+[m[32m            sys: number;[m
[32m+[m[32m            /** The number of milliseconds the CPU has spent in idle mode. */[m
[32m+[m[32m            idle: number;[m
[32m+[m[32m            /** The number of milliseconds the CPU has spent in irq mode. */[m
[32m+[m[32m            irq: number;[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    interface NetworkInterfaceBase {[m
[32m+[m[32m        address: string;[m
[32m+[m[32m        netmask: string;[m
[32m+[m[32m        mac: string;[m
[32m+[m[32m        internal: boolean;[m
[32m+[m[32m        cidr: string | null;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface NetworkInterfaceInfoIPv4 extends NetworkInterfaceBase {[m
[32m+[m[32m        family: "IPv4";[m
[32m+[m[32m        scopeid?: undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface NetworkInterfaceInfoIPv6 extends NetworkInterfaceBase {[m
[32m+[m[32m        family: "IPv6";[m
[32m+[m[32m        scopeid: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UserInfo<T> {[m
[32m+[m[32m        username: T;[m
[32m+[m[32m        uid: number;[m
[32m+[m[32m        gid: number;[m
[32m+[m[32m        shell: T | null;[m
[32m+[m[32m        homedir: T;[m
[32m+[m[32m    }[m
[32m+[m[32m    type NetworkInterfaceInfo = NetworkInterfaceInfoIPv4 | NetworkInterfaceInfoIPv6;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the host name of the operating system as a string.[m
[32m+[m[32m     * @since v0.3.3[m
[32m+[m[32m     */[m
[32m+[m[32m    function hostname(): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns an array containing the 1, 5, and 15 minute load averages.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The load average is a measure of system activity calculated by the operating[m
[32m+[m[32m     * system and expressed as a fractional number.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The load average is a Unix-specific concept. On Windows, the return value is[m
[32m+[m[32m     * always `[0, 0, 0]`.[m
[32m+[m[32m     * @since v0.3.3[m
[32m+[m[32m     */[m
[32m+[m[32m    function loadavg(): number[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the system uptime in number of seconds.[m
[32m+[m[32m     * @since v0.3.3[m
[32m+[m[32m     */[m
[32m+[m[32m    function uptime(): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the amount of free system memory in bytes as an integer.[m
[32m+[m[32m     * @since v0.3.3[m
[32m+[m[32m     */[m
[32m+[m[32m    function freemem(): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the total amount of system memory in bytes as an integer.[m
[32m+[m[32m     * @since v0.3.3[m
[32m+[m[32m     */[m
[32m+[m[32m    function totalmem(): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns an array of objects containing information about each logical CPU core.[m
[32m+[m[32m     * The array will be empty if no CPU information is available, such as if the `/proc` file system is unavailable.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The properties included on each object include:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * [[m
[32m+[m[32m     *   {[m
[32m+[m[32m     *     model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',[m
[32m+[m[32m     *     speed: 2926,[m
[32m+[m[32m     *     times: {[m
[32m+[m[32m     *       user: 252020,[m
[32m+[m[32m     *       nice: 0,[m
[32m+[m[32m     *       sys: 30340,[m
[32m+[m[32m     *       idle: 1070356870,[m
[32m+[m[32m     *       irq: 0,[m
[32m+[m[32m     *     },[m
[32m+[m[32m     *   },[m
[32m+[m[32m     *   {[m
[32m+[m[32m     *     model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',[m
[32m+[m[32m     *     speed: 2926,[m
[32m+[m[32m     *     times: {[m
[32m+[m[32m     *       user: 306960,[m
[32m+[m[32m     *       nice: 0,[m
[32m+[m[32m     *       sys: 26980,[m
[32m+[m[32m     *       idle: 1071569080,[m
[32m+[m[32m     *       irq: 0,[m
[32m+[m[32m     *     },[m
[32m+[m[32m     *   },[m
[32m+[m[32m     *   {[m
[32m+[m[32m     *     model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',[m
[32m+[m[32m     *     speed: 2926,[m
[32m+[m[32m     *     times: {[m
[32m+[m[32m     *       user: 248450,[m
[32m+[m[32m     *       nice: 0,[m
[32m+[m[32m     *       sys: 21750,[m
[32m+[m[32m     *       idle: 1070919370,[m
[32m+[m[32m     *       irq: 0,[m
[32m+[m[32m     *     },[m
[32m+[m[32m     *   },[m
[32m+[m[32m     *   {[m
[32m+[m[32m     *     model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',[m
[32m+[m[32m     *     speed: 2926,[m
[32m+[m[32m     *     times: {[m
[32m+[m[32m     *       user: 256880,[m
[32m+[m[32m     *       nice: 0,[m
[32m+[m[32m     *       sys: 19430,[m
[32m+[m[32m     *       idle: 1070905480,[m
[32m+[m[32m     *       irq: 20,[m
[32m+[m[32m     *     },[m
[32m+[m[32m     *   },[m
[32m+[m[32m     * ][m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * `nice` values are POSIX-only. On Windows, the `nice` values of all processors[m
[32m+[m[32m     * are always 0.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `os.cpus().length` should not be used to calculate the amount of parallelism[m
[32m+[m[32m     * available to an application. Use {@link availableParallelism} for this purpose.[m
[32m+[m[32m     * @since v0.3.3[m
[32m+[m[32m     */[m
[32m+[m[32m    function cpus(): CpuInfo[];[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns an estimate of the default amount of parallelism a program should use.[m
[32m+[m[32m     * Always returns a value greater than zero.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This function is a small wrapper about libuv's [`uv_available_parallelism()`](https://docs.libuv.org/en/v1.x/misc.html#c.uv_available_parallelism).[m
[32m+[m[32m     * @since v19.4.0, v18.14.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function availableParallelism(): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the operating system name as returned by [`uname(3)`](https://linux.die.net/man/3/uname). For example, it[m
[32m+[m[32m     * returns `'Linux'` on Linux, `'Darwin'` on macOS, and `'Windows_NT'` on Windows.[m
[32m+[m[32m     *[m
[32m+[m[32m     * See [https://en.wikipedia.org/wiki/Uname#Examples](https://en.wikipedia.org/wiki/Uname#Examples) for additional information[m
[32m+[m[32m     * about the output of running [`uname(3)`](https://linux.die.net/man/3/uname) on various operating systems.[m
[32m+[m[32m     * @since v0.3.3[m
[32m+[m[32m     */[m
[32m+[m[32m    function type(): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the operating system as a string.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On POSIX systems, the operating system release is determined by calling [`uname(3)`](https://linux.die.net/man/3/uname). On Windows, `GetVersionExW()` is used. See[m
[32m+[m[32m     * [https://en.wikipedia.org/wiki/Uname#Examples](https://en.wikipedia.org/wiki/Uname#Examples) for more information.[m
[32m+[m[32m     * @since v0.3.3[m
[32m+[m[32m     */[m
[32m+[m[32m    function release(): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns an object containing network interfaces that have been assigned a[m
[32m+[m[32m     * network address.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Each key on the returned object identifies a network interface. The associated[m
[32m+[m[32m     * value is an array of objects that each describe an assigned network address.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The properties available on the assigned network address object include:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * {[m
[32m+[m[32m     *   lo: [[m
[32m+[m[32m     *     {[m
[32m+[m[32m     *       address: '127.0.0.1',[m
[32m+[m[32m     *       netmask: '255.0.0.0',[m
[32m+[m[32m     *       family: 'IPv4',[m
[32m+[m[32m     *       mac: '00:00:00:00:00:00',[m
[32m+[m[32m     *       internal: true,[m
[32m+[m[32m     *       cidr: '127.0.0.1/8'[m
[32m+[m[32m     *     },[m
[32m+[m[32m     *     {[m
[32m+[m[32m     *       address: '::1',[m
[32m+[m[32m     *       netmask: 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',[m
[32m+[m[32m     *       family: 'IPv6',[m
[32m+[m[32m     *       mac: '00:00:00:00:00:00',[m
[32m+[m[32m     *       scopeid: 0,[m
[32m+[m[32m     *       internal: true,[m
[32m+[m[32m     *       cidr: '::1/128'[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *   ],[m
[32m+[m[32m     *   eth0: [[m
[32m+[m[32m     *     {[m
[32m+[m[32m     *       address: '192.168.1.108',[m
[32m+[m[32m     *       netmask: '255.255.255.0',[m
[32m+[m[32m     *       family: 'IPv4',[m
[32m+[m[32m     *       mac: '01:02:03:0a:0b:0c',[m
[32m+[m[32m     *       internal: false,[m
[32m+[m[32m     *       cidr: '192.168.1.108/24'[m
[32m+[m[32m     *     },[m
[32m+[m[32m     *     {[m
[32m+[m[32m     *       address: 'fe80::a00:27ff:fe4e:66a1',[m
[32m+[m[32m     *       netmask: 'ffff:ffff:ffff:ffff::',[m
[32m+[m[32m     *       family: 'IPv6',[m
[32m+[m[32m     *       mac: '01:02:03:0a:0b:0c',[m
[32m+[m[32m     *       scopeid: 1,[m
[32m+[m[32m     *       internal: false,[m
[32m+[m[32m     *       cidr: 'fe80::a00:27ff:fe4e:66a1/64'[m
[32m+[m[32m     *     }[m
[32m+[m[32m     *   ][m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.6.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function networkInterfaces(): NodeJS.Dict<NetworkInterfaceInfo[]>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the string path of the current user's home directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On POSIX, it uses the `$HOME` environment variable if defined. Otherwise it[m
[32m+[m[32m     * uses the [effective UID](https://en.wikipedia.org/wiki/User_identifier#Effective_user_ID) to look up the user's home directory.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On Windows, it uses the `USERPROFILE` environment variable if defined.[m
[32m+[m[32m     * Otherwise it uses the path to the profile directory of the current user.[m
[32m+[m[32m     * @since v2.3.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function homedir(): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns information about the currently effective user. On POSIX platforms,[m
[32m+[m[32m     * this is typically a subset of the password file. The returned object includes[m
[32m+[m[32m     * the `username`, `uid`, `gid`, `shell`, and `homedir`. On Windows, the `uid` and `gid` fields are `-1`, and `shell` is `null`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The value of `homedir` returned by `os.userInfo()` is provided by the operating[m
[32m+[m[32m     * system. This differs from the result of `os.homedir()`, which queries[m
[32m+[m[32m     * environment variables for the home directory before falling back to the[m
[32m+[m[32m     * operating system response.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Throws a [`SystemError`](https://nodejs.org/docs/latest-v22.x/api/errors.html#class-systemerror) if a user has no `username` or `homedir`.[m
[32m+[m[32m     * @since v6.0.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function userInfo(options: { encoding: "buffer" }): UserInfo<Buffer>;[m
[32m+[m[32m    function userInfo(options?: { encoding: BufferEncoding }): UserInfo<string>;[m
[32m+[m[32m    type SignalConstants = {[m
[32m+[m[32m        [key in NodeJS.Signals]: number;[m
[32m+[m[32m    };[m
[32m+[m[32m    namespace constants {[m
[32m+[m[32m        const UV_UDP_REUSEADDR: number;[m
[32m+[m[32m        namespace signals {}[m
[32m+[m[32m        const signals: SignalConstants;[m
[32m+[m[32m        namespace errno {[m
[32m+[m[32m            const E2BIG: number;[m
[32m+[m[32m            const EACCES: number;[m
[32m+[m[32m            const EADDRINUSE: number;[m
[32m+[m[32m            const EADDRNOTAVAIL: number;[m
[32m+[m[32m            const EAFNOSUPPORT: number;[m
[32m+[m[32m            const EAGAIN: number;[m
[32m+[m[32m            const EALREADY: number;[m
[32m+[m[32m            const EBADF: number;[m
[32m+[m[32m            const EBADMSG: number;[m
[32m+[m[32m            const EBUSY: number;[m
[32m+[m[32m            const ECANCELED: number;[m
[32m+[m[32m            const ECHILD: number;[m
[32m+[m[32m            const ECONNABORTED: number;[m
[32m+[m[32m            const ECONNREFUSED: number;[m
[32m+[m[32m            const ECONNRESET: number;[m
[32m+[m[32m            const EDEADLK: number;[m
[32m+[m[32m            const EDESTADDRREQ: number;[m
[32m+[m[32m            const EDOM: number;[m
[32m+[m[32m            const EDQUOT: number;[m
[32m+[m[32m            const EEXIST: number;[m
[32m+[m[32m            const EFAULT: number;[m
[32m+[m[32m            const EFBIG: number;[m
[32m+[m[32m            const EHOSTUNREACH: number;[m
[32m+[m[32m            const EIDRM: number;[m
[32m+[m[32m            const EILSEQ: number;[m
[32m+[m[32m            const EINPROGRESS: number;[m
[32m+[m[32m            const EINTR: number;[m
[32m+[m[32m            const EINVAL: number;[m
[32m+[m[32m            const EIO: number;[m
[32m+[m[32m            const EISCONN: number;[m
[32m+[m[32m            const EISDIR: number;[m
[32m+[m[32m            const ELOOP: number;[m
[32m+[m[32m            const EMFILE: number;[m
[32m+[m[32m            const EMLINK: number;[m
[32m+[m[32m            const EMSGSIZE: number;[m
[32m+[m[32m            const EMULTIHOP: number;[m
[32m+[m[32m            const ENAMETOOLONG: number;[m
[32m+[m[32m            const ENETDOWN: number;[m
[32m+[m[32m            const ENETRESET: number;[m
[32m+[m[32m            const ENETUNREACH: number;[m
[32m+[m[32m            const ENFILE: number;[m
[32m+[m[32m            const ENOBUFS: number;[m
[32m+[m[32m            const ENODATA: number;[m
[32m+[m[32m            const ENODEV: number;[m
[32m+[m[32m            const ENOENT: number;[m
[32m+[m[32m            const ENOEXEC: number;[m
[32m+[m[32m            const ENOLCK: number;[m
[32m+[m[32m            const ENOLINK: number;[m
[32m+[m[32m            const ENOMEM: number;[m
[32m+[m[32m            const ENOMSG: number;[m
[32m+[m[32m            const ENOPROTOOPT: number;[m
[32m+[m[32m            const ENOSPC: number;[m
[32m+[m[32m            const ENOSR: number;[m
[32m+[m[32m            const ENOSTR: number;[m
[32m+[m[32m            const ENOSYS: number;[m
[32m+[m[32m            const ENOTCONN: number;[m
[32m+[m[32m            const ENOTDIR: number;[m
[32m+[m[32m            const ENOTEMPTY: number;[m
[32m+[m[32m            const ENOTSOCK: number;[m
[32m+[m[32m            const ENOTSUP: number;[m
[32m+[m[32m            const ENOTTY: number;[m
[32m+[m[32m            const ENXIO: number;[m
[32m+[m[32m            const EOPNOTSUPP: number;[m
[32m+[m[32m            const EOVERFLOW: number;[m
[32m+[m[32m            const EPERM: number;[m
[32m+[m[32m            const EPIPE: number;[m
[32m+[m[32m            const EPROTO: number;[m
[32m+[m[32m            const EPROTONOSUPPORT: number;[m
[32m+[m[32m            const EPROTOTYPE: number;[m
[32m+[m[32m            const ERANGE: number;[m
[32m+[m[32m            const EROFS: number;[m
[32m+[m[32m            const ESPIPE: number;[m
[32m+[m[32m            const ESRCH: number;[m
[32m+[m[32m            const ESTALE: number;[m
[32m+[m[32m            const ETIME: number;[m
[32m+[m[32m            const ETIMEDOUT: number;[m
[32m+[m[32m            const ETXTBSY: number;[m
[32m+[m[32m            const EWOULDBLOCK: number;[m
[32m+[m[32m            const EXDEV: number;[m
[32m+[m[32m            const WSAEINTR: number;[m
[32m+[m[32m            const WSAEBADF: number;[m
[32m+[m[32m            const WSAEACCES: number;[m
[32m+[m[32m            const WSAEFAULT: number;[m
[32m+[m[32m            const WSAEINVAL: number;[m
[32m+[m[32m            const WSAEMFILE: number;[m
[32m+[m[32m            const WSAEWOULDBLOCK: number;[m
[32m+[m[32m            const WSAEINPROGRESS: number;[m
[32m+[m[32m            const WSAEALREADY: number;[m
[32m+[m[32m            const WSAENOTSOCK: number;[m
[32m+[m[32m            const WSAEDESTADDRREQ: number;[m
[32m+[m[32m            const WSAEMSGSIZE: number;[m
[32m+[m[32m            const WSAEPROTOTYPE: number;[m
[32m+[m[32m            const WSAENOPROTOOPT: number;[m
[32m+[m[32m            const WSAEPROTONOSUPPORT: number;[m
[32m+[m[32m            const WSAESOCKTNOSUPPORT: number;[m
[32m+[m[32m            const WSAEOPNOTSUPP: number;[m
[32m+[m[32m            const WSAEPFNOSUPPORT: number;[m
[32m+[m[32m            const WSAEAFNOSUPPORT: number;[m
[32m+[m[32m            const WSAEADDRINUSE: number;[m
[32m+[m[32m            const WSAEADDRNOTAVAIL: number;[m
[32m+[m[32m            const WSAENETDOWN: number;[m
[32m+[m[32m            const WSAENETUNREACH: number;[m
[32m+[m[32m            const WSAENETRESET: number;[m
[32m+[m[32m            const WSAECONNABORTED: number;[m
[32m+[m[32m            const WSAECONNRESET: number;[m
[32m+[m[32m            const WSAENOBUFS: number;[m
[32m+[m[32m            const WSAEISCONN: number;[m
[32m+[m[32m            const WSAENOTCONN: number;[m
[32m+[m[32m            const WSAESHUTDOWN: number;[m
[32m+[m[32m            const WSAETOOMANYREFS: number;[m
[32m+[m[32m            const WSAETIMEDOUT: number;[m
[32m+[m[32m            const WSAECONNREFUSED: number;[m
[32m+[m[32m            const WSAELOOP: number;[m
[32m+[m[32m            const WSAENAMETOOLONG: number;[m
[32m+[m[32m            const WSAEHOSTDOWN: number;[m
[32m+[m[32m            const WSAEHOSTUNREACH: number;[m
[32m+[m[32m            const WSAENOTEMPTY: number;[m
[32m+[m[32m            const WSAEPROCLIM: number;[m
[32m+[m[32m            const WSAEUSERS: number;[m
[32m+[m[32m            const WSAEDQUOT: number;[m
[32m+[m[32m            const WSAESTALE: number;[m
[32m+[m[32m            const WSAEREMOTE: number;[m
[32m+[m[32m            const WSASYSNOTREADY: number;[m
[32m+[m[32m            const WSAVERNOTSUPPORTED: number;[m
[32m+[m[32m            const WSANOTINITIALISED: number;[m
[32m+[m[32m            const WSAEDISCON: number;[m
[32m+[m[32m            const WSAENOMORE: number;[m
[32m+[m[32m            const WSAECANCELLED: number;[m
[32m+[m[32m            const WSAEINVALIDPROCTABLE: number;[m
[32m+[m[32m            const WSAEINVALIDPROVIDER: number;[m
[32m+[m[32m            const WSAEPROVIDERFAILEDINIT: number;[m
[32m+[m[32m            const WSASYSCALLFAILURE: number;[m
[32m+[m[32m            const WSASERVICE_NOT_FOUND: number;[m
[32m+[m[32m            const WSATYPE_NOT_FOUND: number;[m
[32m+[m[32m            const WSA_E_NO_MORE: number;[m
[32m+[m[32m            const WSA_E_CANCELLED: number;[m
[32m+[m[32m            const WSAEREFUSED: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        namespace dlopen {[m
[32m+[m[32m            const RTLD_LAZY: number;[m
[32m+[m[32m            const RTLD_NOW: number;[m
[32m+[m[32m            const RTLD_GLOBAL: number;[m
[32m+[m[32m            const RTLD_LOCAL: number;[m
[32m+[m[32m            const RTLD_DEEPBIND: number;[m
[32m+[m[32m        }[m
[32m+[m[32m        namespace priority {[m
[32m+[m[32m            const PRIORITY_LOW: number;[m
[32m+[m[32m            const PRIORITY_BELOW_NORMAL: number;[m
[32m+[m[32m            const PRIORITY_NORMAL: number;[m
[32m+[m[32m            const PRIORITY_ABOVE_NORMAL: number;[m
[32m+[m[32m            const PRIORITY_HIGH: number;[m
[32m+[m[32m            const PRIORITY_HIGHEST: number;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    const devNull: string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The operating system-specific end-of-line marker.[m
[32m+[m[32m     * * `\n` on POSIX[m
[32m+[m[32m     * * `\r\n` on Windows[m
[32m+[m[32m     */[m
[32m+[m[32m    const EOL: string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the operating system CPU architecture for which the Node.js binary was[m
[32m+[m[32m     * compiled. Possible values are `'arm'`, `'arm64'`, `'ia32'`, `'loong64'`, `'mips'`, `'mipsel'`, `'ppc'`, `'ppc64'`, `'riscv64'`, `'s390'`, `'s390x'`,[m
[32m+[m[32m     * and `'x64'`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The return value is equivalent to [process.arch](https://nodejs.org/docs/latest-v22.x/api/process.html#processarch).[m
[32m+[m[32m     * @since v0.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function arch(): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a string identifying the kernel version.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On POSIX systems, the operating system release is determined by calling [`uname(3)`](https://linux.die.net/man/3/uname). On Windows, `RtlGetVersion()` is used, and if it is not[m
[32m+[m[32m     * available, `GetVersionExW()` will be used. See [https://en.wikipedia.org/wiki/Uname#Examples](https://en.wikipedia.org/wiki/Uname#Examples) for more information.[m
[32m+[m[32m     * @since v13.11.0, v12.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function version(): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a string identifying the operating system platform for which[m
[32m+[m[32m     * the Node.js binary was compiled. The value is set at compile time.[m
[32m+[m[32m     * Possible values are `'aix'`, `'darwin'`, `'freebsd'`, `'linux'`, `'openbsd'`, `'sunos'`, and `'win32'`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The return value is equivalent to `process.platform`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The value `'android'` may also be returned if Node.js is built on the Android[m
[32m+[m[32m     * operating system. [Android support is experimental](https://github.com/nodejs/node/blob/HEAD/BUILDING.md#androidandroid-based-devices-eg-firefox-os).[m
[32m+[m[32m     * @since v0.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function platform(): NodeJS.Platform;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the machine type as a string, such as `arm`, `arm64`, `aarch64`, `mips`, `mips64`, `ppc64`, `ppc64le`, `s390`, `s390x`, `i386`, `i686`, `x86_64`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On POSIX systems, the machine type is determined by calling [`uname(3)`](https://linux.die.net/man/3/uname). On Windows, `RtlGetVersion()` is used, and if it is not[m
[32m+[m[32m     * available, `GetVersionExW()` will be used. See [https://en.wikipedia.org/wiki/Uname#Examples](https://en.wikipedia.org/wiki/Uname#Examples) for more information.[m
[32m+[m[32m     * @since v18.9.0, v16.18.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function machine(): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the operating system's default directory for temporary files as a[m
[32m+[m[32m     * string.[m
[32m+[m[32m     * @since v0.9.9[m
[32m+[m[32m     */[m
[32m+[m[32m    function tmpdir(): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a string identifying the endianness of the CPU for which the Node.js[m
[32m+[m[32m     * binary was compiled.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Possible values are `'BE'` for big endian and `'LE'` for little endian.[m
[32m+[m[32m     * @since v0.9.4[m
[32m+[m[32m     */[m
[32m+[m[32m    function endianness(): "BE" | "LE";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns the scheduling priority for the process specified by `pid`. If `pid` is[m
[32m+[m[32m     * not provided or is `0`, the priority of the current process is returned.[m
[32m+[m[32m     * @since v10.10.0[m
[32m+[m[32m     * @param [pid=0] The process ID to retrieve scheduling priority for.[m
[32m+[m[32m     */[m
[32m+[m[32m    function getPriority(pid?: number): number;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Attempts to set the scheduling priority for the process specified by `pid`. If `pid` is not provided or is `0`, the process ID of the current process is used.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `priority` input must be an integer between `-20` (high priority) and `19` (low priority). Due to differences between Unix priority levels and Windows[m
[32m+[m[32m     * priority classes, `priority` is mapped to one of six priority constants in `os.constants.priority`. When retrieving a process priority level, this range[m
[32m+[m[32m     * mapping may cause the return value to be slightly different on Windows. To avoid[m
[32m+[m[32m     * confusion, set `priority` to one of the priority constants.[m
[32m+[m[32m     *[m
[32m+[m[32m     * On Windows, setting priority to `PRIORITY_HIGHEST` requires elevated user[m
[32m+[m[32m     * privileges. Otherwise the set priority will be silently reduced to `PRIORITY_HIGH`.[m
[32m+[m[32m     * @since v10.10.0[m
[32m+[m[32m     * @param [pid=0] The process ID to set scheduling priority for.[m
[32m+[m[32m     * @param priority The scheduling priority to assign to the process.[m
[32m+[m[32m     */[m
[32m+[m[32m    function setPriority(priority: number): void;[m
[32m+[m[32m    function setPriority(pid: number, priority: number): void;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:os" {[m
[32m+[m[32m    export * from "os";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/package.json b/node_modules/@types/node/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..dfa3871[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/package.json[m
[36m@@ -0,0 +1,217 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "name": "@types/node",[m
[32m+[m[32m    "version": "22.5.0",[m
[32m+[m[32m    "description": "TypeScript definitions for node",[m
[32m+[m[32m    "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node",[m
[32m+[m[32m    "license": "MIT",[m
[32m+[m[32m    "contributors": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Microsoft TypeScript",[m
[32m+[m[32m            "githubUsername": "Microsoft",[m
[32m+[m[32m            "url": "https://github.com/Microsoft"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Alberto Schiabel",[m
[32m+[m[32m            "githubUsername": "jkomyno",[m
[32m+[m[32m            "url": "https://github.com/jkomyno"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Alvis HT Tang",[m
[32m+[m[32m            "githubUsername": "alvis",[m
[32m+[m[32m            "url": "https://github.com/alvis"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Andrew Makarov",[m
[32m+[m[32m            "githubUsername": "r3nya",[m
[32m+[m[32m            "url": "https://github.com/r3nya"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Benjamin Toueg",[m
[32m+[m[32m            "githubUsername": "btoueg",[m
[32m+[m[32m            "url": "https://github.com/btoueg"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Chigozirim C.",[m
[32m+[m[32m            "githubUsername": "smac89",[m
[32m+[m[32m            "url": "https://github.com/smac89"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "David Junger",[m
[32m+[m[32m            "githubUsername": "touffy",[m
[32m+[m[32m            "url": "https://github.com/touffy"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Deividas Bakanas",[m
[32m+[m[32m            "githubUsername": "DeividasBakanas",[m
[32m+[m[32m            "url": "https://github.com/DeividasBakanas"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Eugene Y. Q. Shen",[m
[32m+[m[32m            "githubUsername": "eyqs",[m
[32m+[m[32m            "url": "https://github.com/eyqs"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Hannes Magnusson",[m
[32m+[m[32m            "githubUsername": "Hannes-Magnusson-CK",[m
[32m+[m[32m            "url": "https://github.com/Hannes-Magnusson-CK"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Huw",[m
[32m+[m[32m            "githubUsername": "hoo29",[m
[32m+[m[32m            "url": "https://github.com/hoo29"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Kelvin Jin",[m
[32m+[m[32m            "githubUsername": "kjin",[m
[32m+[m[32m            "url": "https://github.com/kjin"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Klaus Meinhardt",[m
[32m+[m[32m            "githubUsername": "ajafff",[m
[32m+[m[32m            "url": "https://github.com/ajafff"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Lishude",[m
[32m+[m[32m            "githubUsername": "islishude",[m
[32m+[m[32m            "url": "https://github.com/islishude"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Mariusz Wiktorczyk",[m
[32m+[m[32m            "githubUsername": "mwiktorczyk",[m
[32m+[m[32m            "url": "https://github.com/mwiktorczyk"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Mohsen Azimi",[m
[32m+[m[32m            "githubUsername": "mohsen1",[m
[32m+[m[32m            "url": "https://github.com/mohsen1"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Nikita Galkin",[m
[32m+[m[32m            "githubUsername": "galkin",[m
[32m+[m[32m            "url": "https://github.com/galkin"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Parambir Singh",[m
[32m+[m[32m            "githubUsername": "parambirs",[m
[32m+[m[32m            "url": "https://github.com/parambirs"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Sebastian Silbermann",[m
[32m+[m[32m            "githubUsername": "eps1lon",[m
[32m+[m[32m            "url": "https://github.com/eps1lon"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Thomas den Hollander",[m
[32m+[m[32m            "githubUsername": "ThomasdenH",[m
[32m+[m[32m            "url": "https://github.com/ThomasdenH"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Wilco Bakker",[m
[32m+[m[32m            "githubUsername": "WilcoBakker",[m
[32m+[m[32m            "url": "https://github.com/WilcoBakker"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "wwwy3y3",[m
[32m+[m[32m            "githubUsername": "wwwy3y3",[m
[32m+[m[32m            "url": "https://github.com/wwwy3y3"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Samuel Ainsworth",[m
[32m+[m[32m            "githubUsername": "samuela",[m
[32m+[m[32m            "url": "https://github.com/samuela"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Kyle Uehlein",[m
[32m+[m[32m            "githubUsername": "kuehlein",[m
[32m+[m[32m            "url": "https://github.com/kuehlein"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Thanik Bhongbhibhat",[m
[32m+[m[32m            "githubUsername": "bhongy",[m
[32m+[m[32m            "url": "https://github.com/bhongy"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Marcin Kopacz",[m
[32m+[m[32m            "githubUsername": "chyzwar",[m
[32m+[m[32m            "url": "https://github.com/chyzwar"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Trivikram Kamat",[m
[32m+[m[32m            "githubUsername": "trivikr",[m
[32m+[m[32m            "url": "https://github.com/trivikr"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Junxiao Shi",[m
[32m+[m[32m            "githubUsername": "yoursunny",[m
[32m+[m[32m            "url": "https://github.com/yoursunny"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Ilia Baryshnikov",[m
[32m+[m[32m            "githubUsername": "qwelias",[m
[32m+[m[32m            "url": "https://github.com/qwelias"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "ExE Boss",[m
[32m+[m[32m            "githubUsername": "ExE-Boss",[m
[32m+[m[32m            "url": "https://github.com/ExE-Boss"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Piotr Błażejewicz",[m
[32m+[m[32m            "githubUsername": "peterblazejewicz",[m
[32m+[m[32m            "url": "https://github.com/peterblazejewicz"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Anna Henningsen",[m
[32m+[m[32m            "githubUsername": "addaleax",[m
[32m+[m[32m            "url": "https://github.com/addaleax"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Victor Perin",[m
[32m+[m[32m            "githubUsername": "victorperin",[m
[32m+[m[32m            "url": "https://github.com/victorperin"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Yongsheng Zhang",[m
[32m+[m[32m            "githubUsername": "ZYSzys",[m
[32m+[m[32m            "url": "https://github.com/ZYSzys"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "NodeJS Contributors",[m
[32m+[m[32m            "githubUsername": "NodeJS",[m
[32m+[m[32m            "url": "https://github.com/NodeJS"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Linus Unnebäck",[m
[32m+[m[32m            "githubUsername": "LinusU",[m
[32m+[m[32m            "url": "https://github.com/LinusU"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "wafuwafu13",[m
[32m+[m[32m            "githubUsername": "wafuwafu13",[m
[32m+[m[32m            "url": "https://github.com/wafuwafu13"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Matteo Collina",[m
[32m+[m[32m            "githubUsername": "mcollina",[m
[32m+[m[32m            "url": "https://github.com/mcollina"[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "Dmitry Semigradsky",[m
[32m+[m[32m            "githubUsername": "Semigradsky",[m
[32m+[m[32m            "url": "https://github.com/Semigradsky"[m
[32m+[m[32m        }[m
[32m+[m[32m    ],[m
[32m+[m[32m    "main": "",[m
[32m+[m[32m    "types": "index.d.ts",[m
[32m+[m[32m    "repository": {[m
[32m+[m[32m        "type": "git",[m
[32m+[m[32m        "url": "https://github.com/DefinitelyTyped/DefinitelyTyped.git",[m
[32m+[m[32m        "directory": "types/node"[m
[32m+[m[32m    },[m
[32m+[m[32m    "scripts": {},[m
[32m+[m[32m    "dependencies": {[m
[32m+[m[32m        "undici-types": "~6.19.2"[m
[32m+[m[32m    },[m
[32m+[m[32m    "typesPublisherContentHash": "6e32f4b237ea4dd6efcade6ee8b163957a578f405f3c76453b372a2d32e00c03",[m
[32m+[m[32m    "typeScriptVersion": "4.8"[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/@types/node/path.d.ts b/node_modules/@types/node/path.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..e66781f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/path.d.ts[m
[36m@@ -0,0 +1,200 @@[m
[32m+[m[32mdeclare module "path/posix" {[m
[32m+[m[32m    import path = require("path");[m
[32m+[m[32m    export = path;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "path/win32" {[m
[32m+[m[32m    import path = require("path");[m
[32m+[m[32m    export = path;[m
[32m+[m[32m}[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:path` module provides utilities for working with file and directory[m
[32m+[m[32m * paths. It can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const path = require('node:path');[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/path.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "path" {[m
[32m+[m[32m    namespace path {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A parsed path object generated by path.parse() or consumed by path.format().[m
[32m+[m[32m         */[m
[32m+[m[32m        interface ParsedPath {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The root of the path such as '/' or 'c:\'[m
[32m+[m[32m             */[m
[32m+[m[32m            root: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The full directory path such as '/home/user/dir' or 'c:\path\dir'[m
[32m+[m[32m             */[m
[32m+[m[32m            dir: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The file name including extension (if any) such as 'index.html'[m
[32m+[m[32m             */[m
[32m+[m[32m            base: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The file extension (if any) such as '.html'[m
[32m+[m[32m             */[m
[32m+[m[32m            ext: string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The file name without extension (if any) such as 'index'[m
[32m+[m[32m             */[m
[32m+[m[32m            name: string;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface FormatInputPathObject {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The root of the path such as '/' or 'c:\'[m
[32m+[m[32m             */[m
[32m+[m[32m            root?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The full directory path such as '/home/user/dir' or 'c:\path\dir'[m
[32m+[m[32m             */[m
[32m+[m[32m            dir?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The file name including extension (if any) such as 'index.html'[m
[32m+[m[32m             */[m
[32m+[m[32m            base?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The file extension (if any) such as '.html'[m
[32m+[m[32m             */[m
[32m+[m[32m            ext?: string | undefined;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The file name without extension (if any) such as 'index'[m
[32m+[m[32m             */[m
[32m+[m[32m            name?: string | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface PlatformPath {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Normalize a string path, reducing '..' and '.' parts.[m
[32m+[m[32m             * When multiple slashes are found, they're replaced by a single one; when the path contains a trailing slash, it is preserved. On Windows backslashes are used.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param path string path to normalize.[m
[32m+[m[32m             * @throws {TypeError} if `path` is not a string.[m
[32m+[m[32m             */[m
[32m+[m[32m            normalize(path: string): string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Join all arguments together and normalize the resulting path.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param paths paths to join.[m
[32m+[m[32m             * @throws {TypeError} if any of the path segments is not a string.[m
[32m+[m[32m             */[m
[32m+[m[32m            join(...paths: string[]): string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The right-most parameter is considered {to}. Other parameters are considered an array of {from}.[m
[32m+[m[32m             *[m
[32m+[m[32m             * Starting from leftmost {from} parameter, resolves {to} to an absolute path.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If {to} isn't already absolute, {from} arguments are prepended in right to left order,[m
[32m+[m[32m             * until an absolute path is found. If after using all {from} paths still no absolute path is found,[m
[32m+[m[32m             * the current working directory is used as well. The resulting path is normalized,[m
[32m+[m[32m             * and trailing slashes are removed unless the path gets resolved to the root directory.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param paths A sequence of paths or path segments.[m
[32m+[m[32m             * @throws {TypeError} if any of the arguments is not a string.[m
[32m+[m[32m             */[m
[32m+[m[32m            resolve(...paths: string[]): string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The `path.matchesGlob()` method determines if `path` matches the `pattern`.[m
[32m+[m[32m             * @param path The path to glob-match against.[m
[32m+[m[32m             * @param pattern The glob to check the path against.[m
[32m+[m[32m             * @returns Whether or not the `path` matched the `pattern`.[m
[32m+[m[32m             * @throws {TypeError} if `path` or `pattern` are not strings.[m
[32m+[m[32m             * @since v22.5.0[m
[32m+[m[32m             */[m
[32m+[m[32m            matchesGlob(path: string, pattern: string): boolean;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Determines whether {path} is an absolute path. An absolute path will always resolve to the same location, regardless of the working directory.[m
[32m+[m[32m             *[m
[32m+[m[32m             * If the given {path} is a zero-length string, `false` will be returned.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param path path to test.[m
[32m+[m[32m             * @throws {TypeError} if `path` is not a string.[m
[32m+[m[32m             */[m
[32m+[m[32m            isAbsolute(path: string): boolean;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Solve the relative path from {from} to {to} based on the current working directory.[m
[32m+[m[32m             * At times we have two absolute paths, and we need to derive the relative path from one to the other. This is actually the reverse transform of path.resolve.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @throws {TypeError} if either `from` or `to` is not a string.[m
[32m+[m[32m             */[m
[32m+[m[32m            relative(from: string, to: string): string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Return the directory name of a path. Similar to the Unix dirname command.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param path the path to evaluate.[m
[32m+[m[32m             * @throws {TypeError} if `path` is not a string.[m
[32m+[m[32m             */[m
[32m+[m[32m            dirname(path: string): string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Return the last portion of a path. Similar to the Unix basename command.[m
[32m+[m[32m             * Often used to extract the file name from a fully qualified path.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param path the path to evaluate.[m
[32m+[m[32m             * @param suffix optionally, an extension to remove from the result.[m
[32m+[m[32m             * @throws {TypeError} if `path` is not a string or if `ext` is given and is not a string.[m
[32m+[m[32m             */[m
[32m+[m[32m            basename(path: string, suffix?: string): string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Return the extension of the path, from the last '.' to end of string in the last portion of the path.[m
[32m+[m[32m             * If there is no '.' in the last portion of the path or the first character of it is '.', then it returns an empty string.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param path the path to evaluate.[m
[32m+[m[32m             * @throws {TypeError} if `path` is not a string.[m
[32m+[m[32m             */[m
[32m+[m[32m            extname(path: string): string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The platform-specific file separator. '\\' or '/'.[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly sep: "\\" | "/";[m
[32m+[m[32m            /**[m
[32m+[m[32m             * The platform-specific file delimiter. ';' or ':'.[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly delimiter: ";" | ":";[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Returns an object from a path string - the opposite of format().[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param path path to evaluate.[m
[32m+[m[32m             * @throws {TypeError} if `path` is not a string.[m
[32m+[m[32m             */[m
[32m+[m[32m            parse(path: string): ParsedPath;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Returns a path string from an object - the opposite of parse().[m
[32m+[m[32m             *[m
[32m+[m[32m             * @param pathObject path to evaluate.[m
[32m+[m[32m             */[m
[32m+[m[32m            format(pathObject: FormatInputPathObject): string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * On Windows systems only, returns an equivalent namespace-prefixed path for the given path.[m
[32m+[m[32m             * If path is not a string, path will be returned without modifications.[m
[32m+[m[32m             * This method is meaningful only on Windows system.[m
[32m+[m[32m             * On POSIX systems, the method is non-operational and always returns path without modifications.[m
[32m+[m[32m             */[m
[32m+[m[32m            toNamespacedPath(path: string): string;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Posix specific pathing.[m
[32m+[m[32m             * Same as parent object on posix.[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly posix: PlatformPath;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Windows specific pathing.[m
[32m+[m[32m             * Same as parent object on windows[m
[32m+[m[32m             */[m
[32m+[m[32m            readonly win32: PlatformPath;[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    const path: path.PlatformPath;[m
[32m+[m[32m    export = path;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:path" {[m
[32m+[m[32m    import path = require("path");[m
[32m+[m[32m    export = path;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:path/posix" {[m
[32m+[m[32m    import path = require("path/posix");[m
[32m+[m[32m    export = path;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:path/win32" {[m
[32m+[m[32m    import path = require("path/win32");[m
[32m+[m[32m    export = path;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/perf_hooks.d.ts b/node_modules/@types/node/perf_hooks.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..6092bd4[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/perf_hooks.d.ts[m
[36m@@ -0,0 +1,941 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * This module provides an implementation of a subset of the W3C [Web Performance APIs](https://w3c.github.io/perf-timing-primer/) as well as additional APIs for[m
[32m+[m[32m * Node.js-specific performance measurements.[m
[32m+[m[32m *[m
[32m+[m[32m * Node.js supports the following [Web Performance APIs](https://w3c.github.io/perf-timing-primer/):[m
[32m+[m[32m *[m
[32m+[m[32m * * [High Resolution Time](https://www.w3.org/TR/hr-time-2)[m
[32m+[m[32m * * [Performance Timeline](https://w3c.github.io/performance-timeline/)[m
[32m+[m[32m * * [User Timing](https://www.w3.org/TR/user-timing/)[m
[32m+[m[32m * * [Resource Timing](https://www.w3.org/TR/resource-timing-2/)[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const { PerformanceObserver, performance } = require('node:perf_hooks');[m
[32m+[m[32m *[m
[32m+[m[32m * const obs = new PerformanceObserver((items) => {[m
[32m+[m[32m *   console.log(items.getEntries()[0].duration);[m
[32m+[m[32m *   performance.clearMarks();[m
[32m+[m[32m * });[m
[32m+[m[32m * obs.observe({ type: 'measure' });[m
[32m+[m[32m * performance.measure('Start to Now');[m
[32m+[m[32m *[m
[32m+[m[32m * performance.mark('A');[m
[32m+[m[32m * doSomeLongRunningProcess(() => {[m
[32m+[m[32m *   performance.measure('A to Now', 'A');[m
[32m+[m[32m *[m
[32m+[m[32m *   performance.mark('B');[m
[32m+[m[32m *   performance.measure('A to B', 'A', 'B');[m
[32m+[m[32m * });[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/perf_hooks.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "perf_hooks" {[m
[32m+[m[32m    import { AsyncResource } from "node:async_hooks";[m
[32m+[m[32m    type EntryType =[m
[32m+[m[32m        | "dns" // Node.js only[m
[32m+[m[32m        | "function" // Node.js only[m
[32m+[m[32m        | "gc" // Node.js only[m
[32m+[m[32m        | "http2" // Node.js only[m
[32m+[m[32m        | "http" // Node.js only[m
[32m+[m[32m        | "mark" // available on the Web[m
[32m+[m[32m        | "measure" // available on the Web[m
[32m+[m[32m        | "net" // Node.js only[m
[32m+[m[32m        | "node" // Node.js only[m
[32m+[m[32m        | "resource"; // available on the Web[m
[32m+[m[32m    interface NodeGCPerformanceDetail {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When `performanceEntry.entryType` is equal to 'gc', the `performance.kind` property identifies[m
[32m+[m[32m         * the type of garbage collection operation that occurred.[m
[32m+[m[32m         * See perf_hooks.constants for valid values.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly kind?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When `performanceEntry.entryType` is equal to 'gc', the `performance.flags`[m
[32m+[m[32m         * property contains additional information about garbage collection operation.[m
[32m+[m[32m         * See perf_hooks.constants for valid values.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly flags?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The constructor of this class is not exposed to users directly.[m
[32m+[m[32m     * @since v8.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class PerformanceEntry {[m
[32m+[m[32m        protected constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The total number of milliseconds elapsed for this entry. This value will not[m
[32m+[m[32m         * be meaningful for all Performance Entry types.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly duration: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The name of the performance entry.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly name: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp marking the starting time of the[m
[32m+[m[32m         * Performance Entry.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly startTime: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The type of the performance entry. It may be one of:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `'node'` (Node.js only)[m
[32m+[m[32m         * * `'mark'` (available on the Web)[m
[32m+[m[32m         * * `'measure'` (available on the Web)[m
[32m+[m[32m         * * `'gc'` (Node.js only)[m
[32m+[m[32m         * * `'function'` (Node.js only)[m
[32m+[m[32m         * * `'http2'` (Node.js only)[m
[32m+[m[32m         * * `'http'` (Node.js only)[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly entryType: EntryType;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Additional detail specific to the `entryType`.[m
[32m+[m[32m         * @since v16.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly detail?: NodeGCPerformanceDetail | unknown | undefined; // TODO: Narrow this based on entry type.[m
[32m+[m[32m        toJSON(): any;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Exposes marks created via the `Performance.mark()` method.[m
[32m+[m[32m     * @since v18.2.0, v16.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class PerformanceMark extends PerformanceEntry {[m
[32m+[m[32m        readonly duration: 0;[m
[32m+[m[32m        readonly entryType: "mark";[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Exposes measures created via the `Performance.measure()` method.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The constructor of this class is not exposed to users directly.[m
[32m+[m[32m     * @since v18.2.0, v16.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class PerformanceMeasure extends PerformanceEntry {[m
[32m+[m[32m        readonly entryType: "measure";[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * _This property is an extension by Node.js. It is not available in Web browsers._[m
[32m+[m[32m     *[m
[32m+[m[32m     * Provides timing details for Node.js itself. The constructor of this class[m
[32m+[m[32m     * is not exposed to users.[m
[32m+[m[32m     * @since v8.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class PerformanceNodeTiming extends PerformanceEntry {[m
[32m+[m[32m        readonly entryType: "node";[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp at which the Node.js process[m
[32m+[m[32m         * completed bootstrapping. If bootstrapping has not yet finished, the property[m
[32m+[m[32m         * has the value of -1.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly bootstrapComplete: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp at which the Node.js environment was[m
[32m+[m[32m         * initialized.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly environment: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp of the amount of time the event loop[m
[32m+[m[32m         * has been idle within the event loop's event provider (e.g. `epoll_wait`). This[m
[32m+[m[32m         * does not take CPU usage into consideration. If the event loop has not yet[m
[32m+[m[32m         * started (e.g., in the first tick of the main script), the property has the[m
[32m+[m[32m         * value of 0.[m
[32m+[m[32m         * @since v14.10.0, v12.19.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly idleTime: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp at which the Node.js event loop[m
[32m+[m[32m         * exited. If the event loop has not yet exited, the property has the value of -1\.[m
[32m+[m[32m         * It can only have a value of not -1 in a handler of the `'exit'` event.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly loopExit: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp at which the Node.js event loop[m
[32m+[m[32m         * started. If the event loop has not yet started (e.g., in the first tick of the[m
[32m+[m[32m         * main script), the property has the value of -1.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly loopStart: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp at which the Node.js process was initialized.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly nodeStart: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp at which the V8 platform was[m
[32m+[m[32m         * initialized.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly v8Start: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface EventLoopUtilization {[m
[32m+[m[32m        idle: number;[m
[32m+[m[32m        active: number;[m
[32m+[m[32m        utilization: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @param utilization1 The result of a previous call to `eventLoopUtilization()`.[m
[32m+[m[32m     * @param utilization2 The result of a previous call to `eventLoopUtilization()` prior to `utilization1`.[m
[32m+[m[32m     */[m
[32m+[m[32m    type EventLoopUtilityFunction = ([m
[32m+[m[32m        utilization1?: EventLoopUtilization,[m
[32m+[m[32m        utilization2?: EventLoopUtilization,[m
[32m+[m[32m    ) => EventLoopUtilization;[m
[32m+[m[32m    interface MarkOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Additional optional detail to include with the mark.[m
[32m+[m[32m         */[m
[32m+[m[32m        detail?: unknown | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An optional timestamp to be used as the mark time.[m
[32m+[m[32m         * @default `performance.now()`[m
[32m+[m[32m         */[m
[32m+[m[32m        startTime?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface MeasureOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Additional optional detail to include with the mark.[m
[32m+[m[32m         */[m
[32m+[m[32m        detail?: unknown | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Duration between start and end times.[m
[32m+[m[32m         */[m
[32m+[m[32m        duration?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Timestamp to be used as the end time, or a string identifying a previously recorded mark.[m
[32m+[m[32m         */[m
[32m+[m[32m        end?: number | string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Timestamp to be used as the start time, or a string identifying a previously recorded mark.[m
[32m+[m[32m         */[m
[32m+[m[32m        start?: number | string | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface TimerifyOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A histogram object created using `perf_hooks.createHistogram()` that will record runtime[m
[32m+[m[32m         * durations in nanoseconds.[m
[32m+[m[32m         */[m
[32m+[m[32m        histogram?: RecordableHistogram | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface Performance {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `name` is not provided, removes all `PerformanceMark` objects from the Performance Timeline.[m
[32m+[m[32m         * If `name` is provided, removes only the named mark.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        clearMarks(name?: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `name` is not provided, removes all `PerformanceMeasure` objects from the Performance Timeline.[m
[32m+[m[32m         * If `name` is provided, removes only the named measure.[m
[32m+[m[32m         * @since v16.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        clearMeasures(name?: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `name` is not provided, removes all `PerformanceResourceTiming` objects from the Resource Timeline.[m
[32m+[m[32m         * If `name` is provided, removes only the named resource.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        clearResourceTimings(name?: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * eventLoopUtilization is similar to CPU utilization except that it is calculated using high precision wall-clock time.[m
[32m+[m[32m         * It represents the percentage of time the event loop has spent outside the event loop's event provider (e.g. epoll_wait).[m
[32m+[m[32m         * No other CPU idle time is taken into consideration.[m
[32m+[m[32m         */[m
[32m+[m[32m        eventLoopUtilization: EventLoopUtilityFunction;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a list of `PerformanceEntry` objects in chronological order with respect to `performanceEntry.startTime`.[m
[32m+[m[32m         * If you are only interested in performance entries of certain types or that have certain names, see[m
[32m+[m[32m         * `performance.getEntriesByType()` and `performance.getEntriesByName()`.[m
[32m+[m[32m         * @since v16.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getEntries(): PerformanceEntry[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a list of `PerformanceEntry` objects in chronological order with respect to `performanceEntry.startTime`[m
[32m+[m[32m         * whose `performanceEntry.name` is equal to `name`, and optionally, whose `performanceEntry.entryType` is equal to `type`.[m
[32m+[m[32m         * @param name[m
[32m+[m[32m         * @param type[m
[32m+[m[32m         * @since v16.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getEntriesByName(name: string, type?: EntryType): PerformanceEntry[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a list of `PerformanceEntry` objects in chronological order with respect to `performanceEntry.startTime`[m
[32m+[m[32m         * whose `performanceEntry.entryType` is equal to `type`.[m
[32m+[m[32m         * @param type[m
[32m+[m[32m         * @since v16.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getEntriesByType(type: EntryType): PerformanceEntry[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Creates a new `PerformanceMark` entry in the Performance Timeline.[m
[32m+[m[32m         * A `PerformanceMark` is a subclass of `PerformanceEntry` whose `performanceEntry.entryType` is always `'mark'`,[m
[32m+[m[32m         * and whose `performanceEntry.duration` is always `0`.[m
[32m+[m[32m         * Performance marks are used to mark specific significant moments in the Performance Timeline.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The created `PerformanceMark` entry is put in the global Performance Timeline and can be queried with[m
[32m+[m[32m         * `performance.getEntries`, `performance.getEntriesByName`, and `performance.getEntriesByType`. When the observation is[m
[32m+[m[32m         * performed, the entries should be cleared from the global Performance Timeline manually with `performance.clearMarks`.[m
[32m+[m[32m         * @param name[m
[32m+[m[32m         */[m
[32m+[m[32m        mark(name: string, options?: MarkOptions): PerformanceMark;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Creates a new `PerformanceResourceTiming` entry in the Resource Timeline.[m
[32m+[m[32m         * A `PerformanceResourceTiming` is a subclass of `PerformanceEntry` whose `performanceEntry.entryType` is always `'resource'`.[m
[32m+[m[32m         * Performance resources are used to mark moments in the Resource Timeline.[m
[32m+[m[32m         * @param timingInfo [Fetch Timing Info](https://fetch.spec.whatwg.org/#fetch-timing-info)[m
[32m+[m[32m         * @param requestedUrl The resource url[m
[32m+[m[32m         * @param initiatorType The initiator name, e.g: 'fetch'[m
[32m+[m[32m         * @param global[m
[32m+[m[32m         * @param cacheMode The cache mode must be an empty string ('') or 'local'[m
[32m+[m[32m         * @param bodyInfo [Fetch Response Body Info](https://fetch.spec.whatwg.org/#response-body-info)[m
[32m+[m[32m         * @param responseStatus The response's status code[m
[32m+[m[32m         * @param deliveryType The delivery type. Default: ''.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        markResourceTiming([m
[32m+[m[32m            timingInfo: object,[m
[32m+[m[32m            requestedUrl: string,[m
[32m+[m[32m            initiatorType: string,[m
[32m+[m[32m            global: object,[m
[32m+[m[32m            cacheMode: "" | "local",[m
[32m+[m[32m            bodyInfo: object,[m
[32m+[m[32m            responseStatus: number,[m
[32m+[m[32m            deliveryType?: string,[m
[32m+[m[32m        ): PerformanceResourceTiming;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Creates a new PerformanceMeasure entry in the Performance Timeline.[m
[32m+[m[32m         * A PerformanceMeasure is a subclass of PerformanceEntry whose performanceEntry.entryType is always 'measure',[m
[32m+[m[32m         * and whose performanceEntry.duration measures the number of milliseconds elapsed since startMark and endMark.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The startMark argument may identify any existing PerformanceMark in the the Performance Timeline, or may identify[m
[32m+[m[32m         * any of the timestamp properties provided by the PerformanceNodeTiming class. If the named startMark does not exist,[m
[32m+[m[32m         * then startMark is set to timeOrigin by default.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The endMark argument must identify any existing PerformanceMark in the the Performance Timeline or any of the timestamp[m
[32m+[m[32m         * properties provided by the PerformanceNodeTiming class. If the named endMark does not exist, an error will be thrown.[m
[32m+[m[32m         * @param name[m
[32m+[m[32m         * @param startMark[m
[32m+[m[32m         * @param endMark[m
[32m+[m[32m         * @return The PerformanceMeasure entry that was created[m
[32m+[m[32m         */[m
[32m+[m[32m        measure(name: string, startMark?: string, endMark?: string): PerformanceMeasure;[m
[32m+[m[32m        measure(name: string, options: MeasureOptions): PerformanceMeasure;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * _This property is an extension by Node.js. It is not available in Web browsers._[m
[32m+[m[32m         *[m
[32m+[m[32m         * An instance of the `PerformanceNodeTiming` class that provides performance metrics for specific Node.js operational milestones.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly nodeTiming: PerformanceNodeTiming;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the current high resolution millisecond timestamp, where 0 represents the start of the current `node` process.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        now(): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the global performance resource timing buffer size to the specified number of "resource" type performance entry objects.[m
[32m+[m[32m         *[m
[32m+[m[32m         * By default the max buffer size is set to 250.[m
[32m+[m[32m         * @since v18.8.0[m
[32m+[m[32m         */[m
[32m+[m[32m        setResourceTimingBufferSize(maxSize: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The [`timeOrigin`](https://w3c.github.io/hr-time/#dom-performance-timeorigin) specifies the high resolution millisecond timestamp[m
[32m+[m[32m         * at which the current `node` process began, measured in Unix time.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly timeOrigin: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * _This property is an extension by Node.js. It is not available in Web browsers._[m
[32m+[m[32m         *[m
[32m+[m[32m         * Wraps a function within a new function that measures the running time of the wrapped function.[m
[32m+[m[32m         * A `PerformanceObserver` must be subscribed to the `'function'` event type in order for the timing details to be accessed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const {[m
[32m+[m[32m         *   performance,[m
[32m+[m[32m         *   PerformanceObserver,[m
[32m+[m[32m         * } = require('node:perf_hooks');[m
[32m+[m[32m         *[m
[32m+[m[32m         * function someFunction() {[m
[32m+[m[32m         *   console.log('hello world');[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * const wrapped = performance.timerify(someFunction);[m
[32m+[m[32m         *[m
[32m+[m[32m         * const obs = new PerformanceObserver((list) => {[m
[32m+[m[32m         *   console.log(list.getEntries()[0].duration);[m
[32m+[m[32m         *[m
[32m+[m[32m         *   performance.clearMarks();[m
[32m+[m[32m         *   performance.clearMeasures();[m
[32m+[m[32m         *   obs.disconnect();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * obs.observe({ entryTypes: ['function'] });[m
[32m+[m[32m         *[m
[32m+[m[32m         * // A performance timeline entry will be created[m
[32m+[m[32m         * wrapped();[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the wrapped function returns a promise, a finally handler will be attached to the promise and the duration will be reported[m
[32m+[m[32m         * once the finally handler is invoked.[m
[32m+[m[32m         * @param fn[m
[32m+[m[32m         */[m
[32m+[m[32m        timerify<T extends (...params: any[]) => any>(fn: T, options?: TimerifyOptions): T;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An object which is JSON representation of the performance object. It is similar to[m
[32m+[m[32m         * [`window.performance.toJSON`](https://developer.mozilla.org/en-US/docs/Web/API/Performance/toJSON) in browsers.[m
[32m+[m[32m         * @since v16.1.0[m
[32m+[m[32m         */[m
[32m+[m[32m        toJSON(): any;[m
[32m+[m[32m    }[m
[32m+[m[32m    class PerformanceObserverEntryList {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a list of `PerformanceEntry` objects in chronological order[m
[32m+[m[32m         * with respect to `performanceEntry.startTime`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const {[m
[32m+[m[32m         *   performance,[m
[32m+[m[32m         *   PerformanceObserver,[m
[32m+[m[32m         * } = require('node:perf_hooks');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const obs = new PerformanceObserver((perfObserverList, observer) => {[m
[32m+[m[32m         *   console.log(perfObserverList.getEntries());[m
[32m+[m[32m         *[m
[32m+[m[32m         *    * [[m
[32m+[m[32m         *    *   PerformanceEntry {[m
[32m+[m[32m         *    *     name: 'test',[m
[32m+[m[32m         *    *     entryType: 'mark',[m
[32m+[m[32m         *    *     startTime: 81.465639,[m
[32m+[m[32m         *    *     duration: 0,[m
[32m+[m[32m         *    *     detail: null[m
[32m+[m[32m         *    *   },[m
[32m+[m[32m         *    *   PerformanceEntry {[m
[32m+[m[32m         *    *     name: 'meow',[m
[32m+[m[32m         *    *     entryType: 'mark',[m
[32m+[m[32m         *    *     startTime: 81.860064,[m
[32m+[m[32m         *    *     duration: 0,[m
[32m+[m[32m         *    *     detail: null[m
[32m+[m[32m         *    *   }[m
[32m+[m[32m         *    * ][m
[32m+[m[32m         *[m
[32m+[m[32m         *   performance.clearMarks();[m
[32m+[m[32m         *   performance.clearMeasures();[m
[32m+[m[32m         *   observer.disconnect();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * obs.observe({ type: 'mark' });[m
[32m+[m[32m         *[m
[32m+[m[32m         * performance.mark('test');[m
[32m+[m[32m         * performance.mark('meow');[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getEntries(): PerformanceEntry[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a list of `PerformanceEntry` objects in chronological order[m
[32m+[m[32m         * with respect to `performanceEntry.startTime` whose `performanceEntry.name` is[m
[32m+[m[32m         * equal to `name`, and optionally, whose `performanceEntry.entryType` is equal to`type`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const {[m
[32m+[m[32m         *   performance,[m
[32m+[m[32m         *   PerformanceObserver,[m
[32m+[m[32m         * } = require('node:perf_hooks');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const obs = new PerformanceObserver((perfObserverList, observer) => {[m
[32m+[m[32m         *   console.log(perfObserverList.getEntriesByName('meow'));[m
[32m+[m[32m         *[m
[32m+[m[32m         *    * [[m
[32m+[m[32m         *    *   PerformanceEntry {[m
[32m+[m[32m         *    *     name: 'meow',[m
[32m+[m[32m         *    *     entryType: 'mark',[m
[32m+[m[32m         *    *     startTime: 98.545991,[m
[32m+[m[32m         *    *     duration: 0,[m
[32m+[m[32m         *    *     detail: null[m
[32m+[m[32m         *    *   }[m
[32m+[m[32m         *    * ][m
[32m+[m[32m         *[m
[32m+[m[32m         *   console.log(perfObserverList.getEntriesByName('nope')); // [][m
[32m+[m[32m         *[m
[32m+[m[32m         *   console.log(perfObserverList.getEntriesByName('test', 'mark'));[m
[32m+[m[32m         *[m
[32m+[m[32m         *    * [[m
[32m+[m[32m         *    *   PerformanceEntry {[m
[32m+[m[32m         *    *     name: 'test',[m
[32m+[m[32m         *    *     entryType: 'mark',[m
[32m+[m[32m         *    *     startTime: 63.518931,[m
[32m+[m[32m         *    *     duration: 0,[m
[32m+[m[32m         *    *     detail: null[m
[32m+[m[32m         *    *   }[m
[32m+[m[32m         *    * ][m
[32m+[m[32m         *[m
[32m+[m[32m         *   console.log(perfObserverList.getEntriesByName('test', 'measure')); // [][m
[32m+[m[32m         *[m
[32m+[m[32m         *   performance.clearMarks();[m
[32m+[m[32m         *   performance.clearMeasures();[m
[32m+[m[32m         *   observer.disconnect();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * obs.observe({ entryTypes: ['mark', 'measure'] });[m
[32m+[m[32m         *[m
[32m+[m[32m         * performance.mark('test');[m
[32m+[m[32m         * performance.mark('meow');[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getEntriesByName(name: string, type?: EntryType): PerformanceEntry[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a list of `PerformanceEntry` objects in chronological order[m
[32m+[m[32m         * with respect to `performanceEntry.startTime` whose `performanceEntry.entryType` is equal to `type`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const {[m
[32m+[m[32m         *   performance,[m
[32m+[m[32m         *   PerformanceObserver,[m
[32m+[m[32m         * } = require('node:perf_hooks');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const obs = new PerformanceObserver((perfObserverList, observer) => {[m
[32m+[m[32m         *   console.log(perfObserverList.getEntriesByType('mark'));[m
[32m+[m[32m         *[m
[32m+[m[32m         *    * [[m
[32m+[m[32m         *    *   PerformanceEntry {[m
[32m+[m[32m         *    *     name: 'test',[m
[32m+[m[32m         *    *     entryType: 'mark',[m
[32m+[m[32m         *    *     startTime: 55.897834,[m
[32m+[m[32m         *    *     duration: 0,[m
[32m+[m[32m         *    *     detail: null[m
[32m+[m[32m         *    *   },[m
[32m+[m[32m         *    *   PerformanceEntry {[m
[32m+[m[32m         *    *     name: 'meow',[m
[32m+[m[32m         *    *     entryType: 'mark',[m
[32m+[m[32m         *    *     startTime: 56.350146,[m
[32m+[m[32m         *    *     duration: 0,[m
[32m+[m[32m         *    *     detail: null[m
[32m+[m[32m         *    *   }[m
[32m+[m[32m         *    * ][m
[32m+[m[32m         *[m
[32m+[m[32m         *   performance.clearMarks();[m
[32m+[m[32m         *   performance.clearMeasures();[m
[32m+[m[32m         *   observer.disconnect();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * obs.observe({ type: 'mark' });[m
[32m+[m[32m         *[m
[32m+[m[32m         * performance.mark('test');[m
[32m+[m[32m         * performance.mark('meow');[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getEntriesByType(type: EntryType): PerformanceEntry[];[m
[32m+[m[32m    }[m
[32m+[m[32m    type PerformanceObserverCallback = (list: PerformanceObserverEntryList, observer: PerformanceObserver) => void;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v8.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class PerformanceObserver extends AsyncResource {[m
[32m+[m[32m        constructor(callback: PerformanceObserverCallback);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Disconnects the `PerformanceObserver` instance from all notifications.[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        disconnect(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Subscribes the `PerformanceObserver` instance to notifications of new `PerformanceEntry` instances identified either by `options.entryTypes` or `options.type`:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const {[m
[32m+[m[32m         *   performance,[m
[32m+[m[32m         *   PerformanceObserver,[m
[32m+[m[32m         * } = require('node:perf_hooks');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const obs = new PerformanceObserver((list, observer) => {[m
[32m+[m[32m         *   // Called once asynchronously. `list` contains three items.[m
[32m+[m[32m         * });[m
[32m+[m[32m         * obs.observe({ type: 'mark' });[m
[32m+[m[32m         *[m
[32m+[m[32m         * for (let n = 0; n < 3; n++)[m
[32m+[m[32m         *   performance.mark(`test${n}`);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v8.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        observe([m
[32m+[m[32m            options:[m
[32m+[m[32m                | {[m
[32m+[m[32m                    entryTypes: readonly EntryType[];[m
[32m+[m[32m                    buffered?: boolean | undefined;[m
[32m+[m[32m                }[m
[32m+[m[32m                | {[m
[32m+[m[32m                    type: EntryType;[m
[32m+[m[32m                    buffered?: boolean | undefined;[m
[32m+[m[32m                },[m
[32m+[m[32m        ): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Provides detailed network timing data regarding the loading of an application's resources.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The constructor of this class is not exposed to users directly.[m
[32m+[m[32m     * @since v18.2.0, v16.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class PerformanceResourceTiming extends PerformanceEntry {[m
[32m+[m[32m        readonly entryType: "resource";[m
[32m+[m[32m        protected constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp at immediately before dispatching the `fetch`[m
[32m+[m[32m         * request. If the resource is not intercepted by a worker the property will always return 0.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly workerStart: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp that represents the start time of the fetch which[m
[32m+[m[32m         * initiates the redirect.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly redirectStart: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp that will be created immediately after receiving[m
[32m+[m[32m         * the last byte of the response of the last redirect.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly redirectEnd: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp immediately before the Node.js starts to fetch the resource.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly fetchStart: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp immediately before the Node.js starts the domain name lookup[m
[32m+[m[32m         * for the resource.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly domainLookupStart: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp representing the time immediately after the Node.js finished[m
[32m+[m[32m         * the domain name lookup for the resource.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly domainLookupEnd: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp representing the time immediately before Node.js starts to[m
[32m+[m[32m         * establish the connection to the server to retrieve the resource.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly connectStart: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp representing the time immediately after Node.js finishes[m
[32m+[m[32m         * establishing the connection to the server to retrieve the resource.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly connectEnd: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp representing the time immediately before Node.js starts the[m
[32m+[m[32m         * handshake process to secure the current connection.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly secureConnectionStart: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp representing the time immediately before Node.js receives the[m
[32m+[m[32m         * first byte of the response from the server.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly requestStart: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The high resolution millisecond timestamp representing the time immediately after Node.js receives the[m
[32m+[m[32m         * last byte of the resource or immediately before the transport connection is closed, whichever comes first.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly responseEnd: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A number representing the size (in octets) of the fetched resource. The size includes the response header[m
[32m+[m[32m         * fields plus the response payload body.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly transferSize: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A number representing the size (in octets) received from the fetch (HTTP or cache), of the payload body, before[m
[32m+[m[32m         * removing any applied content-codings.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly encodedBodySize: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A number representing the size (in octets) received from the fetch (HTTP or cache), of the message body, after[m
[32m+[m[32m         * removing any applied content-codings.[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly decodedBodySize: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a `object` that is the JSON representation of the `PerformanceResourceTiming` object[m
[32m+[m[32m         * @since v18.2.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        toJSON(): any;[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace constants {[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_MAJOR: number;[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_MINOR: number;[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_INCREMENTAL: number;[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_WEAKCB: number;[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_FLAGS_NO: number;[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED: number;[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_FLAGS_FORCED: number;[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING: number;[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE: number;[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY: number;[m
[32m+[m[32m        const NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    const performance: Performance;[m
[32m+[m[32m    interface EventLoopMonitorOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The sampling rate in milliseconds.[m
[32m+[m[32m         * Must be greater than zero.[m
[32m+[m[32m         * @default 10[m
[32m+[m[32m         */[m
[32m+[m[32m        resolution?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface Histogram {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of samples recorded by the histogram.[m
[32m+[m[32m         * @since v17.4.0, v16.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly count: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of samples recorded by the histogram.[m
[32m+[m[32m         * v17.4.0, v16.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly countBigInt: bigint;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of times the event loop delay exceeded the maximum 1 hour event[m
[32m+[m[32m         * loop delay threshold.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly exceeds: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of times the event loop delay exceeded the maximum 1 hour event loop delay threshold.[m
[32m+[m[32m         * @since v17.4.0, v16.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly exceedsBigInt: bigint;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The maximum recorded event loop delay.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly max: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The maximum recorded event loop delay.[m
[32m+[m[32m         * v17.4.0, v16.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly maxBigInt: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The mean of the recorded event loop delays.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly mean: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The minimum recorded event loop delay.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly min: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The minimum recorded event loop delay.[m
[32m+[m[32m         * v17.4.0, v16.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly minBigInt: bigint;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the value at the given percentile.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         * @param percentile A percentile value in the range (0, 100].[m
[32m+[m[32m         */[m
[32m+[m[32m        percentile(percentile: number): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the value at the given percentile.[m
[32m+[m[32m         * @since v17.4.0, v16.14.0[m
[32m+[m[32m         * @param percentile A percentile value in the range (0, 100].[m
[32m+[m[32m         */[m
[32m+[m[32m        percentileBigInt(percentile: number): bigint;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a `Map` object detailing the accumulated percentile distribution.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly percentiles: Map<number, number>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a `Map` object detailing the accumulated percentile distribution.[m
[32m+[m[32m         * @since v17.4.0, v16.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly percentilesBigInt: Map<bigint, bigint>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Resets the collected histogram data.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        reset(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The standard deviation of the recorded event loop delays.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly stddev: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface IntervalHistogram extends Histogram {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Enables the update interval timer. Returns `true` if the timer was[m
[32m+[m[32m         * started, `false` if it was already started.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        enable(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Disables the update interval timer. Returns `true` if the timer was[m
[32m+[m[32m         * stopped, `false` if it was already stopped.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         */[m
[32m+[m[32m        disable(): boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface RecordableHistogram extends Histogram {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v15.9.0, v14.18.0[m
[32m+[m[32m         * @param val The amount to record in the histogram.[m
[32m+[m[32m         */[m
[32m+[m[32m        record(val: number | bigint): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calculates the amount of time (in nanoseconds) that has passed since the[m
[32m+[m[32m         * previous call to `recordDelta()` and records that amount in the histogram.[m
[32m+[m[32m         * @since v15.9.0, v14.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        recordDelta(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Adds the values from `other` to this histogram.[m
[32m+[m[32m         * @since v17.4.0, v16.14.0[m
[32m+[m[32m         */[m
[32m+[m[32m        add(other: RecordableHistogram): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * _This property is an extension by Node.js. It is not available in Web browsers._[m
[32m+[m[32m     *[m
[32m+[m[32m     * Creates an `IntervalHistogram` object that samples and reports the event loop[m
[32m+[m[32m     * delay over time. The delays will be reported in nanoseconds.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Using a timer to detect approximate event loop delay works because the[m
[32m+[m[32m     * execution of timers is tied specifically to the lifecycle of the libuv[m
[32m+[m[32m     * event loop. That is, a delay in the loop will cause a delay in the execution[m
[32m+[m[32m     * of the timer, and those delays are specifically what this API is intended to[m
[32m+[m[32m     * detect.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { monitorEventLoopDelay } = require('node:perf_hooks');[m
[32m+[m[32m     * const h = monitorEventLoopDelay({ resolution: 20 });[m
[32m+[m[32m     * h.enable();[m
[32m+[m[32m     * // Do something.[m
[32m+[m[32m     * h.disable();[m
[32m+[m[32m     * console.log(h.min);[m
[32m+[m[32m     * console.log(h.max);[m
[32m+[m[32m     * console.log(h.mean);[m
[32m+[m[32m     * console.log(h.stddev);[m
[32m+[m[32m     * console.log(h.percentiles);[m
[32m+[m[32m     * console.log(h.percentile(50));[m
[32m+[m[32m     * console.log(h.percentile(99));[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v11.10.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function monitorEventLoopDelay(options?: EventLoopMonitorOptions): IntervalHistogram;[m
[32m+[m[32m    interface CreateHistogramOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The minimum recordable value. Must be an integer value greater than 0.[m
[32m+[m[32m         * @default 1[m
[32m+[m[32m         */[m
[32m+[m[32m        min?: number | bigint | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The maximum recordable value. Must be an integer value greater than min.[m
[32m+[m[32m         * @default Number.MAX_SAFE_INTEGER[m
[32m+[m[32m         */[m
[32m+[m[32m        max?: number | bigint | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of accuracy digits. Must be a number between 1 and 5.[m
[32m+[m[32m         * @default 3[m
[32m+[m[32m         */[m
[32m+[m[32m        figures?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Returns a `RecordableHistogram`.[m
[32m+[m[32m     * @since v15.9.0, v14.18.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function createHistogram(options?: CreateHistogramOptions): RecordableHistogram;[m
[32m+[m[32m    import {[m
[32m+[m[32m        performance as _performance,[m
[32m+[m[32m        PerformanceEntry as _PerformanceEntry,[m
[32m+[m[32m        PerformanceMark as _PerformanceMark,[m
[32m+[m[32m        PerformanceMeasure as _PerformanceMeasure,[m
[32m+[m[32m        PerformanceObserver as _PerformanceObserver,[m
[32m+[m[32m        PerformanceObserverEntryList as _PerformanceObserverEntryList,[m
[32m+[m[32m        PerformanceResourceTiming as _PerformanceResourceTiming,[m
[32m+[m[32m    } from "perf_hooks";[m
[32m+[m[32m    global {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `PerformanceEntry` is a global reference for `require('node:perf_hooks').PerformanceEntry`[m
[32m+[m[32m         * @see https://nodejs.org/docs/latest-v22.x/api/globals.html#performanceentry[m
[32m+[m[32m         * @since v19.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        var PerformanceEntry: typeof globalThis extends {[m
[32m+[m[32m            onmessage: any;[m
[32m+[m[32m            PerformanceEntry: infer T;[m
[32m+[m[32m        } ? T[m
[32m+[m[32m            : typeof _PerformanceEntry;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `PerformanceMark` is a global reference for `require('node:perf_hooks').PerformanceMark`[m
[32m+[m[32m         * @see https://nodejs.org/docs/latest-v22.x/api/globals.html#performancemark[m
[32m+[m[32m         * @since v19.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        var PerformanceMark: typeof globalThis extends {[m
[32m+[m[32m            onmessage: any;[m
[32m+[m[32m            PerformanceMark: infer T;[m
[32m+[m[32m        } ? T[m
[32m+[m[32m            : typeof _PerformanceMark;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `PerformanceMeasure` is a global reference for `require('node:perf_hooks').PerformanceMeasure`[m
[32m+[m[32m         * @see https://nodejs.org/docs/latest-v22.x/api/globals.html#performancemeasure[m
[32m+[m[32m         * @since v19.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        var PerformanceMeasure: typeof globalThis extends {[m
[32m+[m[32m            onmessage: any;[m
[32m+[m[32m            PerformanceMeasure: infer T;[m
[32m+[m[32m        } ? T[m
[32m+[m[32m            : typeof _PerformanceMeasure;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `PerformanceObserver` is a global reference for `require('node:perf_hooks').PerformanceObserver`[m
[32m+[m[32m         * @see https://nodejs.org/docs/latest-v22.x/api/globals.html#performanceobserver[m
[32m+[m[32m         * @since v19.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        var PerformanceObserver: typeof globalThis extends {[m
[32m+[m[32m            onmessage: any;[m
[32m+[m[32m            PerformanceObserver: infer T;[m
[32m+[m[32m        } ? T[m
[32m+[m[32m            : typeof _PerformanceObserver;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `PerformanceObserverEntryList` is a global reference for `require('node:perf_hooks').PerformanceObserverEntryList`[m
[32m+[m[32m         * @see https://nodejs.org/docs/latest-v22.x/api/globals.html#performanceobserverentrylist[m
[32m+[m[32m         * @since v19.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        var PerformanceObserverEntryList: typeof globalThis extends {[m
[32m+[m[32m            onmessage: any;[m
[32m+[m[32m            PerformanceObserverEntryList: infer T;[m
[32m+[m[32m        } ? T[m
[32m+[m[32m            : typeof _PerformanceObserverEntryList;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `PerformanceResourceTiming` is a global reference for `require('node:perf_hooks').PerformanceResourceTiming`[m
[32m+[m[32m         * @see https://nodejs.org/docs/latest-v22.x/api/globals.html#performanceresourcetiming[m
[32m+[m[32m         * @since v19.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        var PerformanceResourceTiming: typeof globalThis extends {[m
[32m+[m[32m            onmessage: any;[m
[32m+[m[32m            PerformanceResourceTiming: infer T;[m
[32m+[m[32m        } ? T[m
[32m+[m[32m            : typeof _PerformanceResourceTiming;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * `performance` is a global reference for `require('node:perf_hooks').performance`[m
[32m+[m[32m         * @see https://nodejs.org/docs/latest-v22.x/api/globals.html#performance[m
[32m+[m[32m         * @since v16.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        var performance: typeof globalThis extends {[m
[32m+[m[32m            onmessage: any;[m
[32m+[m[32m            performance: infer T;[m
[32m+[m[32m        } ? T[m
[32m+[m[32m            : typeof _performance;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:perf_hooks" {[m
[32m+[m[32m    export * from "perf_hooks";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/process.d.ts b/node_modules/@types/node/process.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..87f2c7f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/process.d.ts[m
[36m@@ -0,0 +1,1913 @@[m
[32m+[m[32mdeclare module "process" {[m
[32m+[m[32m    import * as tty from "node:tty";[m
[32m+[m[32m    import { Worker } from "node:worker_threads";[m
[32m+[m
[32m+[m[32m    interface BuiltInModule {[m
[32m+[m[32m        "assert": typeof import("assert");[m
[32m+[m[32m        "node:assert": typeof import("node:assert");[m
[32m+[m[32m        "assert/strict": typeof import("assert/strict");[m
[32m+[m[32m        "node:assert/strict": typeof import("node:assert/strict");[m
[32m+[m[32m        "async_hooks": typeof import("async_hooks");[m
[32m+[m[32m        "node:async_hooks": typeof import("node:async_hooks");[m
[32m+[m[32m        "buffer": typeof import("buffer");[m
[32m+[m[32m        "node:buffer": typeof import("node:buffer");[m
[32m+[m[32m        "child_process": typeof import("child_process");[m
[32m+[m[32m        "node:child_process": typeof import("node:child_process");[m
[32m+[m[32m        "cluster": typeof import("cluster");[m
[32m+[m[32m        "node:cluster": typeof import("node:cluster");[m
[32m+[m[32m        "console": typeof import("console");[m
[32m+[m[32m        "node:console": typeof import("node:console");[m
[32m+[m[32m        "constants": typeof import("constants");[m
[32m+[m[32m        "node:constants": typeof import("node:constants");[m
[32m+[m[32m        "crypto": typeof import("crypto");[m
[32m+[m[32m        "node:crypto": typeof import("node:crypto");[m
[32m+[m[32m        "dgram": typeof import("dgram");[m
[32m+[m[32m        "node:dgram": typeof import("node:dgram");[m
[32m+[m[32m        "diagnostics_channel": typeof import("diagnostics_channel");[m
[32m+[m[32m        "node:diagnostics_channel": typeof import("node:diagnostics_channel");[m
[32m+[m[32m        "dns": typeof import("dns");[m
[32m+[m[32m        "node:dns": typeof import("node:dns");[m
[32m+[m[32m        "dns/promises": typeof import("dns/promises");[m
[32m+[m[32m        "node:dns/promises": typeof import("node:dns/promises");[m
[32m+[m[32m        "domain": typeof import("domain");[m
[32m+[m[32m        "node:domain": typeof import("node:domain");[m
[32m+[m[32m        "events": typeof import("events");[m
[32m+[m[32m        "node:events": typeof import("node:events");[m
[32m+[m[32m        "fs": typeof import("fs");[m
[32m+[m[32m        "node:fs": typeof import("node:fs");[m
[32m+[m[32m        "fs/promises": typeof import("fs/promises");[m
[32m+[m[32m        "node:fs/promises": typeof import("node:fs/promises");[m
[32m+[m[32m        "http": typeof import("http");[m
[32m+[m[32m        "node:http": typeof import("node:http");[m
[32m+[m[32m        "http2": typeof import("http2");[m
[32m+[m[32m        "node:http2": typeof import("node:http2");[m
[32m+[m[32m        "https": typeof import("https");[m
[32m+[m[32m        "node:https": typeof import("node:https");[m
[32m+[m[32m        "inspector": typeof import("inspector");[m
[32m+[m[32m        "node:inspector": typeof import("node:inspector");[m
[32m+[m[32m        // FIXME: module is missed[m
[32m+[m[32m        // "inspector/promises": typeof import("inspector/promises");[m
[32m+[m[32m        // "node:inspector/promises": typeof import("node:inspector/promises");[m
[32m+[m[32m        "module": typeof import("module");[m
[32m+[m[32m        "node:module": typeof import("node:module");[m
[32m+[m[32m        "net": typeof import("net");[m
[32m+[m[32m        "node:net": typeof import("node:net");[m
[32m+[m[32m        "os": typeof import("os");[m
[32m+[m[32m        "node:os": typeof import("node:os");[m
[32m+[m[32m        "path": typeof import("path");[m
[32m+[m[32m        "node:path": typeof import("node:path");[m
[32m+[m[32m        "path/posix": typeof import("path/posix");[m
[32m+[m[32m        "node:path/posix": typeof import("node:path/posix");[m
[32m+[m[32m        "path/win32": typeof import("path/win32");[m
[32m+[m[32m        "node:path/win32": typeof import("node:path/win32");[m
[32m+[m[32m        "perf_hooks": typeof import("perf_hooks");[m
[32m+[m[32m        "node:perf_hooks": typeof import("node:perf_hooks");[m
[32m+[m[32m        "process": typeof import("process");[m
[32m+[m[32m        "node:process": typeof import("node:process");[m
[32m+[m[32m        "punycode": typeof import("punycode");[m
[32m+[m[32m        "node:punycode": typeof import("node:punycode");[m
[32m+[m[32m        "querystring": typeof import("querystring");[m
[32m+[m[32m        "node:querystring": typeof import("node:querystring");[m
[32m+[m[32m        "readline": typeof import("readline");[m
[32m+[m[32m        "node:readline": typeof import("node:readline");[m
[32m+[m[32m        "readline/promises": typeof import("readline/promises");[m
[32m+[m[32m        "node:readline/promises": typeof import("node:readline/promises");[m
[32m+[m[32m        "repl": typeof import("repl");[m
[32m+[m[32m        "node:repl": typeof import("node:repl");[m
[32m+[m[32m        "node:sea": typeof import("node:sea");[m
[32m+[m[32m        "node:sqlite": typeof import("node:sqlite");[m
[32m+[m[32m        "stream": typeof import("stream");[m
[32m+[m[32m        "node:stream": typeof import("node:stream");[m
[32m+[m[32m        "stream/consumers": typeof import("stream/consumers");[m
[32m+[m[32m        "node:stream/consumers": typeof import("node:stream/consumers");[m
[32m+[m[32m        "stream/promises": typeof import("stream/promises");[m
[32m+[m[32m        "node:stream/promises": typeof import("node:stream/promises");[m
[32m+[m[32m        "stream/web": typeof import("stream/web");[m
[32m+[m[32m        "node:stream/web": typeof import("node:stream/web");[m
[32m+[m[32m        "string_decoder": typeof import("string_decoder");[m
[32m+[m[32m        "node:string_decoder": typeof import("node:string_decoder");[m
[32m+[m[32m        "node:test": typeof import("node:test");[m
[32m+[m[32m        "node:test/reporters": typeof import("node:test/reporters");[m
[32m+[m[32m        "timers": typeof import("timers");[m
[32m+[m[32m        "node:timers": typeof import("node:timers");[m
[32m+[m[32m        "timers/promises": typeof import("timers/promises");[m
[32m+[m[32m        "node:timers/promises": typeof import("node:timers/promises");[m
[32m+[m[32m        "tls": typeof import("tls");[m
[32m+[m[32m        "node:tls": typeof import("node:tls");[m
[32m+[m[32m        "trace_events": typeof import("trace_events");[m
[32m+[m[32m        "node:trace_events": typeof import("node:trace_events");[m
[32m+[m[32m        "tty": typeof import("tty");[m
[32m+[m[32m        "node:tty": typeof import("node:tty");[m
[32m+[m[32m        "url": typeof import("url");[m
[32m+[m[32m        "node:url": typeof import("node:url");[m
[32m+[m[32m        "util": typeof import("util");[m
[32m+[m[32m        "node:util": typeof import("node:util");[m
[32m+[m[32m        "sys": typeof import("util");[m
[32m+[m[32m        "node:sys": typeof import("node:util");[m
[32m+[m[32m        "util/types": typeof import("util/types");[m
[32m+[m[32m        "node:util/types": typeof import("node:util/types");[m
[32m+[m[32m        "v8": typeof import("v8");[m
[32m+[m[32m        "node:v8": typeof import("node:v8");[m
[32m+[m[32m        "vm": typeof import("vm");[m
[32m+[m[32m        "node:vm": typeof import("node:vm");[m
[32m+[m[32m        "wasi": typeof import("wasi");[m
[32m+[m[32m        "node:wasi": typeof import("node:wasi");[m
[32m+[m[32m        "worker_threads": typeof import("worker_threads");[m
[32m+[m[32m        "node:worker_threads": typeof import("node:worker_threads");[m
[32m+[m[32m        "zlib": typeof import("zlib");[m
[32m+[m[32m        "node:zlib": typeof import("node:zlib");[m
[32m+[m[32m    }[m
[32m+[m[32m    global {[m
[32m+[m[32m        var process: NodeJS.Process;[m
[32m+[m[32m        namespace NodeJS {[m
[32m+[m[32m            // this namespace merge is here because these are specifically used[m
[32m+[m[32m            // as the type for process.stdin, process.stdout, and process.stderr.[m
[32m+[m[32m            // they can't live in tty.d.ts because we need to disambiguate the imported name.[m
[32m+[m[32m            interface ReadStream extends tty.ReadStream {}[m
[32m+[m[32m            interface WriteStream extends tty.WriteStream {}[m
[32m+[m[32m            interface MemoryUsageFn {[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.memoryUsage()` method iterate over each page to gather informations about memory[m
[32m+[m[32m                 * usage which can be slow depending on the program memory allocations.[m
[32m+[m[32m                 */[m
[32m+[m[32m                (): MemoryUsage;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * method returns an integer representing the Resident Set Size (RSS) in bytes.[m
[32m+[m[32m                 */[m
[32m+[m[32m                rss(): number;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface MemoryUsage {[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Resident Set Size, is the amount of space occupied in the main memory device (that is a subset of the total allocated memory) for the[m
[32m+[m[32m                 * process, including all C++ and JavaScript objects and code.[m
[32m+[m[32m                 */[m
[32m+[m[32m                rss: number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Refers to V8's memory usage.[m
[32m+[m[32m                 */[m
[32m+[m[32m                heapTotal: number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Refers to V8's memory usage.[m
[32m+[m[32m                 */[m
[32m+[m[32m                heapUsed: number;[m
[32m+[m[32m                external: number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Refers to memory allocated for `ArrayBuffer`s and `SharedArrayBuffer`s, including all Node.js Buffers. This is also included[m
[32m+[m[32m                 * in the external value. When Node.js is used as an embedded library, this value may be `0` because allocations for `ArrayBuffer`s[m
[32m+[m[32m                 * may not be tracked in that case.[m
[32m+[m[32m                 */[m
[32m+[m[32m                arrayBuffers: number;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface CpuUsage {[m
[32m+[m[32m                user: number;[m
[32m+[m[32m                system: number;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface ProcessRelease {[m
[32m+[m[32m                name: string;[m
[32m+[m[32m                sourceUrl?: string | undefined;[m
[32m+[m[32m                headersUrl?: string | undefined;[m
[32m+[m[32m                libUrl?: string | undefined;[m
[32m+[m[32m                lts?: string | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface ProcessVersions extends Dict<string> {[m
[32m+[m[32m                http_parser: string;[m
[32m+[m[32m                node: string;[m
[32m+[m[32m                v8: string;[m
[32m+[m[32m                ares: string;[m
[32m+[m[32m                uv: string;[m
[32m+[m[32m                zlib: string;[m
[32m+[m[32m                modules: string;[m
[32m+[m[32m                openssl: string;[m
[32m+[m[32m            }[m
[32m+[m[32m            type Platform =[m
[32m+[m[32m                | "aix"[m
[32m+[m[32m                | "android"[m
[32m+[m[32m                | "darwin"[m
[32m+[m[32m                | "freebsd"[m
[32m+[m[32m                | "haiku"[m
[32m+[m[32m                | "linux"[m
[32m+[m[32m                | "openbsd"[m
[32m+[m[32m                | "sunos"[m
[32m+[m[32m                | "win32"[m
[32m+[m[32m                | "cygwin"[m
[32m+[m[32m                | "netbsd";[m
[32m+[m[32m            type Architecture =[m
[32m+[m[32m                | "arm"[m
[32m+[m[32m                | "arm64"[m
[32m+[m[32m                | "ia32"[m
[32m+[m[32m                | "loong64"[m
[32m+[m[32m                | "mips"[m
[32m+[m[32m                | "mipsel"[m
[32m+[m[32m                | "ppc"[m
[32m+[m[32m                | "ppc64"[m
[32m+[m[32m                | "riscv64"[m
[32m+[m[32m                | "s390"[m
[32m+[m[32m                | "s390x"[m
[32m+[m[32m                | "x64";[m
[32m+[m[32m            type Signals =[m
[32m+[m[32m                | "SIGABRT"[m
[32m+[m[32m                | "SIGALRM"[m
[32m+[m[32m                | "SIGBUS"[m
[32m+[m[32m                | "SIGCHLD"[m
[32m+[m[32m                | "SIGCONT"[m
[32m+[m[32m                | "SIGFPE"[m
[32m+[m[32m                | "SIGHUP"[m
[32m+[m[32m                | "SIGILL"[m
[32m+[m[32m                | "SIGINT"[m
[32m+[m[32m                | "SIGIO"[m
[32m+[m[32m                | "SIGIOT"[m
[32m+[m[32m                | "SIGKILL"[m
[32m+[m[32m                | "SIGPIPE"[m
[32m+[m[32m                | "SIGPOLL"[m
[32m+[m[32m                | "SIGPROF"[m
[32m+[m[32m                | "SIGPWR"[m
[32m+[m[32m                | "SIGQUIT"[m
[32m+[m[32m                | "SIGSEGV"[m
[32m+[m[32m                | "SIGSTKFLT"[m
[32m+[m[32m                | "SIGSTOP"[m
[32m+[m[32m                | "SIGSYS"[m
[32m+[m[32m                | "SIGTERM"[m
[32m+[m[32m                | "SIGTRAP"[m
[32m+[m[32m                | "SIGTSTP"[m
[32m+[m[32m                | "SIGTTIN"[m
[32m+[m[32m                | "SIGTTOU"[m
[32m+[m[32m                | "SIGUNUSED"[m
[32m+[m[32m                | "SIGURG"[m
[32m+[m[32m                | "SIGUSR1"[m
[32m+[m[32m                | "SIGUSR2"[m
[32m+[m[32m                | "SIGVTALRM"[m
[32m+[m[32m                | "SIGWINCH"[m
[32m+[m[32m                | "SIGXCPU"[m
[32m+[m[32m                | "SIGXFSZ"[m
[32m+[m[32m                | "SIGBREAK"[m
[32m+[m[32m                | "SIGLOST"[m
[32m+[m[32m                | "SIGINFO";[m
[32m+[m[32m            type UncaughtExceptionOrigin = "uncaughtException" | "unhandledRejection";[m
[32m+[m[32m            type MultipleResolveType = "resolve" | "reject";[m
[32m+[m[32m            type BeforeExitListener = (code: number) => void;[m
[32m+[m[32m            type DisconnectListener = () => void;[m
[32m+[m[32m            type ExitListener = (code: number) => void;[m
[32m+[m[32m            type RejectionHandledListener = (promise: Promise<unknown>) => void;[m
[32m+[m[32m            type UncaughtExceptionListener = (error: Error, origin: UncaughtExceptionOrigin) => void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Most of the time the unhandledRejection will be an Error, but this should not be relied upon[m
[32m+[m[32m             * as *anything* can be thrown/rejected, it is therefore unsafe to assume that the value is an Error.[m
[32m+[m[32m             */[m
[32m+[m[32m            type UnhandledRejectionListener = (reason: unknown, promise: Promise<unknown>) => void;[m
[32m+[m[32m            type WarningListener = (warning: Error) => void;[m
[32m+[m[32m            type MessageListener = (message: unknown, sendHandle: unknown) => void;[m
[32m+[m[32m            type SignalsListener = (signal: Signals) => void;[m
[32m+[m[32m            type MultipleResolveListener = ([m
[32m+[m[32m                type: MultipleResolveType,[m
[32m+[m[32m                promise: Promise<unknown>,[m
[32m+[m[32m                value: unknown,[m
[32m+[m[32m            ) => void;[m
[32m+[m[32m            type WorkerListener = (worker: Worker) => void;[m
[32m+[m[32m            interface Socket extends ReadWriteStream {[m
[32m+[m[32m                isTTY?: true | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            // Alias for compatibility[m
[32m+[m[32m            interface ProcessEnv extends Dict<string> {[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Can be used to change the default timezone at runtime[m
[32m+[m[32m                 */[m
[32m+[m[32m                TZ?: string;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface HRTime {[m
[32m+[m[32m                (time?: [number, number]): [number, number];[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `bigint` version of the `{@link hrtime()}` method returning the current high-resolution real time in nanoseconds as a `bigint`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Unlike `{@link hrtime()}`, it does not support an additional time argument since the difference can just be computed directly by subtraction of the two `bigint`s.[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { hrtime } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * const start = hrtime.bigint();[m
[32m+[m[32m                 * // 191051479007711n[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * setTimeout(() => {[m
[32m+[m[32m                 *   const end = hrtime.bigint();[m
[32m+[m[32m                 *   // 191052633396993n[m
[32m+[m[32m                 *[m
[32m+[m[32m                 *   console.log(`Benchmark took ${end - start} nanoseconds`);[m
[32m+[m[32m                 *   // Benchmark took 1154389282 nanoseconds[m
[32m+[m[32m                 * }, 1000);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 */[m
[32m+[m[32m                bigint(): bigint;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface ProcessPermission {[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Verifies that the process is able to access the given scope and reference.[m
[32m+[m[32m                 * If no reference is provided, a global scope is assumed, for instance, `process.permission.has('fs.read')`[m
[32m+[m[32m                 * will check if the process has ALL file system read permissions.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The reference has a meaning based on the provided scope. For example, the reference when the scope is File System means files and folders.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The available scopes are:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * * `fs` - All File System[m
[32m+[m[32m                 * * `fs.read` - File System read operations[m
[32m+[m[32m                 * * `fs.write` - File System write operations[m
[32m+[m[32m                 * * `child` - Child process spawning operations[m
[32m+[m[32m                 * * `worker` - Worker thread spawning operation[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * // Check if the process has permission to read the README file[m
[32m+[m[32m                 * process.permission.has('fs.read', './README.md');[m
[32m+[m[32m                 * // Check if the process has read permission operations[m
[32m+[m[32m                 * process.permission.has('fs.read');[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v20.0.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                has(scope: string, reference?: string): boolean;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface ProcessReport {[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Write reports in a compact format, single-line JSON, more easily consumable by log processing systems[m
[32m+[m[32m                 * than the default multi-line format designed for human consumption.[m
[32m+[m[32m                 * @since v13.12.0, v12.17.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                compact: boolean;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Directory where the report is written.[m
[32m+[m[32m                 * The default value is the empty string, indicating that reports are written to the current[m
[32m+[m[32m                 * working directory of the Node.js process.[m
[32m+[m[32m                 */[m
[32m+[m[32m                directory: string;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Filename where the report is written. If set to the empty string, the output filename will be comprised[m
[32m+[m[32m                 * of a timestamp, PID, and sequence number. The default value is the empty string.[m
[32m+[m[32m                 */[m
[32m+[m[32m                filename: string;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Returns a JavaScript Object representation of a diagnostic report for the running process.[m
[32m+[m[32m                 * The report's JavaScript stack trace is taken from `err`, if present.[m
[32m+[m[32m                 */[m
[32m+[m[32m                getReport(err?: Error): object;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * If true, a diagnostic report is generated on fatal errors,[m
[32m+[m[32m                 * such as out of memory errors or failed C++ assertions.[m
[32m+[m[32m                 * @default false[m
[32m+[m[32m                 */[m
[32m+[m[32m                reportOnFatalError: boolean;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * If true, a diagnostic report is generated when the process[m
[32m+[m[32m                 * receives the signal specified by process.report.signal.[m
[32m+[m[32m                 * @default false[m
[32m+[m[32m                 */[m
[32m+[m[32m                reportOnSignal: boolean;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * If true, a diagnostic report is generated on uncaught exception.[m
[32m+[m[32m                 * @default false[m
[32m+[m[32m                 */[m
[32m+[m[32m                reportOnUncaughtException: boolean;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The signal used to trigger the creation of a diagnostic report.[m
[32m+[m[32m                 * @default 'SIGUSR2'[m
[32m+[m[32m                 */[m
[32m+[m[32m                signal: Signals;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Writes a diagnostic report to a file. If filename is not provided, the default filename[m
[32m+[m[32m                 * includes the date, time, PID, and a sequence number.[m
[32m+[m[32m                 * The report's JavaScript stack trace is taken from `err`, if present.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * If the value of filename is set to `'stdout'` or `'stderr'`, the report is written[m
[32m+[m[32m                 * to the stdout or stderr of the process respectively.[m
[32m+[m[32m                 * @param fileName Name of the file where the report is written.[m
[32m+[m[32m                 * This should be a relative path, that will be appended to the directory specified in[m
[32m+[m[32m                 * `process.report.directory`, or the current working directory of the Node.js process,[m
[32m+[m[32m                 * if unspecified.[m
[32m+[m[32m                 * @param err A custom error used for reporting the JavaScript stack.[m
[32m+[m[32m                 * @return Filename of the generated report.[m
[32m+[m[32m                 */[m
[32m+[m[32m                writeReport(fileName?: string, err?: Error): string;[m
[32m+[m[32m                writeReport(err?: Error): string;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface ResourceUsage {[m
[32m+[m[32m                fsRead: number;[m
[32m+[m[32m                fsWrite: number;[m
[32m+[m[32m                involuntaryContextSwitches: number;[m
[32m+[m[32m                ipcReceived: number;[m
[32m+[m[32m                ipcSent: number;[m
[32m+[m[32m                majorPageFault: number;[m
[32m+[m[32m                maxRSS: number;[m
[32m+[m[32m                minorPageFault: number;[m
[32m+[m[32m                sharedMemorySize: number;[m
[32m+[m[32m                signalsCount: number;[m
[32m+[m[32m                swappedOut: number;[m
[32m+[m[32m                systemCPUTime: number;[m
[32m+[m[32m                unsharedDataSize: number;[m
[32m+[m[32m                unsharedStackSize: number;[m
[32m+[m[32m                userCPUTime: number;[m
[32m+[m[32m                voluntaryContextSwitches: number;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface EmitWarningOptions {[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * When `warning` is a `string`, `type` is the name to use for the _type_ of warning being emitted.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * @default 'Warning'[m
[32m+[m[32m                 */[m
[32m+[m[32m                type?: string | undefined;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * A unique identifier for the warning instance being emitted.[m
[32m+[m[32m                 */[m
[32m+[m[32m                code?: string | undefined;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * When `warning` is a `string`, `ctor` is an optional function used to limit the generated stack trace.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * @default process.emitWarning[m
[32m+[m[32m                 */[m
[32m+[m[32m                ctor?: Function | undefined;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Additional text to include with the error.[m
[32m+[m[32m                 */[m
[32m+[m[32m                detail?: string | undefined;[m
[32m+[m[32m            }[m
[32m+[m[32m            interface ProcessConfig {[m
[32m+[m[32m                readonly target_defaults: {[m
[32m+[m[32m                    readonly cflags: any[];[m
[32m+[m[32m                    readonly default_configuration: string;[m
[32m+[m[32m                    readonly defines: string[];[m
[32m+[m[32m                    readonly include_dirs: string[];[m
[32m+[m[32m                    readonly libraries: string[];[m
[32m+[m[32m                };[m
[32m+[m[32m                readonly variables: {[m
[32m+[m[32m                    readonly clang: number;[m
[32m+[m[32m                    readonly host_arch: string;[m
[32m+[m[32m                    readonly node_install_npm: boolean;[m
[32m+[m[32m                    readonly node_install_waf: boolean;[m
[32m+[m[32m                    readonly node_prefix: string;[m
[32m+[m[32m                    readonly node_shared_openssl: boolean;[m
[32m+[m[32m                    readonly node_shared_v8: boolean;[m
[32m+[m[32m                    readonly node_shared_zlib: boolean;[m
[32m+[m[32m                    readonly node_use_dtrace: boolean;[m
[32m+[m[32m                    readonly node_use_etw: boolean;[m
[32m+[m[32m                    readonly node_use_openssl: boolean;[m
[32m+[m[32m                    readonly target_arch: string;[m
[32m+[m[32m                    readonly v8_no_strict_aliasing: number;[m
[32m+[m[32m                    readonly v8_use_snapshot: boolean;[m
[32m+[m[32m                    readonly visibility: string;[m
[32m+[m[32m                };[m
[32m+[m[32m            }[m
[32m+[m[32m            interface Process extends EventEmitter {[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.stdout` property returns a stream connected to`stdout` (fd `1`). It is a `net.Socket` (which is a `Duplex` stream) unless fd `1` refers to a file, in which case it is[m
[32m+[m[32m                 * a `Writable` stream.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * For example, to copy `process.stdin` to `process.stdout`:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { stdin, stdout } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * stdin.pipe(stdout);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * `process.stdout` differs from other Node.js streams in important ways. See `note on process I/O` for more information.[m
[32m+[m[32m                 */[m
[32m+[m[32m                stdout: WriteStream & {[m
[32m+[m[32m                    fd: 1;[m
[32m+[m[32m                };[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.stderr` property returns a stream connected to`stderr` (fd `2`). It is a `net.Socket` (which is a `Duplex` stream) unless fd `2` refers to a file, in which case it is[m
[32m+[m[32m                 * a `Writable` stream.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * `process.stderr` differs from other Node.js streams in important ways. See `note on process I/O` for more information.[m
[32m+[m[32m                 */[m
[32m+[m[32m                stderr: WriteStream & {[m
[32m+[m[32m                    fd: 2;[m
[32m+[m[32m                };[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.stdin` property returns a stream connected to`stdin` (fd `0`). It is a `net.Socket` (which is a `Duplex` stream) unless fd `0` refers to a file, in which case it is[m
[32m+[m[32m                 * a `Readable` stream.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * For details of how to read from `stdin` see `readable.read()`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * As a `Duplex` stream, `process.stdin` can also be used in "old" mode that[m
[32m+[m[32m                 * is compatible with scripts written for Node.js prior to v0.10\.[m
[32m+[m[32m                 * For more information see `Stream compatibility`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * In "old" streams mode the `stdin` stream is paused by default, so one[m
[32m+[m[32m                 * must call `process.stdin.resume()` to read from it. Note also that calling `process.stdin.resume()` itself would switch stream to "old" mode.[m
[32m+[m[32m                 */[m
[32m+[m[32m                stdin: ReadStream & {[m
[32m+[m[32m                    fd: 0;[m
[32m+[m[32m                };[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.argv` property returns an array containing the command-line[m
[32m+[m[32m                 * arguments passed when the Node.js process was launched. The first element will[m
[32m+[m[32m                 * be {@link execPath}. See `process.argv0` if access to the original value[m
[32m+[m[32m                 * of `argv[0]` is needed. The second element will be the path to the JavaScript[m
[32m+[m[32m                 * file being executed. The remaining elements will be any additional command-line[m
[32m+[m[32m                 * arguments.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * For example, assuming the following script for `process-args.js`:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { argv } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // print process.argv[m
[32m+[m[32m                 * argv.forEach((val, index) => {[m
[32m+[m[32m                 *   console.log(`${index}: ${val}`);[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Launching the Node.js process as:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```bash[m
[32m+[m[32m                 * node process-args.js one two=three four[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Would generate the output:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```text[m
[32m+[m[32m                 * 0: /usr/local/bin/node[m
[32m+[m[32m                 * 1: /Users/mjr/work/node/process-args.js[m
[32m+[m[32m                 * 2: one[m
[32m+[m[32m                 * 3: two=three[m
[32m+[m[32m                 * 4: four[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.1.27[m
[32m+[m[32m                 */[m
[32m+[m[32m                argv: string[];[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.argv0` property stores a read-only copy of the original value of`argv[0]` passed when Node.js starts.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```console[m
[32m+[m[32m                 * $ bash -c 'exec -a customArgv0 ./node'[m
[32m+[m[32m                 * > process.argv[0][m
[32m+[m[32m                 * '/Volumes/code/external/node/out/Release/node'[m
[32m+[m[32m                 * > process.argv0[m
[32m+[m[32m                 * 'customArgv0'[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v6.4.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                argv0: string;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.execArgv` property returns the set of Node.js-specific command-line[m
[32m+[m[32m                 * options passed when the Node.js process was launched. These options do not[m
[32m+[m[32m                 * appear in the array returned by the {@link argv} property, and do not[m
[32m+[m[32m                 * include the Node.js executable, the name of the script, or any options following[m
[32m+[m[32m                 * the script name. These options are useful in order to spawn child processes with[m
[32m+[m[32m                 * the same execution environment as the parent.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```bash[m
[32m+[m[32m                 * node --icu-data-dir=./foo --require ./bar.js script.js --version[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Results in `process.execArgv`:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * ["--icu-data-dir=./foo", "--require", "./bar.js"][m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * And `process.argv`:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * ['/usr/local/bin/node', 'script.js', '--version'][m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Refer to `Worker constructor` for the detailed behavior of worker[m
[32m+[m[32m                 * threads with this property.[m
[32m+[m[32m                 * @since v0.7.7[m
[32m+[m[32m                 */[m
[32m+[m[32m                execArgv: string[];[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.execPath` property returns the absolute pathname of the executable[m
[32m+[m[32m                 * that started the Node.js process. Symbolic links, if any, are resolved.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * '/usr/local/bin/node'[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.1.100[m
[32m+[m[32m                 */[m
[32m+[m[32m                execPath: string;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.abort()` method causes the Node.js process to exit immediately and[m
[32m+[m[32m                 * generate a core file.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This feature is not available in `Worker` threads.[m
[32m+[m[32m                 * @since v0.7.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                abort(): never;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.chdir()` method changes the current working directory of the[m
[32m+[m[32m                 * Node.js process or throws an exception if doing so fails (for instance, if[m
[32m+[m[32m                 * the specified `directory` does not exist).[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { chdir, cwd } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(`Starting directory: ${cwd()}`);[m
[32m+[m[32m                 * try {[m
[32m+[m[32m                 *   chdir('/tmp');[m
[32m+[m[32m                 *   console.log(`New directory: ${cwd()}`);[m
[32m+[m[32m                 * } catch (err) {[m
[32m+[m[32m                 *   console.error(`chdir: ${err}`);[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This feature is not available in `Worker` threads.[m
[32m+[m[32m                 * @since v0.1.17[m
[32m+[m[32m                 */[m
[32m+[m[32m                chdir(directory: string): void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.cwd()` method returns the current working directory of the Node.js[m
[32m+[m[32m                 * process.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { cwd } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(`Current directory: ${cwd()}`);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.1.8[m
[32m+[m[32m                 */[m
[32m+[m[32m                cwd(): string;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The port used by the Node.js debugger when enabled.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * process.debugPort = 5858;[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.7.2[m
[32m+[m[32m                 */[m
[32m+[m[32m                debugPort: number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.dlopen()` method allows dynamically loading shared objects. It is primarily used by `require()` to load C++ Addons, and[m
[32m+[m[32m                 * should not be used directly, except in special cases. In other words, `require()` should be preferred over `process.dlopen()`[m
[32m+[m[32m                 * unless there are specific reasons such as custom dlopen flags or loading from ES modules.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The `flags` argument is an integer that allows to specify dlopen behavior. See the `[os.constants.dlopen](https://nodejs.org/docs/latest-v22.x/api/os.html#dlopen-constants)`[m
[32m+[m[32m                 * documentation for details.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * An important requirement when calling `process.dlopen()` is that the `module` instance must be passed. Functions exported by the C++ Addon[m
[32m+[m[32m                 * are then accessible via `module.exports`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The example below shows how to load a C++ Addon, named `local.node`, that exports a `foo` function. All the symbols are loaded before the call returns, by passing the `RTLD_NOW` constant.[m
[32m+[m[32m                 * In this example the constant is assumed to be available.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { dlopen } from 'node:process';[m
[32m+[m[32m                 * import { constants } from 'node:os';[m
[32m+[m[32m                 * import { fileURLToPath } from 'node:url';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * const module = { exports: {} };[m
[32m+[m[32m                 * dlopen(module, fileURLToPath(new URL('local.node', import.meta.url)),[m
[32m+[m[32m                 *        constants.dlopen.RTLD_NOW);[m
[32m+[m[32m                 * module.exports.foo();[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 */[m
[32m+[m[32m                dlopen(module: object, filename: string, flags?: number): void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.emitWarning()` method can be used to emit custom or application[m
[32m+[m[32m                 * specific process warnings. These can be listened for by adding a handler to the `'warning'` event.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { emitWarning } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // Emit a warning using a string.[m
[32m+[m[32m                 * emitWarning('Something happened!');[m
[32m+[m[32m                 * // Emits: (node: 56338) Warning: Something happened![m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { emitWarning } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // Emit a warning using a string and a type.[m
[32m+[m[32m                 * emitWarning('Something Happened!', 'CustomWarning');[m
[32m+[m[32m                 * // Emits: (node:56338) CustomWarning: Something Happened![m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { emitWarning } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * emitWarning('Something happened!', 'CustomWarning', 'WARN001');[m
[32m+[m[32m                 * // Emits: (node:56338) [WARN001] CustomWarning: Something happened![m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * In each of the previous examples, an `Error` object is generated internally by `process.emitWarning()` and passed through to the `'warning'` handler.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * process.on('warning', (warning) => {[m
[32m+[m[32m                 *   console.warn(warning.name);    // 'Warning'[m
[32m+[m[32m                 *   console.warn(warning.message); // 'Something happened!'[m
[32m+[m[32m                 *   console.warn(warning.code);    // 'MY_WARNING'[m
[32m+[m[32m                 *   console.warn(warning.stack);   // Stack trace[m
[32m+[m[32m                 *   console.warn(warning.detail);  // 'This is some additional information'[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * If `warning` is passed as an `Error` object, it will be passed through to the `'warning'` event handler[m
[32m+[m[32m                 * unmodified (and the optional `type`, `code` and `ctor` arguments will be ignored):[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { emitWarning } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // Emit a warning using an Error object.[m
[32m+[m[32m                 * const myWarning = new Error('Something happened!');[m
[32m+[m[32m                 * // Use the Error name property to specify the type name[m
[32m+[m[32m                 * myWarning.name = 'CustomWarning';[m
[32m+[m[32m                 * myWarning.code = 'WARN001';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * emitWarning(myWarning);[m
[32m+[m[32m                 * // Emits: (node:56338) [WARN001] CustomWarning: Something happened![m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * A `TypeError` is thrown if `warning` is anything other than a string or `Error` object.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * While process warnings use `Error` objects, the process warning mechanism is not a replacement for normal error handling mechanisms.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The following additional handling is implemented if the warning `type` is `'DeprecationWarning'`:[m
[32m+[m[32m                 * * If the `--throw-deprecation` command-line flag is used, the deprecation warning is thrown as an exception rather than being emitted as an event.[m
[32m+[m[32m                 * * If the `--no-deprecation` command-line flag is used, the deprecation warning is suppressed.[m
[32m+[m[32m                 * * If the `--trace-deprecation` command-line flag is used, the deprecation warning is printed to `stderr` along with the full stack trace.[m
[32m+[m[32m                 * @since v8.0.0[m
[32m+[m[32m                 * @param warning The warning to emit.[m
[32m+[m[32m                 */[m
[32m+[m[32m                emitWarning(warning: string | Error, ctor?: Function): void;[m
[32m+[m[32m                emitWarning(warning: string | Error, type?: string, ctor?: Function): void;[m
[32m+[m[32m                emitWarning(warning: string | Error, type?: string, code?: string, ctor?: Function): void;[m
[32m+[m[32m                emitWarning(warning: string | Error, options?: EmitWarningOptions): void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.env` property returns an object containing the user environment.[m
[32m+[m[32m                 * See [`environ(7)`](http://man7.org/linux/man-pages/man7/environ.7.html).[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * An example of this object looks like:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * {[m
[32m+[m[32m                 *   TERM: 'xterm-256color',[m
[32m+[m[32m                 *   SHELL: '/usr/local/bin/bash',[m
[32m+[m[32m                 *   USER: 'maciej',[m
[32m+[m[32m                 *   PATH: '~/.bin/:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin',[m
[32m+[m[32m                 *   PWD: '/Users/maciej',[m
[32m+[m[32m                 *   EDITOR: 'vim',[m
[32m+[m[32m                 *   SHLVL: '1',[m
[32m+[m[32m                 *   HOME: '/Users/maciej',[m
[32m+[m[32m                 *   LOGNAME: 'maciej',[m
[32m+[m[32m                 *   _: '/usr/local/bin/node'[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * It is possible to modify this object, but such modifications will not be[m
[32m+[m[32m                 * reflected outside the Node.js process, or (unless explicitly requested)[m
[32m+[m[32m                 * to other `Worker` threads.[m
[32m+[m[32m                 * In other words, the following example would not work:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```bash[m
[32m+[m[32m                 * node -e 'process.env.foo = "bar"' &#x26;&#x26; echo $foo[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * While the following will:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { env } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * env.foo = 'bar';[m
[32m+[m[32m                 * console.log(env.foo);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Assigning a property on `process.env` will implicitly convert the value[m
[32m+[m[32m                 * to a string. **This behavior is deprecated.** Future versions of Node.js may[m
[32m+[m[32m                 * throw an error when the value is not a string, number, or boolean.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { env } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * env.test = null;[m
[32m+[m[32m                 * console.log(env.test);[m
[32m+[m[32m                 * // => 'null'[m
[32m+[m[32m                 * env.test = undefined;[m
[32m+[m[32m                 * console.log(env.test);[m
[32m+[m[32m                 * // => 'undefined'[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Use `delete` to delete a property from `process.env`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { env } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * env.TEST = 1;[m
[32m+[m[32m                 * delete env.TEST;[m
[32m+[m[32m                 * console.log(env.TEST);[m
[32m+[m[32m                 * // => undefined[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * On Windows operating systems, environment variables are case-insensitive.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { env } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * env.TEST = 1;[m
[32m+[m[32m                 * console.log(env.test);[m
[32m+[m[32m                 * // => 1[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Unless explicitly specified when creating a `Worker` instance,[m
[32m+[m[32m                 * each `Worker` thread has its own copy of `process.env`, based on its[m
[32m+[m[32m                 * parent thread's `process.env`, or whatever was specified as the `env` option[m
[32m+[m[32m                 * to the `Worker` constructor. Changes to `process.env` will not be visible[m
[32m+[m[32m                 * across `Worker` threads, and only the main thread can make changes that[m
[32m+[m[32m                 * are visible to the operating system or to native add-ons. On Windows, a copy of `process.env` on a `Worker` instance operates in a case-sensitive manner[m
[32m+[m[32m                 * unlike the main thread.[m
[32m+[m[32m                 * @since v0.1.27[m
[32m+[m[32m                 */[m
[32m+[m[32m                env: ProcessEnv;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.exit()` method instructs Node.js to terminate the process[m
[32m+[m[32m                 * synchronously with an exit status of `code`. If `code` is omitted, exit uses[m
[32m+[m[32m                 * either the 'success' code `0` or the value of `process.exitCode` if it has been[m
[32m+[m[32m                 * set. Node.js will not terminate until all the `'exit'` event listeners are[m
[32m+[m[32m                 * called.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * To exit with a 'failure' code:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { exit } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * exit(1);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The shell that executed Node.js should see the exit code as `1`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Calling `process.exit()` will force the process to exit as quickly as possible[m
[32m+[m[32m                 * even if there are still asynchronous operations pending that have not yet[m
[32m+[m[32m                 * completed fully, including I/O operations to `process.stdout` and `process.stderr`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * In most situations, it is not actually necessary to call `process.exit()` explicitly. The Node.js process will exit on its own _if there is no additional_[m
[32m+[m[32m                 * _work pending_ in the event loop. The `process.exitCode` property can be set to[m
[32m+[m[32m                 * tell the process which exit code to use when the process exits gracefully.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * For instance, the following example illustrates a _misuse_ of the `process.exit()` method that could lead to data printed to stdout being[m
[32m+[m[32m                 * truncated and lost:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { exit } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // This is an example of what *not* to do:[m
[32m+[m[32m                 * if (someConditionNotMet()) {[m
[32m+[m[32m                 *   printUsageToStdout();[m
[32m+[m[32m                 *   exit(1);[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The reason this is problematic is because writes to `process.stdout` in Node.js[m
[32m+[m[32m                 * are sometimes _asynchronous_ and may occur over multiple ticks of the Node.js[m
[32m+[m[32m                 * event loop. Calling `process.exit()`, however, forces the process to exit _before_ those additional writes to `stdout` can be performed.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Rather than calling `process.exit()` directly, the code _should_ set the `process.exitCode` and allow the process to exit naturally by avoiding[m
[32m+[m[32m                 * scheduling any additional work for the event loop:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // How to properly set the exit code while letting[m
[32m+[m[32m                 * // the process exit gracefully.[m
[32m+[m[32m                 * if (someConditionNotMet()) {[m
[32m+[m[32m                 *   printUsageToStdout();[m
[32m+[m[32m                 *   process.exitCode = 1;[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * If it is necessary to terminate the Node.js process due to an error condition,[m
[32m+[m[32m                 * throwing an _uncaught_ error and allowing the process to terminate accordingly[m
[32m+[m[32m                 * is safer than calling `process.exit()`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * In `Worker` threads, this function stops the current thread rather[m
[32m+[m[32m                 * than the current process.[m
[32m+[m[32m                 * @since v0.1.13[m
[32m+[m[32m                 * @param [code=0] The exit code. For string type, only integer strings (e.g.,'1') are allowed.[m
[32m+[m[32m                 */[m
[32m+[m[32m                exit(code?: number | string | null | undefined): never;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * A number which will be the process exit code, when the process either[m
[32m+[m[32m                 * exits gracefully, or is exited via {@link exit} without specifying[m
[32m+[m[32m                 * a code.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Specifying a code to {@link exit} will override any[m
[32m+[m[32m                 * previous setting of `process.exitCode`.[m
[32m+[m[32m                 * @default undefined[m
[32m+[m[32m                 * @since v0.11.8[m
[32m+[m[32m                 */[m
[32m+[m[32m                exitCode?: number | string | number | undefined;[m
[32m+[m[32m                finalization: {[m
[32m+[m[32m                    /**[m
[32m+[m[32m                     * This function registers a callback to be called when the process emits the `exit` event if the `ref` object was not garbage collected.[m
[32m+[m[32m                     * If the object `ref` was garbage collected before the `exit` event is emitted, the callback will be removed from the finalization registry, and it will not be called on process exit.[m
[32m+[m[32m                     *[m
[32m+[m[32m                     * Inside the callback you can release the resources allocated by the `ref` object.[m
[32m+[m[32m                     * Be aware that all limitations applied to the `beforeExit` event are also applied to the callback function,[m
[32m+[m[32m                     * this means that there is a possibility that the callback will not be called under special circumstances.[m
[32m+[m[32m                     *[m
[32m+[m[32m                     * The idea of ​​this function is to help you free up resources when the starts process exiting, but also let the object be garbage collected if it is no longer being used.[m
[32m+[m[32m                     * @param ref The reference to the resource that is being tracked.[m
[32m+[m[32m                     * @param callback The callback function to be called when the resource is finalized.[m
[32m+[m[32m                     * @since v22.5.0[m
[32m+[m[32m                     * @experimental[m
[32m+[m[32m                     */[m
[32m+[m[32m                    register<T extends object>(ref: T, callback: (ref: T, event: "exit") => void): void;[m
[32m+[m[32m                    /**[m
[32m+[m[32m                     * This function behaves exactly like the `register`, except that the callback will be called when the process emits the `beforeExit` event if `ref` object was not garbage collected.[m
[32m+[m[32m                     *[m
[32m+[m[32m                     * Be aware that all limitations applied to the `beforeExit` event are also applied to the callback function, this means that there is a possibility that the callback will not be called under special circumstances.[m
[32m+[m[32m                     * @param ref The reference to the resource that is being tracked.[m
[32m+[m[32m                     * @param callback The callback function to be called when the resource is finalized.[m
[32m+[m[32m                     * @since v22.5.0[m
[32m+[m[32m                     * @experimental[m
[32m+[m[32m                     */[m
[32m+[m[32m                    registerBeforeExit<T extends object>(ref: T, callback: (ref: T, event: "beforeExit") => void): void;[m
[32m+[m[32m                    /**[m
[32m+[m[32m                     * This function remove the register of the object from the finalization registry, so the callback will not be called anymore.[m
[32m+[m[32m                     * @param ref The reference to the resource that was registered previously.[m
[32m+[m[32m                     * @since v22.5.0[m
[32m+[m[32m                     * @experimental[m
[32m+[m[32m                     */[m
[32m+[m[32m                    unregister(ref: object): void;[m
[32m+[m[32m                };[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.getActiveResourcesInfo()` method returns an array of strings containing[m
[32m+[m[32m                 * the types of the active resources that are currently keeping the event loop alive.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { getActiveResourcesInfo } from 'node:process';[m
[32m+[m[32m                 * import { setTimeout } from 'node:timers';[m
[32m+[m
[32m+[m[32m                 * console.log('Before:', getActiveResourcesInfo());[m
[32m+[m[32m                 * setTimeout(() => {}, 1000);[m
[32m+[m[32m                 * console.log('After:', getActiveResourcesInfo());[m
[32m+[m[32m                 * // Prints:[m
[32m+[m[32m                 * //   Before: [ 'TTYWrap', 'TTYWrap', 'TTYWrap' ][m
[32m+[m[32m                 * //   After: [ 'TTYWrap', 'TTYWrap', 'TTYWrap', 'Timeout' ][m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v17.3.0, v16.14.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                getActiveResourcesInfo(): string[];[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Provides a way to load built-in modules in a globally available function.[m
[32m+[m[32m                 * @param id ID of the built-in module being requested.[m
[32m+[m[32m                 */[m
[32m+[m[32m                getBuiltinModule<ID extends keyof BuiltInModule>(id: ID): BuiltInModule[ID];[m
[32m+[m[32m                getBuiltinModule(id: string): object | undefined;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.getgid()` method returns the numerical group identity of the[m
[32m+[m[32m                 * process. (See [`getgid(2)`](http://man7.org/linux/man-pages/man2/getgid.2.html).)[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * if (process.getgid) {[m
[32m+[m[32m                 *   console.log(`Current gid: ${process.getgid()}`);[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This function is only available on POSIX platforms (i.e. not Windows or[m
[32m+[m[32m                 * Android).[m
[32m+[m[32m                 * @since v0.1.31[m
[32m+[m[32m                 */[m
[32m+[m[32m                getgid?: () => number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.setgid()` method sets the group identity of the process. (See [`setgid(2)`](http://man7.org/linux/man-pages/man2/setgid.2.html).) The `id` can be passed as either a[m
[32m+[m[32m                 * numeric ID or a group name[m
[32m+[m[32m                 * string. If a group name is specified, this method blocks while resolving the[m
[32m+[m[32m                 * associated numeric ID.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * if (process.getgid &#x26;&#x26; process.setgid) {[m
[32m+[m[32m                 *   console.log(`Current gid: ${process.getgid()}`);[m
[32m+[m[32m                 *   try {[m
[32m+[m[32m                 *     process.setgid(501);[m
[32m+[m[32m                 *     console.log(`New gid: ${process.getgid()}`);[m
[32m+[m[32m                 *   } catch (err) {[m
[32m+[m[32m                 *     console.log(`Failed to set gid: ${err}`);[m
[32m+[m[32m                 *   }[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This function is only available on POSIX platforms (i.e. not Windows or[m
[32m+[m[32m                 * Android).[m
[32m+[m[32m                 * This feature is not available in `Worker` threads.[m
[32m+[m[32m                 * @since v0.1.31[m
[32m+[m[32m                 * @param id The group name or ID[m
[32m+[m[32m                 */[m
[32m+[m[32m                setgid?: (id: number | string) => void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.getuid()` method returns the numeric user identity of the process.[m
[32m+[m[32m                 * (See [`getuid(2)`](http://man7.org/linux/man-pages/man2/getuid.2.html).)[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * if (process.getuid) {[m
[32m+[m[32m                 *   console.log(`Current uid: ${process.getuid()}`);[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This function is only available on POSIX platforms (i.e. not Windows or[m
[32m+[m[32m                 * Android).[m
[32m+[m[32m                 * @since v0.1.28[m
[32m+[m[32m                 */[m
[32m+[m[32m                getuid?: () => number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.setuid(id)` method sets the user identity of the process. (See [`setuid(2)`](http://man7.org/linux/man-pages/man2/setuid.2.html).) The `id` can be passed as either a[m
[32m+[m[32m                 * numeric ID or a username string.[m
[32m+[m[32m                 * If a username is specified, the method blocks while resolving the associated[m
[32m+[m[32m                 * numeric ID.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * if (process.getuid &#x26;&#x26; process.setuid) {[m
[32m+[m[32m                 *   console.log(`Current uid: ${process.getuid()}`);[m
[32m+[m[32m                 *   try {[m
[32m+[m[32m                 *     process.setuid(501);[m
[32m+[m[32m                 *     console.log(`New uid: ${process.getuid()}`);[m
[32m+[m[32m                 *   } catch (err) {[m
[32m+[m[32m                 *     console.log(`Failed to set uid: ${err}`);[m
[32m+[m[32m                 *   }[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This function is only available on POSIX platforms (i.e. not Windows or[m
[32m+[m[32m                 * Android).[m
[32m+[m[32m                 * This feature is not available in `Worker` threads.[m
[32m+[m[32m                 * @since v0.1.28[m
[32m+[m[32m                 */[m
[32m+[m[32m                setuid?: (id: number | string) => void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.geteuid()` method returns the numerical effective user identity of[m
[32m+[m[32m                 * the process. (See [`geteuid(2)`](http://man7.org/linux/man-pages/man2/geteuid.2.html).)[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * if (process.geteuid) {[m
[32m+[m[32m                 *   console.log(`Current uid: ${process.geteuid()}`);[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This function is only available on POSIX platforms (i.e. not Windows or[m
[32m+[m[32m                 * Android).[m
[32m+[m[32m                 * @since v2.0.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                geteuid?: () => number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.seteuid()` method sets the effective user identity of the process.[m
[32m+[m[32m                 * (See [`seteuid(2)`](http://man7.org/linux/man-pages/man2/seteuid.2.html).) The `id` can be passed as either a numeric ID or a username[m
[32m+[m[32m                 * string. If a username is specified, the method blocks while resolving the[m
[32m+[m[32m                 * associated numeric ID.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * if (process.geteuid &#x26;&#x26; process.seteuid) {[m
[32m+[m[32m                 *   console.log(`Current uid: ${process.geteuid()}`);[m
[32m+[m[32m                 *   try {[m
[32m+[m[32m                 *     process.seteuid(501);[m
[32m+[m[32m                 *     console.log(`New uid: ${process.geteuid()}`);[m
[32m+[m[32m                 *   } catch (err) {[m
[32m+[m[32m                 *     console.log(`Failed to set uid: ${err}`);[m
[32m+[m[32m                 *   }[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This function is only available on POSIX platforms (i.e. not Windows or[m
[32m+[m[32m                 * Android).[m
[32m+[m[32m                 * This feature is not available in `Worker` threads.[m
[32m+[m[32m                 * @since v2.0.0[m
[32m+[m[32m                 * @param id A user name or ID[m
[32m+[m[32m                 */[m
[32m+[m[32m                seteuid?: (id: number | string) => void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.getegid()` method returns the numerical effective group identity[m
[32m+[m[32m                 * of the Node.js process. (See [`getegid(2)`](http://man7.org/linux/man-pages/man2/getegid.2.html).)[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * if (process.getegid) {[m
[32m+[m[32m                 *   console.log(`Current gid: ${process.getegid()}`);[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This function is only available on POSIX platforms (i.e. not Windows or[m
[32m+[m[32m                 * Android).[m
[32m+[m[32m                 * @since v2.0.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                getegid?: () => number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.setegid()` method sets the effective group identity of the process.[m
[32m+[m[32m                 * (See [`setegid(2)`](http://man7.org/linux/man-pages/man2/setegid.2.html).) The `id` can be passed as either a numeric ID or a group[m
[32m+[m[32m                 * name string. If a group name is specified, this method blocks while resolving[m
[32m+[m[32m                 * the associated a numeric ID.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * if (process.getegid &#x26;&#x26; process.setegid) {[m
[32m+[m[32m                 *   console.log(`Current gid: ${process.getegid()}`);[m
[32m+[m[32m                 *   try {[m
[32m+[m[32m                 *     process.setegid(501);[m
[32m+[m[32m                 *     console.log(`New gid: ${process.getegid()}`);[m
[32m+[m[32m                 *   } catch (err) {[m
[32m+[m[32m                 *     console.log(`Failed to set gid: ${err}`);[m
[32m+[m[32m                 *   }[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This function is only available on POSIX platforms (i.e. not Windows or[m
[32m+[m[32m                 * Android).[m
[32m+[m[32m                 * This feature is not available in `Worker` threads.[m
[32m+[m[32m                 * @since v2.0.0[m
[32m+[m[32m                 * @param id A group name or ID[m
[32m+[m[32m                 */[m
[32m+[m[32m                setegid?: (id: number | string) => void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.getgroups()` method returns an array with the supplementary group[m
[32m+[m[32m                 * IDs. POSIX leaves it unspecified if the effective group ID is included but[m
[32m+[m[32m                 * Node.js ensures it always is.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * if (process.getgroups) {[m
[32m+[m[32m                 *   console.log(process.getgroups()); // [ 16, 21, 297 ][m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This function is only available on POSIX platforms (i.e. not Windows or[m
[32m+[m[32m                 * Android).[m
[32m+[m[32m                 * @since v0.9.4[m
[32m+[m[32m                 */[m
[32m+[m[32m                getgroups?: () => number[];[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.setgroups()` method sets the supplementary group IDs for the[m
[32m+[m[32m                 * Node.js process. This is a privileged operation that requires the Node.js[m
[32m+[m[32m                 * process to have `root` or the `CAP_SETGID` capability.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The `groups` array can contain numeric group IDs, group names, or both.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * if (process.getgroups &#x26;&#x26; process.setgroups) {[m
[32m+[m[32m                 *   try {[m
[32m+[m[32m                 *     process.setgroups([501]);[m
[32m+[m[32m                 *     console.log(process.getgroups()); // new groups[m
[32m+[m[32m                 *   } catch (err) {[m
[32m+[m[32m                 *     console.log(`Failed to set groups: ${err}`);[m
[32m+[m[32m                 *   }[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This function is only available on POSIX platforms (i.e. not Windows or[m
[32m+[m[32m                 * Android).[m
[32m+[m[32m                 * This feature is not available in `Worker` threads.[m
[32m+[m[32m                 * @since v0.9.4[m
[32m+[m[32m                 */[m
[32m+[m[32m                setgroups?: (groups: ReadonlyArray<string | number>) => void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.setUncaughtExceptionCaptureCallback()` function sets a function[m
[32m+[m[32m                 * that will be invoked when an uncaught exception occurs, which will receive the[m
[32m+[m[32m                 * exception value itself as its first argument.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * If such a function is set, the `'uncaughtException'` event will[m
[32m+[m[32m                 * not be emitted. If `--abort-on-uncaught-exception` was passed from the[m
[32m+[m[32m                 * command line or set through `v8.setFlagsFromString()`, the process will[m
[32m+[m[32m                 * not abort. Actions configured to take place on exceptions such as report[m
[32m+[m[32m                 * generations will be affected too[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * To unset the capture function, `process.setUncaughtExceptionCaptureCallback(null)` may be used. Calling this[m
[32m+[m[32m                 * method with a non-`null` argument while another capture function is set will[m
[32m+[m[32m                 * throw an error.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Using this function is mutually exclusive with using the deprecated `domain` built-in module.[m
[32m+[m[32m                 * @since v9.3.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                setUncaughtExceptionCaptureCallback(cb: ((err: Error) => void) | null): void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Indicates whether a callback has been set using {@link setUncaughtExceptionCaptureCallback}.[m
[32m+[m[32m                 * @since v9.3.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                hasUncaughtExceptionCaptureCallback(): boolean;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.sourceMapsEnabled` property returns whether the [Source Map v3](https://sourcemaps.info/spec.html) support for stack traces is enabled.[m
[32m+[m[32m                 * @since v20.7.0[m
[32m+[m[32m                 * @experimental[m
[32m+[m[32m                 */[m
[32m+[m[32m                readonly sourceMapsEnabled: boolean;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * This function enables or disables the [Source Map v3](https://sourcemaps.info/spec.html) support for[m
[32m+[m[32m                 * stack traces.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * It provides same features as launching Node.js process with commandline options `--enable-source-maps`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Only source maps in JavaScript files that are loaded after source maps has been[m
[32m+[m[32m                 * enabled will be parsed and loaded.[m
[32m+[m[32m                 * @since v16.6.0, v14.18.0[m
[32m+[m[32m                 * @experimental[m
[32m+[m[32m                 */[m
[32m+[m[32m                setSourceMapsEnabled(value: boolean): void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.version` property contains the Node.js version string.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { version } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(`Version: ${version}`);[m
[32m+[m[32m                 * // Version: v14.8.0[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * To get the version string without the prepended _v_, use`process.versions.node`.[m
[32m+[m[32m                 * @since v0.1.3[m
[32m+[m[32m                 */[m
[32m+[m[32m                readonly version: string;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.versions` property returns an object listing the version strings of[m
[32m+[m[32m                 * Node.js and its dependencies. `process.versions.modules` indicates the current[m
[32m+[m[32m                 * ABI version, which is increased whenever a C++ API changes. Node.js will refuse[m
[32m+[m[32m                 * to load modules that were compiled against a different module ABI version.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { versions } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(versions);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Will generate an object similar to:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```console[m
[32m+[m[32m                 * { node: '20.2.0',[m
[32m+[m[32m                 *   acorn: '8.8.2',[m
[32m+[m[32m                 *   ada: '2.4.0',[m
[32m+[m[32m                 *   ares: '1.19.0',[m
[32m+[m[32m                 *   base64: '0.5.0',[m
[32m+[m[32m                 *   brotli: '1.0.9',[m
[32m+[m[32m                 *   cjs_module_lexer: '1.2.2',[m
[32m+[m[32m                 *   cldr: '43.0',[m
[32m+[m[32m                 *   icu: '73.1',[m
[32m+[m[32m                 *   llhttp: '8.1.0',[m
[32m+[m[32m                 *   modules: '115',[m
[32m+[m[32m                 *   napi: '8',[m
[32m+[m[32m                 *   nghttp2: '1.52.0',[m
[32m+[m[32m                 *   nghttp3: '0.7.0',[m
[32m+[m[32m                 *   ngtcp2: '0.8.1',[m
[32m+[m[32m                 *   openssl: '3.0.8+quic',[m
[32m+[m[32m                 *   simdutf: '3.2.9',[m
[32m+[m[32m                 *   tz: '2023c',[m
[32m+[m[32m                 *   undici: '5.22.0',[m
[32m+[m[32m                 *   unicode: '15.0',[m
[32m+[m[32m                 *   uv: '1.44.2',[m
[32m+[m[32m                 *   uvwasi: '0.0.16',[m
[32m+[m[32m                 *   v8: '11.3.244.8-node.9',[m
[32m+[m[32m                 *   zlib: '1.2.13' }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.2.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                readonly versions: ProcessVersions;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.config` property returns a frozen `Object` containing the[m
[32m+[m[32m                 * JavaScript representation of the configure options used to compile the current[m
[32m+[m[32m                 * Node.js executable. This is the same as the `config.gypi` file that was produced[m
[32m+[m[32m                 * when running the `./configure` script.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * An example of the possible output looks like:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * {[m
[32m+[m[32m                 *   target_defaults:[m
[32m+[m[32m                 *    { cflags: [],[m
[32m+[m[32m                 *      default_configuration: 'Release',[m
[32m+[m[32m                 *      defines: [],[m
[32m+[m[32m                 *      include_dirs: [],[m
[32m+[m[32m                 *      libraries: [] },[m
[32m+[m[32m                 *   variables:[m
[32m+[m[32m                 *    {[m
[32m+[m[32m                 *      host_arch: 'x64',[m
[32m+[m[32m                 *      napi_build_version: 5,[m
[32m+[m[32m                 *      node_install_npm: 'true',[m
[32m+[m[32m                 *      node_prefix: '',[m
[32m+[m[32m                 *      node_shared_cares: 'false',[m
[32m+[m[32m                 *      node_shared_http_parser: 'false',[m
[32m+[m[32m                 *      node_shared_libuv: 'false',[m
[32m+[m[32m                 *      node_shared_zlib: 'false',[m
[32m+[m[32m                 *      node_use_openssl: 'true',[m
[32m+[m[32m                 *      node_shared_openssl: 'false',[m
[32m+[m[32m                 *      strict_aliasing: 'true',[m
[32m+[m[32m                 *      target_arch: 'x64',[m
[32m+[m[32m                 *      v8_use_snapshot: 1[m
[32m+[m[32m                 *    }[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.7.7[m
[32m+[m[32m                 */[m
[32m+[m[32m                readonly config: ProcessConfig;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.kill()` method sends the `signal` to the process identified by`pid`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Signal names are strings such as `'SIGINT'` or `'SIGHUP'`. See `Signal Events` and [`kill(2)`](http://man7.org/linux/man-pages/man2/kill.2.html) for more information.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This method will throw an error if the target `pid` does not exist. As a special[m
[32m+[m[32m                 * case, a signal of `0` can be used to test for the existence of a process.[m
[32m+[m[32m                 * Windows platforms will throw an error if the `pid` is used to kill a process[m
[32m+[m[32m                 * group.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Even though the name of this function is `process.kill()`, it is really just a[m
[32m+[m[32m                 * signal sender, like the `kill` system call. The signal sent may do something[m
[32m+[m[32m                 * other than kill the target process.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import process, { kill } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * process.on('SIGHUP', () => {[m
[32m+[m[32m                 *   console.log('Got SIGHUP signal.');[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * setTimeout(() => {[m
[32m+[m[32m                 *   console.log('Exiting.');[m
[32m+[m[32m                 *   process.exit(0);[m
[32m+[m[32m                 * }, 100);[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * kill(process.pid, 'SIGHUP');[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * When `SIGUSR1` is received by a Node.js process, Node.js will start the[m
[32m+[m[32m                 * debugger. See `Signal Events`.[m
[32m+[m[32m                 * @since v0.0.6[m
[32m+[m[32m                 * @param pid A process ID[m
[32m+[m[32m                 * @param [signal='SIGTERM'] The signal to send, either as a string or number.[m
[32m+[m[32m                 */[m
[32m+[m[32m                kill(pid: number, signal?: string | number): true;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Loads the environment configuration from a `.env` file into `process.env`. If[m
[32m+[m[32m                 * the file is not found, error will be thrown.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * To load a specific .env file by specifying its path, use the following code:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { loadEnvFile } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * loadEnvFile('./development.env')[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v20.12.0[m
[32m+[m[32m                 * @param path The path to the .env file[m
[32m+[m[32m                 */[m
[32m+[m[32m                loadEnvFile(path?: string | URL | Buffer): void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.pid` property returns the PID of the process.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { pid } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(`This process is pid ${pid}`);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.1.15[m
[32m+[m[32m                 */[m
[32m+[m[32m                readonly pid: number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.ppid` property returns the PID of the parent of the[m
[32m+[m[32m                 * current process.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { ppid } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(`The parent process is pid ${ppid}`);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v9.2.0, v8.10.0, v6.13.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                readonly ppid: number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.title` property returns the current process title (i.e. returns[m
[32m+[m[32m                 * the current value of `ps`). Assigning a new value to `process.title` modifies[m
[32m+[m[32m                 * the current value of `ps`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * When a new value is assigned, different platforms will impose different maximum[m
[32m+[m[32m                 * length restrictions on the title. Usually such restrictions are quite limited.[m
[32m+[m[32m                 * For instance, on Linux and macOS, `process.title` is limited to the size of the[m
[32m+[m[32m                 * binary name plus the length of the command-line arguments because setting the `process.title` overwrites the `argv` memory of the process. Node.js v0.8[m
[32m+[m[32m                 * allowed for longer process title strings by also overwriting the `environ` memory but that was potentially insecure and confusing in some (rather obscure)[m
[32m+[m[32m                 * cases.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Assigning a value to `process.title` might not result in an accurate label[m
[32m+[m[32m                 * within process manager applications such as macOS Activity Monitor or Windows[m
[32m+[m[32m                 * Services Manager.[m
[32m+[m[32m                 * @since v0.1.104[m
[32m+[m[32m                 */[m
[32m+[m[32m                title: string;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The operating system CPU architecture for which the Node.js binary was compiled.[m
[32m+[m[32m                 * Possible values are: `'arm'`, `'arm64'`, `'ia32'`, `'loong64'`, `'mips'`, `'mipsel'`, `'ppc'`, `'ppc64'`, `'riscv64'`, `'s390'`, `'s390x'`, and `'x64'`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { arch } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(`This processor architecture is ${arch}`);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.5.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                readonly arch: Architecture;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.platform` property returns a string identifying the operating[m
[32m+[m[32m                 * system platform for which the Node.js binary was compiled.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Currently possible values are:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * * `'aix'`[m
[32m+[m[32m                 * * `'darwin'`[m
[32m+[m[32m                 * * `'freebsd'`[m
[32m+[m[32m                 * * `'linux'`[m
[32m+[m[32m                 * * `'openbsd'`[m
[32m+[m[32m                 * * `'sunos'`[m
[32m+[m[32m                 * * `'win32'`[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { platform } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(`This platform is ${platform}`);[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The value `'android'` may also be returned if the Node.js is built on the[m
[32m+[m[32m                 * Android operating system. However, Android support in Node.js [is experimental](https://github.com/nodejs/node/blob/HEAD/BUILDING.md#androidandroid-based-devices-eg-firefox-os).[m
[32m+[m[32m                 * @since v0.1.16[m
[32m+[m[32m                 */[m
[32m+[m[32m                readonly platform: Platform;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.mainModule` property provides an alternative way of retrieving `require.main`. The difference is that if the main module changes at[m
[32m+[m[32m                 * runtime, `require.main` may still refer to the original main module in[m
[32m+[m[32m                 * modules that were required before the change occurred. Generally, it's[m
[32m+[m[32m                 * safe to assume that the two refer to the same module.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * As with `require.main`, `process.mainModule` will be `undefined` if there[m
[32m+[m[32m                 * is no entry script.[m
[32m+[m[32m                 * @since v0.1.17[m
[32m+[m[32m                 * @deprecated Since v14.0.0 - Use `main` instead.[m
[32m+[m[32m                 */[m
[32m+[m[32m                mainModule?: Module | undefined;[m
[32m+[m[32m                memoryUsage: MemoryUsageFn;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Gets the amount of memory available to the process (in bytes) based on[m
[32m+[m[32m                 * limits imposed by the OS. If there is no such constraint, or the constraint[m
[32m+[m[32m                 * is unknown, `0` is returned.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * See [`uv_get_constrained_memory`](https://docs.libuv.org/en/v1.x/misc.html#c.uv_get_constrained_memory) for more[m
[32m+[m[32m                 * information.[m
[32m+[m[32m                 * @since v19.6.0, v18.15.0[m
[32m+[m[32m                 * @experimental[m
[32m+[m[32m                 */[m
[32m+[m[32m                constrainedMemory(): number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Gets the amount of free memory that is still available to the process (in bytes).[m
[32m+[m[32m                 * See [`uv_get_available_memory`](https://nodejs.org/docs/latest-v22.x/api/process.html#processavailablememory) for more information.[m
[32m+[m[32m                 * @experimental[m
[32m+[m[32m                 * @since v20.13.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                availableMemory(): number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.cpuUsage()` method returns the user and system CPU time usage of[m
[32m+[m[32m                 * the current process, in an object with properties `user` and `system`, whose[m
[32m+[m[32m                 * values are microsecond values (millionth of a second). These values measure time[m
[32m+[m[32m                 * spent in user and system code respectively, and may end up being greater than[m
[32m+[m[32m                 * actual elapsed time if multiple CPU cores are performing work for this process.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The result of a previous call to `process.cpuUsage()` can be passed as the[m
[32m+[m[32m                 * argument to the function, to get a diff reading.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { cpuUsage } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * const startUsage = cpuUsage();[m
[32m+[m[32m                 * // { user: 38579, system: 6986 }[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // spin the CPU for 500 milliseconds[m
[32m+[m[32m                 * const now = Date.now();[m
[32m+[m[32m                 * while (Date.now() - now < 500);[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(cpuUsage(startUsage));[m
[32m+[m[32m                 * // { user: 514883, system: 11226 }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v6.1.0[m
[32m+[m[32m                 * @param previousValue A previous return value from calling `process.cpuUsage()`[m
[32m+[m[32m                 */[m
[32m+[m[32m                cpuUsage(previousValue?: CpuUsage): CpuUsage;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * `process.nextTick()` adds `callback` to the "next tick queue". This queue is[m
[32m+[m[32m                 * fully drained after the current operation on the JavaScript stack runs to[m
[32m+[m[32m                 * completion and before the event loop is allowed to continue. It's possible to[m
[32m+[m[32m                 * create an infinite loop if one were to recursively call `process.nextTick()`.[m
[32m+[m[32m                 * See the [Event Loop](https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/#process-nexttick) guide for more background.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { nextTick } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log('start');[m
[32m+[m[32m                 * nextTick(() => {[m
[32m+[m[32m                 *   console.log('nextTick callback');[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * console.log('scheduled');[m
[32m+[m[32m                 * // Output:[m
[32m+[m[32m                 * // start[m
[32m+[m[32m                 * // scheduled[m
[32m+[m[32m                 * // nextTick callback[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This is important when developing APIs in order to give users the opportunity[m
[32m+[m[32m                 * to assign event handlers _after_ an object has been constructed but before any[m
[32m+[m[32m                 * I/O has occurred:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { nextTick } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * function MyThing(options) {[m
[32m+[m[32m                 *   this.setupOptions(options);[m
[32m+[m[32m                 *[m
[32m+[m[32m                 *   nextTick(() => {[m
[32m+[m[32m                 *     this.startDoingStuff();[m
[32m+[m[32m                 *   });[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * const thing = new MyThing();[m
[32m+[m[32m                 * thing.getReadyForStuff();[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * // thing.startDoingStuff() gets called now, not before.[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * It is very important for APIs to be either 100% synchronous or 100%[m
[32m+[m[32m                 * asynchronous. Consider this example:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * // WARNING!  DO NOT USE!  BAD UNSAFE HAZARD![m
[32m+[m[32m                 * function maybeSync(arg, cb) {[m
[32m+[m[32m                 *   if (arg) {[m
[32m+[m[32m                 *     cb();[m
[32m+[m[32m                 *     return;[m
[32m+[m[32m                 *   }[m
[32m+[m[32m                 *[m
[32m+[m[32m                 *   fs.stat('file', cb);[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * This API is hazardous because in the following case:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * const maybeTrue = Math.random() > 0.5;[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * maybeSync(maybeTrue, () => {[m
[32m+[m[32m                 *   foo();[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * bar();[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * It is not clear whether `foo()` or `bar()` will be called first.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The following approach is much better:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { nextTick } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * function definitelyAsync(arg, cb) {[m
[32m+[m[32m                 *   if (arg) {[m
[32m+[m[32m                 *     nextTick(cb);[m
[32m+[m[32m                 *     return;[m
[32m+[m[32m                 *   }[m
[32m+[m[32m                 *[m
[32m+[m[32m                 *   fs.stat('file', cb);[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.1.26[m
[32m+[m[32m                 * @param args Additional arguments to pass when invoking the `callback`[m
[32m+[m[32m                 */[m
[32m+[m[32m                nextTick(callback: Function, ...args: any[]): void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * This API is available through the [--experimental-permission](https://nodejs.org/api/cli.html#--experimental-permission) flag.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * `process.permission` is an object whose methods are used to manage permissions for the current process.[m
[32m+[m[32m                 * Additional documentation is available in the [Permission Model](https://nodejs.org/api/permissions.html#permission-model).[m
[32m+[m[32m                 * @since v20.0.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                permission: ProcessPermission;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.release` property returns an `Object` containing metadata related[m
[32m+[m[32m                 * to the current release, including URLs for the source tarball and headers-only[m
[32m+[m[32m                 * tarball.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * `process.release` contains the following properties:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * {[m
[32m+[m[32m                 *   name: 'node',[m
[32m+[m[32m                 *   lts: 'Hydrogen',[m
[32m+[m[32m                 *   sourceUrl: 'https://nodejs.org/download/release/v18.12.0/node-v18.12.0.tar.gz',[m
[32m+[m[32m                 *   headersUrl: 'https://nodejs.org/download/release/v18.12.0/node-v18.12.0-headers.tar.gz',[m
[32m+[m[32m                 *   libUrl: 'https://nodejs.org/download/release/v18.12.0/win-x64/node.lib'[m
[32m+[m[32m                 * }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * In custom builds from non-release versions of the source tree, only the `name` property may be present. The additional properties should not be[m
[32m+[m[32m                 * relied upon to exist.[m
[32m+[m[32m                 * @since v3.0.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                readonly release: ProcessRelease;[m
[32m+[m[32m                features: {[m
[32m+[m[32m                    inspector: boolean;[m
[32m+[m[32m                    debug: boolean;[m
[32m+[m[32m                    uv: boolean;[m
[32m+[m[32m                    ipv6: boolean;[m
[32m+[m[32m                    tls_alpn: boolean;[m
[32m+[m[32m                    tls_sni: boolean;[m
[32m+[m[32m                    tls_ocsp: boolean;[m
[32m+[m[32m                    tls: boolean;[m
[32m+[m[32m                };[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * `process.umask()` returns the Node.js process's file mode creation mask. Child[m
[32m+[m[32m                 * processes inherit the mask from the parent process.[m
[32m+[m[32m                 * @since v0.1.19[m
[32m+[m[32m                 * @deprecated Calling `process.umask()` with no argument causes the process-wide umask to be written twice. This introduces a race condition between threads, and is a potential[m
[32m+[m[32m                 * security vulnerability. There is no safe, cross-platform alternative API.[m
[32m+[m[32m                 */[m
[32m+[m[32m                umask(): number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * Can only be set if not in worker thread.[m
[32m+[m[32m                 */[m
[32m+[m[32m                umask(mask: string | number): number;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.uptime()` method returns the number of seconds the current Node.js[m
[32m+[m[32m                 * process has been running.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The return value includes fractions of a second. Use `Math.floor()` to get whole[m
[32m+[m[32m                 * seconds.[m
[32m+[m[32m                 * @since v0.5.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                uptime(): number;[m
[32m+[m[32m                hrtime: HRTime;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * If the Node.js process was spawned with an IPC channel, the process.channel property is a reference to the IPC channel.[m
[32m+[m[32m                 * If no IPC channel exists, this property is undefined.[m
[32m+[m[32m                 * @since v7.1.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                channel?: {[m
[32m+[m[32m                    /**[m
[32m+[m[32m                     * This method makes the IPC channel keep the event loop of the process running if .unref() has been called before.[m
[32m+[m[32m                     * @since v7.1.0[m
[32m+[m[32m                     */[m
[32m+[m[32m                    ref(): void;[m
[32m+[m[32m                    /**[m
[32m+[m[32m                     * This method makes the IPC channel not keep the event loop of the process running, and lets it finish even while the channel is open.[m
[32m+[m[32m                     * @since v7.1.0[m
[32m+[m[32m                     */[m
[32m+[m[32m                    unref(): void;[m
[32m+[m[32m                };[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * If Node.js is spawned with an IPC channel, the `process.send()` method can be[m
[32m+[m[32m                 * used to send messages to the parent process. Messages will be received as a `'message'` event on the parent's `ChildProcess` object.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * If Node.js was not spawned with an IPC channel, `process.send` will be `undefined`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The message goes through serialization and parsing. The resulting message might[m
[32m+[m[32m                 * not be the same as what is originally sent.[m
[32m+[m[32m                 * @since v0.5.9[m
[32m+[m[32m                 * @param options used to parameterize the sending of certain types of handles. `options` supports the following properties:[m
[32m+[m[32m                 */[m
[32m+[m[32m                send?([m
[32m+[m[32m                    message: any,[m
[32m+[m[32m                    sendHandle?: any,[m
[32m+[m[32m                    options?: {[m
[32m+[m[32m                        keepOpen?: boolean | undefined;[m
[32m+[m[32m                    },[m
[32m+[m[32m                    callback?: (error: Error | null) => void,[m
[32m+[m[32m                ): boolean;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * If the Node.js process is spawned with an IPC channel (see the `Child Process` and `Cluster` documentation), the `process.disconnect()` method will close the[m
[32m+[m[32m                 * IPC channel to the parent process, allowing the child process to exit gracefully[m
[32m+[m[32m                 * once there are no other connections keeping it alive.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The effect of calling `process.disconnect()` is the same as calling `ChildProcess.disconnect()` from the parent process.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * If the Node.js process was not spawned with an IPC channel, `process.disconnect()` will be `undefined`.[m
[32m+[m[32m                 * @since v0.7.2[m
[32m+[m[32m                 */[m
[32m+[m[32m                disconnect(): void;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * If the Node.js process is spawned with an IPC channel (see the `Child Process` and `Cluster` documentation), the `process.connected` property will return `true` so long as the IPC[m
[32m+[m[32m                 * channel is connected and will return `false` after `process.disconnect()` is called.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * Once `process.connected` is `false`, it is no longer possible to send messages[m
[32m+[m[32m                 * over the IPC channel using `process.send()`.[m
[32m+[m[32m                 * @since v0.7.2[m
[32m+[m[32m                 */[m
[32m+[m[32m                connected: boolean;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.allowedNodeEnvironmentFlags` property is a special,[m
[32m+[m[32m                 * read-only `Set` of flags allowable within the `NODE_OPTIONS` environment variable.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * `process.allowedNodeEnvironmentFlags` extends `Set`, but overrides `Set.prototype.has` to recognize several different possible flag[m
[32m+[m[32m                 * representations. `process.allowedNodeEnvironmentFlags.has()` will[m
[32m+[m[32m                 * return `true` in the following cases:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * * Flags may omit leading single (`-`) or double (`--`) dashes; e.g., `inspect-brk` for `--inspect-brk`, or `r` for `-r`.[m
[32m+[m[32m                 * * Flags passed through to V8 (as listed in `--v8-options`) may replace[m
[32m+[m[32m                 * one or more _non-leading_ dashes for an underscore, or vice-versa;[m
[32m+[m[32m                 * e.g., `--perf_basic_prof`, `--perf-basic-prof`, `--perf_basic-prof`,[m
[32m+[m[32m                 * etc.[m
[32m+[m[32m                 * * Flags may contain one or more equals (`=`) characters; all[m
[32m+[m[32m                 * characters after and including the first equals will be ignored;[m
[32m+[m[32m                 * e.g., `--stack-trace-limit=100`.[m
[32m+[m[32m                 * * Flags _must_ be allowable within `NODE_OPTIONS`.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * When iterating over `process.allowedNodeEnvironmentFlags`, flags will[m
[32m+[m[32m                 * appear only _once_; each will begin with one or more dashes. Flags[m
[32m+[m[32m                 * passed through to V8 will contain underscores instead of non-leading[m
[32m+[m[32m                 * dashes:[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { allowedNodeEnvironmentFlags } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * allowedNodeEnvironmentFlags.forEach((flag) => {[m
[32m+[m[32m                 *   // -r[m
[32m+[m[32m                 *   // --inspect-brk[m
[32m+[m[32m                 *   // --abort_on_uncaught_exception[m
[32m+[m[32m                 *   // ...[m
[32m+[m[32m                 * });[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * The methods `add()`, `clear()`, and `delete()` of`process.allowedNodeEnvironmentFlags` do nothing, and will fail[m
[32m+[m[32m                 * silently.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * If Node.js was compiled _without_ `NODE_OPTIONS` support (shown in {@link config}), `process.allowedNodeEnvironmentFlags` will[m
[32m+[m[32m                 * contain what _would have_ been allowable.[m
[32m+[m[32m                 * @since v10.10.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                allowedNodeEnvironmentFlags: ReadonlySet<string>;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * `process.report` is an object whose methods are used to generate diagnostic reports for the current process.[m
[32m+[m[32m                 * Additional documentation is available in the [report documentation](https://nodejs.org/docs/latest-v22.x/api/report.html).[m
[32m+[m[32m                 * @since v11.8.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                report: ProcessReport;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * ```js[m
[32m+[m[32m                 * import { resourceUsage } from 'node:process';[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * console.log(resourceUsage());[m
[32m+[m[32m                 * /*[m
[32m+[m[32m                 *   Will output:[m
[32m+[m[32m                 *   {[m
[32m+[m[32m                 *     userCPUTime: 82872,[m
[32m+[m[32m                 *     systemCPUTime: 4143,[m
[32m+[m[32m                 *     maxRSS: 33164,[m
[32m+[m[32m                 *     sharedMemorySize: 0,[m
[32m+[m[32m                 *     unsharedDataSize: 0,[m
[32m+[m[32m                 *     unsharedStackSize: 0,[m
[32m+[m[32m                 *     minorPageFault: 2469,[m
[32m+[m[32m                 *     majorPageFault: 0,[m
[32m+[m[32m                 *     swappedOut: 0,[m
[32m+[m[32m                 *     fsRead: 0,[m
[32m+[m[32m                 *     fsWrite: 8,[m
[32m+[m[32m                 *     ipcSent: 0,[m
[32m+[m[32m                 *     ipcReceived: 0,[m
[32m+[m[32m                 *     signalsCount: 0,[m
[32m+[m[32m                 *     voluntaryContextSwitches: 79,[m
[32m+[m[32m                 *     involuntaryContextSwitches: 1[m
[32m+[m[32m                 *   }[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v12.6.0[m
[32m+[m[32m                 * @return the resource usage for the current process. All of these values come from the `uv_getrusage` call which returns a [`uv_rusage_t` struct][uv_rusage_t].[m
[32m+[m[32m                 */[m
[32m+[m[32m                resourceUsage(): ResourceUsage;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The initial value of `process.throwDeprecation` indicates whether the `--throw-deprecation` flag is set on the current Node.js process. `process.throwDeprecation`[m
[32m+[m[32m                 * is mutable, so whether or not deprecation warnings result in errors may be altered at runtime. See the documentation for the 'warning' event and the emitWarning()[m
[32m+[m[32m                 * method for more information.[m
[32m+[m[32m                 *[m
[32m+[m[32m                 * ```bash[m
[32m+[m[32m                 * $ node --throw-deprecation -p "process.throwDeprecation"[m
[32m+[m[32m                 * true[m
[32m+[m[32m                 * $ node -p "process.throwDeprecation"[m
[32m+[m[32m                 * undefined[m
[32m+[m[32m                 * $ node[m
[32m+[m[32m                 * > process.emitWarning('test', 'DeprecationWarning');[m
[32m+[m[32m                 * undefined[m
[32m+[m[32m                 * > (node:26598) DeprecationWarning: test[m
[32m+[m[32m                 * > process.throwDeprecation = true;[m
[32m+[m[32m                 * true[m
[32m+[m[32m                 * > process.emitWarning('test', 'DeprecationWarning');[m
[32m+[m[32m                 * Thrown:[m
[32m+[m[32m                 * [DeprecationWarning: test] { name: 'DeprecationWarning' }[m
[32m+[m[32m                 * ```[m
[32m+[m[32m                 * @since v0.9.12[m
[32m+[m[32m                 */[m
[32m+[m[32m                throwDeprecation: boolean;[m
[32m+[m[32m                /**[m
[32m+[m[32m                 * The `process.traceDeprecation` property indicates whether the `--trace-deprecation` flag is set on the current Node.js process. See the[m
[32m+[m[32m                 * documentation for the `'warning' event` and the `emitWarning() method` for more information about this[m
[32m+[m[32m                 * flag's behavior.[m
[32m+[m[32m                 * @since v0.8.0[m
[32m+[m[32m                 */[m
[32m+[m[32m                traceDeprecation: boolean;[m
[32m+[m[32m                /* EventEmitter */[m
[32m+[m[32m                addListener(event: "beforeExit", listener: BeforeExitListener): this;[m
[32m+[m[32m                addListener(event: "disconnect", listener: DisconnectListener): this;[m
[32m+[m[32m                addListener(event: "exit", listener: ExitListener): this;[m
[32m+[m[32m                addListener(event: "rejectionHandled", listener: RejectionHandledListener): this;[m
[32m+[m[32m                addListener(event: "uncaughtException", listener: UncaughtExceptionListener): this;[m
[32m+[m[32m                addListener(event: "uncaughtExceptionMonitor", listener: UncaughtExceptionListener): this;[m
[32m+[m[32m                addListener(event: "unhandledRejection", listener: UnhandledRejectionListener): this;[m
[32m+[m[32m                addListener(event: "warning", listener: WarningListener): this;[m
[32m+[m[32m                addListener(event: "message", listener: MessageListener): this;[m
[32m+[m[32m                addListener(event: Signals, listener: SignalsListener): this;[m
[32m+[m[32m                addListener(event: "multipleResolves", listener: MultipleResolveListener): this;[m
[32m+[m[32m                addListener(event: "worker", listener: WorkerListener): this;[m
[32m+[m[32m                emit(event: "beforeExit", code: number): boolean;[m
[32m+[m[32m                emit(event: "disconnect"): boolean;[m
[32m+[m[32m                emit(event: "exit", code: number): boolean;[m
[32m+[m[32m                emit(event: "rejectionHandled", promise: Promise<unknown>): boolean;[m
[32m+[m[32m                emit(event: "uncaughtException", error: Error): boolean;[m
[32m+[m[32m                emit(event: "uncaughtExceptionMonitor", error: Error): boolean;[m
[32m+[m[32m                emit(event: "unhandledRejection", reason: unknown, promise: Promise<unknown>): boolean;[m
[32m+[m[32m                emit(event: "warning", warning: Error): boolean;[m
[32m+[m[32m                emit(event: "message", message: unknown, sendHandle: unknown): this;[m
[32m+[m[32m                emit(event: Signals, signal?: Signals): boolean;[m
[32m+[m[32m                emit([m
[32m+[m[32m                    event: "multipleResolves",[m
[32m+[m[32m                    type: MultipleResolveType,[m
[32m+[m[32m                    promise: Promise<unknown>,[m
[32m+[m[32m                    value: unknown,[m
[32m+[m[32m                ): this;[m
[32m+[m[32m                emit(event: "worker", listener: WorkerListener): this;[m
[32m+[m[32m                on(event: "beforeExit", listener: BeforeExitListener): this;[m
[32m+[m[32m                on(event: "disconnect", listener: DisconnectListener): this;[m
[32m+[m[32m                on(event: "exit", listener: ExitListener): this;[m
[32m+[m[32m                on(event: "rejectionHandled", listener: RejectionHandledListener): this;[m
[32m+[m[32m                on(event: "uncaughtException", listener: UncaughtExceptionListener): this;[m
[32m+[m[32m                on(event: "uncaughtExceptionMonitor", listener: UncaughtExceptionListener): this;[m
[32m+[m[32m                on(event: "unhandledRejection", listener: UnhandledRejectionListener): this;[m
[32m+[m[32m                on(event: "warning", listener: WarningListener): this;[m
[32m+[m[32m                on(event: "message", listener: MessageListener): this;[m
[32m+[m[32m                on(event: Signals, listener: SignalsListener): this;[m
[32m+[m[32m                on(event: "multipleResolves", listener: MultipleResolveListener): this;[m
[32m+[m[32m                on(event: "worker", listener: WorkerListener): this;[m
[32m+[m[32m                on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m                once(event: "beforeExit", listener: BeforeExitListener): this;[m
[32m+[m[32m                once(event: "disconnect", listener: DisconnectListener): this;[m
[32m+[m[32m                once(event: "exit", listener: ExitListener): this;[m
[32m+[m[32m                once(event: "rejectionHandled", listener: RejectionHandledListener): this;[m
[32m+[m[32m                once(event: "uncaughtException", listener: UncaughtExceptionListener): this;[m
[32m+[m[32m                once(event: "uncaughtExceptionMonitor", listener: UncaughtExceptionListener): this;[m
[32m+[m[32m                once(event: "unhandledRejection", listener: UnhandledRejectionListener): this;[m
[32m+[m[32m                once(event: "warning", listener: WarningListener): this;[m
[32m+[m[32m                once(event: "message", listener: MessageListener): this;[m
[32m+[m[32m                once(event: Signals, listener: SignalsListener): this;[m
[32m+[m[32m                once(event: "multipleResolves", listener: MultipleResolveListener): this;[m
[32m+[m[32m                once(event: "worker", listener: WorkerListener): this;[m
[32m+[m[32m                once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m                prependListener(event: "beforeExit", listener: BeforeExitListener): this;[m
[32m+[m[32m                prependListener(event: "disconnect", listener: DisconnectListener): this;[m
[32m+[m[32m                prependListener(event: "exit", listener: ExitListener): this;[m
[32m+[m[32m                prependListener(event: "rejectionHandled", listener: RejectionHandledListener): this;[m
[32m+[m[32m                prependListener(event: "uncaughtException", listener: UncaughtExceptionListener): this;[m
[32m+[m[32m                prependListener(event: "uncaughtExceptionMonitor", listener: UncaughtExceptionListener): this;[m
[32m+[m[32m                prependListener(event: "unhandledRejection", listener: UnhandledRejectionListener): this;[m
[32m+[m[32m                prependListener(event: "warning", listener: WarningListener): this;[m
[32m+[m[32m                prependListener(event: "message", listener: MessageListener): this;[m
[32m+[m[32m                prependListener(event: Signals, listener: SignalsListener): this;[m
[32m+[m[32m                prependListener(event: "multipleResolves", listener: MultipleResolveListener): this;[m
[32m+[m[32m                prependListener(event: "worker", listener: WorkerListener): this;[m
[32m+[m[32m                prependOnceListener(event: "beforeExit", listener: BeforeExitListener): this;[m
[32m+[m[32m                prependOnceListener(event: "disconnect", listener: DisconnectListener): this;[m
[32m+[m[32m                prependOnceListener(event: "exit", listener: ExitListener): this;[m
[32m+[m[32m                prependOnceListener(event: "rejectionHandled", listener: RejectionHandledListener): this;[m
[32m+[m[32m                prependOnceListener(event: "uncaughtException", listener: UncaughtExceptionListener): this;[m
[32m+[m[32m                prependOnceListener(event: "uncaughtExceptionMonitor", listener: UncaughtExceptionListener): this;[m
[32m+[m[32m                prependOnceListener(event: "unhandledRejection", listener: UnhandledRejectionListener): this;[m
[32m+[m[32m                prependOnceListener(event: "warning", listener: WarningListener): this;[m
[32m+[m[32m                prependOnceListener(event: "message", listener: MessageListener): this;[m
[32m+[m[32m                prependOnceListener(event: Signals, listener: SignalsListener): this;[m
[32m+[m[32m                prependOnceListener(event: "multipleResolves", listener: MultipleResolveListener): this;[m
[32m+[m[32m                prependOnceListener(event: "worker", listener: WorkerListener): this;[m
[32m+[m[32m                listeners(event: "beforeExit"): BeforeExitListener[];[m
[32m+[m[32m                listeners(event: "disconnect"): DisconnectListener[];[m
[32m+[m[32m                listeners(event: "exit"): ExitListener[];[m
[32m+[m[32m                listeners(event: "rejectionHandled"): RejectionHandledListener[];[m
[32m+[m[32m                listeners(event: "uncaughtException"): UncaughtExceptionListener[];[m
[32m+[m[32m                listeners(event: "uncaughtExceptionMonitor"): UncaughtExceptionListener[];[m
[32m+[m[32m                listeners(event: "unhandledRejection"): UnhandledRejectionListener[];[m
[32m+[m[32m                listeners(event: "warning"): WarningListener[];[m
[32m+[m[32m                listeners(event: "message"): MessageListener[];[m
[32m+[m[32m                listeners(event: Signals): SignalsListener[];[m
[32m+[m[32m                listeners(event: "multipleResolves"): MultipleResolveListener[];[m
[32m+[m[32m                listeners(event: "worker"): WorkerListener[];[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    export = process;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:process" {[m
[32m+[m[32m    import process = require("process");[m
[32m+[m[32m    export = process;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/punycode.d.ts b/node_modules/@types/node/punycode.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..e788577[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/punycode.d.ts[m
[36m@@ -0,0 +1,117 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * **The version of the punycode module bundled in Node.js is being deprecated. **In a future major version of Node.js this module will be removed. Users[m
[32m+[m[32m * currently depending on the `punycode` module should switch to using the[m
[32m+[m[32m * userland-provided [Punycode.js](https://github.com/bestiejs/punycode.js) module instead. For punycode-based URL[m
[32m+[m[32m * encoding, see `url.domainToASCII` or, more generally, the `WHATWG URL API`.[m
[32m+[m[32m *[m
[32m+[m[32m * The `punycode` module is a bundled version of the [Punycode.js](https://github.com/bestiejs/punycode.js) module. It[m
[32m+[m[32m * can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const punycode = require('punycode');[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * [Punycode](https://tools.ietf.org/html/rfc3492) is a character encoding scheme defined by RFC 3492 that is[m
[32m+[m[32m * primarily intended for use in Internationalized Domain Names. Because host[m
[32m+[m[32m * names in URLs are limited to ASCII characters only, Domain Names that contain[m
[32m+[m[32m * non-ASCII characters must be converted into ASCII using the Punycode scheme.[m
[32m+[m[32m * For instance, the Japanese character that translates into the English word, `'example'` is `'例'`. The Internationalized Domain Name, `'例.com'` (equivalent[m
[32m+[m[32m * to `'example.com'`) is represented by Punycode as the ASCII string `'xn--fsq.com'`.[m
[32m+[m[32m *[m
[32m+[m[32m * The `punycode` module provides a simple implementation of the Punycode standard.[m
[32m+[m[32m *[m
[32m+[m[32m * The `punycode` module is a third-party dependency used by Node.js and[m
[32m+[m[32m * made available to developers as a convenience. Fixes or other modifications to[m
[32m+[m[32m * the module must be directed to the [Punycode.js](https://github.com/bestiejs/punycode.js) project.[m
[32m+[m[32m * @deprecated Since v7.0.0 - Deprecated[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/punycode.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "punycode" {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `punycode.decode()` method converts a [Punycode](https://tools.ietf.org/html/rfc3492) string of ASCII-only[m
[32m+[m[32m     * characters to the equivalent string of Unicode codepoints.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * punycode.decode('maana-pta'); // 'mañana'[m
[32m+[m[32m     * punycode.decode('--dqo34k'); // '☃-⌘'[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.5.1[m
[32m+[m[32m     */[m
[32m+[m[32m    function decode(string: string): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `punycode.encode()` method converts a string of Unicode codepoints to a [Punycode](https://tools.ietf.org/html/rfc3492) string of ASCII-only characters.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * punycode.encode('mañana'); // 'maana-pta'[m
[32m+[m[32m     * punycode.encode('☃-⌘'); // '--dqo34k'[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.5.1[m
[32m+[m[32m     */[m
[32m+[m[32m    function encode(string: string): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `punycode.toUnicode()` method converts a string representing a domain name[m
[32m+[m[32m     * containing [Punycode](https://tools.ietf.org/html/rfc3492) encoded characters into Unicode. Only the [Punycode](https://tools.ietf.org/html/rfc3492) encoded parts of the domain name are be[m
[32m+[m[32m     * converted.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * // decode domain names[m
[32m+[m[32m     * punycode.toUnicode('xn--maana-pta.com'); // 'mañana.com'[m
[32m+[m[32m     * punycode.toUnicode('xn----dqo34k.com');  // '☃-⌘.com'[m
[32m+[m[32m     * punycode.toUnicode('example.com');       // 'example.com'[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.6.1[m
[32m+[m[32m     */[m
[32m+[m[32m    function toUnicode(domain: string): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `punycode.toASCII()` method converts a Unicode string representing an[m
[32m+[m[32m     * Internationalized Domain Name to [Punycode](https://tools.ietf.org/html/rfc3492). Only the non-ASCII parts of the[m
[32m+[m[32m     * domain name will be converted. Calling `punycode.toASCII()` on a string that[m
[32m+[m[32m     * already only contains ASCII characters will have no effect.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * // encode domain names[m
[32m+[m[32m     * punycode.toASCII('mañana.com');  // 'xn--maana-pta.com'[m
[32m+[m[32m     * punycode.toASCII('☃-⌘.com');   // 'xn----dqo34k.com'[m
[32m+[m[32m     * punycode.toASCII('example.com'); // 'example.com'[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.6.1[m
[32m+[m[32m     */[m
[32m+[m[32m    function toASCII(domain: string): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @deprecated since v7.0.0[m
[32m+[m[32m     * The version of the punycode module bundled in Node.js is being deprecated.[m
[32m+[m[32m     * In a future major version of Node.js this module will be removed.[m
[32m+[m[32m     * Users currently depending on the punycode module should switch to using[m
[32m+[m[32m     * the userland-provided Punycode.js module instead.[m
[32m+[m[32m     */[m
[32m+[m[32m    const ucs2: ucs2;[m
[32m+[m[32m    interface ucs2 {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated since v7.0.0[m
[32m+[m[32m         * The version of the punycode module bundled in Node.js is being deprecated.[m
[32m+[m[32m         * In a future major version of Node.js this module will be removed.[m
[32m+[m[32m         * Users currently depending on the punycode module should switch to using[m
[32m+[m[32m         * the userland-provided Punycode.js module instead.[m
[32m+[m[32m         */[m
[32m+[m[32m        decode(string: string): number[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated since v7.0.0[m
[32m+[m[32m         * The version of the punycode module bundled in Node.js is being deprecated.[m
[32m+[m[32m         * In a future major version of Node.js this module will be removed.[m
[32m+[m[32m         * Users currently depending on the punycode module should switch to using[m
[32m+[m[32m         * the userland-provided Punycode.js module instead.[m
[32m+[m[32m         */[m
[32m+[m[32m        encode(codePoints: readonly number[]): string;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @deprecated since v7.0.0[m
[32m+[m[32m     * The version of the punycode module bundled in Node.js is being deprecated.[m
[32m+[m[32m     * In a future major version of Node.js this module will be removed.[m
[32m+[m[32m     * Users currently depending on the punycode module should switch to using[m
[32m+[m[32m     * the userland-provided Punycode.js module instead.[m
[32m+[m[32m     */[m
[32m+[m[32m    const version: string;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:punycode" {[m
[32m+[m[32m    export * from "punycode";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/querystring.d.ts b/node_modules/@types/node/querystring.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..cb919ca[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/querystring.d.ts[m
[36m@@ -0,0 +1,153 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:querystring` module provides utilities for parsing and formatting URL[m
[32m+[m[32m * query strings. It can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const querystring = require('node:querystring');[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * `querystring` is more performant than `URLSearchParams` but is not a[m
[32m+[m[32m * standardized API. Use `URLSearchParams` when performance is not critical or[m
[32m+[m[32m * when compatibility with browser code is desirable.[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/querystring.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "querystring" {[m
[32m+[m[32m    interface StringifyOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The function to use when converting URL-unsafe characters to percent-encoding in the query string.[m
[32m+[m[32m         * @default `querystring.escape()`[m
[32m+[m[32m         */[m
[32m+[m[32m        encodeURIComponent?: ((str: string) => string) | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ParseOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specifies the maximum number of keys to parse. Specify `0` to remove key counting limitations.[m
[32m+[m[32m         * @default 1000[m
[32m+[m[32m         */[m
[32m+[m[32m        maxKeys?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The function to use when decoding percent-encoded characters in the query string.[m
[32m+[m[32m         * @default `querystring.unescape()`[m
[32m+[m[32m         */[m
[32m+[m[32m        decodeURIComponent?: ((str: string) => string) | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ParsedUrlQuery extends NodeJS.Dict<string | string[]> {}[m
[32m+[m[32m    interface ParsedUrlQueryInput extends[m
[32m+[m[32m        NodeJS.Dict<[m
[32m+[m[32m            | string[m
[32m+[m[32m            | number[m
[32m+[m[32m            | boolean[m
[32m+[m[32m            | readonly string[][m
[32m+[m[32m            | readonly number[][m
[32m+[m[32m            | readonly boolean[][m
[32m+[m[32m            | null[m
[32m+[m[32m        >[m
[32m+[m[32m    {}[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `querystring.stringify()` method produces a URL query string from a[m
[32m+[m[32m     * given `obj` by iterating through the object's "own properties".[m
[32m+[m[32m     *[m
[32m+[m[32m     * It serializes the following types of values passed in `obj`: [string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type) |[m
[32m+[m[32m     * [number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type) |[m
[32m+[m[32m     * [bigint](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt) |[m
[32m+[m[32m     * [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type) |[m
[32m+[m[32m     * [string\[\]](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type) |[m
[32m+[m[32m     * [number\[\]](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type) |[m
[32m+[m[32m     * [bigint\[\]](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt) |[m
[32m+[m[32m     * [boolean\[\]](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type) The numeric values must be finite. Any other input values will be coerced to[m
[32m+[m[32m     * empty strings.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * querystring.stringify({ foo: 'bar', baz: ['qux', 'quux'], corge: '' });[m
[32m+[m[32m     * // Returns 'foo=bar&#x26;baz=qux&#x26;baz=quux&#x26;corge='[m
[32m+[m[32m     *[m
[32m+[m[32m     * querystring.stringify({ foo: 'bar', baz: 'qux' }, ';', ':');[m
[32m+[m[32m     * // Returns 'foo:bar;baz:qux'[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * By default, characters requiring percent-encoding within the query string will[m
[32m+[m[32m     * be encoded as UTF-8\. If an alternative encoding is required, then an alternative `encodeURIComponent` option will need to be specified:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * // Assuming gbkEncodeURIComponent function already exists,[m
[32m+[m[32m     *[m
[32m+[m[32m     * querystring.stringify({ w: '中文', foo: 'bar' }, null, null,[m
[32m+[m[32m     *                       { encodeURIComponent: gbkEncodeURIComponent });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.25[m
[32m+[m[32m     * @param obj The object to serialize into a URL query string[m
[32m+[m[32m     * @param [sep='&'] The substring used to delimit key and value pairs in the query string.[m
[32m+[m[32m     * @param [eq='='] . The substring used to delimit keys and values in the query string.[m
[32m+[m[32m     */[m
[32m+[m[32m    function stringify(obj?: ParsedUrlQueryInput, sep?: string, eq?: string, options?: StringifyOptions): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `querystring.parse()` method parses a URL query string (`str`) into a[m
[32m+[m[32m     * collection of key and value pairs.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For example, the query string `'foo=bar&#x26;abc=xyz&#x26;abc=123'` is parsed into:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```json[m
[32m+[m[32m     * {[m
[32m+[m[32m     *   "foo": "bar",[m
[32m+[m[32m     *   "abc": ["xyz", "123"][m
[32m+[m[32m     * }[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The object returned by the `querystring.parse()` method _does not_ prototypically inherit from the JavaScript `Object`. This means that typical `Object` methods such as `obj.toString()`,[m
[32m+[m[32m     * `obj.hasOwnProperty()`, and others[m
[32m+[m[32m     * are not defined and _will not work_.[m
[32m+[m[32m     *[m
[32m+[m[32m     * By default, percent-encoded characters within the query string will be assumed[m
[32m+[m[32m     * to use UTF-8 encoding. If an alternative character encoding is used, then an[m
[32m+[m[32m     * alternative `decodeURIComponent` option will need to be specified:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * // Assuming gbkDecodeURIComponent function already exists...[m
[32m+[m[32m     *[m
[32m+[m[32m     * querystring.parse('w=%D6%D0%CE%C4&#x26;foo=bar', null, null,[m
[32m+[m[32m     *                   { decodeURIComponent: gbkDecodeURIComponent });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.25[m
[32m+[m[32m     * @param str The URL query string to parse[m
[32m+[m[32m     * @param [sep='&'] The substring used to delimit key and value pairs in the query string.[m
[32m+[m[32m     * @param [eq='='] The substring used to delimit keys and values in the query string.[m
[32m+[m[32m     */[m
[32m+[m[32m    function parse(str: string, sep?: string, eq?: string, options?: ParseOptions): ParsedUrlQuery;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The querystring.encode() function is an alias for querystring.stringify().[m
[32m+[m[32m     */[m
[32m+[m[32m    const encode: typeof stringify;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The querystring.decode() function is an alias for querystring.parse().[m
[32m+[m[32m     */[m
[32m+[m[32m    const decode: typeof parse;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `querystring.escape()` method performs URL percent-encoding on the given `str` in a manner that is optimized for the specific requirements of URL[m
[32m+[m[32m     * query strings.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `querystring.escape()` method is used by `querystring.stringify()` and is[m
[32m+[m[32m     * generally not expected to be used directly. It is exported primarily to allow[m
[32m+[m[32m     * application code to provide a replacement percent-encoding implementation if[m
[32m+[m[32m     * necessary by assigning `querystring.escape` to an alternative function.[m
[32m+[m[32m     * @since v0.1.25[m
[32m+[m[32m     */[m
[32m+[m[32m    function escape(str: string): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `querystring.unescape()` method performs decoding of URL percent-encoded[m
[32m+[m[32m     * characters on the given `str`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `querystring.unescape()` method is used by `querystring.parse()` and is[m
[32m+[m[32m     * generally not expected to be used directly. It is exported primarily to allow[m
[32m+[m[32m     * application code to provide a replacement decoding implementation if[m
[32m+[m[32m     * necessary by assigning `querystring.unescape` to an alternative function.[m
[32m+[m[32m     *[m
[32m+[m[32m     * By default, the `querystring.unescape()` method will attempt to use the[m
[32m+[m[32m     * JavaScript built-in `decodeURIComponent()` method to decode. If that fails,[m
[32m+[m[32m     * a safer equivalent that does not throw on malformed URLs will be used.[m
[32m+[m[32m     * @since v0.1.25[m
[32m+[m[32m     */[m
[32m+[m[32m    function unescape(str: string): string;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:querystring" {[m
[32m+[m[32m    export * from "querystring";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/readline.d.ts b/node_modules/@types/node/readline.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..b40c61f[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/readline.d.ts[m
[36m@@ -0,0 +1,540 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:readline` module provides an interface for reading data from a [Readable](https://nodejs.org/docs/latest-v22.x/api/stream.html#readable-streams) stream[m
[32m+[m[32m * (such as [`process.stdin`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstdin)) one line at a time.[m
[32m+[m[32m *[m
[32m+[m[32m * To use the promise-based APIs:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import * as readline from 'node:readline/promises';[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * To use the callback and sync APIs:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import * as readline from 'node:readline';[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * The following simple example illustrates the basic use of the `node:readline` module.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import * as readline from 'node:readline/promises';[m
[32m+[m[32m * import { stdin as input, stdout as output } from 'node:process';[m
[32m+[m[32m *[m
[32m+[m[32m * const rl = readline.createInterface({ input, output });[m
[32m+[m[32m *[m
[32m+[m[32m * const answer = await rl.question('What do you think of Node.js? ');[m
[32m+[m[32m *[m
[32m+[m[32m * console.log(`Thank you for your valuable feedback: ${answer}`);[m
[32m+[m[32m *[m
[32m+[m[32m * rl.close();[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * Once this code is invoked, the Node.js application will not terminate until the `readline.Interface` is closed because the interface waits for data to be[m
[32m+[m[32m * received on the `input` stream.[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/readline.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "readline" {[m
[32m+[m[32m    import { Abortable, EventEmitter } from "node:events";[m
[32m+[m[32m    import * as promises from "node:readline/promises";[m
[32m+[m[32m    export { promises };[m
[32m+[m[32m    export interface Key {[m
[32m+[m[32m        sequence?: string | undefined;[m
[32m+[m[32m        name?: string | undefined;[m
[32m+[m[32m        ctrl?: boolean | undefined;[m
[32m+[m[32m        meta?: boolean | undefined;[m
[32m+[m[32m        shift?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Instances of the `readline.Interface` class are constructed using the `readline.createInterface()` method. Every instance is associated with a[m
[32m+[m[32m     * single `input` [Readable](https://nodejs.org/docs/latest-v22.x/api/stream.html#readable-streams) stream and a single `output` [Writable](https://nodejs.org/docs/latest-v22.x/api/stream.html#writable-streams) stream.[m
[32m+[m[32m     * The `output` stream is used to print prompts for user input that arrives on,[m
[32m+[m[32m     * and is read from, the `input` stream.[m
[32m+[m[32m     * @since v0.1.104[m
[32m+[m[32m     */[m
[32m+[m[32m    export class Interface extends EventEmitter {[m
[32m+[m[32m        readonly terminal: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The current input data being processed by node.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This can be used when collecting input from a TTY stream to retrieve the[m
[32m+[m[32m         * current value that has been processed thus far, prior to the `line` event[m
[32m+[m[32m         * being emitted. Once the `line` event has been emitted, this property will[m
[32m+[m[32m         * be an empty string.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Be aware that modifying the value during the instance runtime may have[m
[32m+[m[32m         * unintended consequences if `rl.cursor` is not also controlled.[m
[32m+[m[32m         *[m
[32m+[m[32m         * **If not using a TTY stream for input, use the `'line'` event.**[m
[32m+[m[32m         *[m
[32m+[m[32m         * One possible use case would be as follows:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const values = ['lorem ipsum', 'dolor sit amet'];[m
[32m+[m[32m         * const rl = readline.createInterface(process.stdin);[m
[32m+[m[32m         * const showResults = debounce(() => {[m
[32m+[m[32m         *   console.log([m
[32m+[m[32m         *     '\n',[m
[32m+[m[32m         *     values.filter((val) => val.startsWith(rl.line)).join(' '),[m
[32m+[m[32m         *   );[m
[32m+[m[32m         * }, 300);[m
[32m+[m[32m         * process.stdin.on('keypress', (c, k) => {[m
[32m+[m[32m         *   showResults();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.1.98[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly line: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The cursor position relative to `rl.line`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This will track where the current cursor lands in the input string, when[m
[32m+[m[32m         * reading input from a TTY stream. The position of cursor determines the[m
[32m+[m[32m         * portion of the input string that will be modified as input is processed,[m
[32m+[m[32m         * as well as the column where the terminal caret will be rendered.[m
[32m+[m[32m         * @since v0.1.98[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly cursor: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * NOTE: According to the documentation:[m
[32m+[m[32m         *[m
[32m+[m[32m         * > Instances of the `readline.Interface` class are constructed using the[m
[32m+[m[32m         * > `readline.createInterface()` method.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/readline.html#class-interfaceconstructor[m
[32m+[m[32m         */[m
[32m+[m[32m        protected constructor([m
[32m+[m[32m            input: NodeJS.ReadableStream,[m
[32m+[m[32m            output?: NodeJS.WritableStream,[m
[32m+[m[32m            completer?: Completer | AsyncCompleter,[m
[32m+[m[32m            terminal?: boolean,[m
[32m+[m[32m        );[m
[32m+[m[32m        /**[m
[32m+[m[32m         * NOTE: According to the documentation:[m
[32m+[m[32m         *[m
[32m+[m[32m         * > Instances of the `readline.Interface` class are constructed using the[m
[32m+[m[32m         * > `readline.createInterface()` method.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/readline.html#class-interfaceconstructor[m
[32m+[m[32m         */[m
[32m+[m[32m        protected constructor(options: ReadLineOptions);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.getPrompt()` method returns the current prompt used by `rl.prompt()`.[m
[32m+[m[32m         * @since v15.3.0, v14.17.0[m
[32m+[m[32m         * @return the current prompt string[m
[32m+[m[32m         */[m
[32m+[m[32m        getPrompt(): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.setPrompt()` method sets the prompt that will be written to `output` whenever `rl.prompt()` is called.[m
[32m+[m[32m         * @since v0.1.98[m
[32m+[m[32m         */[m
[32m+[m[32m        setPrompt(prompt: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.prompt()` method writes the `Interface` instances configured`prompt` to a new line in `output` in order to provide a user with a new[m
[32m+[m[32m         * location at which to provide input.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When called, `rl.prompt()` will resume the `input` stream if it has been[m
[32m+[m[32m         * paused.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `Interface` was created with `output` set to `null` or `undefined` the prompt is not written.[m
[32m+[m[32m         * @since v0.1.98[m
[32m+[m[32m         * @param preserveCursor If `true`, prevents the cursor placement from being reset to `0`.[m
[32m+[m[32m         */[m
[32m+[m[32m        prompt(preserveCursor?: boolean): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.question()` method displays the `query` by writing it to the `output`,[m
[32m+[m[32m         * waits for user input to be provided on `input`, then invokes the `callback` function passing the provided input as the first argument.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When called, `rl.question()` will resume the `input` stream if it has been[m
[32m+[m[32m         * paused.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `Interface` was created with `output` set to `null` or `undefined` the `query` is not written.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `callback` function passed to `rl.question()` does not follow the typical[m
[32m+[m[32m         * pattern of accepting an `Error` object or `null` as the first argument.[m
[32m+[m[32m         * The `callback` is called with the provided answer as the only argument.[m
[32m+[m[32m         *[m
[32m+[m[32m         * An error will be thrown if calling `rl.question()` after `rl.close()`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example usage:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * rl.question('What is your favorite food? ', (answer) => {[m
[32m+[m[32m         *   console.log(`Oh, so your favorite food is ${answer}`);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Using an `AbortController` to cancel a question.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const ac = new AbortController();[m
[32m+[m[32m         * const signal = ac.signal;[m
[32m+[m[32m         *[m
[32m+[m[32m         * rl.question('What is your favorite food? ', { signal }, (answer) => {[m
[32m+[m[32m         *   console.log(`Oh, so your favorite food is ${answer}`);[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * signal.addEventListener('abort', () => {[m
[32m+[m[32m         *   console.log('The food question timed out');[m
[32m+[m[32m         * }, { once: true });[m
[32m+[m[32m         *[m
[32m+[m[32m         * setTimeout(() => ac.abort(), 10000);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.3.3[m
[32m+[m[32m         * @param query A statement or query to write to `output`, prepended to the prompt.[m
[32m+[m[32m         * @param callback A callback function that is invoked with the user's input in response to the `query`.[m
[32m+[m[32m         */[m
[32m+[m[32m        question(query: string, callback: (answer: string) => void): void;[m
[32m+[m[32m        question(query: string, options: Abortable, callback: (answer: string) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.pause()` method pauses the `input` stream, allowing it to be resumed[m
[32m+[m[32m         * later if necessary.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling `rl.pause()` does not immediately pause other events (including `'line'`) from being emitted by the `Interface` instance.[m
[32m+[m[32m         * @since v0.3.4[m
[32m+[m[32m         */[m
[32m+[m[32m        pause(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.resume()` method resumes the `input` stream if it has been paused.[m
[32m+[m[32m         * @since v0.3.4[m
[32m+[m[32m         */[m
[32m+[m[32m        resume(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.close()` method closes the `Interface` instance and[m
[32m+[m[32m         * relinquishes control over the `input` and `output` streams. When called,[m
[32m+[m[32m         * the `'close'` event will be emitted.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling `rl.close()` does not immediately stop other events (including `'line'`)[m
[32m+[m[32m         * from being emitted by the `Interface` instance.[m
[32m+[m[32m         * @since v0.1.98[m
[32m+[m[32m         */[m
[32m+[m[32m        close(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.write()` method will write either `data` or a key sequence identified[m
[32m+[m[32m         * by `key` to the `output`. The `key` argument is supported only if `output` is[m
[32m+[m[32m         * a `TTY` text terminal. See `TTY keybindings` for a list of key[m
[32m+[m[32m         * combinations.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If `key` is specified, `data` is ignored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When called, `rl.write()` will resume the `input` stream if it has been[m
[32m+[m[32m         * paused.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `Interface` was created with `output` set to `null` or `undefined` the `data` and `key` are not written.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * rl.write('Delete this!');[m
[32m+[m[32m         * // Simulate Ctrl+U to delete the line written previously[m
[32m+[m[32m         * rl.write(null, { ctrl: true, name: 'u' });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `rl.write()` method will write the data to the `readline` `Interface`'s `input` _as if it were provided by the user_.[m
[32m+[m[32m         * @since v0.1.98[m
[32m+[m[32m         */[m
[32m+[m[32m        write(data: string | Buffer, key?: Key): void;[m
[32m+[m[32m        write(data: undefined | null | string | Buffer, key: Key): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the real position of the cursor in relation to the input[m
[32m+[m[32m         * prompt + string. Long input (wrapping) strings, as well as multiple[m
[32m+[m[32m         * line prompts are included in the calculations.[m
[32m+[m[32m         * @since v13.5.0, v12.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        getCursorPos(): CursorPos;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         * 1. close[m
[32m+[m[32m         * 2. line[m
[32m+[m[32m         * 3. pause[m
[32m+[m[32m         * 4. resume[m
[32m+[m[32m         * 5. SIGCONT[m
[32m+[m[32m         * 6. SIGINT[m
[32m+[m[32m         * 7. SIGTSTP[m
[32m+[m[32m         * 8. history[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "line", listener: (input: string) => void): this;[m
[32m+[m[32m        addListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "SIGCONT", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "SIGINT", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "SIGTSTP", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "history", listener: (history: string[]) => void): this;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "line", input: string): boolean;[m
[32m+[m[32m        emit(event: "pause"): boolean;[m
[32m+[m[32m        emit(event: "resume"): boolean;[m
[32m+[m[32m        emit(event: "SIGCONT"): boolean;[m
[32m+[m[32m        emit(event: "SIGINT"): boolean;[m
[32m+[m[32m        emit(event: "SIGTSTP"): boolean;[m
[32m+[m[32m        emit(event: "history", history: string[]): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "line", listener: (input: string) => void): this;[m
[32m+[m[32m        on(event: "pause", listener: () => void): this;[m
[32m+[m[32m        on(event: "resume", listener: () => void): this;[m
[32m+[m[32m        on(event: "SIGCONT", listener: () => void): this;[m
[32m+[m[32m        on(event: "SIGINT", listener: () => void): this;[m
[32m+[m[32m        on(event: "SIGTSTP", listener: () => void): this;[m
[32m+[m[32m        on(event: "history", listener: (history: string[]) => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "line", listener: (input: string) => void): this;[m
[32m+[m[32m        once(event: "pause", listener: () => void): this;[m
[32m+[m[32m        once(event: "resume", listener: () => void): this;[m
[32m+[m[32m        once(event: "SIGCONT", listener: () => void): this;[m
[32m+[m[32m        once(event: "SIGINT", listener: () => void): this;[m
[32m+[m[32m        once(event: "SIGTSTP", listener: () => void): this;[m
[32m+[m[32m        once(event: "history", listener: (history: string[]) => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "line", listener: (input: string) => void): this;[m
[32m+[m[32m        prependListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "SIGCONT", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "SIGINT", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "SIGTSTP", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "history", listener: (history: string[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "line", listener: (input: string) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "SIGCONT", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "SIGINT", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "SIGTSTP", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "history", listener: (history: string[]) => void): this;[m
[32m+[m[32m        [Symbol.asyncIterator](): AsyncIterableIterator<string>;[m
[32m+[m[32m    }[m
[32m+[m[32m    export type ReadLine = Interface; // type forwarded for backwards compatibility[m
[32m+[m[32m    export type Completer = (line: string) => CompleterResult;[m
[32m+[m[32m    export type AsyncCompleter = ([m
[32m+[m[32m        line: string,[m
[32m+[m[32m        callback: (err?: null | Error, result?: CompleterResult) => void,[m
[32m+[m[32m    ) => void;[m
[32m+[m[32m    export type CompleterResult = [string[], string];[m
[32m+[m[32m    export interface ReadLineOptions {[m
[32m+[m[32m        input: NodeJS.ReadableStream;[m
[32m+[m[32m        output?: NodeJS.WritableStream | undefined;[m
[32m+[m[32m        completer?: Completer | AsyncCompleter | undefined;[m
[32m+[m[32m        terminal?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         *  Initial list of history lines. This option makes sense[m
[32m+[m[32m         * only if `terminal` is set to `true` by the user or by an internal `output`[m
[32m+[m[32m         * check, otherwise the history caching mechanism is not initialized at all.[m
[32m+[m[32m         * @default [][m
[32m+[m[32m         */[m
[32m+[m[32m        history?: string[] | undefined;[m
[32m+[m[32m        historySize?: number | undefined;[m
[32m+[m[32m        prompt?: string | undefined;[m
[32m+[m[32m        crlfDelay?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, when a new input line added[m
[32m+[m[32m         * to the history list duplicates an older one, this removes the older line[m
[32m+[m[32m         * from the list.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        removeHistoryDuplicates?: boolean | undefined;[m
[32m+[m[32m        escapeCodeTimeout?: number | undefined;[m
[32m+[m[32m        tabSize?: number | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `readline.createInterface()` method creates a new `readline.Interface` instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const readline = require('node:readline');[m
[32m+[m[32m     * const rl = readline.createInterface({[m
[32m+[m[32m     *   input: process.stdin,[m
[32m+[m[32m     *   output: process.stdout,[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Once the `readline.Interface` instance is created, the most common case is to[m
[32m+[m[32m     * listen for the `'line'` event:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * rl.on('line', (line) => {[m
[32m+[m[32m     *   console.log(`Received: ${line}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `terminal` is `true` for this instance then the `output` stream will get[m
[32m+[m[32m     * the best compatibility if it defines an `output.columns` property and emits[m
[32m+[m[32m     * a `'resize'` event on the `output` if or when the columns ever change[m
[32m+[m[32m     * (`process.stdout` does this automatically when it is a TTY).[m
[32m+[m[32m     *[m
[32m+[m[32m     * When creating a `readline.Interface` using `stdin` as input, the program[m
[32m+[m[32m     * will not terminate until it receives an [EOF character](https://en.wikipedia.org/wiki/End-of-file#EOF_character). To exit without[m
[32m+[m[32m     * waiting for user input, call `process.stdin.unref()`.[m
[32m+[m[32m     * @since v0.1.98[m
[32m+[m[32m     */[m
[32m+[m[32m    export function createInterface([m
[32m+[m[32m        input: NodeJS.ReadableStream,[m
[32m+[m[32m        output?: NodeJS.WritableStream,[m
[32m+[m[32m        completer?: Completer | AsyncCompleter,[m
[32m+[m[32m        terminal?: boolean,[m
[32m+[m[32m    ): Interface;[m
[32m+[m[32m    export function createInterface(options: ReadLineOptions): Interface;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `readline.emitKeypressEvents()` method causes the given `Readable` stream to begin emitting `'keypress'` events corresponding to received input.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Optionally, `interface` specifies a `readline.Interface` instance for which[m
[32m+[m[32m     * autocompletion is disabled when copy-pasted input is detected.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If the `stream` is a `TTY`, then it must be in raw mode.[m
[32m+[m[32m     *[m
[32m+[m[32m     * This is automatically called by any readline instance on its `input` if the `input` is a terminal. Closing the `readline` instance does not stop[m
[32m+[m[32m     * the `input` from emitting `'keypress'` events.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * readline.emitKeypressEvents(process.stdin);[m
[32m+[m[32m     * if (process.stdin.isTTY)[m
[32m+[m[32m     *   process.stdin.setRawMode(true);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * ## Example: Tiny CLI[m
[32m+[m[32m     *[m
[32m+[m[32m     * The following example illustrates the use of `readline.Interface` class to[m
[32m+[m[32m     * implement a small command-line interface:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const readline = require('node:readline');[m
[32m+[m[32m     * const rl = readline.createInterface({[m
[32m+[m[32m     *   input: process.stdin,[m
[32m+[m[32m     *   output: process.stdout,[m
[32m+[m[32m     *   prompt: 'OHAI> ',[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * rl.prompt();[m
[32m+[m[32m     *[m
[32m+[m[32m     * rl.on('line', (line) => {[m
[32m+[m[32m     *   switch (line.trim()) {[m
[32m+[m[32m     *     case 'hello':[m
[32m+[m[32m     *       console.log('world!');[m
[32m+[m[32m     *       break;[m
[32m+[m[32m     *     default:[m
[32m+[m[32m     *       console.log(`Say what? I might have heard '${line.trim()}'`);[m
[32m+[m[32m     *       break;[m
[32m+[m[32m     *   }[m
[32m+[m[32m     *   rl.prompt();[m
[32m+[m[32m     * }).on('close', () => {[m
[32m+[m[32m     *   console.log('Have a great day!');[m
[32m+[m[32m     *   process.exit(0);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * ## Example: Read file stream line-by-Line[m
[32m+[m[32m     *[m
[32m+[m[32m     * A common use case for `readline` is to consume an input file one line at a[m
[32m+[m[32m     * time. The easiest way to do so is leveraging the `fs.ReadStream` API as[m
[32m+[m[32m     * well as a `for await...of` loop:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const fs = require('node:fs');[m
[32m+[m[32m     * const readline = require('node:readline');[m
[32m+[m[32m     *[m
[32m+[m[32m     * async function processLineByLine() {[m
[32m+[m[32m     *   const fileStream = fs.createReadStream('input.txt');[m
[32m+[m[32m     *[m
[32m+[m[32m     *   const rl = readline.createInterface({[m
[32m+[m[32m     *     input: fileStream,[m
[32m+[m[32m     *     crlfDelay: Infinity,[m
[32m+[m[32m     *   });[m
[32m+[m[32m     *   // Note: we use the crlfDelay option to recognize all instances of CR LF[m
[32m+[m[32m     *   // ('\r\n') in input.txt as a single line break.[m
[32m+[m[32m     *[m
[32m+[m[32m     *   for await (const line of rl) {[m
[32m+[m[32m     *     // Each line in input.txt will be successively available here as `line`.[m
[32m+[m[32m     *     console.log(`Line from file: ${line}`);[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * }[m
[32m+[m[32m     *[m
[32m+[m[32m     * processLineByLine();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Alternatively, one could use the `'line'` event:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const fs = require('node:fs');[m
[32m+[m[32m     * const readline = require('node:readline');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const rl = readline.createInterface({[m
[32m+[m[32m     *   input: fs.createReadStream('sample.txt'),[m
[32m+[m[32m     *   crlfDelay: Infinity,[m
[32m+[m[32m     * });[m
[32m+[m[32m     *[m
[32m+[m[32m     * rl.on('line', (line) => {[m
[32m+[m[32m     *   console.log(`Line from file: ${line}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Currently, `for await...of` loop can be a bit slower. If `async` / `await` flow and speed are both essential, a mixed approach can be applied:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const { once } = require('node:events');[m
[32m+[m[32m     * const { createReadStream } = require('node:fs');[m
[32m+[m[32m     * const { createInterface } = require('node:readline');[m
[32m+[m[32m     *[m
[32m+[m[32m     * (async function processLineByLine() {[m
[32m+[m[32m     *   try {[m
[32m+[m[32m     *     const rl = createInterface({[m
[32m+[m[32m     *       input: createReadStream('big-file.txt'),[m
[32m+[m[32m     *       crlfDelay: Infinity,[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *[m
[32m+[m[32m     *     rl.on('line', (line) => {[m
[32m+[m[32m     *       // Process the line.[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *[m
[32m+[m[32m     *     await once(rl, 'close');[m
[32m+[m[32m     *[m
[32m+[m[32m     *     console.log('File processed.');[m
[32m+[m[32m     *   } catch (err) {[m
[32m+[m[32m     *     console.error(err);[m
[32m+[m[32m     *   }[m
[32m+[m[32m     * })();[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.7.7[m
[32m+[m[32m     */[m
[32m+[m[32m    export function emitKeypressEvents(stream: NodeJS.ReadableStream, readlineInterface?: Interface): void;[m
[32m+[m[32m    export type Direction = -1 | 0 | 1;[m
[32m+[m[32m    export interface CursorPos {[m
[32m+[m[32m        rows: number;[m
[32m+[m[32m        cols: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `readline.clearLine()` method clears current line of given [TTY](https://nodejs.org/docs/latest-v22.x/api/tty.html) stream[m
[32m+[m[32m     * in a specified direction identified by `dir`.[m
[32m+[m[32m     * @since v0.7.7[m
[32m+[m[32m     * @param callback Invoked once the operation completes.[m
[32m+[m[32m     * @return `false` if `stream` wishes for the calling code to wait for the `'drain'` event to be emitted before continuing to write additional data; otherwise `true`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function clearLine(stream: NodeJS.WritableStream, dir: Direction, callback?: () => void): boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `readline.clearScreenDown()` method clears the given [TTY](https://nodejs.org/docs/latest-v22.x/api/tty.html) stream from[m
[32m+[m[32m     * the current position of the cursor down.[m
[32m+[m[32m     * @since v0.7.7[m
[32m+[m[32m     * @param callback Invoked once the operation completes.[m
[32m+[m[32m     * @return `false` if `stream` wishes for the calling code to wait for the `'drain'` event to be emitted before continuing to write additional data; otherwise `true`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function clearScreenDown(stream: NodeJS.WritableStream, callback?: () => void): boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `readline.cursorTo()` method moves cursor to the specified position in a[m
[32m+[m[32m     * given [TTY](https://nodejs.org/docs/latest-v22.x/api/tty.html) `stream`.[m
[32m+[m[32m     * @since v0.7.7[m
[32m+[m[32m     * @param callback Invoked once the operation completes.[m
[32m+[m[32m     * @return `false` if `stream` wishes for the calling code to wait for the `'drain'` event to be emitted before continuing to write additional data; otherwise `true`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function cursorTo(stream: NodeJS.WritableStream, x: number, y?: number, callback?: () => void): boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `readline.moveCursor()` method moves the cursor _relative_ to its current[m
[32m+[m[32m     * position in a given [TTY](https://nodejs.org/docs/latest-v22.x/api/tty.html) `stream`.[m
[32m+[m[32m     * @since v0.7.7[m
[32m+[m[32m     * @param callback Invoked once the operation completes.[m
[32m+[m[32m     * @return `false` if `stream` wishes for the calling code to wait for the `'drain'` event to be emitted before continuing to write additional data; otherwise `true`.[m
[32m+[m[32m     */[m
[32m+[m[32m    export function moveCursor(stream: NodeJS.WritableStream, dx: number, dy: number, callback?: () => void): boolean;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:readline" {[m
[32m+[m[32m    export * from "readline";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/readline/promises.d.ts b/node_modules/@types/node/readline/promises.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..f2826bb[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/readline/promises.d.ts[m
[36m@@ -0,0 +1,150 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * @since v17.0.0[m
[32m+[m[32m * @experimental[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "readline/promises" {[m
[32m+[m[32m    import { AsyncCompleter, Completer, Direction, Interface as _Interface, ReadLineOptions } from "node:readline";[m
[32m+[m[32m    import { Abortable } from "node:events";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Instances of the `readlinePromises.Interface` class are constructed using the `readlinePromises.createInterface()` method. Every instance is associated with a[m
[32m+[m[32m     * single `input` `Readable` stream and a single `output` `Writable` stream.[m
[32m+[m[32m     * The `output` stream is used to print prompts for user input that arrives on,[m
[32m+[m[32m     * and is read from, the `input` stream.[m
[32m+[m[32m     * @since v17.0.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class Interface extends _Interface {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.question()` method displays the `query` by writing it to the `output`,[m
[32m+[m[32m         * waits for user input to be provided on `input`, then invokes the `callback` function passing the provided input as the first argument.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When called, `rl.question()` will resume the `input` stream if it has been[m
[32m+[m[32m         * paused.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `Interface` was created with `output` set to `null` or `undefined` the `query` is not written.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the question is called after `rl.close()`, it returns a rejected promise.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Example usage:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const answer = await rl.question('What is your favorite food? ');[m
[32m+[m[32m         * console.log(`Oh, so your favorite food is ${answer}`);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Using an `AbortSignal` to cancel a question.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const signal = AbortSignal.timeout(10_000);[m
[32m+[m[32m         *[m
[32m+[m[32m         * signal.addEventListener('abort', () => {[m
[32m+[m[32m         *   console.log('The food question timed out');[m
[32m+[m[32m         * }, { once: true });[m
[32m+[m[32m         *[m
[32m+[m[32m         * const answer = await rl.question('What is your favorite food? ', { signal });[m
[32m+[m[32m         * console.log(`Oh, so your favorite food is ${answer}`);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v17.0.0[m
[32m+[m[32m         * @param query A statement or query to write to `output`, prepended to the prompt.[m
[32m+[m[32m         * @return A promise that is fulfilled with the user's input in response to the `query`.[m
[32m+[m[32m         */[m
[32m+[m[32m        question(query: string): Promise<string>;[m
[32m+[m[32m        question(query: string, options: Abortable): Promise<string>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v17.0.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class Readline {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @param stream A TTY stream.[m
[32m+[m[32m         */[m
[32m+[m[32m        constructor([m
[32m+[m[32m            stream: NodeJS.WritableStream,[m
[32m+[m[32m            options?: {[m
[32m+[m[32m                autoCommit?: boolean;[m
[32m+[m[32m            },[m
[32m+[m[32m        );[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.clearLine()` method adds to the internal list of pending action an[m
[32m+[m[32m         * action that clears current line of the associated `stream` in a specified[m
[32m+[m[32m         * direction identified by `dir`.[m
[32m+[m[32m         * Call `rl.commit()` to see the effect of this method, unless `autoCommit: true` was passed to the constructor.[m
[32m+[m[32m         * @since v17.0.0[m
[32m+[m[32m         * @return this[m
[32m+[m[32m         */[m
[32m+[m[32m        clearLine(dir: Direction): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.clearScreenDown()` method adds to the internal list of pending action an[m
[32m+[m[32m         * action that clears the associated stream from the current position of the[m
[32m+[m[32m         * cursor down.[m
[32m+[m[32m         * Call `rl.commit()` to see the effect of this method, unless `autoCommit: true` was passed to the constructor.[m
[32m+[m[32m         * @since v17.0.0[m
[32m+[m[32m         * @return this[m
[32m+[m[32m         */[m
[32m+[m[32m        clearScreenDown(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.commit()` method sends all the pending actions to the associated `stream` and clears the internal list of pending actions.[m
[32m+[m[32m         * @since v17.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        commit(): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.cursorTo()` method adds to the internal list of pending action an action[m
[32m+[m[32m         * that moves cursor to the specified position in the associated `stream`.[m
[32m+[m[32m         * Call `rl.commit()` to see the effect of this method, unless `autoCommit: true` was passed to the constructor.[m
[32m+[m[32m         * @since v17.0.0[m
[32m+[m[32m         * @return this[m
[32m+[m[32m         */[m
[32m+[m[32m        cursorTo(x: number, y?: number): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.moveCursor()` method adds to the internal list of pending action an[m
[32m+[m[32m         * action that moves the cursor _relative_ to its current position in the[m
[32m+[m[32m         * associated `stream`.[m
[32m+[m[32m         * Call `rl.commit()` to see the effect of this method, unless `autoCommit: true` was passed to the constructor.[m
[32m+[m[32m         * @since v17.0.0[m
[32m+[m[32m         * @return this[m
[32m+[m[32m         */[m
[32m+[m[32m        moveCursor(dx: number, dy: number): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `rl.rollback` methods clears the internal list of pending actions without[m
[32m+[m[32m         * sending it to the associated `stream`.[m
[32m+[m[32m         * @since v17.0.0[m
[32m+[m[32m         * @return this[m
[32m+[m[32m         */[m
[32m+[m[32m        rollback(): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `readlinePromises.createInterface()` method creates a new `readlinePromises.Interface` instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const readlinePromises = require('node:readline/promises');[m
[32m+[m[32m     * const rl = readlinePromises.createInterface({[m
[32m+[m[32m     *   input: process.stdin,[m
[32m+[m[32m     *   output: process.stdout,[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * Once the `readlinePromises.Interface` instance is created, the most common case[m
[32m+[m[32m     * is to listen for the `'line'` event:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * rl.on('line', (line) => {[m
[32m+[m[32m     *   console.log(`Received: ${line}`);[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `terminal` is `true` for this instance then the `output` stream will get[m
[32m+[m[32m     * the best compatibility if it defines an `output.columns` property and emits[m
[32m+[m[32m     * a `'resize'` event on the `output` if or when the columns ever change[m
[32m+[m[32m     * (`process.stdout` does this automatically when it is a TTY).[m
[32m+[m[32m     * @since v17.0.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function createInterface([m
[32m+[m[32m        input: NodeJS.ReadableStream,[m
[32m+[m[32m        output?: NodeJS.WritableStream,[m
[32m+[m[32m        completer?: Completer | AsyncCompleter,[m
[32m+[m[32m        terminal?: boolean,[m
[32m+[m[32m    ): Interface;[m
[32m+[m[32m    function createInterface(options: ReadLineOptions): Interface;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:readline/promises" {[m
[32m+[m[32m    export * from "readline/promises";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/repl.d.ts b/node_modules/@types/node/repl.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..c2b340c[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/repl.d.ts[m
[36m@@ -0,0 +1,430 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:repl` module provides a Read-Eval-Print-Loop (REPL) implementation[m
[32m+[m[32m * that is available both as a standalone program or includible in other[m
[32m+[m[32m * applications. It can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const repl = require('node:repl');[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/repl.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "repl" {[m
[32m+[m[32m    import { AsyncCompleter, Completer, Interface } from "node:readline";[m
[32m+[m[32m    import { Context } from "node:vm";[m
[32m+[m[32m    import { InspectOptions } from "node:util";[m
[32m+[m[32m    interface ReplOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The input prompt to display.[m
[32m+[m[32m         * @default "> "[m
[32m+[m[32m         */[m
[32m+[m[32m        prompt?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `Readable` stream from which REPL input will be read.[m
[32m+[m[32m         * @default process.stdin[m
[32m+[m[32m         */[m
[32m+[m[32m        input?: NodeJS.ReadableStream | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `Writable` stream to which REPL output will be written.[m
[32m+[m[32m         * @default process.stdout[m
[32m+[m[32m         */[m
[32m+[m[32m        output?: NodeJS.WritableStream | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, specifies that the output should be treated as a TTY terminal, and have[m
[32m+[m[32m         * ANSI/VT100 escape codes written to it.[m
[32m+[m[32m         * Default: checking the value of the `isTTY` property on the output stream upon[m
[32m+[m[32m         * instantiation.[m
[32m+[m[32m         */[m
[32m+[m[32m        terminal?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The function to be used when evaluating each given line of input.[m
[32m+[m[32m         * Default: an async wrapper for the JavaScript `eval()` function. An `eval` function can[m
[32m+[m[32m         * error with `repl.Recoverable` to indicate the input was incomplete and prompt for[m
[32m+[m[32m         * additional lines.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/repl.html#repl_default_evaluation[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/repl.html#repl_custom_evaluation_functions[m
[32m+[m[32m         */[m
[32m+[m[32m        eval?: REPLEval | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Defines if the repl prints output previews or not.[m
[32m+[m[32m         * @default `true` Always `false` in case `terminal` is falsy.[m
[32m+[m[32m         */[m
[32m+[m[32m        preview?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, specifies that the default `writer` function should include ANSI color[m
[32m+[m[32m         * styling to REPL output. If a custom `writer` function is provided then this has no[m
[32m+[m[32m         * effect.[m
[32m+[m[32m         * @default the REPL instance's `terminal` value[m
[32m+[m[32m         */[m
[32m+[m[32m        useColors?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, specifies that the default evaluation function will use the JavaScript[m
[32m+[m[32m         * `global` as the context as opposed to creating a new separate context for the REPL[m
[32m+[m[32m         * instance. The node CLI REPL sets this value to `true`.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        useGlobal?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, specifies that the default writer will not output the return value of a[m
[32m+[m[32m         * command if it evaluates to `undefined`.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        ignoreUndefined?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The function to invoke to format the output of each command before writing to `output`.[m
[32m+[m[32m         * @default a wrapper for `util.inspect`[m
[32m+[m[32m         *[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/repl.html#repl_customizing_repl_output[m
[32m+[m[32m         */[m
[32m+[m[32m        writer?: REPLWriter | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An optional function used for custom Tab auto completion.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/readline.html#readline_use_of_the_completer_function[m
[32m+[m[32m         */[m
[32m+[m[32m        completer?: Completer | AsyncCompleter | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A flag that specifies whether the default evaluator executes all JavaScript commands in[m
[32m+[m[32m         * strict mode or default (sloppy) mode.[m
[32m+[m[32m         * Accepted values are:[m
[32m+[m[32m         * - `repl.REPL_MODE_SLOPPY` - evaluates expressions in sloppy mode.[m
[32m+[m[32m         * - `repl.REPL_MODE_STRICT` - evaluates expressions in strict mode. This is equivalent to[m
[32m+[m[32m         *   prefacing every repl statement with `'use strict'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        replMode?: typeof REPL_MODE_SLOPPY | typeof REPL_MODE_STRICT | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Stop evaluating the current piece of code when `SIGINT` is received, i.e. `Ctrl+C` is[m
[32m+[m[32m         * pressed. This cannot be used together with a custom `eval` function.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        breakEvalOnSigint?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    type REPLEval = ([m
[32m+[m[32m        this: REPLServer,[m
[32m+[m[32m        evalCmd: string,[m
[32m+[m[32m        context: Context,[m
[32m+[m[32m        file: string,[m
[32m+[m[32m        cb: (err: Error | null, result: any) => void,[m
[32m+[m[32m    ) => void;[m
[32m+[m[32m    type REPLWriter = (this: REPLServer, obj: any) => string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This is the default "writer" value, if none is passed in the REPL options,[m
[32m+[m[32m     * and it can be overridden by custom print functions.[m
[32m+[m[32m     */[m
[32m+[m[32m    const writer: REPLWriter & {[m
[32m+[m[32m        options: InspectOptions;[m
[32m+[m[32m    };[m
[32m+[m[32m    type REPLCommandAction = (this: REPLServer, text: string) => void;[m
[32m+[m[32m    interface REPLCommand {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Help text to be displayed when `.help` is entered.[m
[32m+[m[32m         */[m
[32m+[m[32m        help?: string | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The function to execute, optionally accepting a single string argument.[m
[32m+[m[32m         */[m
[32m+[m[32m        action: REPLCommandAction;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Instances of `repl.REPLServer` are created using the {@link start} method[m
[32m+[m[32m     * or directly using the JavaScript `new` keyword.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const repl = require('node:repl');[m
[32m+[m[32m     *[m
[32m+[m[32m     * const options = { useColors: true };[m
[32m+[m[32m     *[m
[32m+[m[32m     * const firstInstance = repl.start(options);[m
[32m+[m[32m     * const secondInstance = new repl.REPLServer(options);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.91[m
[32m+[m[32m     */[m
[32m+[m[32m    class REPLServer extends Interface {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `vm.Context` provided to the `eval` function to be used for JavaScript[m
[32m+[m[32m         * evaluation.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly context: Context;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated since v14.3.0 - Use `input` instead.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly inputStream: NodeJS.ReadableStream;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @deprecated since v14.3.0 - Use `output` instead.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly outputStream: NodeJS.WritableStream;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `Readable` stream from which REPL input will be read.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly input: NodeJS.ReadableStream;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `Writable` stream to which REPL output will be written.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly output: NodeJS.WritableStream;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The commands registered via `replServer.defineCommand()`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly commands: NodeJS.ReadOnlyDict<REPLCommand>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A value indicating whether the REPL is currently in "editor mode".[m
[32m+[m[32m         *[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/repl.html#repl_commands_and_special_keys[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly editorMode: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A value indicating whether the `_` variable has been assigned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/repl.html#repl_assignment_of_the_underscore_variable[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly underscoreAssigned: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The last evaluation result from the REPL (assigned to the `_` variable inside of the REPL).[m
[32m+[m[32m         *[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/repl.html#repl_assignment_of_the_underscore_variable[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly last: any;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A value indicating whether the `_error` variable has been assigned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @since v9.8.0[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/repl.html#repl_assignment_of_the_underscore_variable[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly underscoreErrAssigned: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The last error raised inside the REPL (assigned to the `_error` variable inside of the REPL).[m
[32m+[m[32m         *[m
[32m+[m[32m         * @since v9.8.0[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/repl.html#repl_assignment_of_the_underscore_variable[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly lastError: any;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specified in the REPL options, this is the function to be used when evaluating each[m
[32m+[m[32m         * given line of input. If not specified in the REPL options, this is an async wrapper[m
[32m+[m[32m         * for the JavaScript `eval()` function.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly eval: REPLEval;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specified in the REPL options, this is a value indicating whether the default[m
[32m+[m[32m         * `writer` function should include ANSI color styling to REPL output.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly useColors: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specified in the REPL options, this is a value indicating whether the default `eval`[m
[32m+[m[32m         * function will use the JavaScript `global` as the context as opposed to creating a new[m
[32m+[m[32m         * separate context for the REPL instance.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly useGlobal: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specified in the REPL options, this is a value indicating whether the default `writer`[m
[32m+[m[32m         * function should output the result of a command if it evaluates to `undefined`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly ignoreUndefined: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specified in the REPL options, this is the function to invoke to format the output of[m
[32m+[m[32m         * each command before writing to `outputStream`. If not specified in the REPL options,[m
[32m+[m[32m         * this will be a wrapper for `util.inspect`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly writer: REPLWriter;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specified in the REPL options, this is the function to use for custom Tab auto-completion.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly completer: Completer | AsyncCompleter;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Specified in the REPL options, this is a flag that specifies whether the default `eval`[m
[32m+[m[32m         * function should execute all JavaScript commands in strict mode or default (sloppy) mode.[m
[32m+[m[32m         * Possible values are:[m
[32m+[m[32m         * - `repl.REPL_MODE_SLOPPY` - evaluates expressions in sloppy mode.[m
[32m+[m[32m         * - `repl.REPL_MODE_STRICT` - evaluates expressions in strict mode. This is equivalent to[m
[32m+[m[32m         *    prefacing every repl statement with `'use strict'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly replMode: typeof REPL_MODE_SLOPPY | typeof REPL_MODE_STRICT;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * NOTE: According to the documentation:[m
[32m+[m[32m         *[m
[32m+[m[32m         * > Instances of `repl.REPLServer` are created using the `repl.start()` method and[m
[32m+[m[32m         * > _should not_ be created directly using the JavaScript `new` keyword.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `REPLServer` cannot be subclassed due to implementation specifics in NodeJS.[m
[32m+[m[32m         *[m
[32m+[m[32m         * @see https://nodejs.org/dist/latest-v22.x/docs/api/repl.html#repl_class_replserver[m
[32m+[m[32m         */[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `replServer.defineCommand()` method is used to add new `.`\-prefixed commands[m
[32m+[m[32m         * to the REPL instance. Such commands are invoked by typing a `.` followed by the `keyword`. The `cmd` is either a `Function` or an `Object` with the following[m
[32m+[m[32m         * properties:[m
[32m+[m[32m         *[m
[32m+[m[32m         * The following example shows two new commands added to the REPL instance:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const repl = require('node:repl');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const replServer = repl.start({ prompt: '> ' });[m
[32m+[m[32m         * replServer.defineCommand('sayhello', {[m
[32m+[m[32m         *   help: 'Say hello',[m
[32m+[m[32m         *   action(name) {[m
[32m+[m[32m         *     this.clearBufferedCommand();[m
[32m+[m[32m         *     console.log(`Hello, ${name}!`);[m
[32m+[m[32m         *     this.displayPrompt();[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * });[m
[32m+[m[32m         * replServer.defineCommand('saybye', function saybye() {[m
[32m+[m[32m         *   console.log('Goodbye!');[m
[32m+[m[32m         *   this.close();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The new commands can then be used from within the REPL instance:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```console[m
[32m+[m[32m         * > .sayhello Node.js User[m
[32m+[m[32m         * Hello, Node.js User![m
[32m+[m[32m         * > .saybye[m
[32m+[m[32m         * Goodbye![m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.3.0[m
[32m+[m[32m         * @param keyword The command keyword (_without_ a leading `.` character).[m
[32m+[m[32m         * @param cmd The function to invoke when the command is processed.[m
[32m+[m[32m         */[m
[32m+[m[32m        defineCommand(keyword: string, cmd: REPLCommandAction | REPLCommand): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `replServer.displayPrompt()` method readies the REPL instance for input[m
[32m+[m[32m         * from the user, printing the configured `prompt` to a new line in the `output` and resuming the `input` to accept new input.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When multi-line input is being entered, an ellipsis is printed rather than the[m
[32m+[m[32m         * 'prompt'.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When `preserveCursor` is `true`, the cursor placement will not be reset to `0`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `replServer.displayPrompt` method is primarily intended to be called from[m
[32m+[m[32m         * within the action function for commands registered using the `replServer.defineCommand()` method.[m
[32m+[m[32m         * @since v0.1.91[m
[32m+[m[32m         */[m
[32m+[m[32m        displayPrompt(preserveCursor?: boolean): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `replServer.clearBufferedCommand()` method clears any command that has been[m
[32m+[m[32m         * buffered but not yet executed. This method is primarily intended to be[m
[32m+[m[32m         * called from within the action function for commands registered using the `replServer.defineCommand()` method.[m
[32m+[m[32m         * @since v9.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        clearBufferedCommand(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Initializes a history log file for the REPL instance. When executing the[m
[32m+[m[32m         * Node.js binary and using the command-line REPL, a history file is initialized[m
[32m+[m[32m         * by default. However, this is not the case when creating a REPL[m
[32m+[m[32m         * programmatically. Use this method to initialize a history log file when working[m
[32m+[m[32m         * with REPL instances programmatically.[m
[32m+[m[32m         * @since v11.10.0[m
[32m+[m[32m         * @param historyPath the path to the history file[m
[32m+[m[32m         * @param callback called when history writes are ready or upon error[m
[32m+[m[32m         */[m
[32m+[m[32m        setupHistory(path: string, callback: (err: Error | null, repl: this) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * events.EventEmitter[m
[32m+[m[32m         * 1. close - inherited from `readline.Interface`[m
[32m+[m[32m         * 2. line - inherited from `readline.Interface`[m
[32m+[m[32m         * 3. pause - inherited from `readline.Interface`[m
[32m+[m[32m         * 4. resume - inherited from `readline.Interface`[m
[32m+[m[32m         * 5. SIGCONT - inherited from `readline.Interface`[m
[32m+[m[32m         * 6. SIGINT - inherited from `readline.Interface`[m
[32m+[m[32m         * 7. SIGTSTP - inherited from `readline.Interface`[m
[32m+[m[32m         * 8. exit[m
[32m+[m[32m         * 9. reset[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "line", listener: (input: string) => void): this;[m
[32m+[m[32m        addListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "SIGCONT", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "SIGINT", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "SIGTSTP", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "exit", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "reset", listener: (context: Context) => void): this;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "line", input: string): boolean;[m
[32m+[m[32m        emit(event: "pause"): boolean;[m
[32m+[m[32m        emit(event: "resume"): boolean;[m
[32m+[m[32m        emit(event: "SIGCONT"): boolean;[m
[32m+[m[32m        emit(event: "SIGINT"): boolean;[m
[32m+[m[32m        emit(event: "SIGTSTP"): boolean;[m
[32m+[m[32m        emit(event: "exit"): boolean;[m
[32m+[m[32m        emit(event: "reset", context: Context): boolean;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "line", listener: (input: string) => void): this;[m
[32m+[m[32m        on(event: "pause", listener: () => void): this;[m
[32m+[m[32m        on(event: "resume", listener: () => void): this;[m
[32m+[m[32m        on(event: "SIGCONT", listener: () => void): this;[m
[32m+[m[32m        on(event: "SIGINT", listener: () => void): this;[m
[32m+[m[32m        on(event: "SIGTSTP", listener: () => void): this;[m
[32m+[m[32m        on(event: "exit", listener: () => void): this;[m
[32m+[m[32m        on(event: "reset", listener: (context: Context) => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "line", listener: (input: string) => void): this;[m
[32m+[m[32m        once(event: "pause", listener: () => void): this;[m
[32m+[m[32m        once(event: "resume", listener: () => void): this;[m
[32m+[m[32m        once(event: "SIGCONT", listener: () => void): this;[m
[32m+[m[32m        once(event: "SIGINT", listener: () => void): this;[m
[32m+[m[32m        once(event: "SIGTSTP", listener: () => void): this;[m
[32m+[m[32m        once(event: "exit", listener: () => void): this;[m
[32m+[m[32m        once(event: "reset", listener: (context: Context) => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "line", listener: (input: string) => void): this;[m
[32m+[m[32m        prependListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "SIGCONT", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "SIGINT", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "SIGTSTP", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "exit", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "reset", listener: (context: Context) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "line", listener: (input: string) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "SIGCONT", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "SIGINT", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "SIGTSTP", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "exit", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "reset", listener: (context: Context) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A flag passed in the REPL options. Evaluates expressions in sloppy mode.[m
[32m+[m[32m     */[m
[32m+[m[32m    const REPL_MODE_SLOPPY: unique symbol;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A flag passed in the REPL options. Evaluates expressions in strict mode.[m
[32m+[m[32m     * This is equivalent to prefacing every repl statement with `'use strict'`.[m
[32m+[m[32m     */[m
[32m+[m[32m    const REPL_MODE_STRICT: unique symbol;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `repl.start()` method creates and starts a {@link REPLServer} instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * If `options` is a string, then it specifies the input prompt:[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * const repl = require('node:repl');[m
[32m+[m[32m     *[m
[32m+[m[32m     * // a Unix style prompt[m
[32m+[m[32m     * repl.start('$ ');[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v0.1.91[m
[32m+[m[32m     */[m
[32m+[m[32m    function start(options?: string | ReplOptions): REPLServer;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Indicates a recoverable error that a `REPLServer` can use to support multi-line input.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @see https://nodejs.org/dist/latest-v22.x/docs/api/repl.html#repl_recoverable_errors[m
[32m+[m[32m     */[m
[32m+[m[32m    class Recoverable extends SyntaxError {[m
[32m+[m[32m        err: Error;[m
[32m+[m[32m        constructor(err: Error);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:repl" {[m
[32m+[m[32m    export * from "repl";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/sea.d.ts b/node_modules/@types/node/sea.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..0bedc62[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/sea.d.ts[m
[36m@@ -0,0 +1,153 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * This feature allows the distribution of a Node.js application conveniently to a[m
[32m+[m[32m * system that does not have Node.js installed.[m
[32m+[m[32m *[m
[32m+[m[32m * Node.js supports the creation of [single executable applications](https://github.com/nodejs/single-executable) by allowing[m
[32m+[m[32m * the injection of a blob prepared by Node.js, which can contain a bundled script,[m
[32m+[m[32m * into the `node` binary. During start up, the program checks if anything has been[m
[32m+[m[32m * injected. If the blob is found, it executes the script in the blob. Otherwise[m
[32m+[m[32m * Node.js operates as it normally does.[m
[32m+[m[32m *[m
[32m+[m[32m * The single executable application feature currently only supports running a[m
[32m+[m[32m * single embedded script using the `CommonJS` module system.[m
[32m+[m[32m *[m
[32m+[m[32m * Users can create a single executable application from their bundled script[m
[32m+[m[32m * with the `node` binary itself and any tool which can inject resources into the[m
[32m+[m[32m * binary.[m
[32m+[m[32m *[m
[32m+[m[32m * Here are the steps for creating a single executable application using one such[m
[32m+[m[32m * tool, [postject](https://github.com/nodejs/postject):[m
[32m+[m[32m *[m
[32m+[m[32m * 1. Create a JavaScript file:[m
[32m+[m[32m * ```bash[m
[32m+[m[32m * echo 'console.log(`Hello, ${process.argv[2]}!`);' > hello.js[m
[32m+[m[32m * ```[m
[32m+[m[32m * 2. Create a configuration file building a blob that can be injected into the[m
[32m+[m[32m * single executable application (see `Generating single executable preparation blobs` for details):[m
[32m+[m[32m * ```bash[m
[32m+[m[32m * echo '{ "main": "hello.js", "output": "sea-prep.blob" }' > sea-config.json[m
[32m+[m[32m * ```[m
[32m+[m[32m * 3. Generate the blob to be injected:[m
[32m+[m[32m * ```bash[m
[32m+[m[32m * node --experimental-sea-config sea-config.json[m
[32m+[m[32m * ```[m
[32m+[m[32m * 4. Create a copy of the `node` executable and name it according to your needs:[m
[32m+[m[32m *    * On systems other than Windows:[m
[32m+[m[32m * ```bash[m
[32m+[m[32m * cp $(command -v node) hello[m
[32m+[m[32m * ```[m
[32m+[m[32m *    * On Windows:[m
[32m+[m[32m * ```text[m
[32m+[m[32m * node -e "require('fs').copyFileSync(process.execPath, 'hello.exe')"[m
[32m+[m[32m * ```[m
[32m+[m[32m * The `.exe` extension is necessary.[m
[32m+[m[32m * 5. Remove the signature of the binary (macOS and Windows only):[m
[32m+[m[32m *    * On macOS:[m
[32m+[m[32m * ```bash[m
[32m+[m[32m * codesign --remove-signature hello[m
[32m+[m[32m * ```[m
[32m+[m[32m *    * On Windows (optional):[m
[32m+[m[32m * [signtool](https://learn.microsoft.com/en-us/windows/win32/seccrypto/signtool) can be used from the installed [Windows SDK](https://developer.microsoft.com/en-us/windows/downloads/windows-sdk/).[m
[32m+[m[32m * If this step is[m
[32m+[m[32m * skipped, ignore any signature-related warning from postject.[m
[32m+[m[32m * ```powershell[m
[32m+[m[32m * signtool remove /s hello.exe[m
[32m+[m[32m * ```[m
[32m+[m[32m * 6. Inject the blob into the copied binary by running `postject` with[m
[32m+[m[32m * the following options:[m
[32m+[m[32m *    * `hello` / `hello.exe` \- The name of the copy of the `node` executable[m
[32m+[m[32m *    created in step 4.[m
[32m+[m[32m *    * `NODE_SEA_BLOB` \- The name of the resource / note / section in the binary[m
[32m+[m[32m *    where the contents of the blob will be stored.[m
[32m+[m[32m *    * `sea-prep.blob` \- The name of the blob created in step 1.[m
[32m+[m[32m *    * `--sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2` \- The [fuse](https://www.electronjs.org/docs/latest/tutorial/fuses) used by the Node.js project to detect if a file has been[m
[32m+[m[32m * injected.[m
[32m+[m[32m *    * `--macho-segment-name NODE_SEA` (only needed on macOS) - The name of the[m
[32m+[m[32m *    segment in the binary where the contents of the blob will be[m
[32m+[m[32m *    stored.[m
[32m+[m[32m * To summarize, here is the required command for each platform:[m
[32m+[m[32m *    * On Linux:[m
[32m+[m[32m *    ```bash[m
[32m+[m[32m *    npx postject hello NODE_SEA_BLOB sea-prep.blob \[m
[32m+[m[32m *        --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2[m
[32m+[m[32m *    ```[m
[32m+[m[32m *    * On Windows - PowerShell:[m
[32m+[m[32m *    ```powershell[m
[32m+[m[32m *    npx postject hello.exe NODE_SEA_BLOB sea-prep.blob `[m
[32m+[m[32m *        --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2[m
[32m+[m[32m *    ```[m
[32m+[m[32m *    * On Windows - Command Prompt:[m
[32m+[m[32m *    ```text[m
[32m+[m[32m *    npx postject hello.exe NODE_SEA_BLOB sea-prep.blob ^[m
[32m+[m[32m *        --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2[m
[32m+[m[32m *    ```[m
[32m+[m[32m *    * On macOS:[m
[32m+[m[32m *    ```bash[m
[32m+[m[32m *    npx postject hello NODE_SEA_BLOB sea-prep.blob \[m
[32m+[m[32m *        --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 \[m
[32m+[m[32m *        --macho-segment-name NODE_SEA[m
[32m+[m[32m *    ```[m
[32m+[m[32m * 7. Sign the binary (macOS and Windows only):[m
[32m+[m[32m *    * On macOS:[m
[32m+[m[32m * ```bash[m
[32m+[m[32m * codesign --sign - hello[m
[32m+[m[32m * ```[m
[32m+[m[32m *    * On Windows (optional):[m
[32m+[m[32m * A certificate needs to be present for this to work. However, the unsigned[m
[32m+[m[32m * binary would still be runnable.[m
[32m+[m[32m * ```powershell[m
[32m+[m[32m * signtool sign /fd SHA256 hello.exe[m
[32m+[m[32m * ```[m
[32m+[m[32m * 8. Run the binary:[m
[32m+[m[32m *    * On systems other than Windows[m
[32m+[m[32m * ```console[m
[32m+[m[32m * $ ./hello world[m
[32m+[m[32m * Hello, world![m
[32m+[m[32m * ```[m
[32m+[m[32m *    * On Windows[m
[32m+[m[32m * ```console[m
[32m+[m[32m * $ .\hello.exe world[m
[32m+[m[32m * Hello, world![m
[32m+[m[32m * ```[m
[32m+[m[32m * @since v19.7.0, v18.16.0[m
[32m+[m[32m * @experimental[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/src/node_sea.cc)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "node:sea" {[m
[32m+[m[32m    type AssetKey = string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @since v20.12.0[m
[32m+[m[32m     * @return Whether this script is running inside a single-executable application.[m
[32m+[m[32m     */[m
[32m+[m[32m    function isSea(): boolean;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This method can be used to retrieve the assets configured to be bundled into the[m
[32m+[m[32m     * single-executable application at build time.[m
[32m+[m[32m     * An error is thrown when no matching asset can be found.[m
[32m+[m[32m     * @since v20.12.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function getAsset(key: AssetKey): ArrayBuffer;[m
[32m+[m[32m    function getAsset(key: AssetKey, encoding: string): string;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Similar to `sea.getAsset()`, but returns the result in a [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob).[m
[32m+[m[32m     * An error is thrown when no matching asset can be found.[m
[32m+[m[32m     * @since v20.12.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function getAssetAsBlob(key: AssetKey, options?: {[m
[32m+[m[32m        type: string;[m
[32m+[m[32m    }): Blob;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This method can be used to retrieve the assets configured to be bundled into the[m
[32m+[m[32m     * single-executable application at build time.[m
[32m+[m[32m     * An error is thrown when no matching asset can be found.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Unlike `sea.getRawAsset()` or `sea.getAssetAsBlob()`, this method does not[m
[32m+[m[32m     * return a copy. Instead, it returns the raw asset bundled inside the executable.[m
[32m+[m[32m     *[m
[32m+[m[32m     * For now, users should avoid writing to the returned array buffer. If the[m
[32m+[m[32m     * injected section is not marked as writable or not aligned properly,[m
[32m+[m[32m     * writes to the returned array buffer is likely to result in a crash.[m
[32m+[m[32m     * @since v20.12.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function getRawAsset(key: AssetKey): string | ArrayBuffer;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/sqlite.d.ts b/node_modules/@types/node/sqlite.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..006a25b[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/sqlite.d.ts[m
[36m@@ -0,0 +1,213 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:sqlite` module facilitates working with SQLite databases.[m
[32m+[m[32m * To access it:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import sqlite from 'node:sqlite';[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * This module is only available under the `node:` scheme. The following will not[m
[32m+[m[32m * work:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import sqlite from 'sqlite';[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * The following example shows the basic usage of the `node:sqlite` module to open[m
[32m+[m[32m * an in-memory database, write data to the database, and then read the data back.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import { DatabaseSync } from 'node:sqlite';[m
[32m+[m[32m * const database = new DatabaseSync(':memory:');[m
[32m+[m[32m *[m
[32m+[m[32m * // Execute SQL statements from strings.[m
[32m+[m[32m * database.exec(`[m
[32m+[m[32m *   CREATE TABLE data([m
[32m+[m[32m *     key INTEGER PRIMARY KEY,[m
[32m+[m[32m *     value TEXT[m
[32m+[m[32m *   ) STRICT[m
[32m+[m[32m * `);[m
[32m+[m[32m * // Create a prepared statement to insert data into the database.[m
[32m+[m[32m * const insert = database.prepare('INSERT INTO data (key, value) VALUES (?, ?)');[m
[32m+[m[32m * // Execute the prepared statement with bound values.[m
[32m+[m[32m * insert.run(1, 'hello');[m
[32m+[m[32m * insert.run(2, 'world');[m
[32m+[m[32m * // Create a prepared statement to read data from the database.[m
[32m+[m[32m * const query = database.prepare('SELECT * FROM data ORDER BY key');[m
[32m+[m[32m * // Execute the prepared statement and log the result set.[m
[32m+[m[32m * console.log(query.all());[m
[32m+[m[32m * // Prints: [ { key: 1, value: 'hello' }, { key: 2, value: 'world' } ][m
[32m+[m[32m * ```[m
[32m+[m[32m * @since v22.5.0[m
[32m+[m[32m * @experimental[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/sqlite.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "node:sqlite" {[m
[32m+[m[32m    interface DatabaseSyncOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `true`, the database is opened by the constructor.[m
[32m+[m[32m         * When this value is `false`, the database must be opened via the `open()` method.[m
[32m+[m[32m         */[m
[32m+[m[32m        open?: boolean | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This class represents a single [connection](https://www.sqlite.org/c3ref/sqlite3.html) to a SQLite database. All APIs[m
[32m+[m[32m     * exposed by this class execute synchronously.[m
[32m+[m[32m     * @since v22.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class DatabaseSync {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Constructs a new `DatabaseSync` instance.[m
[32m+[m[32m         * @param location The location of the database.[m
[32m+[m[32m         * A SQLite database can be stored in a file or completely [in memory](https://www.sqlite.org/inmemorydb.html).[m
[32m+[m[32m         * To use a file-backed database, the location should be a file path.[m
[32m+[m[32m         * To use an in-memory database, the location should be the special name `':memory:'`.[m
[32m+[m[32m         * @param options Configuration options for the database connection.[m
[32m+[m[32m         */[m
[32m+[m[32m        constructor(location: string, options?: DatabaseSyncOptions);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Closes the database connection. An exception is thrown if the database is not[m
[32m+[m[32m         * open. This method is a wrapper around [`sqlite3_close_v2()`](https://www.sqlite.org/c3ref/close.html).[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        close(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method allows one or more SQL statements to be executed without returning[m
[32m+[m[32m         * any results. This method is useful when executing SQL statements read from a[m
[32m+[m[32m         * file. This method is a wrapper around [`sqlite3_exec()`](https://www.sqlite.org/c3ref/exec.html).[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         * @param sql A SQL string to execute.[m
[32m+[m[32m         */[m
[32m+[m[32m        exec(sql: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Opens the database specified in the `location` argument of the `DatabaseSync`constructor. This method should only be used when the database is not opened via[m
[32m+[m[32m         * the constructor. An exception is thrown if the database is already open.[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         */[m
[32m+[m[32m        open(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Compiles a SQL statement into a [prepared statement](https://www.sqlite.org/c3ref/stmt.html). This method is a wrapper[m
[32m+[m[32m         * around [`sqlite3_prepare_v2()`](https://www.sqlite.org/c3ref/prepare.html).[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         * @param sql A SQL string to compile to a prepared statement.[m
[32m+[m[32m         * @return The prepared statement.[m
[32m+[m[32m         */[m
[32m+[m[32m        prepare(sql: string): StatementSync;[m
[32m+[m[32m    }[m
[32m+[m[32m    type SupportedValueType = null | number | bigint | string | Uint8Array;[m
[32m+[m[32m    interface StatementResultingChanges {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of rows modified, inserted, or deleted by the most recently completed `INSERT`, `UPDATE`, or `DELETE` statement.[m
[32m+[m[32m         * This field is either a number or a `BigInt` depending on the prepared statement's configuration.[m
[32m+[m[32m         * This property is the result of [`sqlite3_changes64()`](https://www.sqlite.org/c3ref/changes.html).[m
[32m+[m[32m         */[m
[32m+[m[32m        changes: number | bigint;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The most recently inserted rowid.[m
[32m+[m[32m         * This field is either a number or a `BigInt` depending on the prepared statement's configuration.[m
[32m+[m[32m         * This property is the result of [`sqlite3_last_insert_rowid()`](https://www.sqlite.org/c3ref/last_insert_rowid.html).[m
[32m+[m[32m         */[m
[32m+[m[32m        lastInsertRowid: number | bigint;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This class represents a single [prepared statement](https://www.sqlite.org/c3ref/stmt.html). This class cannot be[m
[32m+[m[32m     * instantiated via its constructor. Instead, instances are created via the`database.prepare()` method. All APIs exposed by this class execute[m
[32m+[m[32m     * synchronously.[m
[32m+[m[32m     *[m
[32m+[m[32m     * A prepared statement is an efficient binary representation of the SQL used to[m
[32m+[m[32m     * create it. Prepared statements are parameterizable, and can be invoked multiple[m
[32m+[m[32m     * times with different bound values. Parameters also offer protection against [SQL injection](https://en.wikipedia.org/wiki/SQL_injection) attacks. For these reasons, prepared statements are[m
[32m+[m[32m     * preferred[m
[32m+[m[32m     * over hand-crafted SQL strings when handling user input.[m
[32m+[m[32m     * @since v22.5.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class StatementSync {[m
[32m+[m[32m        private constructor();[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method executes a prepared statement and returns all results as an array of[m
[32m+[m[32m         * objects. If the prepared statement does not return any results, this method[m
[32m+[m[32m         * returns an empty array. The prepared statement [parameters are bound](https://www.sqlite.org/c3ref/bind_blob.html) using[m
[32m+[m[32m         * the values in `namedParameters` and `anonymousParameters`.[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         * @param namedParameters An optional object used to bind named parameters. The keys of this object are used to configure the mapping.[m
[32m+[m[32m         * @param anonymousParameters Zero or more values to bind to anonymous parameters.[m
[32m+[m[32m         * @return An array of objects. Each object corresponds to a row returned by executing the prepared statement. The keys and values of each object correspond to the column names and values of[m
[32m+[m[32m         * the row.[m
[32m+[m[32m         */[m
[32m+[m[32m        all(...anonymousParameters: SupportedValueType[]): unknown[];[m
[32m+[m[32m        all([m
[32m+[m[32m            namedParameters: Record<string, SupportedValueType>,[m
[32m+[m[32m            ...anonymousParameters: SupportedValueType[][m
[32m+[m[32m        ): unknown[];[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method returns the source SQL of the prepared statement with parameter[m
[32m+[m[32m         * placeholders replaced by values. This method is a wrapper around [`sqlite3_expanded_sql()`](https://www.sqlite.org/c3ref/expanded_sql.html).[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         * @return The source SQL expanded to include parameter values.[m
[32m+[m[32m         */[m
[32m+[m[32m        expandedSQL(): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method executes a prepared statement and returns the first result as an[m
[32m+[m[32m         * object. If the prepared statement does not return any results, this method[m
[32m+[m[32m         * returns `undefined`. The prepared statement [parameters are bound](https://www.sqlite.org/c3ref/bind_blob.html) using the[m
[32m+[m[32m         * values in `namedParameters` and `anonymousParameters`.[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         * @param namedParameters An optional object used to bind named parameters. The keys of this object are used to configure the mapping.[m
[32m+[m[32m         * @param anonymousParameters Zero or more values to bind to anonymous parameters.[m
[32m+[m[32m         * @return An object corresponding to the first row returned by executing the prepared statement. The keys and values of the object correspond to the column names and values of the row. If no[m
[32m+[m[32m         * rows were returned from the database then this method returns `undefined`.[m
[32m+[m[32m         */[m
[32m+[m[32m        get(...anonymousParameters: SupportedValueType[]): unknown;[m
[32m+[m[32m        get(namedParameters: Record<string, SupportedValueType>, ...anonymousParameters: SupportedValueType[]): unknown;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method executes a prepared statement and returns an object summarizing the[m
[32m+[m[32m         * resulting changes. The prepared statement [parameters are bound](https://www.sqlite.org/c3ref/bind_blob.html) using the[m
[32m+[m[32m         * values in `namedParameters` and `anonymousParameters`.[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         * @param namedParameters An optional object used to bind named parameters. The keys of this object are used to configure the mapping.[m
[32m+[m[32m         * @param anonymousParameters Zero or more values to bind to anonymous parameters.[m
[32m+[m[32m         */[m
[32m+[m[32m        run(...anonymousParameters: SupportedValueType[]): StatementResultingChanges;[m
[32m+[m[32m        run([m
[32m+[m[32m            namedParameters: Record<string, SupportedValueType>,[m
[32m+[m[32m            ...anonymousParameters: SupportedValueType[][m
[32m+[m[32m        ): StatementResultingChanges;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The names of SQLite parameters begin with a prefix character. By default,`node:sqlite` requires that this prefix character is present when binding[m
[32m+[m[32m         * parameters. However, with the exception of dollar sign character, these[m
[32m+[m[32m         * prefix characters also require extra quoting when used in object keys.[m
[32m+[m[32m         *[m
[32m+[m[32m         * To improve ergonomics, this method can be used to also allow bare named[m
[32m+[m[32m         * parameters, which do not require the prefix character in JavaScript code. There[m
[32m+[m[32m         * are several caveats to be aware of when enabling bare named parameters:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * The prefix character is still required in SQL.[m
[32m+[m[32m         * * The prefix character is still allowed in JavaScript. In fact, prefixed names[m
[32m+[m[32m         * will have slightly better binding performance.[m
[32m+[m[32m         * * Using ambiguous named parameters, such as `$k` and `@k`, in the same prepared[m
[32m+[m[32m         * statement will result in an exception as it cannot be determined how to bind[m
[32m+[m[32m         * a bare name.[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         * @param enabled Enables or disables support for binding named parameters without the prefix character.[m
[32m+[m[32m         */[m
[32m+[m[32m        setAllowBareNamedParameters(enabled: boolean): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * When reading from the database, SQLite `INTEGER`s are mapped to JavaScript[m
[32m+[m[32m         * numbers by default. However, SQLite `INTEGER`s can store values larger than[m
[32m+[m[32m         * JavaScript numbers are capable of representing. In such cases, this method can[m
[32m+[m[32m         * be used to read `INTEGER` data using JavaScript `BigInt`s. This method has no[m
[32m+[m[32m         * impact on database write operations where numbers and `BigInt`s are both[m
[32m+[m[32m         * supported at all times.[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         * @param enabled Enables or disables the use of `BigInt`s when reading `INTEGER` fields from the database.[m
[32m+[m[32m         */[m
[32m+[m[32m        setReadBigInts(enabled: boolean): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method returns the source SQL of the prepared statement. This method is a[m
[32m+[m[32m         * wrapper around [`sqlite3_sql()`](https://www.sqlite.org/c3ref/expanded_sql.html).[m
[32m+[m[32m         * @since v22.5.0[m
[32m+[m[32m         * @return The source SQL used to create this prepared statement.[m
[32m+[m[32m         */[m
[32m+[m[32m        sourceSQL(): string;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/stream.d.ts b/node_modules/@types/node/stream.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..a5f6ede[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/stream.d.ts[m
[36m@@ -0,0 +1,1707 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * A stream is an abstract interface for working with streaming data in Node.js.[m
[32m+[m[32m * The `node:stream` module provides an API for implementing the stream interface.[m
[32m+[m[32m *[m
[32m+[m[32m * There are many stream objects provided by Node.js. For instance, a [request to an HTTP server](https://nodejs.org/docs/latest-v22.x/api/http.html#class-httpincomingmessage)[m
[32m+[m[32m * and [`process.stdout`](https://nodejs.org/docs/latest-v22.x/api/process.html#processstdout) are both stream instances.[m
[32m+[m[32m *[m
[32m+[m[32m * Streams can be readable, writable, or both. All streams are instances of [`EventEmitter`](https://nodejs.org/docs/latest-v22.x/api/events.html#class-eventemitter).[m
[32m+[m[32m *[m
[32m+[m[32m * To access the `node:stream` module:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const stream = require('node:stream');[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * The `node:stream` module is useful for creating new types of stream instances.[m
[32m+[m[32m * It is usually not necessary to use the `node:stream` module to consume streams.[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/stream.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "stream" {[m
[32m+[m[32m    import { Abortable, EventEmitter } from "node:events";[m
[32m+[m[32m    import { Blob as NodeBlob } from "node:buffer";[m
[32m+[m[32m    import * as streamPromises from "node:stream/promises";[m
[32m+[m[32m    import * as streamConsumers from "node:stream/consumers";[m
[32m+[m[32m    import * as streamWeb from "node:stream/web";[m
[32m+[m
[32m+[m[32m    type ComposeFnParam = (source: any) => void;[m
[32m+[m
[32m+[m[32m    class internal extends EventEmitter {[m
[32m+[m[32m        pipe<T extends NodeJS.WritableStream>([m
[32m+[m[32m            destination: T,[m
[32m+[m[32m            options?: {[m
[32m+[m[32m                end?: boolean | undefined;[m
[32m+[m[32m            },[m
[32m+[m[32m        ): T;[m
[32m+[m[32m        compose<T extends NodeJS.ReadableStream>([m
[32m+[m[32m            stream: T | ComposeFnParam | Iterable<T> | AsyncIterable<T>,[m
[32m+[m[32m            options?: { signal: AbortSignal },[m
[32m+[m[32m        ): T;[m
[32m+[m[32m    }[m
[32m+[m[32m    import Stream = internal.Stream;[m
[32m+[m[32m    import Readable = internal.Readable;[m
[32m+[m[32m    import ReadableOptions = internal.ReadableOptions;[m
[32m+[m[32m    interface ArrayOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The maximum concurrent invocations of `fn` to call on the stream at once.[m
[32m+[m[32m         * @default 1[m
[32m+[m[32m         */[m
[32m+[m[32m        concurrency?: number;[m
[32m+[m[32m        /** Allows destroying the stream if the signal is aborted. */[m
[32m+[m[32m        signal?: AbortSignal;[m
[32m+[m[32m    }[m
[32m+[m[32m    class ReadableBase extends Stream implements NodeJS.ReadableStream {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A utility method for creating Readable Streams out of iterators.[m
[32m+[m[32m         * @since v12.3.0, v10.17.0[m
[32m+[m[32m         * @param iterable Object implementing the `Symbol.asyncIterator` or `Symbol.iterator` iterable protocol. Emits an 'error' event if a null value is passed.[m
[32m+[m[32m         * @param options Options provided to `new stream.Readable([options])`. By default, `Readable.from()` will set `options.objectMode` to `true`, unless this is explicitly opted out by setting `options.objectMode` to `false`.[m
[32m+[m[32m         */[m
[32m+[m[32m        static from(iterable: Iterable<any> | AsyncIterable<any>, options?: ReadableOptions): Readable;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns whether the stream has been read from or cancelled.[m
[32m+[m[32m         * @since v16.8.0[m
[32m+[m[32m         */[m
[32m+[m[32m        static isDisturbed(stream: Readable | NodeJS.ReadableStream): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns whether the stream was destroyed or errored before emitting `'end'`.[m
[32m+[m[32m         * @since v16.8.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly readableAborted: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Is `true` if it is safe to call {@link read}, which means[m
[32m+[m[32m         * the stream has not been destroyed or emitted `'error'` or `'end'`.[m
[32m+[m[32m         * @since v11.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readable: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns whether `'data'` has been emitted.[m
[32m+[m[32m         * @since v16.7.0, v14.18.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly readableDidRead: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Getter for the property `encoding` of a given `Readable` stream. The `encoding` property can be set using the {@link setEncoding} method.[m
[32m+[m[32m         * @since v12.7.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly readableEncoding: BufferEncoding | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Becomes `true` when [`'end'`](https://nodejs.org/docs/latest-v22.x/api/stream.html#event-end) event is emitted.[m
[32m+[m[32m         * @since v12.9.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly readableEnded: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property reflects the current state of a `Readable` stream as described[m
[32m+[m[32m         * in the [Three states](https://nodejs.org/docs/latest-v22.x/api/stream.html#three-states) section.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly readableFlowing: boolean | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the value of `highWaterMark` passed when creating this `Readable`.[m
[32m+[m[32m         * @since v9.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly readableHighWaterMark: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property contains the number of bytes (or objects) in the queue[m
[32m+[m[32m         * ready to be read. The value provides introspection data regarding[m
[32m+[m[32m         * the status of the `highWaterMark`.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly readableLength: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Getter for the property `objectMode` of a given `Readable` stream.[m
[32m+[m[32m         * @since v12.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly readableObjectMode: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Is `true` after `readable.destroy()` has been called.[m
[32m+[m[32m         * @since v8.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        destroyed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Is `true` after `'close'` has been emitted.[m
[32m+[m[32m         * @since v18.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly closed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns error if the stream has been destroyed with an error.[m
[32m+[m[32m         * @since v18.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly errored: Error | null;[m
[32m+[m[32m        constructor(opts?: ReadableOptions);[m
[32m+[m[32m        _construct?(callback: (error?: Error | null) => void): void;[m
[32m+[m[32m        _read(size: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `readable.read()` method reads data out of the internal buffer and[m
[32m+[m[32m         * returns it. If no data is available to be read, `null` is returned. By default,[m
[32m+[m[32m         * the data is returned as a `Buffer` object unless an encoding has been[m
[32m+[m[32m         * specified using the `readable.setEncoding()` method or the stream is operating[m
[32m+[m[32m         * in object mode.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The optional `size` argument specifies a specific number of bytes to read. If[m
[32m+[m[32m         * `size` bytes are not available to be read, `null` will be returned _unless_ the[m
[32m+[m[32m         * stream has ended, in which case all of the data remaining in the internal buffer[m
[32m+[m[32m         * will be returned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `size` argument is not specified, all of the data contained in the[m
[32m+[m[32m         * internal buffer will be returned.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `size` argument must be less than or equal to 1 GiB.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `readable.read()` method should only be called on `Readable` streams[m
[32m+[m[32m         * operating in paused mode. In flowing mode, `readable.read()` is called[m
[32m+[m[32m         * automatically until the internal buffer is fully drained.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const readable = getReadableStreamSomehow();[m
[32m+[m[32m         *[m
[32m+[m[32m         * // 'readable' may be triggered multiple times as data is buffered in[m
[32m+[m[32m         * readable.on('readable', () => {[m
[32m+[m[32m         *   let chunk;[m
[32m+[m[32m         *   console.log('Stream is readable (new data received in buffer)');[m
[32m+[m[32m         *   // Use a loop to make sure we read all currently available data[m
[32m+[m[32m         *   while (null !== (chunk = readable.read())) {[m
[32m+[m[32m         *     console.log(`Read ${chunk.length} bytes of data...`);[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * // 'end' will be triggered once when there is no more data available[m
[32m+[m[32m         * readable.on('end', () => {[m
[32m+[m[32m         *   console.log('Reached end of stream.');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Each call to `readable.read()` returns a chunk of data, or `null`. The chunks[m
[32m+[m[32m         * are not concatenated. A `while` loop is necessary to consume all data[m
[32m+[m[32m         * currently in the buffer. When reading a large file `.read()` may return `null`,[m
[32m+[m[32m         * having consumed all buffered content so far, but there is still more data to[m
[32m+[m[32m         * come not yet buffered. In this case a new `'readable'` event will be emitted[m
[32m+[m[32m         * when there is more data in the buffer. Finally the `'end'` event will be[m
[32m+[m[32m         * emitted when there is no more data to come.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Therefore to read a file's whole contents from a `readable`, it is necessary[m
[32m+[m[32m         * to collect chunks across multiple `'readable'` events:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const chunks = [];[m
[32m+[m[32m         *[m
[32m+[m[32m         * readable.on('readable', () => {[m
[32m+[m[32m         *   let chunk;[m
[32m+[m[32m         *   while (null !== (chunk = readable.read())) {[m
[32m+[m[32m         *     chunks.push(chunk);[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * readable.on('end', () => {[m
[32m+[m[32m         *   const content = chunks.join('');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * A `Readable` stream in object mode will always return a single item from[m
[32m+[m[32m         * a call to `readable.read(size)`, regardless of the value of the `size` argument.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `readable.read()` method returns a chunk of data, a `'data'` event will[m
[32m+[m[32m         * also be emitted.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling {@link read} after the `'end'` event has[m
[32m+[m[32m         * been emitted will return `null`. No runtime error will be raised.[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         * @param size Optional argument to specify how much data to read.[m
[32m+[m[32m         */[m
[32m+[m[32m        read(size?: number): any;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `readable.setEncoding()` method sets the character encoding for[m
[32m+[m[32m         * data read from the `Readable` stream.[m
[32m+[m[32m         *[m
[32m+[m[32m         * By default, no encoding is assigned and stream data will be returned as `Buffer` objects. Setting an encoding causes the stream data[m
[32m+[m[32m         * to be returned as strings of the specified encoding rather than as `Buffer` objects. For instance, calling `readable.setEncoding('utf8')` will cause the[m
[32m+[m[32m         * output data to be interpreted as UTF-8 data, and passed as strings. Calling `readable.setEncoding('hex')` will cause the data to be encoded in hexadecimal[m
[32m+[m[32m         * string format.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `Readable` stream will properly handle multi-byte characters delivered[m
[32m+[m[32m         * through the stream that would otherwise become improperly decoded if simply[m
[32m+[m[32m         * pulled from the stream as `Buffer` objects.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const readable = getReadableStreamSomehow();[m
[32m+[m[32m         * readable.setEncoding('utf8');[m
[32m+[m[32m         * readable.on('data', (chunk) => {[m
[32m+[m[32m         *   assert.equal(typeof chunk, 'string');[m
[32m+[m[32m         *   console.log('Got %d characters of string data:', chunk.length);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         * @param encoding The encoding to use.[m
[32m+[m[32m         */[m
[32m+[m[32m        setEncoding(encoding: BufferEncoding): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `readable.pause()` method will cause a stream in flowing mode to stop[m
[32m+[m[32m         * emitting `'data'` events, switching out of flowing mode. Any data that[m
[32m+[m[32m         * becomes available will remain in the internal buffer.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const readable = getReadableStreamSomehow();[m
[32m+[m[32m         * readable.on('data', (chunk) => {[m
[32m+[m[32m         *   console.log(`Received ${chunk.length} bytes of data.`);[m
[32m+[m[32m         *   readable.pause();[m
[32m+[m[32m         *   console.log('There will be no additional data for 1 second.');[m
[32m+[m[32m         *   setTimeout(() => {[m
[32m+[m[32m         *     console.log('Now data will start flowing again.');[m
[32m+[m[32m         *     readable.resume();[m
[32m+[m[32m         *   }, 1000);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `readable.pause()` method has no effect if there is a `'readable'` event listener.[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         */[m
[32m+[m[32m        pause(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `readable.resume()` method causes an explicitly paused `Readable` stream to[m
[32m+[m[32m         * resume emitting `'data'` events, switching the stream into flowing mode.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `readable.resume()` method can be used to fully consume the data from a[m
[32m+[m[32m         * stream without actually processing any of that data:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * getReadableStreamSomehow()[m
[32m+[m[32m         *   .resume()[m
[32m+[m[32m         *   .on('end', () => {[m
[32m+[m[32m         *     console.log('Reached the end, but did not read anything.');[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `readable.resume()` method has no effect if there is a `'readable'` event listener.[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         */[m
[32m+[m[32m        resume(): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `readable.isPaused()` method returns the current operating state of the `Readable`.[m
[32m+[m[32m         * This is used primarily by the mechanism that underlies the `readable.pipe()` method.[m
[32m+[m[32m         * In most typical cases, there will be no reason to use this method directly.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const readable = new stream.Readable();[m
[32m+[m[32m         *[m
[32m+[m[32m         * readable.isPaused(); // === false[m
[32m+[m[32m         * readable.pause();[m
[32m+[m[32m         * readable.isPaused(); // === true[m
[32m+[m[32m         * readable.resume();[m
[32m+[m[32m         * readable.isPaused(); // === false[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.11.14[m
[32m+[m[32m         */[m
[32m+[m[32m        isPaused(): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `readable.unpipe()` method detaches a `Writable` stream previously attached[m
[32m+[m[32m         * using the {@link pipe} method.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `destination` is not specified, then _all_ pipes are detached.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `destination` is specified, but no pipe is set up for it, then[m
[32m+[m[32m         * the method does nothing.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         * const readable = getReadableStreamSomehow();[m
[32m+[m[32m         * const writable = fs.createWriteStream('file.txt');[m
[32m+[m[32m         * // All the data from readable goes into 'file.txt',[m
[32m+[m[32m         * // but only for the first second.[m
[32m+[m[32m         * readable.pipe(writable);[m
[32m+[m[32m         * setTimeout(() => {[m
[32m+[m[32m         *   console.log('Stop writing to file.txt.');[m
[32m+[m[32m         *   readable.unpipe(writable);[m
[32m+[m[32m         *   console.log('Manually close the file stream.');[m
[32m+[m[32m         *   writable.end();[m
[32m+[m[32m         * }, 1000);[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         * @param destination Optional specific stream to unpipe[m
[32m+[m[32m         */[m
[32m+[m[32m        unpipe(destination?: NodeJS.WritableStream): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Passing `chunk` as `null` signals the end of the stream (EOF) and behaves the[m
[32m+[m[32m         * same as `readable.push(null)`, after which no more data can be written. The EOF[m
[32m+[m[32m         * signal is put at the end of the buffer and any buffered data will still be[m
[32m+[m[32m         * flushed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `readable.unshift()` method pushes a chunk of data back into the internal[m
[32m+[m[32m         * buffer. This is useful in certain situations where a stream is being consumed by[m
[32m+[m[32m         * code that needs to "un-consume" some amount of data that it has optimistically[m
[32m+[m[32m         * pulled out of the source, so that the data can be passed on to some other party.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `stream.unshift(chunk)` method cannot be called after the `'end'` event[m
[32m+[m[32m         * has been emitted or a runtime error will be thrown.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Developers using `stream.unshift()` often should consider switching to[m
[32m+[m[32m         * use of a `Transform` stream instead. See the `API for stream implementers` section for more information.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Pull off a header delimited by \n\n.[m
[32m+[m[32m         * // Use unshift() if we get too much.[m
[32m+[m[32m         * // Call the callback with (error, header, stream).[m
[32m+[m[32m         * const { StringDecoder } = require('node:string_decoder');[m
[32m+[m[32m         * function parseHeader(stream, callback) {[m
[32m+[m[32m         *   stream.on('error', callback);[m
[32m+[m[32m         *   stream.on('readable', onReadable);[m
[32m+[m[32m         *   const decoder = new StringDecoder('utf8');[m
[32m+[m[32m         *   let header = '';[m
[32m+[m[32m         *   function onReadable() {[m
[32m+[m[32m         *     let chunk;[m
[32m+[m[32m         *     while (null !== (chunk = stream.read())) {[m
[32m+[m[32m         *       const str = decoder.write(chunk);[m
[32m+[m[32m         *       if (str.includes('\n\n')) {[m
[32m+[m[32m         *         // Found the header boundary.[m
[32m+[m[32m         *         const split = str.split(/\n\n/);[m
[32m+[m[32m         *         header += split.shift();[m
[32m+[m[32m         *         const remaining = split.join('\n\n');[m
[32m+[m[32m         *         const buf = Buffer.from(remaining, 'utf8');[m
[32m+[m[32m         *         stream.removeListener('error', callback);[m
[32m+[m[32m         *         // Remove the 'readable' listener before unshifting.[m
[32m+[m[32m         *         stream.removeListener('readable', onReadable);[m
[32m+[m[32m         *         if (buf.length)[m
[32m+[m[32m         *           stream.unshift(buf);[m
[32m+[m[32m         *         // Now the body of the message can be read from the stream.[m
[32m+[m[32m         *         callback(null, header, stream);[m
[32m+[m[32m         *         return;[m
[32m+[m[32m         *       }[m
[32m+[m[32m         *       // Still reading the header.[m
[32m+[m[32m         *       header += str;[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * }[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Unlike {@link push}, `stream.unshift(chunk)` will not[m
[32m+[m[32m         * end the reading process by resetting the internal reading state of the stream.[m
[32m+[m[32m         * This can cause unexpected results if `readable.unshift()` is called during a[m
[32m+[m[32m         * read (i.e. from within a {@link _read} implementation on a[m
[32m+[m[32m         * custom stream). Following the call to `readable.unshift()` with an immediate {@link push} will reset the reading state appropriately,[m
[32m+[m[32m         * however it is best to simply avoid calling `readable.unshift()` while in the[m
[32m+[m[32m         * process of performing a read.[m
[32m+[m[32m         * @since v0.9.11[m
[32m+[m[32m         * @param chunk Chunk of data to unshift onto the read queue. For streams not operating in object mode, `chunk` must[m
[32m+[m[32m         * be a {string}, {Buffer}, {TypedArray}, {DataView} or `null`. For object mode streams, `chunk` may be any JavaScript value.[m
[32m+[m[32m         * @param encoding Encoding of string chunks. Must be a valid `Buffer` encoding, such as `'utf8'` or `'ascii'`.[m
[32m+[m[32m         */[m
[32m+[m[32m        unshift(chunk: any, encoding?: BufferEncoding): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Prior to Node.js 0.10, streams did not implement the entire `node:stream` module API as it is currently defined. (See `Compatibility` for more[m
[32m+[m[32m         * information.)[m
[32m+[m[32m         *[m
[32m+[m[32m         * When using an older Node.js library that emits `'data'` events and has a {@link pause} method that is advisory only, the `readable.wrap()` method can be used to create a `Readable`[m
[32m+[m[32m         * stream that uses[m
[32m+[m[32m         * the old stream as its data source.[m
[32m+[m[32m         *[m
[32m+[m[32m         * It will rarely be necessary to use `readable.wrap()` but the method has been[m
[32m+[m[32m         * provided as a convenience for interacting with older Node.js applications and[m
[32m+[m[32m         * libraries.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { OldReader } = require('./old-api-module.js');[m
[32m+[m[32m         * const { Readable } = require('node:stream');[m
[32m+[m[32m         * const oreader = new OldReader();[m
[32m+[m[32m         * const myReader = new Readable().wrap(oreader);[m
[32m+[m[32m         *[m
[32m+[m[32m         * myReader.on('readable', () => {[m
[32m+[m[32m         *   myReader.read(); // etc.[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         * @param stream An "old style" readable stream[m
[32m+[m[32m         */[m
[32m+[m[32m        wrap(stream: NodeJS.ReadableStream): this;[m
[32m+[m[32m        push(chunk: any, encoding?: BufferEncoding): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The iterator created by this method gives users the option to cancel the destruction[m
[32m+[m[32m         * of the stream if the `for await...of` loop is exited by `return`, `break`, or `throw`,[m
[32m+[m[32m         * or if the iterator should destroy the stream if the stream emitted an error during iteration.[m
[32m+[m[32m         * @since v16.3.0[m
[32m+[m[32m         * @param options.destroyOnReturn When set to `false`, calling `return` on the async iterator,[m
[32m+[m[32m         * or exiting a `for await...of` iteration using a `break`, `return`, or `throw` will not destroy the stream.[m
[32m+[m[32m         * **Default: `true`**.[m
[32m+[m[32m         */[m
[32m+[m[32m        iterator(options?: { destroyOnReturn?: boolean }): AsyncIterableIterator<any>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method allows mapping over the stream. The *fn* function will be called for every chunk in the stream.[m
[32m+[m[32m         * If the *fn* function returns a promise - that promise will be `await`ed before being passed to the result stream.[m
[32m+[m[32m         * @since v17.4.0, v16.14.0[m
[32m+[m[32m         * @param fn a function to map over every chunk in the stream. Async or not.[m
[32m+[m[32m         * @returns a stream mapped with the function *fn*.[m
[32m+[m[32m         */[m
[32m+[m[32m        map(fn: (data: any, options?: Pick<ArrayOptions, "signal">) => any, options?: ArrayOptions): Readable;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method allows filtering the stream. For each chunk in the stream the *fn* function will be called[m
[32m+[m[32m         * and if it returns a truthy value, the chunk will be passed to the result stream.[m
[32m+[m[32m         * If the *fn* function returns a promise - that promise will be `await`ed.[m
[32m+[m[32m         * @since v17.4.0, v16.14.0[m
[32m+[m[32m         * @param fn a function to filter chunks from the stream. Async or not.[m
[32m+[m[32m         * @returns a stream filtered with the predicate *fn*.[m
[32m+[m[32m         */[m
[32m+[m[32m        filter([m
[32m+[m[32m            fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,[m
[32m+[m[32m            options?: ArrayOptions,[m
[32m+[m[32m        ): Readable;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method allows iterating a stream. For each chunk in the stream the *fn* function will be called.[m
[32m+[m[32m         * If the *fn* function returns a promise - that promise will be `await`ed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method is different from `for await...of` loops in that it can optionally process chunks concurrently.[m
[32m+[m[32m         * In addition, a `forEach` iteration can only be stopped by having passed a `signal` option[m
[32m+[m[32m         * and aborting the related AbortController while `for await...of` can be stopped with `break` or `return`.[m
[32m+[m[32m         * In either case the stream will be destroyed.[m
[32m+[m[32m         *[m
[32m+[m[32m         * This method is different from listening to the `'data'` event in that it uses the `readable` event[m
[32m+[m[32m         * in the underlying machinary and can limit the number of concurrent *fn* calls.[m
[32m+[m[32m         * @since v17.5.0[m
[32m+[m[32m         * @param fn a function to call on each chunk of the stream. Async or not.[m
[32m+[m[32m         * @returns a promise for when the stream has finished.[m
[32m+[m[32m         */[m
[32m+[m[32m        forEach([m
[32m+[m[32m            fn: (data: any, options?: Pick<ArrayOptions, "signal">) => void | Promise<void>,[m
[32m+[m[32m            options?: ArrayOptions,[m
[32m+[m[32m        ): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method allows easily obtaining the contents of a stream.[m
[32m+[m[32m         *[m
[32m+[m[32m         * As this method reads the entire stream into memory, it negates the benefits of streams. It's intended[m
[32m+[m[32m         * for interoperability and convenience, not as the primary way to consume streams.[m
[32m+[m[32m         * @since v17.5.0[m
[32m+[m[32m         * @returns a promise containing an array with the contents of the stream.[m
[32m+[m[32m         */[m
[32m+[m[32m        toArray(options?: Pick<ArrayOptions, "signal">): Promise<any[]>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method is similar to `Array.prototype.some` and calls *fn* on each chunk in the stream[m
[32m+[m[32m         * until the awaited return value is `true` (or any truthy value). Once an *fn* call on a chunk[m
[32m+[m[32m         * `await`ed return value is truthy, the stream is destroyed and the promise is fulfilled with `true`.[m
[32m+[m[32m         * If none of the *fn* calls on the chunks return a truthy value, the promise is fulfilled with `false`.[m
[32m+[m[32m         * @since v17.5.0[m
[32m+[m[32m         * @param fn a function to call on each chunk of the stream. Async or not.[m
[32m+[m[32m         * @returns a promise evaluating to `true` if *fn* returned a truthy value for at least one of the chunks.[m
[32m+[m[32m         */[m
[32m+[m[32m        some([m
[32m+[m[32m            fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,[m
[32m+[m[32m            options?: ArrayOptions,[m
[32m+[m[32m        ): Promise<boolean>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method is similar to `Array.prototype.find` and calls *fn* on each chunk in the stream[m
[32m+[m[32m         * to find a chunk with a truthy value for *fn*. Once an *fn* call's awaited return value is truthy,[m
[32m+[m[32m         * the stream is destroyed and the promise is fulfilled with value for which *fn* returned a truthy value.[m
[32m+[m[32m         * If all of the *fn* calls on the chunks return a falsy value, the promise is fulfilled with `undefined`.[m
[32m+[m[32m         * @since v17.5.0[m
[32m+[m[32m         * @param fn a function to call on each chunk of the stream. Async or not.[m
[32m+[m[32m         * @returns a promise evaluating to the first chunk for which *fn* evaluated with a truthy value,[m
[32m+[m[32m         * or `undefined` if no element was found.[m
[32m+[m[32m         */[m
[32m+[m[32m        find<T>([m
[32m+[m[32m            fn: (data: any, options?: Pick<ArrayOptions, "signal">) => data is T,[m
[32m+[m[32m            options?: ArrayOptions,[m
[32m+[m[32m        ): Promise<T | undefined>;[m
[32m+[m[32m        find([m
[32m+[m[32m            fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,[m
[32m+[m[32m            options?: ArrayOptions,[m
[32m+[m[32m        ): Promise<any>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method is similar to `Array.prototype.every` and calls *fn* on each chunk in the stream[m
[32m+[m[32m         * to check if all awaited return values are truthy value for *fn*. Once an *fn* call on a chunk[m
[32m+[m[32m         * `await`ed return value is falsy, the stream is destroyed and the promise is fulfilled with `false`.[m
[32m+[m[32m         * If all of the *fn* calls on the chunks return a truthy value, the promise is fulfilled with `true`.[m
[32m+[m[32m         * @since v17.5.0[m
[32m+[m[32m         * @param fn a function to call on each chunk of the stream. Async or not.[m
[32m+[m[32m         * @returns a promise evaluating to `true` if *fn* returned a truthy value for every one of the chunks.[m
[32m+[m[32m         */[m
[32m+[m[32m        every([m
[32m+[m[32m            fn: (data: any, options?: Pick<ArrayOptions, "signal">) => boolean | Promise<boolean>,[m
[32m+[m[32m            options?: ArrayOptions,[m
[32m+[m[32m        ): Promise<boolean>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method returns a new stream by applying the given callback to each chunk of the stream[m
[32m+[m[32m         * and then flattening the result.[m
[32m+[m[32m         *[m
[32m+[m[32m         * It is possible to return a stream or another iterable or async iterable from *fn* and the result streams[m
[32m+[m[32m         * will be merged (flattened) into the returned stream.[m
[32m+[m[32m         * @since v17.5.0[m
[32m+[m[32m         * @param fn a function to map over every chunk in the stream. May be async. May be a stream or generator.[m
[32m+[m[32m         * @returns a stream flat-mapped with the function *fn*.[m
[32m+[m[32m         */[m
[32m+[m[32m        flatMap(fn: (data: any, options?: Pick<ArrayOptions, "signal">) => any, options?: ArrayOptions): Readable;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method returns a new stream with the first *limit* chunks dropped from the start.[m
[32m+[m[32m         * @since v17.5.0[m
[32m+[m[32m         * @param limit the number of chunks to drop from the readable.[m
[32m+[m[32m         * @returns a stream with *limit* chunks dropped from the start.[m
[32m+[m[32m         */[m
[32m+[m[32m        drop(limit: number, options?: Pick<ArrayOptions, "signal">): Readable;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method returns a new stream with the first *limit* chunks.[m
[32m+[m[32m         * @since v17.5.0[m
[32m+[m[32m         * @param limit the number of chunks to take from the readable.[m
[32m+[m[32m         * @returns a stream with *limit* chunks taken.[m
[32m+[m[32m         */[m
[32m+[m[32m        take(limit: number, options?: Pick<ArrayOptions, "signal">): Readable;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method returns a new stream with chunks of the underlying stream paired with a counter[m
[32m+[m[32m         * in the form `[index, chunk]`. The first index value is `0` and it increases by 1 for each chunk produced.[m
[32m+[m[32m         * @since v17.5.0[m
[32m+[m[32m         * @returns a stream of indexed pairs.[m
[32m+[m[32m         */[m
[32m+[m[32m        asIndexedPairs(options?: Pick<ArrayOptions, "signal">): Readable;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This method calls *fn* on each chunk of the stream in order, passing it the result from the calculation[m
[32m+[m[32m         * on the previous element. It returns a promise for the final value of the reduction.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If no *initial* value is supplied the first chunk of the stream is used as the initial value.[m
[32m+[m[32m         * If the stream is empty, the promise is rejected with a `TypeError` with the `ERR_INVALID_ARGS` code property.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The reducer function iterates the stream element-by-element which means that there is no *concurrency* parameter[m
[32m+[m[32m         * or parallelism. To perform a reduce concurrently, you can extract the async function to `readable.map` method.[m
[32m+[m[32m         * @since v17.5.0[m
[32m+[m[32m         * @param fn a reducer function to call over every chunk in the stream. Async or not.[m
[32m+[m[32m         * @param initial the initial value to use in the reduction.[m
[32m+[m[32m         * @returns a promise for the final value of the reduction.[m
[32m+[m[32m         */[m
[32m+[m[32m        reduce<T = any>([m
[32m+[m[32m            fn: (previous: any, data: any, options?: Pick<ArrayOptions, "signal">) => T,[m
[32m+[m[32m            initial?: undefined,[m
[32m+[m[32m            options?: Pick<ArrayOptions, "signal">,[m
[32m+[m[32m        ): Promise<T>;[m
[32m+[m[32m        reduce<T = any>([m
[32m+[m[32m            fn: (previous: T, data: any, options?: Pick<ArrayOptions, "signal">) => T,[m
[32m+[m[32m            initial: T,[m
[32m+[m[32m            options?: Pick<ArrayOptions, "signal">,[m
[32m+[m[32m        ): Promise<T>;[m
[32m+[m[32m        _destroy(error: Error | null, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Destroy the stream. Optionally emit an `'error'` event, and emit a `'close'` event (unless `emitClose` is set to `false`). After this call, the readable[m
[32m+[m[32m         * stream will release any internal resources and subsequent calls to `push()` will be ignored.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Once `destroy()` has been called any further calls will be a no-op and no[m
[32m+[m[32m         * further errors except from `_destroy()` may be emitted as `'error'`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Implementors should not override this method, but instead implement `readable._destroy()`.[m
[32m+[m[32m         * @since v8.0.0[m
[32m+[m[32m         * @param error Error which will be passed as payload in `'error'` event[m
[32m+[m[32m         */[m
[32m+[m[32m        destroy(error?: Error): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Event emitter[m
[32m+[m[32m         * The defined events on documents including:[m
[32m+[m[32m         * 1. close[m
[32m+[m[32m         * 2. data[m
[32m+[m[32m         * 3. end[m
[32m+[m[32m         * 4. error[m
[32m+[m[32m         * 5. pause[m
[32m+[m[32m         * 6. readable[m
[32m+[m[32m         * 7. resume[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m        addListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "data", chunk: any): boolean;[m
[32m+[m[32m        emit(event: "end"): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: "pause"): boolean;[m
[32m+[m[32m        emit(event: "readable"): boolean;[m
[32m+[m[32m        emit(event: "resume"): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m        on(event: "end", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "pause", listener: () => void): this;[m
[32m+[m[32m        on(event: "readable", listener: () => void): this;[m
[32m+[m[32m        on(event: "resume", listener: () => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m        once(event: "end", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "pause", listener: () => void): this;[m
[32m+[m[32m        once(event: "readable", listener: () => void): this;[m
[32m+[m[32m        once(event: "resume", listener: () => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m        prependListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        removeListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        removeListener(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m        removeListener(event: "end", listener: () => void): this;[m
[32m+[m[32m        removeListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        removeListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m        removeListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m        removeListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        [Symbol.asyncIterator](): AsyncIterableIterator<any>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calls `readable.destroy()` with an `AbortError` and returns a promise that fulfills when the stream is finished.[m
[32m+[m[32m         * @since v20.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        [Symbol.asyncDispose](): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    import WritableOptions = internal.WritableOptions;[m
[32m+[m[32m    class WritableBase extends Stream implements NodeJS.WritableStream {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Is `true` if it is safe to call `writable.write()`, which means[m
[32m+[m[32m         * the stream has not been destroyed, errored, or ended.[m
[32m+[m[32m         * @since v11.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly writable: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Is `true` after `writable.end()` has been called. This property[m
[32m+[m[32m         * does not indicate whether the data has been flushed, for this use `writable.writableFinished` instead.[m
[32m+[m[32m         * @since v12.9.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly writableEnded: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Is set to `true` immediately before the `'finish'` event is emitted.[m
[32m+[m[32m         * @since v12.6.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly writableFinished: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Return the value of `highWaterMark` passed when creating this `Writable`.[m
[32m+[m[32m         * @since v9.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly writableHighWaterMark: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This property contains the number of bytes (or objects) in the queue[m
[32m+[m[32m         * ready to be written. The value provides introspection data regarding[m
[32m+[m[32m         * the status of the `highWaterMark`.[m
[32m+[m[32m         * @since v9.4.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly writableLength: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Getter for the property `objectMode` of a given `Writable` stream.[m
[32m+[m[32m         * @since v12.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly writableObjectMode: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Number of times `writable.uncork()` needs to be[m
[32m+[m[32m         * called in order to fully uncork the stream.[m
[32m+[m[32m         * @since v13.2.0, v12.16.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly writableCorked: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Is `true` after `writable.destroy()` has been called.[m
[32m+[m[32m         * @since v8.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        destroyed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Is `true` after `'close'` has been emitted.[m
[32m+[m[32m         * @since v18.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly closed: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns error if the stream has been destroyed with an error.[m
[32m+[m[32m         * @since v18.0.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly errored: Error | null;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Is `true` if the stream's buffer has been full and stream will emit `'drain'`.[m
[32m+[m[32m         * @since v15.2.0, v14.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly writableNeedDrain: boolean;[m
[32m+[m[32m        constructor(opts?: WritableOptions);[m
[32m+[m[32m        _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m        _writev?([m
[32m+[m[32m            chunks: Array<{[m
[32m+[m[32m                chunk: any;[m
[32m+[m[32m                encoding: BufferEncoding;[m
[32m+[m[32m            }>,[m
[32m+[m[32m            callback: (error?: Error | null) => void,[m
[32m+[m[32m        ): void;[m
[32m+[m[32m        _construct?(callback: (error?: Error | null) => void): void;[m
[32m+[m[32m        _destroy(error: Error | null, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m        _final(callback: (error?: Error | null) => void): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `writable.write()` method writes some data to the stream, and calls the[m
[32m+[m[32m         * supplied `callback` once the data has been fully handled. If an error[m
[32m+[m[32m         * occurs, the `callback` will be called with the error as its[m
[32m+[m[32m         * first argument. The `callback` is called asynchronously and before `'error'` is[m
[32m+[m[32m         * emitted.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The return value is `true` if the internal buffer is less than the `highWaterMark` configured when the stream was created after admitting `chunk`.[m
[32m+[m[32m         * If `false` is returned, further attempts to write data to the stream should[m
[32m+[m[32m         * stop until the `'drain'` event is emitted.[m
[32m+[m[32m         *[m
[32m+[m[32m         * While a stream is not draining, calls to `write()` will buffer `chunk`, and[m
[32m+[m[32m         * return false. Once all currently buffered chunks are drained (accepted for[m
[32m+[m[32m         * delivery by the operating system), the `'drain'` event will be emitted.[m
[32m+[m[32m         * Once `write()` returns false, do not write more chunks[m
[32m+[m[32m         * until the `'drain'` event is emitted. While calling `write()` on a stream that[m
[32m+[m[32m         * is not draining is allowed, Node.js will buffer all written chunks until[m
[32m+[m[32m         * maximum memory usage occurs, at which point it will abort unconditionally.[m
[32m+[m[32m         * Even before it aborts, high memory usage will cause poor garbage collector[m
[32m+[m[32m         * performance and high RSS (which is not typically released back to the system,[m
[32m+[m[32m         * even after the memory is no longer required). Since TCP sockets may never[m
[32m+[m[32m         * drain if the remote peer does not read the data, writing a socket that is[m
[32m+[m[32m         * not draining may lead to a remotely exploitable vulnerability.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Writing data while the stream is not draining is particularly[m
[32m+[m[32m         * problematic for a `Transform`, because the `Transform` streams are paused[m
[32m+[m[32m         * by default until they are piped or a `'data'` or `'readable'` event handler[m
[32m+[m[32m         * is added.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the data to be written can be generated or fetched on demand, it is[m
[32m+[m[32m         * recommended to encapsulate the logic into a `Readable` and use {@link pipe}. However, if calling `write()` is preferred, it is[m
[32m+[m[32m         * possible to respect backpressure and avoid memory issues using the `'drain'` event:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * function write(data, cb) {[m
[32m+[m[32m         *   if (!stream.write(data)) {[m
[32m+[m[32m         *     stream.once('drain', cb);[m
[32m+[m[32m         *   } else {[m
[32m+[m[32m         *     process.nextTick(cb);[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * }[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Wait for cb to be called before doing any other write.[m
[32m+[m[32m         * write('hello', () => {[m
[32m+[m[32m         *   console.log('Write completed, do more writes now.');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * A `Writable` stream in object mode will always ignore the `encoding` argument.[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         * @param chunk Optional data to write. For streams not operating in object mode, `chunk` must be a {string}, {Buffer},[m
[32m+[m[32m         * {TypedArray} or {DataView}. For object mode streams, `chunk` may be any JavaScript value other than `null`.[m
[32m+[m[32m         * @param [encoding='utf8'] The encoding, if `chunk` is a string.[m
[32m+[m[32m         * @param callback Callback for when this chunk of data is flushed.[m
[32m+[m[32m         * @return `false` if the stream wishes for the calling code to wait for the `'drain'` event to be emitted before continuing to write additional data; otherwise `true`.[m
[32m+[m[32m         */[m
[32m+[m[32m        write(chunk: any, callback?: (error: Error | null | undefined) => void): boolean;[m
[32m+[m[32m        write(chunk: any, encoding: BufferEncoding, callback?: (error: Error | null | undefined) => void): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `writable.setDefaultEncoding()` method sets the default `encoding` for a `Writable` stream.[m
[32m+[m[32m         * @since v0.11.15[m
[32m+[m[32m         * @param encoding The new default encoding[m
[32m+[m[32m         */[m
[32m+[m[32m        setDefaultEncoding(encoding: BufferEncoding): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Calling the `writable.end()` method signals that no more data will be written[m
[32m+[m[32m         * to the `Writable`. The optional `chunk` and `encoding` arguments allow one[m
[32m+[m[32m         * final additional chunk of data to be written immediately before closing the[m
[32m+[m[32m         * stream.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling the {@link write} method after calling {@link end} will raise an error.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * // Write 'hello, ' and then end with 'world!'.[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         * const file = fs.createWriteStream('example.txt');[m
[32m+[m[32m         * file.write('hello, ');[m
[32m+[m[32m         * file.end('world!');[m
[32m+[m[32m         * // Writing more now is not allowed![m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         * @param chunk Optional data to write. For streams not operating in object mode, `chunk` must be a {string}, {Buffer},[m
[32m+[m[32m         * {TypedArray} or {DataView}. For object mode streams, `chunk` may be any JavaScript value other than `null`.[m
[32m+[m[32m         * @param encoding The encoding if `chunk` is a string[m
[32m+[m[32m         * @param callback Callback for when the stream is finished.[m
[32m+[m[32m         */[m
[32m+[m[32m        end(cb?: () => void): this;[m
[32m+[m[32m        end(chunk: any, cb?: () => void): this;[m
[32m+[m[32m        end(chunk: any, encoding: BufferEncoding, cb?: () => void): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `writable.cork()` method forces all written data to be buffered in memory.[m
[32m+[m[32m         * The buffered data will be flushed when either the {@link uncork} or {@link end} methods are called.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The primary intent of `writable.cork()` is to accommodate a situation in which[m
[32m+[m[32m         * several small chunks are written to the stream in rapid succession. Instead of[m
[32m+[m[32m         * immediately forwarding them to the underlying destination, `writable.cork()` buffers all the chunks until `writable.uncork()` is called, which will pass them[m
[32m+[m[32m         * all to `writable._writev()`, if present. This prevents a head-of-line blocking[m
[32m+[m[32m         * situation where data is being buffered while waiting for the first small chunk[m
[32m+[m[32m         * to be processed. However, use of `writable.cork()` without implementing `writable._writev()` may have an adverse effect on throughput.[m
[32m+[m[32m         *[m
[32m+[m[32m         * See also: `writable.uncork()`, `writable._writev()`.[m
[32m+[m[32m         * @since v0.11.2[m
[32m+[m[32m         */[m
[32m+[m[32m        cork(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `writable.uncork()` method flushes all data buffered since {@link cork} was called.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When using `writable.cork()` and `writable.uncork()` to manage the buffering[m
[32m+[m[32m         * of writes to a stream, defer calls to `writable.uncork()` using `process.nextTick()`. Doing so allows batching of all `writable.write()` calls that occur within a given Node.js event[m
[32m+[m[32m         * loop phase.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * stream.cork();[m
[32m+[m[32m         * stream.write('some ');[m
[32m+[m[32m         * stream.write('data ');[m
[32m+[m[32m         * process.nextTick(() => stream.uncork());[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `writable.cork()` method is called multiple times on a stream, the[m
[32m+[m[32m         * same number of calls to `writable.uncork()` must be called to flush the buffered[m
[32m+[m[32m         * data.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * stream.cork();[m
[32m+[m[32m         * stream.write('some ');[m
[32m+[m[32m         * stream.cork();[m
[32m+[m[32m         * stream.write('data ');[m
[32m+[m[32m         * process.nextTick(() => {[m
[32m+[m[32m         *   stream.uncork();[m
[32m+[m[32m         *   // The data will not be flushed until uncork() is called a second time.[m
[32m+[m[32m         *   stream.uncork();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * See also: `writable.cork()`.[m
[32m+[m[32m         * @since v0.11.2[m
[32m+[m[32m         */[m
[32m+[m[32m        uncork(): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Destroy the stream. Optionally emit an `'error'` event, and emit a `'close'` event (unless `emitClose` is set to `false`). After this call, the writable[m
[32m+[m[32m         * stream has ended and subsequent calls to `write()` or `end()` will result in[m
[32m+[m[32m         * an `ERR_STREAM_DESTROYED` error.[m
[32m+[m[32m         * This is a destructive and immediate way to destroy a stream. Previous calls to `write()` may not have drained, and may trigger an `ERR_STREAM_DESTROYED` error.[m
[32m+[m[32m         * Use `end()` instead of destroy if data should flush before close, or wait for[m
[32m+[m[32m         * the `'drain'` event before destroying the stream.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Once `destroy()` has been called any further calls will be a no-op and no[m
[32m+[m[32m         * further errors except from `_destroy()` may be emitted as `'error'`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Implementors should not override this method,[m
[32m+[m[32m         * but instead implement `writable._destroy()`.[m
[32m+[m[32m         * @since v8.0.0[m
[32m+[m[32m         * @param error Optional, an error to emit with `'error'` event.[m
[32m+[m[32m         */[m
[32m+[m[32m        destroy(error?: Error): this;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Event emitter[m
[32m+[m[32m         * The defined events on documents including:[m
[32m+[m[32m         * 1. close[m
[32m+[m[32m         * 2. drain[m
[32m+[m[32m         * 3. error[m
[32m+[m[32m         * 4. finish[m
[32m+[m[32m         * 5. pipe[m
[32m+[m[32m         * 6. unpipe[m
[32m+[m[32m         */[m
[32m+[m[32m        addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        addListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        addListener(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        addListener(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "close"): boolean;[m
[32m+[m[32m        emit(event: "drain"): boolean;[m
[32m+[m[32m        emit(event: "error", err: Error): boolean;[m
[32m+[m[32m        emit(event: "finish"): boolean;[m
[32m+[m[32m        emit(event: "pipe", src: Readable): boolean;[m
[32m+[m[32m        emit(event: "unpipe", src: Readable): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on(event: "close", listener: () => void): this;[m
[32m+[m[32m        on(event: "drain", listener: () => void): this;[m
[32m+[m[32m        on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        on(event: "finish", listener: () => void): this;[m
[32m+[m[32m        on(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        on(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "close", listener: () => void): this;[m
[32m+[m[32m        once(event: "drain", listener: () => void): this;[m
[32m+[m[32m        once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        once(event: "finish", listener: () => void): this;[m
[32m+[m[32m        once(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        once(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        prependListener(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        removeListener(event: "close", listener: () => void): this;[m
[32m+[m[32m        removeListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m        removeListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m        removeListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m        removeListener(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        removeListener(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m        removeListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    namespace internal {[m
[32m+[m[32m        class Stream extends internal {[m
[32m+[m[32m            constructor(opts?: ReadableOptions);[m
[32m+[m[32m        }[m
[32m+[m[32m        interface StreamOptions<T extends Stream> extends Abortable {[m
[32m+[m[32m            emitClose?: boolean | undefined;[m
[32m+[m[32m            highWaterMark?: number | undefined;[m
[32m+[m[32m            objectMode?: boolean | undefined;[m
[32m+[m[32m            construct?(this: T, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            destroy?(this: T, error: Error | null, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            autoDestroy?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface ReadableOptions extends StreamOptions<Readable> {[m
[32m+[m[32m            encoding?: BufferEncoding | undefined;[m
[32m+[m[32m            read?(this: Readable, size: number): void;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         */[m
[32m+[m[32m        class Readable extends ReadableBase {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A utility method for creating a `Readable` from a web `ReadableStream`.[m
[32m+[m[32m             * @since v17.0.0[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            static fromWeb([m
[32m+[m[32m                readableStream: streamWeb.ReadableStream,[m
[32m+[m[32m                options?: Pick<ReadableOptions, "encoding" | "highWaterMark" | "objectMode" | "signal">,[m
[32m+[m[32m            ): Readable;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A utility method for creating a web `ReadableStream` from a `Readable`.[m
[32m+[m[32m             * @since v17.0.0[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            static toWeb(streamReadable: Readable): streamWeb.ReadableStream;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface WritableOptions extends StreamOptions<Writable> {[m
[32m+[m[32m            decodeStrings?: boolean | undefined;[m
[32m+[m[32m            defaultEncoding?: BufferEncoding | undefined;[m
[32m+[m[32m            write?([m
[32m+[m[32m                this: Writable,[m
[32m+[m[32m                chunk: any,[m
[32m+[m[32m                encoding: BufferEncoding,[m
[32m+[m[32m                callback: (error?: Error | null) => void,[m
[32m+[m[32m            ): void;[m
[32m+[m[32m            writev?([m
[32m+[m[32m                this: Writable,[m
[32m+[m[32m                chunks: Array<{[m
[32m+[m[32m                    chunk: any;[m
[32m+[m[32m                    encoding: BufferEncoding;[m
[32m+[m[32m                }>,[m
[32m+[m[32m                callback: (error?: Error | null) => void,[m
[32m+[m[32m            ): void;[m
[32m+[m[32m            final?(this: Writable, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         */[m
[32m+[m[32m        class Writable extends WritableBase {[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A utility method for creating a `Writable` from a web `WritableStream`.[m
[32m+[m[32m             * @since v17.0.0[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            static fromWeb([m
[32m+[m[32m                writableStream: streamWeb.WritableStream,[m
[32m+[m[32m                options?: Pick<WritableOptions, "decodeStrings" | "highWaterMark" | "objectMode" | "signal">,[m
[32m+[m[32m            ): Writable;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A utility method for creating a web `WritableStream` from a `Writable`.[m
[32m+[m[32m             * @since v17.0.0[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            static toWeb(streamWritable: Writable): streamWeb.WritableStream;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface DuplexOptions extends ReadableOptions, WritableOptions {[m
[32m+[m[32m            allowHalfOpen?: boolean | undefined;[m
[32m+[m[32m            readableObjectMode?: boolean | undefined;[m
[32m+[m[32m            writableObjectMode?: boolean | undefined;[m
[32m+[m[32m            readableHighWaterMark?: number | undefined;[m
[32m+[m[32m            writableHighWaterMark?: number | undefined;[m
[32m+[m[32m            writableCorked?: number | undefined;[m
[32m+[m[32m            construct?(this: Duplex, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            read?(this: Duplex, size: number): void;[m
[32m+[m[32m            write?(this: Duplex, chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            writev?([m
[32m+[m[32m                this: Duplex,[m
[32m+[m[32m                chunks: Array<{[m
[32m+[m[32m                    chunk: any;[m
[32m+[m[32m                    encoding: BufferEncoding;[m
[32m+[m[32m                }>,[m
[32m+[m[32m                callback: (error?: Error | null) => void,[m
[32m+[m[32m            ): void;[m
[32m+[m[32m            final?(this: Duplex, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            destroy?(this: Duplex, error: Error | null, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Duplex streams are streams that implement both the `Readable` and `Writable` interfaces.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Examples of `Duplex` streams include:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `TCP sockets`[m
[32m+[m[32m         * * `zlib streams`[m
[32m+[m[32m         * * `crypto streams`[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         */[m
[32m+[m[32m        class Duplex extends ReadableBase implements WritableBase {[m
[32m+[m[32m            readonly writable: boolean;[m
[32m+[m[32m            readonly writableEnded: boolean;[m
[32m+[m[32m            readonly writableFinished: boolean;[m
[32m+[m[32m            readonly writableHighWaterMark: number;[m
[32m+[m[32m            readonly writableLength: number;[m
[32m+[m[32m            readonly writableObjectMode: boolean;[m
[32m+[m[32m            readonly writableCorked: number;[m
[32m+[m[32m            readonly writableNeedDrain: boolean;[m
[32m+[m[32m            readonly closed: boolean;[m
[32m+[m[32m            readonly errored: Error | null;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * If `false` then the stream will automatically end the writable side when the[m
[32m+[m[32m             * readable side ends. Set initially by the `allowHalfOpen` constructor option,[m
[32m+[m[32m             * which defaults to `true`.[m
[32m+[m[32m             *[m
[32m+[m[32m             * This can be changed manually to change the half-open behavior of an existing[m
[32m+[m[32m             * `Duplex` stream instance, but must be changed before the `'end'` event is emitted.[m
[32m+[m[32m             * @since v0.9.4[m
[32m+[m[32m             */[m
[32m+[m[32m            allowHalfOpen: boolean;[m
[32m+[m[32m            constructor(opts?: DuplexOptions);[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A utility method for creating duplex streams.[m
[32m+[m[32m             *[m
[32m+[m[32m             * - `Stream` converts writable stream into writable `Duplex` and readable stream[m
[32m+[m[32m             *   to `Duplex`.[m
[32m+[m[32m             * - `Blob` converts into readable `Duplex`.[m
[32m+[m[32m             * - `string` converts into readable `Duplex`.[m
[32m+[m[32m             * - `ArrayBuffer` converts into readable `Duplex`.[m
[32m+[m[32m             * - `AsyncIterable` converts into a readable `Duplex`. Cannot yield `null`.[m
[32m+[m[32m             * - `AsyncGeneratorFunction` converts into a readable/writable transform[m
[32m+[m[32m             *   `Duplex`. Must take a source `AsyncIterable` as first parameter. Cannot yield[m
[32m+[m[32m             *   `null`.[m
[32m+[m[32m             * - `AsyncFunction` converts into a writable `Duplex`. Must return[m
[32m+[m[32m             *   either `null` or `undefined`[m
[32m+[m[32m             * - `Object ({ writable, readable })` converts `readable` and[m
[32m+[m[32m             *   `writable` into `Stream` and then combines them into `Duplex` where the[m
[32m+[m[32m             *   `Duplex` will write to the `writable` and read from the `readable`.[m
[32m+[m[32m             * - `Promise` converts into readable `Duplex`. Value `null` is ignored.[m
[32m+[m[32m             *[m
[32m+[m[32m             * @since v16.8.0[m
[32m+[m[32m             */[m
[32m+[m[32m            static from([m
[32m+[m[32m                src:[m
[32m+[m[32m                    | Stream[m
[32m+[m[32m                    | NodeBlob[m
[32m+[m[32m                    | ArrayBuffer[m
[32m+[m[32m                    | string[m
[32m+[m[32m                    | Iterable<any>[m
[32m+[m[32m                    | AsyncIterable<any>[m
[32m+[m[32m                    | AsyncGeneratorFunction[m
[32m+[m[32m                    | Promise<any>[m
[32m+[m[32m                    | Object,[m
[32m+[m[32m            ): Duplex;[m
[32m+[m[32m            _write(chunk: any, encoding: BufferEncoding, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            _writev?([m
[32m+[m[32m                chunks: Array<{[m
[32m+[m[32m                    chunk: any;[m
[32m+[m[32m                    encoding: BufferEncoding;[m
[32m+[m[32m                }>,[m
[32m+[m[32m                callback: (error?: Error | null) => void,[m
[32m+[m[32m            ): void;[m
[32m+[m[32m            _destroy(error: Error | null, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            _final(callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            write(chunk: any, encoding?: BufferEncoding, cb?: (error: Error | null | undefined) => void): boolean;[m
[32m+[m[32m            write(chunk: any, cb?: (error: Error | null | undefined) => void): boolean;[m
[32m+[m[32m            setDefaultEncoding(encoding: BufferEncoding): this;[m
[32m+[m[32m            end(cb?: () => void): this;[m
[32m+[m[32m            end(chunk: any, cb?: () => void): this;[m
[32m+[m[32m            end(chunk: any, encoding?: BufferEncoding, cb?: () => void): this;[m
[32m+[m[32m            cork(): void;[m
[32m+[m[32m            uncork(): void;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A utility method for creating a web `ReadableStream` and `WritableStream` from a `Duplex`.[m
[32m+[m[32m             * @since v17.0.0[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            static toWeb(streamDuplex: Duplex): {[m
[32m+[m[32m                readable: streamWeb.ReadableStream;[m
[32m+[m[32m                writable: streamWeb.WritableStream;[m
[32m+[m[32m            };[m
[32m+[m[32m            /**[m
[32m+[m[32m             * A utility method for creating a `Duplex` from a web `ReadableStream` and `WritableStream`.[m
[32m+[m[32m             * @since v17.0.0[m
[32m+[m[32m             * @experimental[m
[32m+[m[32m             */[m
[32m+[m[32m            static fromWeb([m
[32m+[m[32m                duplexStream: {[m
[32m+[m[32m                    readable: streamWeb.ReadableStream;[m
[32m+[m[32m                    writable: streamWeb.WritableStream;[m
[32m+[m[32m                },[m
[32m+[m[32m                options?: Pick<[m
[32m+[m[32m                    DuplexOptions,[m
[32m+[m[32m                    "allowHalfOpen" | "decodeStrings" | "encoding" | "highWaterMark" | "objectMode" | "signal"[m
[32m+[m[32m                >,[m
[32m+[m[32m            ): Duplex;[m
[32m+[m[32m            /**[m
[32m+[m[32m             * Event emitter[m
[32m+[m[32m             * The defined events on documents including:[m
[32m+[m[32m             * 1.  close[m
[32m+[m[32m             * 2.  data[m
[32m+[m[32m             * 3.  drain[m
[32m+[m[32m             * 4.  end[m
[32m+[m[32m             * 5.  error[m
[32m+[m[32m             * 6.  finish[m
[32m+[m[32m             * 7.  pause[m
[32m+[m[32m             * 8.  pipe[m
[32m+[m[32m             * 9.  readable[m
[32m+[m[32m             * 10. resume[m
[32m+[m[32m             * 11. unpipe[m
[32m+[m[32m             */[m
[32m+[m[32m            addListener(event: "close", listener: () => void): this;[m
[32m+[m[32m            addListener(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m            addListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m            addListener(event: "end", listener: () => void): this;[m
[32m+[m[32m            addListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m            addListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m            addListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m            addListener(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            addListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m            addListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m            addListener(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            addListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m            emit(event: "close"): boolean;[m
[32m+[m[32m            emit(event: "data", chunk: any): boolean;[m
[32m+[m[32m            emit(event: "drain"): boolean;[m
[32m+[m[32m            emit(event: "end"): boolean;[m
[32m+[m[32m            emit(event: "error", err: Error): boolean;[m
[32m+[m[32m            emit(event: "finish"): boolean;[m
[32m+[m[32m            emit(event: "pause"): boolean;[m
[32m+[m[32m            emit(event: "pipe", src: Readable): boolean;[m
[32m+[m[32m            emit(event: "readable"): boolean;[m
[32m+[m[32m            emit(event: "resume"): boolean;[m
[32m+[m[32m            emit(event: "unpipe", src: Readable): boolean;[m
[32m+[m[32m            emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m            on(event: "close", listener: () => void): this;[m
[32m+[m[32m            on(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m            on(event: "drain", listener: () => void): this;[m
[32m+[m[32m            on(event: "end", listener: () => void): this;[m
[32m+[m[32m            on(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m            on(event: "finish", listener: () => void): this;[m
[32m+[m[32m            on(event: "pause", listener: () => void): this;[m
[32m+[m[32m            on(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            on(event: "readable", listener: () => void): this;[m
[32m+[m[32m            on(event: "resume", listener: () => void): this;[m
[32m+[m[32m            on(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            on(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m            once(event: "close", listener: () => void): this;[m
[32m+[m[32m            once(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m            once(event: "drain", listener: () => void): this;[m
[32m+[m[32m            once(event: "end", listener: () => void): this;[m
[32m+[m[32m            once(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m            once(event: "finish", listener: () => void): this;[m
[32m+[m[32m            once(event: "pause", listener: () => void): this;[m
[32m+[m[32m            once(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            once(event: "readable", listener: () => void): this;[m
[32m+[m[32m            once(event: "resume", listener: () => void): this;[m
[32m+[m[32m            once(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            once(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m            prependListener(event: "close", listener: () => void): this;[m
[32m+[m[32m            prependListener(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m            prependListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m            prependListener(event: "end", listener: () => void): this;[m
[32m+[m[32m            prependListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m            prependListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m            prependListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m            prependListener(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            prependListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m            prependListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m            prependListener(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            prependListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m            prependOnceListener(event: "close", listener: () => void): this;[m
[32m+[m[32m            prependOnceListener(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m            prependOnceListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m            prependOnceListener(event: "end", listener: () => void): this;[m
[32m+[m[32m            prependOnceListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m            prependOnceListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m            prependOnceListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m            prependOnceListener(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            prependOnceListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m            prependOnceListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m            prependOnceListener(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            prependOnceListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m            removeListener(event: "close", listener: () => void): this;[m
[32m+[m[32m            removeListener(event: "data", listener: (chunk: any) => void): this;[m
[32m+[m[32m            removeListener(event: "drain", listener: () => void): this;[m
[32m+[m[32m            removeListener(event: "end", listener: () => void): this;[m
[32m+[m[32m            removeListener(event: "error", listener: (err: Error) => void): this;[m
[32m+[m[32m            removeListener(event: "finish", listener: () => void): this;[m
[32m+[m[32m            removeListener(event: "pause", listener: () => void): this;[m
[32m+[m[32m            removeListener(event: "pipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            removeListener(event: "readable", listener: () => void): this;[m
[32m+[m[32m            removeListener(event: "resume", listener: () => void): this;[m
[32m+[m[32m            removeListener(event: "unpipe", listener: (src: Readable) => void): this;[m
[32m+[m[32m            removeListener(event: string | symbol, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        }[m
[32m+[m[32m        type TransformCallback = (error?: Error | null, data?: any) => void;[m
[32m+[m[32m        interface TransformOptions extends DuplexOptions {[m
[32m+[m[32m            construct?(this: Transform, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            read?(this: Transform, size: number): void;[m
[32m+[m[32m            write?([m
[32m+[m[32m                this: Transform,[m
[32m+[m[32m                chunk: any,[m
[32m+[m[32m                encoding: BufferEncoding,[m
[32m+[m[32m                callback: (error?: Error | null) => void,[m
[32m+[m[32m            ): void;[m
[32m+[m[32m            writev?([m
[32m+[m[32m                this: Transform,[m
[32m+[m[32m                chunks: Array<{[m
[32m+[m[32m                    chunk: any;[m
[32m+[m[32m                    encoding: BufferEncoding;[m
[32m+[m[32m                }>,[m
[32m+[m[32m                callback: (error?: Error | null) => void,[m
[32m+[m[32m            ): void;[m
[32m+[m[32m            final?(this: Transform, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            destroy?(this: Transform, error: Error | null, callback: (error?: Error | null) => void): void;[m
[32m+[m[32m            transform?(this: Transform, chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;[m
[32m+[m[32m            flush?(this: Transform, callback: TransformCallback): void;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Transform streams are `Duplex` streams where the output is in some way[m
[32m+[m[32m         * related to the input. Like all `Duplex` streams, `Transform` streams[m
[32m+[m[32m         * implement both the `Readable` and `Writable` interfaces.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Examples of `Transform` streams include:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `zlib streams`[m
[32m+[m[32m         * * `crypto streams`[m
[32m+[m[32m         * @since v0.9.4[m
[32m+[m[32m         */[m
[32m+[m[32m        class Transform extends Duplex {[m
[32m+[m[32m            constructor(opts?: TransformOptions);[m
[32m+[m[32m            _transform(chunk: any, encoding: BufferEncoding, callback: TransformCallback): void;[m
[32m+[m[32m            _flush(callback: TransformCallback): void;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The `stream.PassThrough` class is a trivial implementation of a `Transform` stream that simply passes the input bytes across to the output. Its purpose is[m
[32m+[m[32m         * primarily for examples and testing, but there are some use cases where `stream.PassThrough` is useful as a building block for novel sorts of streams.[m
[32m+[m[32m         */[m
[32m+[m[32m        class PassThrough extends Transform {}[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A stream to attach a signal to.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Attaches an AbortSignal to a readable or writeable stream. This lets code[m
[32m+[m[32m         * control stream destruction using an `AbortController`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Calling `abort` on the `AbortController` corresponding to the passed `AbortSignal` will behave the same way as calling `.destroy(new AbortError())` on the[m
[32m+[m[32m         * stream, and `controller.error(new AbortError())` for webstreams.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const controller = new AbortController();[m
[32m+[m[32m         * const read = addAbortSignal([m
[32m+[m[32m         *   controller.signal,[m
[32m+[m[32m         *   fs.createReadStream(('object.json')),[m
[32m+[m[32m         * );[m
[32m+[m[32m         * // Later, abort the operation closing the stream[m
[32m+[m[32m         * controller.abort();[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Or using an `AbortSignal` with a readable stream as an async iterable:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const controller = new AbortController();[m
[32m+[m[32m         * setTimeout(() => controller.abort(), 10_000); // set a timeout[m
[32m+[m[32m         * const stream = addAbortSignal([m
[32m+[m[32m         *   controller.signal,[m
[32m+[m[32m         *   fs.createReadStream(('object.json')),[m
[32m+[m[32m         * );[m
[32m+[m[32m         * (async () => {[m
[32m+[m[32m         *   try {[m
[32m+[m[32m         *     for await (const chunk of stream) {[m
[32m+[m[32m         *       await process(chunk);[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *   } catch (e) {[m
[32m+[m[32m         *     if (e.name === 'AbortError') {[m
[32m+[m[32m         *       // The operation was cancelled[m
[32m+[m[32m         *     } else {[m
[32m+[m[32m         *       throw e;[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * })();[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Or using an `AbortSignal` with a ReadableStream:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const controller = new AbortController();[m
[32m+[m[32m         * const rs = new ReadableStream({[m
[32m+[m[32m         *   start(controller) {[m
[32m+[m[32m         *     controller.enqueue('hello');[m
[32m+[m[32m         *     controller.enqueue('world');[m
[32m+[m[32m         *     controller.close();[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * addAbortSignal(controller.signal, rs);[m
[32m+[m[32m         *[m
[32m+[m[32m         * finished(rs, (err) => {[m
[32m+[m[32m         *   if (err) {[m
[32m+[m[32m         *     if (err.name === 'AbortError') {[m
[32m+[m[32m         *       // The operation was cancelled[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * const reader = rs.getReader();[m
[32m+[m[32m         *[m
[32m+[m[32m         * reader.read().then(({ value, done }) => {[m
[32m+[m[32m         *   console.log(value); // hello[m
[32m+[m[32m         *   console.log(done); // false[m
[32m+[m[32m         *   controller.abort();[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v15.4.0[m
[32m+[m[32m         * @param signal A signal representing possible cancellation[m
[32m+[m[32m         * @param stream A stream to attach a signal to.[m
[32m+[m[32m         */[m
[32m+[m[32m        function addAbortSignal<T extends Stream>(signal: AbortSignal, stream: T): T;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns the default highWaterMark used by streams.[m
[32m+[m[32m         * Defaults to `65536` (64 KiB), or `16` for `objectMode`.[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function getDefaultHighWaterMark(objectMode: boolean): number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets the default highWaterMark used by streams.[m
[32m+[m[32m         * @since v19.9.0[m
[32m+[m[32m         * @param value highWaterMark value[m
[32m+[m[32m         */[m
[32m+[m[32m        function setDefaultHighWaterMark(objectMode: boolean, value: number): void;[m
[32m+[m[32m        interface FinishedOptions extends Abortable {[m
[32m+[m[32m            error?: boolean | undefined;[m
[32m+[m[32m            readable?: boolean | undefined;[m
[32m+[m[32m            writable?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A readable and/or writable stream/webstream.[m
[32m+[m[32m         *[m
[32m+[m[32m         * A function to get notified when a stream is no longer readable, writable[m
[32m+[m[32m         * or has experienced an error or a premature close event.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { finished } = require('node:stream');[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const rs = fs.createReadStream('archive.tar');[m
[32m+[m[32m         *[m
[32m+[m[32m         * finished(rs, (err) => {[m
[32m+[m[32m         *   if (err) {[m
[32m+[m[32m         *     console.error('Stream failed.', err);[m
[32m+[m[32m         *   } else {[m
[32m+[m[32m         *     console.log('Stream is done reading.');[m
[32m+[m[32m         *   }[m
[32m+[m[32m         * });[m
[32m+[m[32m         *[m
[32m+[m[32m         * rs.resume(); // Drain the stream.[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * Especially useful in error handling scenarios where a stream is destroyed[m
[32m+[m[32m         * prematurely (like an aborted HTTP request), and will not emit `'end'` or `'finish'`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `finished` API provides [`promise version`](https://nodejs.org/docs/latest-v22.x/api/stream.html#streamfinishedstream-options).[m
[32m+[m[32m         *[m
[32m+[m[32m         * `stream.finished()` leaves dangling event listeners (in particular `'error'`, `'end'`, `'finish'` and `'close'`) after `callback` has been[m
[32m+[m[32m         * invoked. The reason for this is so that unexpected `'error'` events (due to[m
[32m+[m[32m         * incorrect stream implementations) do not cause unexpected crashes.[m
[32m+[m[32m         * If this is unwanted behavior then the returned cleanup function needs to be[m
[32m+[m[32m         * invoked in the callback:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const cleanup = finished(rs, (err) => {[m
[32m+[m[32m         *   cleanup();[m
[32m+[m[32m         *   // ...[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @param stream A readable and/or writable stream.[m
[32m+[m[32m         * @param callback A callback function that takes an optional error argument.[m
[32m+[m[32m         * @returns A cleanup function which removes all registered listeners.[m
[32m+[m[32m         */[m
[32m+[m[32m        function finished([m
[32m+[m[32m            stream: NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream,[m
[32m+[m[32m            options: FinishedOptions,[m
[32m+[m[32m            callback: (err?: NodeJS.ErrnoException | null) => void,[m
[32m+[m[32m        ): () => void;[m
[32m+[m[32m        function finished([m
[32m+[m[32m            stream: NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream,[m
[32m+[m[32m            callback: (err?: NodeJS.ErrnoException | null) => void,[m
[32m+[m[32m        ): () => void;[m
[32m+[m[32m        namespace finished {[m
[32m+[m[32m            function __promisify__([m
[32m+[m[32m                stream: NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream,[m
[32m+[m[32m                options?: FinishedOptions,[m
[32m+[m[32m            ): Promise<void>;[m
[32m+[m[32m        }[m
[32m+[m[32m        type PipelineSourceFunction<T> = () => Iterable<T> | AsyncIterable<T>;[m
[32m+[m[32m        type PipelineSource<T> = Iterable<T> | AsyncIterable<T> | NodeJS.ReadableStream | PipelineSourceFunction<T>;[m
[32m+[m[32m        type PipelineTransform<S extends PipelineTransformSource<any>, U> =[m
[32m+[m[32m            | NodeJS.ReadWriteStream[m
[32m+[m[32m            | (([m
[32m+[m[32m                source: S extends (...args: any[]) => Iterable<infer ST> | AsyncIterable<infer ST> ? AsyncIterable<ST>[m
[32m+[m[32m                    : S,[m
[32m+[m[32m            ) => AsyncIterable<U>);[m
[32m+[m[32m        type PipelineTransformSource<T> = PipelineSource<T> | PipelineTransform<any, T>;[m
[32m+[m[32m        type PipelineDestinationIterableFunction<T> = (source: AsyncIterable<T>) => AsyncIterable<any>;[m
[32m+[m[32m        type PipelineDestinationPromiseFunction<T, P> = (source: AsyncIterable<T>) => Promise<P>;[m
[32m+[m[32m        type PipelineDestination<S extends PipelineTransformSource<any>, P> = S extends[m
[32m+[m[32m            PipelineTransformSource<infer ST> ?[m
[32m+[m[32m                | NodeJS.WritableStream[m
[32m+[m[32m                | PipelineDestinationIterableFunction<ST>[m
[32m+[m[32m                | PipelineDestinationPromiseFunction<ST, P>[m
[32m+[m[32m            : never;[m
[32m+[m[32m        type PipelineCallback<S extends PipelineDestination<any, any>> = S extends[m
[32m+[m[32m            PipelineDestinationPromiseFunction<any, infer P> ? (err: NodeJS.ErrnoException | null, value: P) => void[m
[32m+[m[32m            : (err: NodeJS.ErrnoException | null) => void;[m
[32m+[m[32m        type PipelinePromise<S extends PipelineDestination<any, any>> = S extends[m
[32m+[m[32m            PipelineDestinationPromiseFunction<any, infer P> ? Promise<P> : Promise<void>;[m
[32m+[m[32m        interface PipelineOptions {[m
[32m+[m[32m            signal?: AbortSignal | undefined;[m
[32m+[m[32m            end?: boolean | undefined;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A module method to pipe between streams and generators forwarding errors and[m
[32m+[m[32m         * properly cleaning up and provide a callback when the pipeline is complete.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const { pipeline } = require('node:stream');[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         * const zlib = require('node:zlib');[m
[32m+[m[32m         *[m
[32m+[m[32m         * // Use the pipeline API to easily pipe a series of streams[m
[32m+[m[32m         * // together and get notified when the pipeline is fully done.[m
[32m+[m[32m         *[m
[32m+[m[32m         * // A pipeline to gzip a potentially huge tar file efficiently:[m
[32m+[m[32m         *[m
[32m+[m[32m         * pipeline([m
[32m+[m[32m         *   fs.createReadStream('archive.tar'),[m
[32m+[m[32m         *   zlib.createGzip(),[m
[32m+[m[32m         *   fs.createWriteStream('archive.tar.gz'),[m
[32m+[m[32m         *   (err) => {[m
[32m+[m[32m         *     if (err) {[m
[32m+[m[32m         *       console.error('Pipeline failed.', err);[m
[32m+[m[32m         *     } else {[m
[32m+[m[32m         *       console.log('Pipeline succeeded.');[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *   },[m
[32m+[m[32m         * );[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * The `pipeline` API provides a [`promise version`](https://nodejs.org/docs/latest-v22.x/api/stream.html#streampipelinesource-transforms-destination-options).[m
[32m+[m[32m         *[m
[32m+[m[32m         * `stream.pipeline()` will call `stream.destroy(err)` on all streams except:[m
[32m+[m[32m         *[m
[32m+[m[32m         * * `Readable` streams which have emitted `'end'` or `'close'`.[m
[32m+[m[32m         * * `Writable` streams which have emitted `'finish'` or `'close'`.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `stream.pipeline()` leaves dangling event listeners on the streams[m
[32m+[m[32m         * after the `callback` has been invoked. In the case of reuse of streams after[m
[32m+[m[32m         * failure, this can cause event listener leaks and swallowed errors. If the last[m
[32m+[m[32m         * stream is readable, dangling event listeners will be removed so that the last[m
[32m+[m[32m         * stream can be consumed later.[m
[32m+[m[32m         *[m
[32m+[m[32m         * `stream.pipeline()` closes all the streams when an error is raised.[m
[32m+[m[32m         * The `IncomingRequest` usage with `pipeline` could lead to an unexpected behavior[m
[32m+[m[32m         * once it would destroy the socket without sending the expected response.[m
[32m+[m[32m         * See the example below:[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * const fs = require('node:fs');[m
[32m+[m[32m         * const http = require('node:http');[m
[32m+[m[32m         * const { pipeline } = require('node:stream');[m
[32m+[m[32m         *[m
[32m+[m[32m         * const server = http.createServer((req, res) => {[m
[32m+[m[32m         *   const fileStream = fs.createReadStream('./fileNotExist.txt');[m
[32m+[m[32m         *   pipeline(fileStream, res, (err) => {[m
[32m+[m[32m         *     if (err) {[m
[32m+[m[32m         *       console.log(err); // No such file[m
[32m+[m[32m         *       // this message can't be sent once `pipeline` already destroyed the socket[m
[32m+[m[32m         *       return res.end('error!!!');[m
[32m+[m[32m         *     }[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v10.0.0[m
[32m+[m[32m         * @param callback Called when the pipeline is fully done.[m
[32m+[m[32m         */[m
[32m+[m[32m        function pipeline<A extends PipelineSource<any>, B extends PipelineDestination<A, any>>([m
[32m+[m[32m            source: A,[m
[32m+[m[32m            destination: B,[m
[32m+[m[32m            callback: PipelineCallback<B>,[m
[32m+[m[32m        ): B extends NodeJS.WritableStream ? B : NodeJS.WritableStream;[m
[32m+[m[32m        function pipeline<[m
[32m+[m[32m            A extends PipelineSource<any>,[m
[32m+[m[32m            T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m            B extends PipelineDestination<T1, any>,[m
[32m+[m[32m        >([m
[32m+[m[32m            source: A,[m
[32m+[m[32m            transform1: T1,[m
[32m+[m[32m            destination: B,[m
[32m+[m[32m            callback: PipelineCallback<B>,[m
[32m+[m[32m        ): B extends NodeJS.WritableStream ? B : NodeJS.WritableStream;[m
[32m+[m[32m        function pipeline<[m
[32m+[m[32m            A extends PipelineSource<any>,[m
[32m+[m[32m            T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m            T2 extends PipelineTransform<T1, any>,[m
[32m+[m[32m            B extends PipelineDestination<T2, any>,[m
[32m+[m[32m        >([m
[32m+[m[32m            source: A,[m
[32m+[m[32m            transform1: T1,[m
[32m+[m[32m            transform2: T2,[m
[32m+[m[32m            destination: B,[m
[32m+[m[32m            callback: PipelineCallback<B>,[m
[32m+[m[32m        ): B extends NodeJS.WritableStream ? B : NodeJS.WritableStream;[m
[32m+[m[32m        function pipeline<[m
[32m+[m[32m            A extends PipelineSource<any>,[m
[32m+[m[32m            T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m            T2 extends PipelineTransform<T1, any>,[m
[32m+[m[32m            T3 extends PipelineTransform<T2, any>,[m
[32m+[m[32m            B extends PipelineDestination<T3, any>,[m
[32m+[m[32m        >([m
[32m+[m[32m            source: A,[m
[32m+[m[32m            transform1: T1,[m
[32m+[m[32m            transform2: T2,[m
[32m+[m[32m            transform3: T3,[m
[32m+[m[32m            destination: B,[m
[32m+[m[32m            callback: PipelineCallback<B>,[m
[32m+[m[32m        ): B extends NodeJS.WritableStream ? B : NodeJS.WritableStream;[m
[32m+[m[32m        function pipeline<[m
[32m+[m[32m            A extends PipelineSource<any>,[m
[32m+[m[32m            T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m            T2 extends PipelineTransform<T1, any>,[m
[32m+[m[32m            T3 extends PipelineTransform<T2, any>,[m
[32m+[m[32m            T4 extends PipelineTransform<T3, any>,[m
[32m+[m[32m            B extends PipelineDestination<T4, any>,[m
[32m+[m[32m        >([m
[32m+[m[32m            source: A,[m
[32m+[m[32m            transform1: T1,[m
[32m+[m[32m            transform2: T2,[m
[32m+[m[32m            transform3: T3,[m
[32m+[m[32m            transform4: T4,[m
[32m+[m[32m            destination: B,[m
[32m+[m[32m            callback: PipelineCallback<B>,[m
[32m+[m[32m        ): B extends NodeJS.WritableStream ? B : NodeJS.WritableStream;[m
[32m+[m[32m        function pipeline([m
[32m+[m[32m            streams: ReadonlyArray<NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream>,[m
[32m+[m[32m            callback: (err: NodeJS.ErrnoException | null) => void,[m
[32m+[m[32m        ): NodeJS.WritableStream;[m
[32m+[m[32m        function pipeline([m
[32m+[m[32m            stream1: NodeJS.ReadableStream,[m
[32m+[m[32m            stream2: NodeJS.ReadWriteStream | NodeJS.WritableStream,[m
[32m+[m[32m            ...streams: Array<[m
[32m+[m[32m                NodeJS.ReadWriteStream | NodeJS.WritableStream | ((err: NodeJS.ErrnoException | null) => void)[m
[32m+[m[32m            >[m
[32m+[m[32m        ): NodeJS.WritableStream;[m
[32m+[m[32m        namespace pipeline {[m
[32m+[m[32m            function __promisify__<A extends PipelineSource<any>, B extends PipelineDestination<A, any>>([m
[32m+[m[32m                source: A,[m
[32m+[m[32m                destination: B,[m
[32m+[m[32m                options?: PipelineOptions,[m
[32m+[m[32m            ): PipelinePromise<B>;[m
[32m+[m[32m            function __promisify__<[m
[32m+[m[32m                A extends PipelineSource<any>,[m
[32m+[m[32m                T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m                B extends PipelineDestination<T1, any>,[m
[32m+[m[32m            >([m
[32m+[m[32m                source: A,[m
[32m+[m[32m                transform1: T1,[m
[32m+[m[32m                destination: B,[m
[32m+[m[32m                options?: PipelineOptions,[m
[32m+[m[32m            ): PipelinePromise<B>;[m
[32m+[m[32m            function __promisify__<[m
[32m+[m[32m                A extends PipelineSource<any>,[m
[32m+[m[32m                T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m                T2 extends PipelineTransform<T1, any>,[m
[32m+[m[32m                B extends PipelineDestination<T2, any>,[m
[32m+[m[32m            >([m
[32m+[m[32m                source: A,[m
[32m+[m[32m                transform1: T1,[m
[32m+[m[32m                transform2: T2,[m
[32m+[m[32m                destination: B,[m
[32m+[m[32m                options?: PipelineOptions,[m
[32m+[m[32m            ): PipelinePromise<B>;[m
[32m+[m[32m            function __promisify__<[m
[32m+[m[32m                A extends PipelineSource<any>,[m
[32m+[m[32m                T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m                T2 extends PipelineTransform<T1, any>,[m
[32m+[m[32m                T3 extends PipelineTransform<T2, any>,[m
[32m+[m[32m                B extends PipelineDestination<T3, any>,[m
[32m+[m[32m            >([m
[32m+[m[32m                source: A,[m
[32m+[m[32m                transform1: T1,[m
[32m+[m[32m                transform2: T2,[m
[32m+[m[32m                transform3: T3,[m
[32m+[m[32m                destination: B,[m
[32m+[m[32m                options?: PipelineOptions,[m
[32m+[m[32m            ): PipelinePromise<B>;[m
[32m+[m[32m            function __promisify__<[m
[32m+[m[32m                A extends PipelineSource<any>,[m
[32m+[m[32m                T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m                T2 extends PipelineTransform<T1, any>,[m
[32m+[m[32m                T3 extends PipelineTransform<T2, any>,[m
[32m+[m[32m                T4 extends PipelineTransform<T3, any>,[m
[32m+[m[32m                B extends PipelineDestination<T4, any>,[m
[32m+[m[32m            >([m
[32m+[m[32m                source: A,[m
[32m+[m[32m                transform1: T1,[m
[32m+[m[32m                transform2: T2,[m
[32m+[m[32m                transform3: T3,[m
[32m+[m[32m                transform4: T4,[m
[32m+[m[32m                destination: B,[m
[32m+[m[32m                options?: PipelineOptions,[m
[32m+[m[32m            ): PipelinePromise<B>;[m
[32m+[m[32m            function __promisify__([m
[32m+[m[32m                streams: ReadonlyArray<NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream>,[m
[32m+[m[32m                options?: PipelineOptions,[m
[32m+[m[32m            ): Promise<void>;[m
[32m+[m[32m            function __promisify__([m
[32m+[m[32m                stream1: NodeJS.ReadableStream,[m
[32m+[m[32m                stream2: NodeJS.ReadWriteStream | NodeJS.WritableStream,[m
[32m+[m[32m                ...streams: Array<NodeJS.ReadWriteStream | NodeJS.WritableStream | PipelineOptions>[m
[32m+[m[32m            ): Promise<void>;[m
[32m+[m[32m        }[m
[32m+[m[32m        interface Pipe {[m
[32m+[m[32m            close(): void;[m
[32m+[m[32m            hasRef(): boolean;[m
[32m+[m[32m            ref(): void;[m
[32m+[m[32m            unref(): void;[m
[32m+[m[32m        }[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns whether the stream has encountered an error.[m
[32m+[m[32m         * @since v17.3.0, v16.14.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        function isErrored(stream: Readable | Writable | NodeJS.ReadableStream | NodeJS.WritableStream): boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns whether the stream is readable.[m
[32m+[m[32m         * @since v17.4.0, v16.14.0[m
[32m+[m[32m         * @experimental[m
[32m+[m[32m         */[m
[32m+[m[32m        function isReadable(stream: Readable | NodeJS.ReadableStream): boolean;[m
[32m+[m[32m        const promises: typeof streamPromises;[m
[32m+[m[32m        const consumers: typeof streamConsumers;[m
[32m+[m[32m    }[m
[32m+[m[32m    export = internal;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:stream" {[m
[32m+[m[32m    import stream = require("stream");[m
[32m+[m[32m    export = stream;[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/stream/consumers.d.ts b/node_modules/@types/node/stream/consumers.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..5ad9cba[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/stream/consumers.d.ts[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mdeclare module "stream/consumers" {[m
[32m+[m[32m    import { Blob as NodeBlob } from "node:buffer";[m
[32m+[m[32m    import { Readable } from "node:stream";[m
[32m+[m[32m    function buffer(stream: NodeJS.ReadableStream | Readable | AsyncIterable<any>): Promise<Buffer>;[m
[32m+[m[32m    function text(stream: NodeJS.ReadableStream | Readable | AsyncIterable<any>): Promise<string>;[m
[32m+[m[32m    function arrayBuffer(stream: NodeJS.ReadableStream | Readable | AsyncIterable<any>): Promise<ArrayBuffer>;[m
[32m+[m[32m    function blob(stream: NodeJS.ReadableStream | Readable | AsyncIterable<any>): Promise<NodeBlob>;[m
[32m+[m[32m    function json(stream: NodeJS.ReadableStream | Readable | AsyncIterable<any>): Promise<unknown>;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:stream/consumers" {[m
[32m+[m[32m    export * from "stream/consumers";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/stream/promises.d.ts b/node_modules/@types/node/stream/promises.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..6eac5b7[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/stream/promises.d.ts[m
[36m@@ -0,0 +1,83 @@[m
[32m+[m[32mdeclare module "stream/promises" {[m
[32m+[m[32m    import {[m
[32m+[m[32m        FinishedOptions,[m
[32m+[m[32m        PipelineDestination,[m
[32m+[m[32m        PipelineOptions,[m
[32m+[m[32m        PipelinePromise,[m
[32m+[m[32m        PipelineSource,[m
[32m+[m[32m        PipelineTransform,[m
[32m+[m[32m    } from "node:stream";[m
[32m+[m[32m    function finished([m
[32m+[m[32m        stream: NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream,[m
[32m+[m[32m        options?: FinishedOptions,[m
[32m+[m[32m    ): Promise<void>;[m
[32m+[m[32m    function pipeline<A extends PipelineSource<any>, B extends PipelineDestination<A, any>>([m
[32m+[m[32m        source: A,[m
[32m+[m[32m        destination: B,[m
[32m+[m[32m        options?: PipelineOptions,[m
[32m+[m[32m    ): PipelinePromise<B>;[m
[32m+[m[32m    function pipeline<[m
[32m+[m[32m        A extends PipelineSource<any>,[m
[32m+[m[32m        T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m        B extends PipelineDestination<T1, any>,[m
[32m+[m[32m    >([m
[32m+[m[32m        source: A,[m
[32m+[m[32m        transform1: T1,[m
[32m+[m[32m        destination: B,[m
[32m+[m[32m        options?: PipelineOptions,[m
[32m+[m[32m    ): PipelinePromise<B>;[m
[32m+[m[32m    function pipeline<[m
[32m+[m[32m        A extends PipelineSource<any>,[m
[32m+[m[32m        T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m        T2 extends PipelineTransform<T1, any>,[m
[32m+[m[32m        B extends PipelineDestination<T2, any>,[m
[32m+[m[32m    >([m
[32m+[m[32m        source: A,[m
[32m+[m[32m        transform1: T1,[m
[32m+[m[32m        transform2: T2,[m
[32m+[m[32m        destination: B,[m
[32m+[m[32m        options?: PipelineOptions,[m
[32m+[m[32m    ): PipelinePromise<B>;[m
[32m+[m[32m    function pipeline<[m
[32m+[m[32m        A extends PipelineSource<any>,[m
[32m+[m[32m        T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m        T2 extends PipelineTransform<T1, any>,[m
[32m+[m[32m        T3 extends PipelineTransform<T2, any>,[m
[32m+[m[32m        B extends PipelineDestination<T3, any>,[m
[32m+[m[32m    >([m
[32m+[m[32m        source: A,[m
[32m+[m[32m        transform1: T1,[m
[32m+[m[32m        transform2: T2,[m
[32m+[m[32m        transform3: T3,[m
[32m+[m[32m        destination: B,[m
[32m+[m[32m        options?: PipelineOptions,[m
[32m+[m[32m    ): PipelinePromise<B>;[m
[32m+[m[32m    function pipeline<[m
[32m+[m[32m        A extends PipelineSource<any>,[m
[32m+[m[32m        T1 extends PipelineTransform<A, any>,[m
[32m+[m[32m        T2 extends PipelineTransform<T1, any>,[m
[32m+[m[32m        T3 extends PipelineTransform<T2, any>,[m
[32m+[m[32m        T4 extends PipelineTransform<T3, any>,[m
[32m+[m[32m        B extends PipelineDestination<T4, any>,[m
[32m+[m[32m    >([m
[32m+[m[32m        source: A,[m
[32m+[m[32m        transform1: T1,[m
[32m+[m[32m        transform2: T2,[m
[32m+[m[32m        transform3: T3,[m
[32m+[m[32m        transform4: T4,[m
[32m+[m[32m        destination: B,[m
[32m+[m[32m        options?: PipelineOptions,[m
[32m+[m[32m    ): PipelinePromise<B>;[m
[32m+[m[32m    function pipeline([m
[32m+[m[32m        streams: ReadonlyArray<NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream>,[m
[32m+[m[32m        options?: PipelineOptions,[m
[32m+[m[32m    ): Promise<void>;[m
[32m+[m[32m    function pipeline([m
[32m+[m[32m        stream1: NodeJS.ReadableStream,[m
[32m+[m[32m        stream2: NodeJS.ReadWriteStream | NodeJS.WritableStream,[m
[32m+[m[32m        ...streams: Array<NodeJS.ReadWriteStream | NodeJS.WritableStream | PipelineOptions>[m
[32m+[m[32m    ): Promise<void>;[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:stream/promises" {[m
[32m+[m[32m    export * from "stream/promises";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/stream/web.d.ts b/node_modules/@types/node/stream/web.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..8dd0ded[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/stream/web.d.ts[m
[36m@@ -0,0 +1,367 @@[m
[32m+[m[32mdeclare module "stream/web" {[m
[32m+[m[32m    // stub module, pending copy&paste from .d.ts or manual impl[m
[32m+[m[32m    // copy from lib.dom.d.ts[m
[32m+[m[32m    interface ReadableWritablePair<R = any, W = any> {[m
[32m+[m[32m        readable: ReadableStream<R>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Provides a convenient, chainable way of piping this readable stream[m
[32m+[m[32m         * through a transform stream (or any other { writable, readable }[m
[32m+[m[32m         * pair). It simply pipes the stream into the writable side of the[m
[32m+[m[32m         * supplied pair, and returns the readable side for further use.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Piping a stream will lock it for the duration of the pipe, preventing[m
[32m+[m[32m         * any other consumer from acquiring a reader.[m
[32m+[m[32m         */[m
[32m+[m[32m        writable: WritableStream<W>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface StreamPipeOptions {[m
[32m+[m[32m        preventAbort?: boolean;[m
[32m+[m[32m        preventCancel?: boolean;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Pipes this readable stream to a given writable stream destination.[m
[32m+[m[32m         * The way in which the piping process behaves under various error[m
[32m+[m[32m         * conditions can be customized with a number of passed options. It[m
[32m+[m[32m         * returns a promise that fulfills when the piping process completes[m
[32m+[m[32m         * successfully, or rejects if any errors were encountered.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Piping a stream will lock it for the duration of the pipe, preventing[m
[32m+[m[32m         * any other consumer from acquiring a reader.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Errors and closures of the source and destination streams propagate[m
[32m+[m[32m         * as follows:[m
[32m+[m[32m         *[m
[32m+[m[32m         * An error in this source readable stream will abort destination,[m
[32m+[m[32m         * unless preventAbort is truthy. The returned promise will be rejected[m
[32m+[m[32m         * with the source's error, or with any error that occurs during[m
[32m+[m[32m         * aborting the destination.[m
[32m+[m[32m         *[m
[32m+[m[32m         * An error in destination will cancel this source readable stream,[m
[32m+[m[32m         * unless preventCancel is truthy. The returned promise will be rejected[m
[32m+[m[32m         * with the destination's error, or with any error that occurs during[m
[32m+[m[32m         * canceling the source.[m
[32m+[m[32m         *[m
[32m+[m[32m         * When this source readable stream closes, destination will be closed,[m
[32m+[m[32m         * unless preventClose is truthy. The returned promise will be fulfilled[m
[32m+[m[32m         * once this process completes, unless an error is encountered while[m
[32m+[m[32m         * closing the destination, in which case it will be rejected with that[m
[32m+[m[32m         * error.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If destination starts out closed or closing, this source readable[m
[32m+[m[32m         * stream will be canceled, unless preventCancel is true. The returned[m
[32m+[m[32m         * promise will be rejected with an error indicating piping to a closed[m
[32m+[m[32m         * stream failed, or with any error that occurs during canceling the[m
[32m+[m[32m         * source.[m
[32m+[m[32m         *[m
[32m+[m[32m         * The signal option can be set to an AbortSignal to allow aborting an[m
[32m+[m[32m         * ongoing pipe operation via the corresponding AbortController. In this[m
[32m+[m[32m         * case, this source readable stream will be canceled, and destination[m
[32m+[m[32m         * aborted, unless the respective options preventCancel or preventAbort[m
[32m+[m[32m         * are set.[m
[32m+[m[32m         */[m
[32m+[m[32m        preventClose?: boolean;[m
[32m+[m[32m        signal?: AbortSignal;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ReadableStreamGenericReader {[m
[32m+[m[32m        readonly closed: Promise<undefined>;[m
[32m+[m[32m        cancel(reason?: any): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ReadableStreamDefaultReadValueResult<T> {[m
[32m+[m[32m        done: false;[m
[32m+[m[32m        value: T;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ReadableStreamDefaultReadDoneResult {[m
[32m+[m[32m        done: true;[m
[32m+[m[32m        value?: undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    type ReadableStreamController<T> = ReadableStreamDefaultController<T>;[m
[32m+[m[32m    type ReadableStreamDefaultReadResult<T> =[m
[32m+[m[32m        | ReadableStreamDefaultReadValueResult<T>[m
[32m+[m[32m        | ReadableStreamDefaultReadDoneResult;[m
[32m+[m[32m    interface ReadableStreamReadValueResult<T> {[m
[32m+[m[32m        done: false;[m
[32m+[m[32m        value: T;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ReadableStreamReadDoneResult<T> {[m
[32m+[m[32m        done: true;[m
[32m+[m[32m        value?: T;[m
[32m+[m[32m    }[m
[32m+[m[32m    type ReadableStreamReadResult<T> = ReadableStreamReadValueResult<T> | ReadableStreamReadDoneResult<T>;[m
[32m+[m[32m    interface ReadableByteStreamControllerCallback {[m
[32m+[m[32m        (controller: ReadableByteStreamController): void | PromiseLike<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UnderlyingSinkAbortCallback {[m
[32m+[m[32m        (reason?: any): void | PromiseLike<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UnderlyingSinkCloseCallback {[m
[32m+[m[32m        (): void | PromiseLike<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UnderlyingSinkStartCallback {[m
[32m+[m[32m        (controller: WritableStreamDefaultController): any;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UnderlyingSinkWriteCallback<W> {[m
[32m+[m[32m        (chunk: W, controller: WritableStreamDefaultController): void | PromiseLike<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UnderlyingSourceCancelCallback {[m
[32m+[m[32m        (reason?: any): void | PromiseLike<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UnderlyingSourcePullCallback<R> {[m
[32m+[m[32m        (controller: ReadableStreamController<R>): void | PromiseLike<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UnderlyingSourceStartCallback<R> {[m
[32m+[m[32m        (controller: ReadableStreamController<R>): any;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface TransformerFlushCallback<O> {[m
[32m+[m[32m        (controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface TransformerStartCallback<O> {[m
[32m+[m[32m        (controller: TransformStreamDefaultController<O>): any;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface TransformerTransformCallback<I, O> {[m
[32m+[m[32m        (chunk: I, controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UnderlyingByteSource {[m
[32m+[m[32m        autoAllocateChunkSize?: number;[m
[32m+[m[32m        cancel?: ReadableStreamErrorCallback;[m
[32m+[m[32m        pull?: ReadableByteStreamControllerCallback;[m
[32m+[m[32m        start?: ReadableByteStreamControllerCallback;[m
[32m+[m[32m        type: "bytes";[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UnderlyingSource<R = any> {[m
[32m+[m[32m        cancel?: UnderlyingSourceCancelCallback;[m
[32m+[m[32m        pull?: UnderlyingSourcePullCallback<R>;[m
[32m+[m[32m        start?: UnderlyingSourceStartCallback<R>;[m
[32m+[m[32m        type?: undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface UnderlyingSink<W = any> {[m
[32m+[m[32m        abort?: UnderlyingSinkAbortCallback;[m
[32m+[m[32m        close?: UnderlyingSinkCloseCallback;[m
[32m+[m[32m        start?: UnderlyingSinkStartCallback;[m
[32m+[m[32m        type?: undefined;[m
[32m+[m[32m        write?: UnderlyingSinkWriteCallback<W>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ReadableStreamErrorCallback {[m
[32m+[m[32m        (reason: any): void | PromiseLike<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /** This Streams API interface represents a readable stream of byte data. */[m
[32m+[m[32m    interface ReadableStream<R = any> {[m
[32m+[m[32m        readonly locked: boolean;[m
[32m+[m[32m        cancel(reason?: any): Promise<void>;[m
[32m+[m[32m        getReader(): ReadableStreamDefaultReader<R>;[m
[32m+[m[32m        getReader(options: { mode: "byob" }): ReadableStreamBYOBReader;[m
[32m+[m[32m        pipeThrough<T>(transform: ReadableWritablePair<T, R>, options?: StreamPipeOptions): ReadableStream<T>;[m
[32m+[m[32m        pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;[m
[32m+[m[32m        tee(): [ReadableStream<R>, ReadableStream<R>];[m
[32m+[m[32m        values(options?: { preventCancel?: boolean }): AsyncIterableIterator<R>;[m
[32m+[m[32m        [Symbol.asyncIterator](): AsyncIterableIterator<R>;[m
[32m+[m[32m    }[m
[32m+[m[32m    const ReadableStream: {[m
[32m+[m[32m        prototype: ReadableStream;[m
[32m+[m[32m        from<T>(iterable: Iterable<T> | AsyncIterable<T>): ReadableStream<T>;[m
[32m+[m[32m        new(underlyingSource: UnderlyingByteSource, strategy?: QueuingStrategy<Uint8Array>): ReadableStream<Uint8Array>;[m
[32m+[m[32m        new<R = any>(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>): ReadableStream<R>;[m
[32m+[m[32m    };[m
[32m+[m[32m    interface ReadableStreamDefaultReader<R = any> extends ReadableStreamGenericReader {[m
[32m+[m[32m        read(): Promise<ReadableStreamDefaultReadResult<R>>;[m
[32m+[m[32m        releaseLock(): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface ReadableStreamBYOBReader extends ReadableStreamGenericReader {[m
[32m+[m[32m        read<T extends ArrayBufferView>(view: T): Promise<ReadableStreamReadResult<T>>;[m
[32m+[m[32m        releaseLock(): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    const ReadableStreamDefaultReader: {[m
[32m+[m[32m        prototype: ReadableStreamDefaultReader;[m
[32m+[m[32m        new<R = any>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;[m
[32m+[m[32m    };[m
[32m+[m[32m    const ReadableStreamBYOBReader: any;[m
[32m+[m[32m    const ReadableStreamBYOBRequest: any;[m
[32m+[m[32m    interface ReadableByteStreamController {[m
[32m+[m[32m        readonly byobRequest: undefined;[m
[32m+[m[32m        readonly desiredSize: number | null;[m
[32m+[m[32m        close(): void;[m
[32m+[m[32m        enqueue(chunk: ArrayBufferView): void;[m
[32m+[m[32m        error(error?: any): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    const ReadableByteStreamController: {[m
[32m+[m[32m        prototype: ReadableByteStreamController;[m
[32m+[m[32m        new(): ReadableByteStreamController;[m
[32m+[m[32m    };[m
[32m+[m[32m    interface ReadableStreamDefaultController<R = any> {[m
[32m+[m[32m        readonly desiredSize: number | null;[m
[32m+[m[32m        close(): void;[m
[32m+[m[32m        enqueue(chunk?: R): void;[m
[32m+[m[32m        error(e?: any): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    const ReadableStreamDefaultController: {[m
[32m+[m[32m        prototype: ReadableStreamDefaultController;[m
[32m+[m[32m        new(): ReadableStreamDefaultController;[m
[32m+[m[32m    };[m
[32m+[m[32m    interface Transformer<I = any, O = any> {[m
[32m+[m[32m        flush?: TransformerFlushCallback<O>;[m
[32m+[m[32m        readableType?: undefined;[m
[32m+[m[32m        start?: TransformerStartCallback<O>;[m
[32m+[m[32m        transform?: TransformerTransformCallback<I, O>;[m
[32m+[m[32m        writableType?: undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface TransformStream<I = any, O = any> {[m
[32m+[m[32m        readonly readable: ReadableStream<O>;[m
[32m+[m[32m        readonly writable: WritableStream<I>;[m
[32m+[m[32m    }[m
[32m+[m[32m    const TransformStream: {[m
[32m+[m[32m        prototype: TransformStream;[m
[32m+[m[32m        new<I = any, O = any>([m
[32m+[m[32m            transformer?: Transformer<I, O>,[m
[32m+[m[32m            writableStrategy?: QueuingStrategy<I>,[m
[32m+[m[32m            readableStrategy?: QueuingStrategy<O>,[m
[32m+[m[32m        ): TransformStream<I, O>;[m
[32m+[m[32m    };[m
[32m+[m[32m    interface TransformStreamDefaultController<O = any> {[m
[32m+[m[32m        readonly desiredSize: number | null;[m
[32m+[m[32m        enqueue(chunk?: O): void;[m
[32m+[m[32m        error(reason?: any): void;[m
[32m+[m[32m        terminate(): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    const TransformStreamDefaultController: {[m
[32m+[m[32m        prototype: TransformStreamDefaultController;[m
[32m+[m[32m        new(): TransformStreamDefaultController;[m
[32m+[m[32m    };[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This Streams API interface provides a standard abstraction for writing[m
[32m+[m[32m     * streaming data to a destination, known as a sink. This object comes with[m
[32m+[m[32m     * built-in back pressure and queuing.[m
[32m+[m[32m     */[m
[32m+[m[32m    interface WritableStream<W = any> {[m
[32m+[m[32m        readonly locked: boolean;[m
[32m+[m[32m        abort(reason?: any): Promise<void>;[m
[32m+[m[32m        close(): Promise<void>;[m
[32m+[m[32m        getWriter(): WritableStreamDefaultWriter<W>;[m
[32m+[m[32m    }[m
[32m+[m[32m    const WritableStream: {[m
[32m+[m[32m        prototype: WritableStream;[m
[32m+[m[32m        new<W = any>(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>): WritableStream<W>;[m
[32m+[m[32m    };[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This Streams API interface is the object returned by[m
[32m+[m[32m     * WritableStream.getWriter() and once created locks the < writer to the[m
[32m+[m[32m     * WritableStream ensuring that no other streams can write to the underlying[m
[32m+[m[32m     * sink.[m
[32m+[m[32m     */[m
[32m+[m[32m    interface WritableStreamDefaultWriter<W = any> {[m
[32m+[m[32m        readonly closed: Promise<undefined>;[m
[32m+[m[32m        readonly desiredSize: number | null;[m
[32m+[m[32m        readonly ready: Promise<undefined>;[m
[32m+[m[32m        abort(reason?: any): Promise<void>;[m
[32m+[m[32m        close(): Promise<void>;[m
[32m+[m[32m        releaseLock(): void;[m
[32m+[m[32m        write(chunk?: W): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    const WritableStreamDefaultWriter: {[m
[32m+[m[32m        prototype: WritableStreamDefaultWriter;[m
[32m+[m[32m        new<W = any>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;[m
[32m+[m[32m    };[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This Streams API interface represents a controller allowing control of a[m
[32m+[m[32m     * WritableStream's state. When constructing a WritableStream, the[m
[32m+[m[32m     * underlying sink is given a corresponding WritableStreamDefaultController[m
[32m+[m[32m     * instance to manipulate.[m
[32m+[m[32m     */[m
[32m+[m[32m    interface WritableStreamDefaultController {[m
[32m+[m[32m        error(e?: any): void;[m
[32m+[m[32m    }[m
[32m+[m[32m    const WritableStreamDefaultController: {[m
[32m+[m[32m        prototype: WritableStreamDefaultController;[m
[32m+[m[32m        new(): WritableStreamDefaultController;[m
[32m+[m[32m    };[m
[32m+[m[32m    interface QueuingStrategy<T = any> {[m
[32m+[m[32m        highWaterMark?: number;[m
[32m+[m[32m        size?: QueuingStrategySize<T>;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface QueuingStrategySize<T = any> {[m
[32m+[m[32m        (chunk?: T): number;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface QueuingStrategyInit {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Creates a new ByteLengthQueuingStrategy with the provided high water[m
[32m+[m[32m         * mark.[m
[32m+[m[32m         *[m
[32m+[m[32m         * Note that the provided high water mark will not be validated ahead of[m
[32m+[m[32m         * time. Instead, if it is negative, NaN, or not a number, the resulting[m
[32m+[m[32m         * ByteLengthQueuingStrategy will cause the corresponding stream[m
[32m+[m[32m         * constructor to throw.[m
[32m+[m[32m         */[m
[32m+[m[32m        highWaterMark: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This Streams API interface provides a built-in byte length queuing[m
[32m+[m[32m     * strategy that can be used when constructing streams.[m
[32m+[m[32m     */[m
[32m+[m[32m    interface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {[m
[32m+[m[32m        readonly highWaterMark: number;[m
[32m+[m[32m        readonly size: QueuingStrategySize<ArrayBufferView>;[m
[32m+[m[32m    }[m
[32m+[m[32m    const ByteLengthQueuingStrategy: {[m
[32m+[m[32m        prototype: ByteLengthQueuingStrategy;[m
[32m+[m[32m        new(init: QueuingStrategyInit): ByteLengthQueuingStrategy;[m
[32m+[m[32m    };[m
[32m+[m[32m    /**[m
[32m+[m[32m     * This Streams API interface provides a built-in byte length queuing[m
[32m+[m[32m     * strategy that can be used when constructing streams.[m
[32m+[m[32m     */[m
[32m+[m[32m    interface CountQueuingStrategy extends QueuingStrategy {[m
[32m+[m[32m        readonly highWaterMark: number;[m
[32m+[m[32m        readonly size: QueuingStrategySize;[m
[32m+[m[32m    }[m
[32m+[m[32m    const CountQueuingStrategy: {[m
[32m+[m[32m        prototype: CountQueuingStrategy;[m
[32m+[m[32m        new(init: QueuingStrategyInit): CountQueuingStrategy;[m
[32m+[m[32m    };[m
[32m+[m[32m    interface TextEncoderStream {[m
[32m+[m[32m        /** Returns "utf-8". */[m
[32m+[m[32m        readonly encoding: "utf-8";[m
[32m+[m[32m        readonly readable: ReadableStream<Uint8Array>;[m
[32m+[m[32m        readonly writable: WritableStream<string>;[m
[32m+[m[32m        readonly [Symbol.toStringTag]: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    const TextEncoderStream: {[m
[32m+[m[32m        prototype: TextEncoderStream;[m
[32m+[m[32m        new(): TextEncoderStream;[m
[32m+[m[32m    };[m
[32m+[m[32m    interface TextDecoderOptions {[m
[32m+[m[32m        fatal?: boolean;[m
[32m+[m[32m        ignoreBOM?: boolean;[m
[32m+[m[32m    }[m
[32m+[m[32m    type BufferSource = ArrayBufferView | ArrayBuffer;[m
[32m+[m[32m    interface TextDecoderStream {[m
[32m+[m[32m        /** Returns encoding's name, lower cased. */[m
[32m+[m[32m        readonly encoding: string;[m
[32m+[m[32m        /** Returns `true` if error mode is "fatal", and `false` otherwise. */[m
[32m+[m[32m        readonly fatal: boolean;[m
[32m+[m[32m        /** Returns `true` if ignore BOM flag is set, and `false` otherwise. */[m
[32m+[m[32m        readonly ignoreBOM: boolean;[m
[32m+[m[32m        readonly readable: ReadableStream<string>;[m
[32m+[m[32m        readonly writable: WritableStream<BufferSource>;[m
[32m+[m[32m        readonly [Symbol.toStringTag]: string;[m
[32m+[m[32m    }[m
[32m+[m[32m    const TextDecoderStream: {[m
[32m+[m[32m        prototype: TextDecoderStream;[m
[32m+[m[32m        new(encoding?: string, options?: TextDecoderOptions): TextDecoderStream;[m
[32m+[m[32m    };[m
[32m+[m[32m    interface CompressionStream<R = any, W = any> {[m
[32m+[m[32m        readonly readable: ReadableStream<R>;[m
[32m+[m[32m        readonly writable: WritableStream<W>;[m
[32m+[m[32m    }[m
[32m+[m[32m    const CompressionStream: {[m
[32m+[m[32m        prototype: CompressionStream;[m
[32m+[m[32m        new<R = any, W = any>(format: "deflate" | "deflate-raw" | "gzip"): CompressionStream<R, W>;[m
[32m+[m[32m    };[m
[32m+[m[32m    interface DecompressionStream<R = any, W = any> {[m
[32m+[m[32m        readonly readable: ReadableStream<R>;[m
[32m+[m[32m        readonly writable: WritableStream<W>;[m
[32m+[m[32m    }[m
[32m+[m[32m    const DecompressionStream: {[m
[32m+[m[32m        prototype: DecompressionStream;[m
[32m+[m[32m        new<R = any, W = any>(format: "deflate" | "deflate-raw" | "gzip"): DecompressionStream<R, W>;[m
[32m+[m[32m    };[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:stream/web" {[m
[32m+[m[32m    export * from "stream/web";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/string_decoder.d.ts b/node_modules/@types/node/string_decoder.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..31f68ac[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/string_decoder.d.ts[m
[36m@@ -0,0 +1,67 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:string_decoder` module provides an API for decoding `Buffer` objects[m
[32m+[m[32m * into strings in a manner that preserves encoded multi-byte UTF-8 and UTF-16[m
[32m+[m[32m * characters. It can be accessed using:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const { StringDecoder } = require('node:string_decoder');[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * The following example shows the basic use of the `StringDecoder` class.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const { StringDecoder } = require('node:string_decoder');[m
[32m+[m[32m * const decoder = new StringDecoder('utf8');[m
[32m+[m[32m *[m
[32m+[m[32m * const cent = Buffer.from([0xC2, 0xA2]);[m
[32m+[m[32m * console.log(decoder.write(cent)); // Prints: ¢[m
[32m+[m[32m *[m
[32m+[m[32m * const euro = Buffer.from([0xE2, 0x82, 0xAC]);[m
[32m+[m[32m * console.log(decoder.write(euro)); // Prints: €[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * When a `Buffer` instance is written to the `StringDecoder` instance, an[m
[32m+[m[32m * internal buffer is used to ensure that the decoded string does not contain[m
[32m+[m[32m * any incomplete multibyte characters. These are held in the buffer until the[m
[32m+[m[32m * next call to `stringDecoder.write()` or until `stringDecoder.end()` is called.[m
[32m+[m[32m *[m
[32m+[m[32m * In the following example, the three UTF-8 encoded bytes of the European Euro[m
[32m+[m[32m * symbol (`€`) are written over three separate operations:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * const { StringDecoder } = require('node:string_decoder');[m
[32m+[m[32m * const decoder = new StringDecoder('utf8');[m
[32m+[m[32m *[m
[32m+[m[32m * decoder.write(Buffer.from([0xE2]));[m
[32m+[m[32m * decoder.write(Buffer.from([0x82]));[m
[32m+[m[32m * console.log(decoder.end(Buffer.from([0xAC]))); // Prints: €[m
[32m+[m[32m * ```[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/string_decoder.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "string_decoder" {[m
[32m+[m[32m    class StringDecoder {[m
[32m+[m[32m        constructor(encoding?: BufferEncoding);[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns a decoded string, ensuring that any incomplete multibyte characters at[m
[32m+[m[32m         * the end of the `Buffer`, or `TypedArray`, or `DataView` are omitted from the[m
[32m+[m[32m         * returned string and stored in an internal buffer for the next call to `stringDecoder.write()` or `stringDecoder.end()`.[m
[32m+[m[32m         * @since v0.1.99[m
[32m+[m[32m         * @param buffer The bytes to decode.[m
[32m+[m[32m         */[m
[32m+[m[32m        write(buffer: string | Buffer | NodeJS.ArrayBufferView): string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Returns any remaining input stored in the internal buffer as a string. Bytes[m
[32m+[m[32m         * representing incomplete UTF-8 and UTF-16 characters will be replaced with[m
[32m+[m[32m         * substitution characters appropriate for the character encoding.[m
[32m+[m[32m         *[m
[32m+[m[32m         * If the `buffer` argument is provided, one final call to `stringDecoder.write()` is performed before returning the remaining input.[m
[32m+[m[32m         * After `end()` is called, the `stringDecoder` object can be reused for new input.[m
[32m+[m[32m         * @since v0.9.3[m
[32m+[m[32m         * @param buffer The bytes to decode.[m
[32m+[m[32m         */[m
[32m+[m[32m        end(buffer?: string | Buffer | NodeJS.ArrayBufferView): string;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32mdeclare module "node:string_decoder" {[m
[32m+[m[32m    export * from "string_decoder";[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/@types/node/test.d.ts b/node_modules/@types/node/test.d.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..31f073e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/@types/node/test.d.ts[m
[36m@@ -0,0 +1,2006 @@[m
[32m+[m[32m/**[m
[32m+[m[32m * The `node:test` module facilitates the creation of JavaScript tests.[m
[32m+[m[32m * To access it:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import test from 'node:test';[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * This module is only available under the `node:` scheme. The following will not[m
[32m+[m[32m * work:[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * import test from 'test';[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * Tests created via the `test` module consist of a single function that is[m
[32m+[m[32m * processed in one of three ways:[m
[32m+[m[32m *[m
[32m+[m[32m * 1. A synchronous function that is considered failing if it throws an exception,[m
[32m+[m[32m * and is considered passing otherwise.[m
[32m+[m[32m * 2. A function that returns a `Promise` that is considered failing if the `Promise` rejects, and is considered passing if the `Promise` fulfills.[m
[32m+[m[32m * 3. A function that receives a callback function. If the callback receives any[m
[32m+[m[32m * truthy value as its first argument, the test is considered failing. If a[m
[32m+[m[32m * falsy value is passed as the first argument to the callback, the test is[m
[32m+[m[32m * considered passing. If the test function receives a callback function and[m
[32m+[m[32m * also returns a `Promise`, the test will fail.[m
[32m+[m[32m *[m
[32m+[m[32m * The following example illustrates how tests are written using the `test` module.[m
[32m+[m[32m *[m
[32m+[m[32m * ```js[m
[32m+[m[32m * test('synchronous passing test', (t) => {[m
[32m+[m[32m *   // This test passes because it does not throw an exception.[m
[32m+[m[32m *   assert.strictEqual(1, 1);[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * test('synchronous failing test', (t) => {[m
[32m+[m[32m *   // This test fails because it throws an exception.[m
[32m+[m[32m *   assert.strictEqual(1, 2);[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * test('asynchronous passing test', async (t) => {[m
[32m+[m[32m *   // This test passes because the Promise returned by the async[m
[32m+[m[32m *   // function is settled and not rejected.[m
[32m+[m[32m *   assert.strictEqual(1, 1);[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * test('asynchronous failing test', async (t) => {[m
[32m+[m[32m *   // This test fails because the Promise returned by the async[m
[32m+[m[32m *   // function is rejected.[m
[32m+[m[32m *   assert.strictEqual(1, 2);[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * test('failing test using Promises', (t) => {[m
[32m+[m[32m *   // Promises can be used directly as well.[m
[32m+[m[32m *   return new Promise((resolve, reject) => {[m
[32m+[m[32m *     setImmediate(() => {[m
[32m+[m[32m *       reject(new Error('this will cause the test to fail'));[m
[32m+[m[32m *     });[m
[32m+[m[32m *   });[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * test('callback passing test', (t, done) => {[m
[32m+[m[32m *   // done() is the callback function. When the setImmediate() runs, it invokes[m
[32m+[m[32m *   // done() with no arguments.[m
[32m+[m[32m *   setImmediate(done);[m
[32m+[m[32m * });[m
[32m+[m[32m *[m
[32m+[m[32m * test('callback failing test', (t, done) => {[m
[32m+[m[32m *   // When the setImmediate() runs, done() is invoked with an Error object and[m
[32m+[m[32m *   // the test fails.[m
[32m+[m[32m *   setImmediate(() => {[m
[32m+[m[32m *     done(new Error('callback failure'));[m
[32m+[m[32m *   });[m
[32m+[m[32m * });[m
[32m+[m[32m * ```[m
[32m+[m[32m *[m
[32m+[m[32m * If any tests fail, the process exit code is set to `1`.[m
[32m+[m[32m * @since v18.0.0, v16.17.0[m
[32m+[m[32m * @see [source](https://github.com/nodejs/node/blob/v22.x/lib/test.js)[m
[32m+[m[32m */[m
[32m+[m[32mdeclare module "node:test" {[m
[32m+[m[32m    import { Readable } from "node:stream";[m
[32m+[m[32m    /**[m
[32m+[m[32m     * **Note:** `shard` is used to horizontally parallelize test running across[m
[32m+[m[32m     * machines or processes, ideal for large-scale executions across varied[m
[32m+[m[32m     * environments. It's incompatible with `watch` mode, tailored for rapid[m
[32m+[m[32m     * code iteration by automatically rerunning tests on file changes.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * import { tap } from 'node:test/reporters';[m
[32m+[m[32m     * import { run } from 'node:test';[m
[32m+[m[32m     * import process from 'node:process';[m
[32m+[m[32m     * import path from 'node:path';[m
[32m+[m[32m     *[m
[32m+[m[32m     * run({ files: [path.resolve('./tests/test.js')] })[m
[32m+[m[32m     *   .compose(tap)[m
[32m+[m[32m     *   .pipe(process.stdout);[m
[32m+[m[32m     * ```[m
[32m+[m[32m     * @since v18.9.0, v16.19.0[m
[32m+[m[32m     * @param options Configuration options for running tests.[m
[32m+[m[32m     */[m
[32m+[m[32m    function run(options?: RunOptions): TestsStream;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `test()` function is the value imported from the `test` module. Each[m
[32m+[m[32m     * invocation of this function results in reporting the test to the `TestsStream`.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `TestContext` object passed to the `fn` argument can be used to perform[m
[32m+[m[32m     * actions related to the current test. Examples include skipping the test, adding[m
[32m+[m[32m     * additional diagnostic information, or creating subtests.[m
[32m+[m[32m     *[m
[32m+[m[32m     * `test()` returns a `Promise` that fulfills once the test completes.[m
[32m+[m[32m     * if `test()` is called within a suite, it fulfills immediately.[m
[32m+[m[32m     * The return value can usually be discarded for top level tests.[m
[32m+[m[32m     * However, the return value from subtests should be used to prevent the parent[m
[32m+[m[32m     * test from finishing first and cancelling the subtest[m
[32m+[m[32m     * as shown in the following example.[m
[32m+[m[32m     *[m
[32m+[m[32m     * ```js[m
[32m+[m[32m     * test('top level test', async (t) => {[m
[32m+[m[32m     *   // The setTimeout() in the following subtest would cause it to outlive its[m
[32m+[m[32m     *   // parent test if 'await' is removed on the next line. Once the parent test[m
[32m+[m[32m     *   // completes, it will cancel any outstanding subtests.[m
[32m+[m[32m     *   await t.test('longer running subtest', async (t) => {[m
[32m+[m[32m     *     return new Promise((resolve, reject) => {[m
[32m+[m[32m     *       setTimeout(resolve, 1000);[m
[32m+[m[32m     *     });[m
[32m+[m[32m     *   });[m
[32m+[m[32m     * });[m
[32m+[m[32m     * ```[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `timeout` option can be used to fail the test if it takes longer than `timeout` milliseconds to complete. However, it is not a reliable mechanism for[m
[32m+[m[32m     * canceling tests because a running test might block the application thread and[m
[32m+[m[32m     * thus prevent the scheduled cancellation.[m
[32m+[m[32m     * @since v18.0.0, v16.17.0[m
[32m+[m[32m     * @param name The name of the test, which is displayed when reporting test results.[m
[32m+[m[32m     * Defaults to the `name` property of `fn`, or `'<anonymous>'` if `fn` does not have a name.[m
[32m+[m[32m     * @param options Configuration options for the test.[m
[32m+[m[32m     * @param fn The function under test. The first argument to this function is a {@link TestContext} object.[m
[32m+[m[32m     * If the test uses callbacks, the callback function is passed as the second argument.[m
[32m+[m[32m     * @return Fulfilled with `undefined` once the test completes, or immediately if the test runs within a suite.[m
[32m+[m[32m     */[m
[32m+[m[32m    function test(name?: string, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function test(name?: string, options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function test(options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function test(fn?: TestFn): Promise<void>;[m
[32m+[m[32m    namespace test {[m
[32m+[m[32m        export {[m
[32m+[m[32m            after,[m
[32m+[m[32m            afterEach,[m
[32m+[m[32m            before,[m
[32m+[m[32m            beforeEach,[m
[32m+[m[32m            describe,[m
[32m+[m[32m            it,[m
[32m+[m[32m            mock,[m
[32m+[m[32m            only,[m
[32m+[m[32m            run,[m
[32m+[m[32m            skip,[m
[32m+[m[32m            snapshot,[m
[32m+[m[32m            suite,[m
[32m+[m[32m            test,[m
[32m+[m[32m            todo,[m
[32m+[m[32m        };[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The `suite()` function is imported from the `node:test` module.[m
[32m+[m[32m     * @param name The name of the suite, which is displayed when reporting test results.[m
[32m+[m[32m     * Defaults to the `name` property of `fn`, or `'<anonymous>'` if `fn` does not have a name.[m
[32m+[m[32m     * @param options Configuration options for the suite. This supports the same options as {@link test}.[m
[32m+[m[32m     * @param fn The suite function declaring nested tests and suites. The first argument to this function is a {@link SuiteContext} object.[m
[32m+[m[32m     * @return Immediately fulfilled with `undefined`.[m
[32m+[m[32m     * @since v20.13.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function suite(name?: string, options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m    function suite(name?: string, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m    function suite(options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m    function suite(fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m    namespace suite {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Shorthand for skipping a suite. This is the same as calling {@link suite} with `options.skip` set to `true`.[m
[32m+[m[32m         * @since v20.13.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function skip(name?: string, options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function skip(name?: string, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function skip(options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function skip(fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Shorthand for marking a suite as `TODO`. This is the same as calling {@link suite} with `options.todo` set to `true`.[m
[32m+[m[32m         * @since v20.13.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function todo(name?: string, options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function todo(name?: string, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function todo(options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function todo(fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Shorthand for marking a suite as `only`. This is the same as calling {@link suite} with `options.only` set to `true`.[m
[32m+[m[32m         * @since v20.13.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function only(name?: string, options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function only(name?: string, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function only(options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function only(fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Alias for {@link suite}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `describe()` function is imported from the `node:test` module.[m
[32m+[m[32m     */[m
[32m+[m[32m    function describe(name?: string, options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m    function describe(name?: string, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m    function describe(options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m    function describe(fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m    namespace describe {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Shorthand for skipping a suite. This is the same as calling {@link describe} with `options.skip` set to `true`.[m
[32m+[m[32m         * @since v18.15.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function skip(name?: string, options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function skip(name?: string, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function skip(options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function skip(fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Shorthand for marking a suite as `TODO`. This is the same as calling {@link describe} with `options.todo` set to `true`.[m
[32m+[m[32m         * @since v18.15.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function todo(name?: string, options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function todo(name?: string, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function todo(options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function todo(fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Shorthand for marking a suite as `only`. This is the same as calling {@link describe} with `options.only` set to `true`.[m
[32m+[m[32m         * @since v18.15.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function only(name?: string, options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function only(name?: string, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function only(options?: TestOptions, fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m        function only(fn?: SuiteFn): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Alias for {@link test}.[m
[32m+[m[32m     *[m
[32m+[m[32m     * The `it()` function is imported from the `node:test` module.[m
[32m+[m[32m     * @since v18.6.0, v16.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function it(name?: string, options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function it(name?: string, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function it(options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function it(fn?: TestFn): Promise<void>;[m
[32m+[m[32m    namespace it {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Shorthand for skipping a test. This is the same as calling {@link it} with `options.skip` set to `true`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function skip(name?: string, options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m        function skip(name?: string, fn?: TestFn): Promise<void>;[m
[32m+[m[32m        function skip(options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m        function skip(fn?: TestFn): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Shorthand for marking a test as `TODO`. This is the same as calling {@link it} with `options.todo` set to `true`.[m
[32m+[m[32m         */[m
[32m+[m[32m        function todo(name?: string, options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m        function todo(name?: string, fn?: TestFn): Promise<void>;[m
[32m+[m[32m        function todo(options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m        function todo(fn?: TestFn): Promise<void>;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Shorthand for marking a test as `only`. This is the same as calling {@link it} with `options.only` set to `true`.[m
[32m+[m[32m         * @since v18.15.0[m
[32m+[m[32m         */[m
[32m+[m[32m        function only(name?: string, options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m        function only(name?: string, fn?: TestFn): Promise<void>;[m
[32m+[m[32m        function only(options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m        function only(fn?: TestFn): Promise<void>;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Shorthand for skipping a test. This is the same as calling {@link test} with `options.skip` set to `true`.[m
[32m+[m[32m     * @since v20.2.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function skip(name?: string, options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function skip(name?: string, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function skip(options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function skip(fn?: TestFn): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Shorthand for marking a test as `TODO`. This is the same as calling {@link test} with `options.todo` set to `true`.[m
[32m+[m[32m     * @since v20.2.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function todo(name?: string, options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function todo(name?: string, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function todo(options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function todo(fn?: TestFn): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Shorthand for marking a test as `only`. This is the same as calling {@link test} with `options.only` set to `true`.[m
[32m+[m[32m     * @since v20.2.0[m
[32m+[m[32m     */[m
[32m+[m[32m    function only(name?: string, options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function only(name?: string, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function only(options?: TestOptions, fn?: TestFn): Promise<void>;[m
[32m+[m[32m    function only(fn?: TestFn): Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of a function passed to {@link test}. The first argument to this function is a {@link TestContext} object.[m
[32m+[m[32m     * If the test uses callbacks, the callback function is passed as the second argument.[m
[32m+[m[32m     */[m
[32m+[m[32m    type TestFn = (t: TestContext, done: (result?: any) => void) => void | Promise<void>;[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The type of a suite test function. The argument to this function is a {@link SuiteContext} object.[m
[32m+[m[32m     */[m
[32m+[m[32m    type SuiteFn = (s: SuiteContext) => void | Promise<void>;[m
[32m+[m[32m    interface TestShard {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A positive integer between 1 and `total` that specifies the index of the shard to run.[m
[32m+[m[32m         */[m
[32m+[m[32m        index: number;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A positive integer that specifies the total number of shards to split the test files to.[m
[32m+[m[32m         */[m
[32m+[m[32m        total: number;[m
[32m+[m[32m    }[m
[32m+[m[32m    interface RunOptions {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If a number is provided, then that many test processes would run in parallel, where each process corresponds to one test file.[m
[32m+[m[32m         * If `true`, it would run `os.availableParallelism() - 1` test files in parallel. If `false`, it would only run one test file at a time.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        concurrency?: number | boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An array containing the list of files to run. If omitted, files are run according to the[m
[32m+[m[32m         * [test runner execution model](https://nodejs.org/docs/latest-v22.x/api/test.html#test-runner-execution-model).[m
[32m+[m[32m         */[m
[32m+[m[32m        files?: readonly string[] | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Configures the test runner to exit the process once all known[m
[32m+[m[32m         * tests have finished executing even if the event loop would[m
[32m+[m[32m         * otherwise remain active.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        forceExit?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Sets inspector port of test child process.[m
[32m+[m[32m         * If a nullish value is provided, each process gets its own port,[m
[32m+[m[32m         * incremented from the primary's `process.debugPort`.[m
[32m+[m[32m         * @default undefined[m
[32m+[m[32m         */[m
[32m+[m[32m        inspectPort?: number | (() => number) | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If truthy, the test context will only run tests that have the `only` option set[m
[32m+[m[32m         */[m
[32m+[m[32m        only?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A function that accepts the `TestsStream` instance and can be used to setup listeners before any tests are run.[m
[32m+[m[32m         * @default undefined[m
[32m+[m[32m         */[m
[32m+[m[32m        setup?: ((reporter: TestsStream) => void | Promise<void>) | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Allows aborting an in-progress test execution.[m
[32m+[m[32m         */[m
[32m+[m[32m        signal?: AbortSignal | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If provided, only run tests whose name matches the provided pattern.[m
[32m+[m[32m         * Strings are interpreted as JavaScript regular expressions.[m
[32m+[m[32m         * @default undefined[m
[32m+[m[32m         */[m
[32m+[m[32m        testNamePatterns?: string | RegExp | ReadonlyArray<string | RegExp> | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * A String, RegExp or a RegExp Array, that can be used to exclude running tests whose[m
[32m+[m[32m         * name matches the provided pattern. Test name patterns are interpreted as JavaScript[m
[32m+[m[32m         * regular expressions. For each test that is executed, any corresponding test hooks,[m
[32m+[m[32m         * such as `beforeEach()`, are also run.[m
[32m+[m[32m         * @default undefined[m
[32m+[m[32m         * @since v22.1.0[m
[32m+[m[32m         */[m
[32m+[m[32m        testSkipPatterns?: string | RegExp | ReadonlyArray<string | RegExp> | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The number of milliseconds after which the test execution will fail.[m
[32m+[m[32m         * If unspecified, subtests inherit this value from their parent.[m
[32m+[m[32m         * @default Infinity[m
[32m+[m[32m         */[m
[32m+[m[32m        timeout?: number | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Whether to run in watch mode or not.[m
[32m+[m[32m         * @default false[m
[32m+[m[32m         */[m
[32m+[m[32m        watch?: boolean | undefined;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Running tests in a specific shard.[m
[32m+[m[32m         * @default undefined[m
[32m+[m[32m         */[m
[32m+[m[32m        shard?: TestShard | undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A successful call to `run()` will return a new `TestsStream` object, streaming a series of events representing the execution of the tests.[m
[32m+[m[32m     *[m
[32m+[m[32m     * Some of the events are guaranteed to be emitted in the same order as the tests are defined, while others are emitted in the order that the tests execute.[m
[32m+[m[32m     * @since v18.9.0, v16.19.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class TestsStream extends Readable implements NodeJS.ReadableStream {[m
[32m+[m[32m        addListener(event: "test:coverage", listener: (data: TestCoverage) => void): this;[m
[32m+[m[32m        addListener(event: "test:complete", listener: (data: TestComplete) => void): this;[m
[32m+[m[32m        addListener(event: "test:dequeue", listener: (data: TestDequeue) => void): this;[m
[32m+[m[32m        addListener(event: "test:diagnostic", listener: (data: DiagnosticData) => void): this;[m
[32m+[m[32m        addListener(event: "test:enqueue", listener: (data: TestEnqueue) => void): this;[m
[32m+[m[32m        addListener(event: "test:fail", listener: (data: TestFail) => void): this;[m
[32m+[m[32m        addListener(event: "test:pass", listener: (data: TestPass) => void): this;[m
[32m+[m[32m        addListener(event: "test:plan", listener: (data: TestPlan) => void): this;[m
[32m+[m[32m        addListener(event: "test:start", listener: (data: TestStart) => void): this;[m
[32m+[m[32m        addListener(event: "test:stderr", listener: (data: TestStderr) => void): this;[m
[32m+[m[32m        addListener(event: "test:stdout", listener: (data: TestStdout) => void): this;[m
[32m+[m[32m        addListener(event: "test:watch:drained", listener: () => void): this;[m
[32m+[m[32m        addListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        emit(event: "test:coverage", data: TestCoverage): boolean;[m
[32m+[m[32m        emit(event: "test:complete", data: TestComplete): boolean;[m
[32m+[m[32m        emit(event: "test:dequeue", data: TestDequeue): boolean;[m
[32m+[m[32m        emit(event: "test:diagnostic", data: DiagnosticData): boolean;[m
[32m+[m[32m        emit(event: "test:enqueue", data: TestEnqueue): boolean;[m
[32m+[m[32m        emit(event: "test:fail", data: TestFail): boolean;[m
[32m+[m[32m        emit(event: "test:pass", data: TestPass): boolean;[m
[32m+[m[32m        emit(event: "test:plan", data: TestPlan): boolean;[m
[32m+[m[32m        emit(event: "test:start", data: TestStart): boolean;[m
[32m+[m[32m        emit(event: "test:stderr", data: TestStderr): boolean;[m
[32m+[m[32m        emit(event: "test:stdout", data: TestStdout): boolean;[m
[32m+[m[32m        emit(event: "test:watch:drained"): boolean;[m
[32m+[m[32m        emit(event: string | symbol, ...args: any[]): boolean;[m
[32m+[m[32m        on(event: "test:coverage", listener: (data: TestCoverage) => void): this;[m
[32m+[m[32m        on(event: "test:complete", listener: (data: TestComplete) => void): this;[m
[32m+[m[32m        on(event: "test:dequeue", listener: (data: TestDequeue) => void): this;[m
[32m+[m[32m        on(event: "test:diagnostic", listener: (data: DiagnosticData) => void): this;[m
[32m+[m[32m        on(event: "test:enqueue", listener: (data: TestEnqueue) => void): this;[m
[32m+[m[32m        on(event: "test:fail", listener: (data: TestFail) => void): this;[m
[32m+[m[32m        on(event: "test:pass", listener: (data: TestPass) => void): this;[m
[32m+[m[32m        on(event: "test:plan", listener: (data: TestPlan) => void): this;[m
[32m+[m[32m        on(event: "test:start", listener: (data: TestStart) => void): this;[m
[32m+[m[32m        on(event: "test:stderr", listener: (data: TestStderr) => void): this;[m
[32m+[m[32m        on(event: "test:stdout", listener: (data: TestStdout) => void): this;[m
[32m+[m[32m        on(event: "test:watch:drained", listener: () => void): this;[m
[32m+[m[32m        on(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        once(event: "test:coverage", listener: (data: TestCoverage) => void): this;[m
[32m+[m[32m        once(event: "test:complete", listener: (data: TestComplete) => void): this;[m
[32m+[m[32m        once(event: "test:dequeue", listener: (data: TestDequeue) => void): this;[m
[32m+[m[32m        once(event: "test:diagnostic", listener: (data: DiagnosticData) => void): this;[m
[32m+[m[32m        once(event: "test:enqueue", listener: (data: TestEnqueue) => void): this;[m
[32m+[m[32m        once(event: "test:fail", listener: (data: TestFail) => void): this;[m
[32m+[m[32m        once(event: "test:pass", listener: (data: TestPass) => void): this;[m
[32m+[m[32m        once(event: "test:plan", listener: (data: TestPlan) => void): this;[m
[32m+[m[32m        once(event: "test:start", listener: (data: TestStart) => void): this;[m
[32m+[m[32m        once(event: "test:stderr", listener: (data: TestStderr) => void): this;[m
[32m+[m[32m        once(event: "test:stdout", listener: (data: TestStdout) => void): this;[m
[32m+[m[32m        once(event: "test:watch:drained", listener: () => void): this;[m
[32m+[m[32m        once(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependListener(event: "test:coverage", listener: (data: TestCoverage) => void): this;[m
[32m+[m[32m        prependListener(event: "test:complete", listener: (data: TestComplete) => void): this;[m
[32m+[m[32m        prependListener(event: "test:dequeue", listener: (data: TestDequeue) => void): this;[m
[32m+[m[32m        prependListener(event: "test:diagnostic", listener: (data: DiagnosticData) => void): this;[m
[32m+[m[32m        prependListener(event: "test:enqueue", listener: (data: TestEnqueue) => void): this;[m
[32m+[m[32m        prependListener(event: "test:fail", listener: (data: TestFail) => void): this;[m
[32m+[m[32m        prependListener(event: "test:pass", listener: (data: TestPass) => void): this;[m
[32m+[m[32m        prependListener(event: "test:plan", listener: (data: TestPlan) => void): this;[m
[32m+[m[32m        prependListener(event: "test:start", listener: (data: TestStart) => void): this;[m
[32m+[m[32m        prependListener(event: "test:stderr", listener: (data: TestStderr) => void): this;[m
[32m+[m[32m        prependListener(event: "test:stdout", listener: (data: TestStdout) => void): this;[m
[32m+[m[32m        prependListener(event: "test:watch:drained", listener: () => void): this;[m
[32m+[m[32m        prependListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:coverage", listener: (data: TestCoverage) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:complete", listener: (data: TestComplete) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:dequeue", listener: (data: TestDequeue) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:diagnostic", listener: (data: DiagnosticData) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:enqueue", listener: (data: TestEnqueue) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:fail", listener: (data: TestFail) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:pass", listener: (data: TestPass) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:plan", listener: (data: TestPlan) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:start", listener: (data: TestStart) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:stderr", listener: (data: TestStderr) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:stdout", listener: (data: TestStdout) => void): this;[m
[32m+[m[32m        prependOnceListener(event: "test:watch:drained", listener: () => void): this;[m
[32m+[m[32m        prependOnceListener(event: string, listener: (...args: any[]) => void): this;[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * An instance of `TestContext` is passed to each test function in order to[m
[32m+[m[32m     * interact with the test runner. However, the `TestContext` constructor is not[m
[32m+[m[32m     * exposed as part of the API.[m
[32m+[m[32m     * @since v18.0.0, v16.17.0[m
[32m+[m[32m     */[m
[32m+[m[32m    class TestContext {[m
[32m+[m[32m        /**[m
[32m+[m[32m         * An object containing assertion methods bound to the test context.[m
[32m+[m[32m         * The top-level functions from the `node:assert` module are exposed here for the purpose of creating test plans.[m
[32m+[m[32m         * @since v22.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly assert: TestContextAssert;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function is used to create a hook running before subtest of the current test.[m
[32m+[m[32m         * @param fn The hook function. If the hook uses callbacks, the callback function is passed as the second argument.[m
[32m+[m[32m         * @param options Configuration options for the hook.[m
[32m+[m[32m         * @since v20.1.0[m
[32m+[m[32m         */[m
[32m+[m[32m        before: typeof before;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function is used to create a hook running before each subtest of the current test.[m
[32m+[m[32m         * @param fn The hook function. If the hook uses callbacks, the callback function is passed as the second argument.[m
[32m+[m[32m         * @param options Configuration options for the hook.[m
[32m+[m[32m         * @since v18.8.0[m
[32m+[m[32m         */[m
[32m+[m[32m        beforeEach: typeof beforeEach;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function is used to create a hook that runs after the current test finishes.[m
[32m+[m[32m         * @param fn The hook function. If the hook uses callbacks, the callback function is passed as the second argument.[m
[32m+[m[32m         * @param options Configuration options for the hook.[m
[32m+[m[32m         * @since v18.13.0[m
[32m+[m[32m         */[m
[32m+[m[32m        after: typeof after;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function is used to create a hook running after each subtest of the current test.[m
[32m+[m[32m         * @param fn The hook function. If the hook uses callbacks, the callback function is passed as the second argument.[m
[32m+[m[32m         * @param options Configuration options for the hook.[m
[32m+[m[32m         * @since v18.8.0[m
[32m+[m[32m         */[m
[32m+[m[32m        afterEach: typeof afterEach;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function is used to write diagnostics to the output. Any diagnostic[m
[32m+[m[32m         * information is included at the end of the test's results. This function does[m
[32m+[m[32m         * not return a value.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * test('top level test', (t) => {[m
[32m+[m[32m         *   t.diagnostic('A diagnostic message');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v18.0.0, v16.17.0[m
[32m+[m[32m         * @param message Message to be reported.[m
[32m+[m[32m         */[m
[32m+[m[32m        diagnostic(message: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The name of the test and each of its ancestors, separated by `>`.[m
[32m+[m[32m         * @since v22.3.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly fullName: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * The name of the test.[m
[32m+[m[32m         * @since v18.8.0, v16.18.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly name: string;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * Used to set the number of assertions and subtests that are expected to run within the test.[m
[32m+[m[32m         * If the number of assertions and subtests that run does not match the expected count, the test will fail.[m
[32m+[m[32m         *[m
[32m+[m[32m         * To make sure assertions are tracked, the assert functions on `context.assert` must be used,[m
[32m+[m[32m         * instead of importing from the `node:assert` module.[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * test('top level test', (t) => {[m
[32m+[m[32m         *   t.plan(2);[m
[32m+[m[32m         *   t.assert.ok('some relevant assertion here');[m
[32m+[m[32m         *   t.test('subtest', () => {});[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         *[m
[32m+[m[32m         * When working with asynchronous code, the `plan` function can be used to ensure that the correct number of assertions are run:[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * test('planning with streams', (t, done) => {[m
[32m+[m[32m         *   function* generate() {[m
[32m+[m[32m         *     yield 'a';[m
[32m+[m[32m         *     yield 'b';[m
[32m+[m[32m         *     yield 'c';[m
[32m+[m[32m         *   }[m
[32m+[m[32m         *   const expected = ['a', 'b', 'c'];[m
[32m+[m[32m         *   t.plan(expected.length);[m
[32m+[m[32m         *   const stream = Readable.from(generate());[m
[32m+[m[32m         *   stream.on('data', (chunk) => {[m
[32m+[m[32m         *     t.assert.strictEqual(chunk, expected.shift());[m
[32m+[m[32m         *   });[m
[32m+[m[32m         *   stream.on('end', () => {[m
[32m+[m[32m         *     done();[m
[32m+[m[32m         *   });[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v22.2.0[m
[32m+[m[32m         */[m
[32m+[m[32m        plan(count: number): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * If `shouldRunOnlyTests` is truthy, the test context will only run tests that[m
[32m+[m[32m         * have the `only` option set. Otherwise, all tests are run. If Node.js was not[m
[32m+[m[32m         * started with the `--test-only` command-line option, this function is a[m
[32m+[m[32m         * no-op.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * test('top level test', (t) => {[m
[32m+[m[32m         *   // The test context can be set to run subtests with the 'only' option.[m
[32m+[m[32m         *   t.runOnly(true);[m
[32m+[m[32m         *   return Promise.all([[m
[32m+[m[32m         *     t.test('this subtest is now skipped'),[m
[32m+[m[32m         *     t.test('this subtest is run', { only: true }),[m
[32m+[m[32m         *   ]);[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v18.0.0, v16.17.0[m
[32m+[m[32m         * @param shouldRunOnlyTests Whether or not to run `only` tests.[m
[32m+[m[32m         */[m
[32m+[m[32m        runOnly(shouldRunOnlyTests: boolean): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * test('top level test', async (t) => {[m
[32m+[m[32m         *   await fetch('some/uri', { signal: t.signal });[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v18.7.0, v16.17.0[m
[32m+[m[32m         */[m
[32m+[m[32m        readonly signal: AbortSignal;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function causes the test's output to indicate the test as skipped. If `message` is provided, it is included in the output. Calling `skip()` does[m
[32m+[m[32m         * not terminate execution of the test function. This function does not return a[m
[32m+[m[32m         * value.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * test('top level test', (t) => {[m
[32m+[m[32m         *   // Make sure to return here as well if the test contains additional logic.[m
[32m+[m[32m         *   t.skip('this is skipped');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v18.0.0, v16.17.0[m
[32m+[m[32m         * @param message Optional skip message.[m
[32m+[m[32m         */[m
[32m+[m[32m        skip(message?: string): void;[m
[32m+[m[32m        /**[m
[32m+[m[32m         * This function adds a `TODO` directive to the test's output. If `message` is[m
[32m+[m[32m         * provided, it is included in the output. Calling `todo()` does not terminate[m
[32m+[m[32m         * execution of the test function. This function does not return a value.[m
[32m+[m[32m         *[m
[32m+[m[32m         * ```js[m
[32m+[m[32m         * test('top level test', (t) => {[m
[32m+[m[32m         *   // This test is marked as `TODO`[m
[32m+[m[32m         *   t.todo('this is a todo');[m
[32m+[m[32m         * });[m
[32m+[m[32m         * ```[m
[32m+[m[32m         * @since v18.0.0, v16.17.0[m
[32m+[m[32m         * @param message Optional `TODO` message.[m
[32m+[m[32m         */[m
[32m+[m[32m        todo(message?: 